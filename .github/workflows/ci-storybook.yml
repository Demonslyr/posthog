name: Storybook
on:
    pull_request:

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    # This is so that the workflow run isn't canceled when a snapshot update is pushed within it by posthog-bot
    # We do however cancel from container-images-ci.yml if a commit is pushed by someone OTHER than posthog-bot
    cancel-in-progress: false

jobs:
    # Job to decide if we should run storybook ci
    # See https://github.com/dorny/paths-filter#conditional-execution for more details
    changes:
        runs-on: ubuntu-latest
        timeout-minutes: 5
        name: Determine need to run storybook checks
        # Set job outputs to values from filter step
        outputs:
            frontend: ${{ steps.filter.outputs.frontend }}
        steps:
            - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2
              id: filter
              with:
                  filters: |
                      frontend:
                        - 'frontend/**'
                        - 'products/**/*.ts'
                        - 'products/**/*.tsx'
                        - 'products/**/frontend/**'
                        - 'common/**'
                        - 'ee/frontend/**'
                        - '.storybook/**'
                        - 'package.json'
                        - '.github/workflows/ci-storybook.yml'
                        - 'playwright.config.ts'

    build-storybook:
        name: Build Storybook
        runs-on: ${{ needs.changes.outputs.frontend == 'true' && 'depot-ubuntu-24.04-8' || 'ubuntu-latest' }}
        timeout-minutes: 15
        needs: changes
        steps:
            - name: Skip storybook checks
              if: ${{ needs.changes.outputs.frontend == 'false' }}
              run: |
                  echo "Skipping storybook checks - no frontend changes detected"
                  exit 0

            - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
              if: needs.changes.outputs.frontend == 'true'
              with:
                  ref: ${{ github.event.pull_request.head.ref }}

            - name: Install pnpm
              if: needs.changes.outputs.frontend == 'true'
              uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4

            - name: Set up Node.js
              if: needs.changes.outputs.frontend == 'true'
              uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
              with:
                  node-version: 18.12.1
                  cache: pnpm

            - name: Install dependencies
              if: needs.changes.outputs.frontend == 'true'
              run: pnpm --filter=@posthog/storybook... install --frozen-lockfile

            - name: Cache webpack build
              if: needs.changes.outputs.frontend == 'true'
              uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4
              with:
                  path: common/storybook/node_modules/.cache/
                  key: ${{ runner.os }}-webpack-storybook-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-webpack-storybook-

            - name: Build Storybook
              if: needs.changes.outputs.frontend == 'true'
              env:
                  NODE_OPTIONS: --max-old-space-size=32768
              run: |
                  bin/turbo --filter=@posthog/storybook prepare
                  pnpm --filter=@posthog/storybook build --test

            - name: Upload Storybook build artifact
              if: needs.changes.outputs.frontend == 'true'
              uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
              with:
                  name: storybook-build
                  path: common/storybook/dist
                  retention-days: 1

    storybook-chromatic:
        name: Publish to Chromatic
        runs-on: ubuntu-latest
        timeout-minutes: 15
        needs: changes
        # Don't run on forks
        if: github.event.pull_request.head.repo.full_name == github.repository
        outputs:
            storybook-url: ${{ steps.publish.outputs.storybookUrl }}
        steps:
            - name: Skip storybook checks
              if: ${{ needs.changes.outputs.frontend == 'false' }}
              run: |
                  echo "Skipping storybook checks - no frontend changes detected"
                  exit 0
            - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
              if: needs.changes.outputs.frontend == 'true'
              with:
                  ref: ${{ github.event.pull_request.head.ref }}
                  fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history (https://www.chromatic.com/docs/github-actions)

            - name: Install pnpm
              if: needs.changes.outputs.frontend == 'true'
              uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4

            - name: Set up Node.js
              if: needs.changes.outputs.frontend == 'true'
              uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
              with:
                  node-version: 18.12.1
                  cache: pnpm

            - name: Install dependencies and Chromatic
              if: needs.changes.outputs.frontend == 'true'
              run: |
                  pnpm --filter=@posthog/storybook... install --frozen-lockfile
                  bin/turbo --filter=@posthog/storybook prepare
                  pnpm install -w -D chromatic

            - name: Publish to Chromatic
              if: needs.changes.outputs.frontend == 'true'
              uses: chromaui/action@d7afd50124cf4f337bcd943e7f45cfa85a5e4476 # v12
              id: publish
              env:
                  # ðŸ‘‡ Chromatic project token, refer to the manage page to obtain it
                  CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  buildScriptName: build
                  workingDir: ./common/storybook/

    calculate-running-time:
        name: Calculate running time
        needs: [storybook-chromatic, changes]
        runs-on: ubuntu-latest
        if: # Run on pull requests to PostHog/posthog + on PostHog/posthog outside of PRs - but never on forks
            needs.changes.outputs.frontend == 'true' && (
            (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == 'PostHog/posthog') ||
            (github.event_name != 'pull_request' && github.repository == 'PostHog/posthog'))
        steps:
            - name: Calculate running time
              run: |
                  gh auth login --with-token < <(echo ${{ secrets.GITHUB_TOKEN }})
                  run_id=${GITHUB_RUN_ID}
                  repo=${GITHUB_REPOSITORY}
                  run_info=$(gh api repos/${repo}/actions/runs/${run_id})
                  echo run_info: ${run_info}
                  # name is the name of the workflow file
                  # run_started_at is the start time of the workflow
                  # we want to get the number of seconds between the start time and now
                  name=$(echo ${run_info} | jq -r '.name')
                  run_url=$(echo ${run_info} | jq -r '.url')
                  run_started_at=$(echo ${run_info} | jq -r '.run_started_at')
                  run_attempt=$(echo ${run_info} | jq -r '.run_attempt')
                  start_seconds=$(date -d "${run_started_at}" +%s)
                  now_seconds=$(date +%s)
                  duration=$((now_seconds-start_seconds))
                  echo running_time_duration_seconds=${duration} >> $GITHUB_ENV
                  echo running_time_run_url=${run_url} >> $GITHUB_ENV
                  echo running_time_run_attempt=${run_attempt} >> $GITHUB_ENV
                  echo running_time_run_id=${run_id} >> $GITHUB_ENV
                  echo running_time_run_started_at=${run_started_at} >> $GITHUB_ENV
            - name: Capture running time to PostHog
              uses: PostHog/posthog-github-action@v0.1
              with:
                  posthog-token: ${{secrets.POSTHOG_API_TOKEN}}
                  event: 'posthog-ci-running-time'
                  properties: '{"duration_seconds": ${{ env.running_time_duration_seconds }}, "run_url": "${{ env.running_time_run_url }}", "run_attempt": "${{ env.running_time_run_attempt }}", "run_id": "${{ env.running_time_run_id }}", "run_started_at": "${{ env.running_time_run_started_at }}"}'

    posthog-analytics:
        name: PostHog CI analytics
        if: always()
        needs: [calculate-running-time] # last job in this workflow
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
            - uses: ./.github/actions/ci-analytics
              with:
                  posthog-api-key: ${{ secrets.CI_ANALYTICS_TOKEN }}
