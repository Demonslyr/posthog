# serializer version: 1
# name: TestSessionRecordingsListMiscFilters.test_can_filter_for_flags_0_session_1_matches_target_flag_is_True
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2021-01-18 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                            (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                             FROM events
                                                                                                                                                                                                                                                                                                                                                                             WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/target-flag'), ''), 'null'), '^"|"$', ''), 'true'), 0), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2021-01-17 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                             GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                             HAVING 1
                                                                                                                                                                                                                                                                                                                                                                             ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC)))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_can_filter_for_flags_1_session_2_matches_target_flag_is_False
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2021-01-18 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                            (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                             FROM events
                                                                                                                                                                                                                                                                                                                                                                             WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/target-flag'), ''), 'null'), '^"|"$', ''), 'false'), 0), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2021-01-17 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                             GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                             HAVING 1
                                                                                                                                                                                                                                                                                                                                                                             ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC)))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_can_filter_for_flags_2_sessions_1_and_2_match_target_flag_is_set
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2021-01-18 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                            (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                             FROM events
                                                                                                                                                                                                                                                                                                                                                                             WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), isNotNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/target-flag'), ''), 'null'), '^"|"$', '')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2021-01-17 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                             GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                             HAVING 1
                                                                                                                                                                                                                                                                                                                                                                             ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC)))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_can_filter_for_flags_3_sessions_3_and_4_match_target_flag_is_not_set
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2021-01-18 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                            (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                             FROM events
                                                                                                                                                                                                                                                                                                                                                                             WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), or(isNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/target-flag'), ''), 'null'), '^"|"$', '')), not(JSONHas(events.properties, '$feature/target-flag'))), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2021-01-17 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                             GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                             HAVING ifNull(equals(countIf(isNotNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/target-flag'), ''), 'null'), '^"|"$', ''))), 0), 0)
                                                                                                                                                                                                                                                                                                                                                                             ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC)))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_duration_filter
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')))
  GROUP BY s.session_id
  HAVING ifNull(greater(duration, 60.0), 0)
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_duration_filter.1
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')))
  GROUP BY s.session_id
  HAVING ifNull(less(duration, 60.0), 0)
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_event_filter_with_group_filter
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2021-01-18 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                            (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                             FROM events
                                                                                                                                                                                                                                                                                                                                                                             LEFT JOIN
                                                                                                                                                                                                                                                                                                                                                                               (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'name'), ''), 'null'), '^"|"$', ''), toTimeZone(groups._timestamp, 'UTC')) AS properties___name, groups.group_type_index AS index, groups.group_key AS key
                                                                                                                                                                                                                                                                                                                                                                                FROM groups
                                                                                                                                                                                                                                                                                                                                                                                WHERE and(equals(groups.team_id, 99999), equals(index, 1))
                                                                                                                                                                                                                                                                                                                                                                                GROUP BY groups.group_type_index, groups.group_key) AS events__group_1 ON equals(events.`$group_1`, events__group_1.key)
                                                                                                                                                                                                                                                                                                                                                                             WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), and(equals(events.event, '$pageview'), ifNull(equals(events__group_1.properties___name, 'org one'), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2021-01-17 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                             GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                             HAVING 1
                                                                                                                                                                                                                                                                                                                                                                             ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC)))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_event_filter_with_group_filter.1
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2021-01-18 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                            (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                             FROM events
                                                                                                                                                                                                                                                                                                                                                                             LEFT JOIN
                                                                                                                                                                                                                                                                                                                                                                               (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'name'), ''), 'null'), '^"|"$', ''), toTimeZone(groups._timestamp, 'UTC')) AS properties___name, groups.group_type_index AS index, groups.group_key AS key
                                                                                                                                                                                                                                                                                                                                                                                FROM groups
                                                                                                                                                                                                                                                                                                                                                                                WHERE and(equals(groups.team_id, 99999), equals(index, 1))
                                                                                                                                                                                                                                                                                                                                                                                GROUP BY groups.group_type_index, groups.group_key) AS events__group_1 ON equals(events.`$group_1`, events__group_1.key)
                                                                                                                                                                                                                                                                                                                                                                             WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), ifNull(equals(events__group_1.properties___name, 'org one'), 0), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2021-01-17 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                             GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                             HAVING 1
                                                                                                                                                                                                                                                                                                                                                                             ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC)))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_event_filter_with_group_filter.2
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2021-01-18 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                            (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                             FROM events
                                                                                                                                                                                                                                                                                                                                                                             LEFT JOIN
                                                                                                                                                                                                                                                                                                                                                                               (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'name'), ''), 'null'), '^"|"$', ''), toTimeZone(groups._timestamp, 'UTC')) AS properties___name, groups.group_type_index AS index, groups.group_key AS key
                                                                                                                                                                                                                                                                                                                                                                                FROM groups
                                                                                                                                                                                                                                                                                                                                                                                WHERE and(equals(groups.team_id, 99999), equals(index, 2))
                                                                                                                                                                                                                                                                                                                                                                                GROUP BY groups.group_type_index, groups.group_key) AS events__group_2 ON equals(events.`$group_2`, events__group_2.key)
                                                                                                                                                                                                                                                                                                                                                                             WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-31 20:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), ifNull(equals(events__group_2.properties___name, 'org one'), 0), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2021-01-17 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                             GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                             HAVING 1
                                                                                                                                                                                                                                                                                                                                                                             ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC)))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_operand_or_event_filters
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), and(globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                                (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                                 FROM events
                                                                                                                                                                                                                                                                                                                                                                                 WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), equals(events.event, '$pageview'), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-28 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                                 GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                                 HAVING 1
                                                                                                                                                                                                                                                                                                                                                                                 ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC)), globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                                                                                                      (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                                                                                                       FROM events
                                                                                                                                                                                                                                                                                                                                                                                                                                                       WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), equals(events.event, 'custom_event'), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-28 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                                                                                                       GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                                                                                                       HAVING 1
                                                                                                                                                                                                                                                                                                                                                                                                                                                       ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC))))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_operand_or_event_filters.1
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), or(globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                               (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                                FROM events
                                                                                                                                                                                                                                                                                                                                                                                WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), equals(events.event, '$pageview'), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-28 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                                GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                                HAVING 1
                                                                                                                                                                                                                                                                                                                                                                                ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC)), globalIn(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                                                                                                     (SELECT events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                                                                                                      FROM events
                                                                                                                                                                                                                                                                                                                                                                                                                                                      WHERE and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), equals(events.event, 'custom_event'), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-12-28 00:00:00.000000', 6, 'UTC')))
                                                                                                                                                                                                                                                                                                                                                                                                                                                      GROUP BY events.`$session_id`
                                                                                                                                                                                                                                                                                                                                                                                                                                                      HAVING 1
                                                                                                                                                                                                                                                                                                                                                                                                                                                      ORDER BY min(toTimeZone(events.timestamp, 'UTC')) DESC))))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_operand_or_filters_0_Neither_has_WARN_and_message_random_
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), in(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                      (SELECT console_logs_log_entries.log_source_id AS log_source_id
                                                                                                                                                                                                                                                                                                                                                                       FROM
                                                                                                                                                                                                                                                                                                                                                                         (SELECT log_entries.log_source_id AS log_source_id, log_entries.level AS level, log_entries.message AS message
                                                                                                                                                                                                                                                                                                                                                                          FROM log_entries
                                                                                                                                                                                                                                                                                                                                                                          WHERE and(equals(log_entries.team_id, 99999), equals(log_entries.log_source, 'session_replay'))) AS console_logs_log_entries
                                                                                                                                                                                                                                                                                                                                                                       WHERE and(ifNull(equals(console_logs_log_entries.level, 'warn'), 0), ifNull(equals(console_logs_log_entries.message, 'random'), 0)))))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_operand_or_filters_1_AND_only_matches_one_recording
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), in(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                      (SELECT console_logs_log_entries.log_source_id AS log_source_id
                                                                                                                                                                                                                                                                                                                                                                       FROM
                                                                                                                                                                                                                                                                                                                                                                         (SELECT log_entries.log_source_id AS log_source_id, log_entries.level AS level, log_entries.message AS message
                                                                                                                                                                                                                                                                                                                                                                          FROM log_entries
                                                                                                                                                                                                                                                                                                                                                                          WHERE and(equals(log_entries.team_id, 99999), equals(log_entries.log_source, 'session_replay'))) AS console_logs_log_entries
                                                                                                                                                                                                                                                                                                                                                                       WHERE and(ifNull(equals(console_logs_log_entries.level, 'info'), 0), ifNull(equals(console_logs_log_entries.message, 'random'), 0)))))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_operand_or_filters_2_Only_one_is_WARN_level
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), in(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                      (SELECT console_logs_log_entries.log_source_id AS log_source_id
                                                                                                                                                                                                                                                                                                                                                                       FROM
                                                                                                                                                                                                                                                                                                                                                                         (SELECT log_entries.log_source_id AS log_source_id, log_entries.level AS level
                                                                                                                                                                                                                                                                                                                                                                          FROM log_entries
                                                                                                                                                                                                                                                                                                                                                                          WHERE and(equals(log_entries.team_id, 99999), equals(log_entries.log_source, 'session_replay'))) AS console_logs_log_entries
                                                                                                                                                                                                                                                                                                                                                                       WHERE ifNull(equals(console_logs_log_entries.level, 'warn'), 0))))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_operand_or_filters_3_Only_one_has_message_random_
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), in(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                      (SELECT console_logs_log_entries.log_source_id AS log_source_id
                                                                                                                                                                                                                                                                                                                                                                       FROM
                                                                                                                                                                                                                                                                                                                                                                         (SELECT log_entries.log_source_id AS log_source_id, log_entries.message AS message
                                                                                                                                                                                                                                                                                                                                                                          FROM log_entries
                                                                                                                                                                                                                                                                                                                                                                          WHERE and(equals(log_entries.team_id, 99999), equals(log_entries.log_source, 'session_replay'))) AS console_logs_log_entries
                                                                                                                                                                                                                                                                                                                                                                       WHERE ifNull(equals(console_logs_log_entries.message, 'random'), 0))))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_operand_or_filters_4_OR_matches_both
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), in(s.session_id,
                                                                                                                                                                                                                                                                                                                                                                      (SELECT console_logs_log_entries.log_source_id AS log_source_id
                                                                                                                                                                                                                                                                                                                                                                       FROM
                                                                                                                                                                                                                                                                                                                                                                         (SELECT log_entries.log_source_id AS log_source_id, log_entries.level AS level, log_entries.message AS message
                                                                                                                                                                                                                                                                                                                                                                          FROM log_entries
                                                                                                                                                                                                                                                                                                                                                                          WHERE and(equals(log_entries.team_id, 99999), equals(log_entries.log_source, 'session_replay'))) AS console_logs_log_entries
                                                                                                                                                                                                                                                                                                                                                                       WHERE or(ifNull(equals(console_logs_log_entries.level, 'warn'), 0), ifNull(equals(console_logs_log_entries.message, 'random'), 0)))))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_operand_or_mandatory_filters
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), globalIn(s.session_id,
                                                                                                                                                                   (SELECT DISTINCT events.`$session_id` AS `$session_id`
                                                                                                                                                                    FROM events
                                                                                                                                                                    LEFT OUTER JOIN
                                                                                                                                                                      (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id, person_distinct_id_overrides.distinct_id AS distinct_id
                                                                                                                                                                       FROM person_distinct_id_overrides
                                                                                                                                                                       WHERE equals(person_distinct_id_overrides.team_id, 99999)
                                                                                                                                                                       GROUP BY person_distinct_id_overrides.distinct_id
                                                                                                                                                                       HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
                                                                                                                                                                    WHERE and(equals(events.team_id, 99999), ifNull(equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), '00000000-0000-0000-0000-000000000000'), 0), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), notEmpty(events.`$session_id`)))), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), globalIn(s.session_id,
events.`$session_id` AS session_id
events
and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), equals(events.event, '$pageview'), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')))
events.`$session_id`

min(toTimeZone(events.timestamp, 'UTC')) DESC)))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingsListMiscFilters.test_operand_or_mandatory_filters.1
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), globalIn(s.session_id,
                                                                                                                                                                   (SELECT DISTINCT events.`$session_id` AS `$session_id`
                                                                                                                                                                    FROM events
                                                                                                                                                                    LEFT OUTER JOIN
                                                                                                                                                                      (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id, person_distinct_id_overrides.distinct_id AS distinct_id
                                                                                                                                                                       FROM person_distinct_id_overrides
                                                                                                                                                                       WHERE equals(person_distinct_id_overrides.team_id, 99999)
                                                                                                                                                                       GROUP BY person_distinct_id_overrides.distinct_id
                                                                                                                                                                       HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
                                                                                                                                                                    WHERE and(equals(events.team_id, 99999), ifNull(equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), '00000000-0000-0000-0000-000000000000'), 0), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), notEmpty(events.`$session_id`)))), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')), globalIn(s.session_id,
events.`$session_id` AS session_id
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                FROM events
and(equals(events.team_id, 99999), notEmpty(events.`$session_id`), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), now64(6, 'UTC')), equals(events.event, '$pageview'), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')))
events.`$session_id`

min(toTimeZone(events.timestamp, 'UTC')) DESC)))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
