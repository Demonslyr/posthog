# Generated by Django 4.2.22 on 2025-07-22 08:42

from django.db import migrations


def migrate_pipeline_error_notifications(apps, schema_editor):
    """
    Migrate users from global pipeline error settings to project-specific settings.
    For users who have pipeline errors globally enabled (plugin_disabled = False or not set),
    we enable pipeline errors for all their accessible projects.
    """
    User = apps.get_model("posthog", "User")
    OrganizationMembership = apps.get_model("posthog", "OrganizationMembership")

    # Process users in batches for better performance
    batch_size = 1000
    users_processed = 0

    for user in User.objects.iterator(chunk_size=batch_size):
        notification_settings = user.partial_notification_settings or {}

        # Check if user has pipeline errors globally enabled
        # Default to enabled (False = not disabled = enabled)
        pipeline_globally_disabled = notification_settings.get("plugin_disabled", False)

        # If pipeline errors are globally enabled, set project-specific settings
        if not pipeline_globally_disabled:
            # Get all teams the user has access to
            memberships = OrganizationMembership.objects.filter(user=user).select_related("organization")
            team_ids = []

            for membership in memberships:
                # Get all teams from user's organizations
                org_teams = membership.organization.teams.all()
                team_ids.extend([str(team.id) for team in org_teams])

            # Set pipeline errors as enabled (False = not disabled) for all accessible projects
            if team_ids:
                project_pipeline_settings = {}
                for team_id in team_ids:
                    project_pipeline_settings[team_id] = False  # False = not disabled = enabled

                # Update notification settings
                notification_settings["project_pipeline_errors_disabled"] = project_pipeline_settings
                user.partial_notification_settings = notification_settings
                user.save(update_fields=["partial_notification_settings"])

                users_processed += 1


def reverse_migrate_pipeline_error_notifications(apps, schema_editor):
    """
    Remove project-specific pipeline error settings.
    """
    User = apps.get_model("posthog", "User")

    for user in User.objects.iterator(chunk_size=1000):
        if user.partial_notification_settings:
            notification_settings = user.partial_notification_settings.copy()
            if "project_pipeline_errors_disabled" in notification_settings:
                del notification_settings["project_pipeline_errors_disabled"]
                user.partial_notification_settings = notification_settings
                user.save(update_fields=["partial_notification_settings"])


class Migration(migrations.Migration):
    dependencies = [
        ("posthog", "0799_migrate_playlist_types_take_2"),
    ]

    operations = [
        migrations.RunPython(
            migrate_pipeline_error_notifications,
            reverse_migrate_pipeline_error_notifications,
        ),
    ]
