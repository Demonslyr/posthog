# Generated by Django 4.2.22 on 2025-07-29 22:13

from django.db import migrations, models


def set_initial_cohort_types(apps, schema_editor):
    """
    Set initial cohort types based on existing cohort filters.
    All existing cohorts will start as 'analytical' for backward compatibility.
    """
    Cohort = apps.get_model("posthog", "Cohort")

    # Process cohorts in batches to avoid memory issues
    batch_size = 1000
    processed = 0

    while True:
        cohorts = list(Cohort.objects.filter(deleted=False)[processed : processed + batch_size])

        if not cohorts:
            break

        for cohort in cohorts:
            # All existing cohorts start as analytical to maintain backward compatibility
            # This ensures no breaking changes for existing feature flags
            cohort.cohort_type = "analytical"

        Cohort.objects.bulk_update(cohorts, ["cohort_type"], batch_size=batch_size)
        processed += len(cohorts)


def reverse_cohort_types(apps, schema_editor):
    """Reverse migration - nothing to do as field will be removed"""
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("posthog", "0811_personalapikey_last_rolled_at"),
    ]

    operations = [
        migrations.AddField(
            model_name="cohort",
            name="cohort_type",
            field=models.CharField(
                choices=[
                    ("static", "Static"),
                    ("person_properties", "Person Properties"),
                    ("behavioral", "Behavioral"),
                    ("analytical", "Analytical"),
                ],
                default="analytical",
                help_text="Determines where this cohort can be used. Static, person_properties, and behavioral cohorts can be used in real-time features. Analytical cohorts are for analytics only.",
                max_length=20,
            ),
        ),
        migrations.RunPython(set_initial_cohort_types, reverse_cohort_types),
    ]
