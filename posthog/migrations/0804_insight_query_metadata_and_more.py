# Generated by Django 4.2.22 on 2025-07-24 20:22

from django.db import migrations, models
import django.contrib.postgres.indexes


class Migration(migrations.Migration):
    atomic = False  # Added to support concurrent index creation
    dependencies = [
        ("posthog", "0803_move_recording_annotation_to_comments"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AddField(
                    model_name="insight",
                    name="query_metadata",
                    field=models.JSONField(blank=True, null=True),
                ),
                migrations.AddIndex(
                    model_name="insight",
                    index=django.contrib.postgres.indexes.GinIndex(
                        fields=["query_metadata"], name="dashboarditem_query_metadata", opclasses=["jsonb_ops"]
                    ),
                ),
            ],
            database_operations=[
                # Add the column
                migrations.RunSQL(
                    """
                    ALTER TABLE "posthog_dashboarditem" ADD COLUMN "query_metadata" jsonb NULL;
                    """,
                    reverse_sql="""
                        ALTER TABLE "posthog_dashboarditem" DROP COLUMN IF EXISTS "query_metadata";
                    """,
                ),
                # Create the GIN index concurrently
                migrations.RunSQL(
                    """
                    CREATE INDEX CONCURRENTLY "dashboarditem_query_metadata" ON "posthog_dashboarditem" USING gin ("query_metadata" jsonb_ops);
                    """,
                    reverse_sql="""
                        DROP INDEX IF EXISTS "dashboarditem_query_metadata";
                    """,
                ),
            ],
        ),
    ]
