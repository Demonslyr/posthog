{
  "version": 3,
  "sources": ["../src/scenes/experiments/SharedMetrics/SharedMetrics.tsx"],
  "sourcesContent": ["import { IconArrowLeft, IconPencil } from '@posthog/icons'\nimport { LemonBanner, LemonButton, LemonTable, LemonTableColumn, LemonTableColumns } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { router } from 'kea-router'\nimport { ObjectTags } from 'lib/components/ObjectTags/ObjectTags'\nimport { createdByColumn } from 'lib/lemon-ui/LemonTable/columnUtils'\nimport { createdAtColumn } from 'lib/lemon-ui/LemonTable/columnUtils'\nimport { LemonTableLink } from 'lib/lemon-ui/LemonTable/LemonTableLink'\nimport stringWithWBR from 'lib/utils/stringWithWBR'\nimport { SceneExport } from 'scenes/sceneTypes'\nimport { urls } from 'scenes/urls'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { NodeKind } from '~/queries/schema/schema-general'\nimport { AvailableFeature } from '~/types'\n\nimport { SharedMetric } from './sharedMetricLogic'\nimport { sharedMetricsLogic } from './sharedMetricsLogic'\n\nexport const scene: SceneExport = {\n    component: SharedMetrics,\n    logic: sharedMetricsLogic,\n}\n\nexport function SharedMetrics(): JSX.Element {\n    const { sharedMetrics, sharedMetricsLoading } = useValues(sharedMetricsLogic)\n\n    const { hasAvailableFeature } = useValues(userLogic)\n\n    const columns: LemonTableColumns<SharedMetric> = [\n        {\n            key: 'name',\n            title: 'Name',\n            render: (_, sharedMetric) => {\n                return (\n                    <LemonTableLink\n                        to={sharedMetric.id ? urls.experimentsSharedMetric(sharedMetric.id) : undefined}\n                        title={stringWithWBR(sharedMetric.name, 17)}\n                    />\n                )\n            },\n            sorter: (a, b) => a.name.localeCompare(b.name),\n        },\n        {\n            key: 'description',\n            title: 'Description',\n            dataIndex: 'description',\n        },\n        ...(hasAvailableFeature(AvailableFeature.TAGGING)\n            ? [\n                  {\n                      title: 'Tags',\n                      dataIndex: 'tags' as keyof SharedMetric,\n                      render: function Render(tags: SharedMetric['tags']) {\n                          return tags ? <ObjectTags tags={tags} staticOnly /> : null\n                      },\n                  } as LemonTableColumn<SharedMetric, keyof SharedMetric | undefined>,\n              ]\n            : []),\n        {\n            title: 'Type',\n            key: 'type',\n            render: (_, metric: SharedMetric) => {\n                if (metric.query.kind === NodeKind.ExperimentMetric) {\n                    return metric.query.metric_type\n                }\n                return metric.query.kind === NodeKind.ExperimentTrendsQuery ? 'Trend' : 'Funnel'\n            },\n        },\n        createdByColumn<SharedMetric>() as LemonTableColumn<SharedMetric, keyof SharedMetric | undefined>,\n        createdAtColumn<SharedMetric>() as LemonTableColumn<SharedMetric, keyof SharedMetric | undefined>,\n        {\n            key: 'actions',\n            title: 'Actions',\n            render: (_, sharedMetric) => {\n                return (\n                    <LemonButton\n                        className=\"max-w-72\"\n                        type=\"secondary\"\n                        size=\"xsmall\"\n                        icon={<IconPencil />}\n                        onClick={() => {\n                            router.actions.push(urls.experimentsSharedMetric(sharedMetric.id))\n                        }}\n                    />\n                )\n            },\n        },\n    ]\n\n    return (\n        <div className=\"space-y-4\">\n            <LemonButton\n                type=\"tertiary\"\n                className=\"inline-flex\"\n                to={urls.experiments()}\n                icon={<IconArrowLeft />}\n                size=\"small\"\n            >\n                Back to experiments\n            </LemonButton>\n            <LemonBanner type=\"info\">\n                Shared metrics let you create reusable metrics that you can quickly add to any experiment. They are\n                ideal for tracking key metrics like conversion rates or revenue across different experiments without\n                having to set them up each time.\n            </LemonBanner>\n            <div className=\"flex justify-end\">\n                <LemonButton size=\"small\" type=\"primary\" to={urls.experimentsSharedMetric('new')}>\n                    New shared metric\n                </LemonButton>\n            </div>\n            <LemonTable\n                columns={columns}\n                dataSource={sharedMetrics || []}\n                loading={sharedMetricsLoading}\n                emptyState={<div>You haven't created any shared metrics yet.</div>}\n            />\n        </div>\n    )\n}\n"],
  "mappings": "6SAAAA,IAAAC,IAAAC,IAEA,IAAAC,EAA0B,OAC1BC,EAAuB,OAgCH,IAAAC,EAAA,OAhBPC,EAAqB,CAC9B,UAAWC,EACX,MAAOC,CACX,EAEO,SAASD,GAA6B,CACzC,GAAM,CAAE,cAAAE,EAAe,qBAAAC,CAAqB,KAAI,aAAUF,CAAkB,EAEtE,CAAE,oBAAAG,CAAoB,KAAI,aAAUC,CAAS,EAE7CC,EAA2C,CAC7C,CACI,IAAK,OACL,MAAO,OACP,OAAQ,CAACC,EAAGC,OAEJ,OAACC,EAAA,CACG,GAAID,EAAa,GAAKE,EAAK,wBAAwBF,EAAa,EAAE,EAAI,OACtE,MAAOG,EAAcH,EAAa,KAAM,EAAE,EAC9C,EAGR,OAAQ,CAACI,EAAGC,IAAMD,EAAE,KAAK,cAAcC,EAAE,IAAI,CACjD,EACA,CACI,IAAK,cACL,MAAO,cACP,UAAW,aACf,EACA,GAAIT,WAA4C,EAC1C,CACI,CACI,MAAO,OACP,UAAW,OACX,OAAQ,SAAgBU,EAA4B,CAChD,OAAOA,KAAO,OAACC,EAAA,CAAW,KAAMD,EAAM,WAAU,GAAC,EAAK,IAC1D,CACJ,CACJ,EACA,CAAC,EACP,CACI,MAAO,OACP,IAAK,OACL,OAAQ,CAACP,EAAGS,IACJA,EAAO,MAAM,OAAS,mBACfA,EAAO,MAAM,YAEjBA,EAAO,MAAM,OAAS,wBAAiC,QAAU,QAEhF,EACAC,EAA8B,EAC9BC,EAA8B,EAC9B,CACI,IAAK,UACL,MAAO,UACP,OAAQ,CAACX,EAAGC,OAEJ,OAACW,EAAA,CACG,UAAU,WACV,KAAK,YACL,KAAK,SACL,QAAM,OAACC,EAAA,EAAW,EAClB,QAAS,IAAM,CACX,SAAO,QAAQ,KAAKV,EAAK,wBAAwBF,EAAa,EAAE,CAAC,CACrE,EACJ,CAGZ,CACJ,EAEA,SACI,QAAC,OAAI,UAAU,YACX,oBAACW,EAAA,CACG,KAAK,WACL,UAAU,cACV,GAAIT,EAAK,YAAY,EACrB,QAAM,OAACW,EAAA,EAAc,EACrB,KAAK,QACR,+BAED,KACA,OAACC,EAAA,CAAY,KAAK,OAAO,qPAIzB,KACA,OAAC,OAAI,UAAU,mBACX,mBAACH,EAAA,CAAY,KAAK,QAAQ,KAAK,UAAU,GAAIT,EAAK,wBAAwB,KAAK,EAAG,6BAElF,EACJ,KACA,OAACa,EAAA,CACG,QAASjB,EACT,WAAYJ,GAAiB,CAAC,EAC9B,QAASC,EACT,cAAY,OAAC,OAAI,uDAA2C,EAChE,GACJ,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_router", "import_jsx_runtime", "scene", "SharedMetrics", "sharedMetricsLogic", "sharedMetrics", "sharedMetricsLoading", "hasAvailableFeature", "userLogic", "columns", "_", "sharedMetric", "LemonTableLink", "urls", "stringWithWBR", "a", "b", "tags", "ObjectTags", "metric", "createdByColumn", "createdAtColumn", "LemonButton", "IconPencil", "IconArrowLeft", "LemonBanner", "LemonTable"]
}
