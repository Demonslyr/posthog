{
  "version": 3,
  "sources": ["../src/scenes/sites/Site.tsx", "../src/scenes/sites/siteLogic.ts"],
  "sourcesContent": ["import './Site.scss'\n\nimport { useValues } from 'kea'\nimport {\n    authorizedUrlListLogic,\n    AuthorizedUrlListType,\n    defaultAuthorizedUrlProperties,\n} from 'lib/components/AuthorizedUrlList/authorizedUrlListLogic'\nimport { SceneExport } from 'scenes/sceneTypes'\n\nimport { siteLogic, SiteLogicProps } from './siteLogic'\n\nexport const scene: SceneExport = {\n    component: Site,\n    paramsToProps: ({ params: { url } }): SiteLogicProps => ({ url: decodeURIComponent(url) }),\n    logic: siteLogic,\n}\n\nexport function Site({ url }: { url?: string } = {}): JSX.Element {\n    const { launchUrl } = useValues(\n        authorizedUrlListLogic({ ...defaultAuthorizedUrlProperties, type: AuthorizedUrlListType.TOOLBAR_URLS })\n    )\n\n    const decodedUrl = decodeURIComponent(url || '')\n\n    return (\n        <iframe\n            className=\"Site\"\n            src={launchUrl(decodedUrl)}\n            // allow-same-origin is particularly important here, because otherwise redirect_to_site cannot work\n            // Note that combining allow-scripts and allow-same-origin effectively allows the iframe access to the\n            // PostHog app, which is why it's important that users only add sites that they control here\n            sandbox=\"allow-downloads allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n        />\n    )\n}\n", "import { kea, path, props, selectors } from 'kea'\nimport { Scene } from 'scenes/sceneTypes'\n\nimport { Breadcrumb } from '~/types'\n\nimport type { siteLogicType } from './siteLogicType'\n\nexport interface SiteLogicProps {\n    url: string\n}\n\nexport const siteLogic = kea<siteLogicType>([\n    path(['scenes', 'sites', 'siteLogic']),\n    props({} as SiteLogicProps),\n    selectors({\n        breadcrumbs: [\n            (_, p) => [p.url],\n            (url): Breadcrumb[] => [\n                {\n                    key: Scene.Site,\n                    name: `Site`,\n                },\n                {\n                    key: [Scene.Site, url],\n                    name: url,\n                },\n            ],\n        ],\n    }),\n])\n"],
  "mappings": "+/BAAAA,IAAAC,IAAAC,IAEA,IAAAC,EAA0B,OCF1BC,IAAAC,IAAAC,IAAA,IAAAC,EAA4C,OAWrC,IAAMC,KAAY,OAAmB,IACxC,QAAK,CAAC,SAAU,QAAS,WAAW,CAAC,KACrC,SAAM,CAAC,CAAmB,KAC1B,aAAU,CACN,YAAa,CACT,CAACC,EAAGC,IAAM,CAACA,EAAE,GAAG,EACfC,GAAsB,CACnB,CACI,WACA,KAAM,MACV,EACA,CACI,IAAK,QAAaA,CAAG,EACrB,KAAMA,CACV,CACJ,CACJ,CACJ,CAAC,CACL,CAAC,EDHO,IAAAC,EAAA,OAdKC,EAAqB,CAC9B,UAAWC,EACX,cAAe,CAAC,CAAE,OAAQ,CAAE,IAAAC,CAAI,CAAE,KAAuB,CAAE,IAAK,mBAAmBA,CAAG,CAAE,GACxF,MAAOC,CACX,EAEO,SAASF,EAAK,CAAE,IAAAC,CAAI,EAAsB,CAAC,EAAgB,CAC9D,GAAM,CAAE,UAAAE,CAAU,KAAI,aAClBC,EAAuB,CAAE,GAAGC,EAAgC,mBAAyC,CAAC,CAC1G,EAEMC,EAAa,mBAAmBL,GAAO,EAAE,EAE/C,SACI,OAAC,UACG,UAAU,OACV,IAAKE,EAAUG,CAAU,EAIzB,QAAQ,wFACZ,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "siteLogic", "_", "p", "url", "import_jsx_runtime", "scene", "Site", "url", "siteLogic", "launchUrl", "authorizedUrlListLogic", "defaultAuthorizedUrlProperties", "decodedUrl"]
}
