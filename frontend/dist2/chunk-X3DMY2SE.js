import{$a as C,Do as P,Fe as w,Io as p,Ko as u,Vd as b,Za as N,a as O,f as S,g as D,mi as L,re as x,rp as T}from"/static/chunk-RFJTZKD6.js";import{ob as I,pb as y}from"/static/chunk-3UDJFOQH.js";import{d,e as U,g as h,j as f}from"/static/chunk-SJXEOBQC.js";U();f();h();var i=d(O()),A=d(C()),E=d(N()),c=d(S()),_=d(D());function g(e){let r=e.replace(/\*/g,"x");return new URL(r)}function W(e){return!e||typeof e!="string"?!1:/^(https?:\/\/[^:/]+):\*(.*)$/.test(e.trim())}var M=(e,r,t=!1,o=!0)=>{if(!y(e))return"Please enter a valid URL";if(W(e))return"Wildcards are not allowed in the port position";if(t&&!I(g(e)))return"Please enter a valid domain (URLs with a path aren't allowed)";let n=e.indexOf("*")>-1;if(n&&o===!1)return"Wildcards are not allowed";if(n&&!/^https?:\/\/((\*\.)?localhost|localhost)(:\d+)?$/.test(e)&&!e.match(/^(.*)\*[^*]*\.[^*]+\.[^*]+$/))return"Wildcards can only be used for subdomains";if(r.indexOf(e)>-1)return`This ${t?"domains":"URL"} already is registered`};function $(e){return{userIntent:e?.userIntent??(e?.actionId?"edit-action":e?.experimentId?"edit-experiment":"add-action"),apiURL:L(),...e?.actionId?{actionId:e.actionId}:{},...e?.experimentId?{experimentId:e.experimentId}:{}}}function m(e,r){let t=$(r);return t.appUrl=e,t.generateOnly=r?.generateOnly,"/api/user/redirect_to_site/"+(0,c.encodeParams)(t,"?")}var z=(e,r)=>{try{let t=typeof e=="string"?g(e):e,o=t.protocol+"//"+t.host;if(r.filter(a=>a.indexOf(o)>-1).length>0||!!r.find(a=>{let l=new RegExp(a.replace(/\./g,"\\.").replace(/\*/g,".*"));return o.match(l)}))return!0}catch{}return!1},k=(e,r)=>{let t=[];return e.forEach(({url:o,count:n})=>{let s=g(o),a=s.protocol+"//"+s.host;t.some(l=>l.url===a)||z(s,r)||t.push({url:a,count:n})}),t},R="https://",re={actionId:null,experimentId:null},te=(0,i.kea)([(0,i.path)(e=>["lib","components","AuthorizedUrlList","authorizedUrlListLogic",e]),(0,i.key)(e=>`${e.type}-${e.experimentId}-${e.actionId}`),(0,i.props)({}),(0,i.connect)({values:[u,["currentTeam","currentTeamId"]],actions:[u,["updateCurrentTeam"]]}),(0,i.actions)(()=>({setAuthorizedUrls:e=>({authorizedUrls:e}),addUrl:(e,r)=>({url:e,launch:r}),newUrl:!0,removeUrl:e=>({index:e}),updateUrl:(e,r)=>({index:e,url:r}),launchAtUrl:e=>({url:e}),setSearchTerm:e=>({term:e}),setEditUrlIndex:e=>({originalIndex:e}),cancelProposingUrl:!0,copyLaunchCode:e=>({url:e})})),(0,E.loaders)(({values:e,props:r})=>({suggestions:{__default:[],loadSuggestions:async()=>{let t={kind:"HogQLQuery",query:T`select properties.$current_url, count()
                        from events
                           where event = '$pageview'
                           and timestamp >= now() - interval 3 day 
                            and timestamp <= now()
                           and properties.$current_url is not null
                         group by properties.$current_url
                         order by count() desc
                        limit 25`},n=(await p.query(t)).results;return n&&n.length===0?[]:k(n.map(([a,l])=>({url:a,count:l})),e.authorizedUrls).slice(0,20)}},manualLaunchParams:{loadManualLaunchParams:async t=>{let o=await p.get(m(t,{...r?.actionId?{actionId:r.actionId}:{},...r?.experimentId?{experimentId:r.experimentId}:{},generateOnly:!0})),n;try{o?.toolbarParams&&(n=decodeURIComponent(o.toolbarParams))}catch{b.error("Failed to generate toolbar params")}return n}}})),(0,_.subscriptions)(({props:e,actions:r})=>({currentTeam:t=>{r.setAuthorizedUrls((e.type==="RECORDING_DOMAINS"?t.recording_domains:t.app_urls)||[])}})),(0,i.afterMount)(({actions:e})=>{e.loadSuggestions()}),(0,A.forms)(({values:e,actions:r,props:t})=>({proposedUrl:{defaults:{url:""},errors:({url:o})=>({url:M(o,e.authorizedUrls,e.onlyAllowDomains,t.allowWildCards??!0)}),submit:async({url:o})=>{e.editUrlIndex!==null&&e.editUrlIndex>=0?r.updateUrl(e.editUrlIndex,o):r.addUrl(o)}}})),(0,i.reducers)(()=>({showProposedURLForm:[!1,{newUrl:()=>!0,submitProposedUrlSuccess:()=>!1,cancelProposingUrl:()=>!1}],authorizedUrls:[[],{setAuthorizedUrls:(e,{authorizedUrls:r})=>r,addUrl:(e,{url:r})=>e.includes(r)?e:e.concat([r]),updateUrl:(e,{index:r,url:t})=>Object.assign([...e],{[r]:t}),removeUrl:(e,{index:r})=>{let t=[...e];return t.splice(r,1),t}}],suggestions:[[],{addUrl:(e,{url:r})=>[...e].filter(t=>r!==t.url)}],searchTerm:["",{setSearchTerm:(e,{term:r})=>r}],editUrlIndex:[null,{setEditUrlIndex:(e,{originalIndex:r})=>r,removeUrl:(e,{index:r})=>e&&r<e?e-1:r===e?null:e,newUrl:()=>-1,updateUrl:()=>null,addUrl:()=>null,cancelProposingUrl:()=>null}]})),(0,i.sharedListeners)(({values:e,props:r})=>({saveUrls:async()=>{r.type==="RECORDING_DOMAINS"?await u.asyncActions.updateCurrentTeam({recording_domains:e.authorizedUrls}):await u.asyncActions.updateCurrentTeam({app_urls:e.authorizedUrls})}})),(0,i.listeners)(({sharedListeners:e,values:r,actions:t})=>({setEditUrlIndex:()=>{t.setProposedUrlValue("url",r.urlToEdit)},newUrl:()=>{t.setProposedUrlValue("url",R)},addUrl:[e.saveUrls,({url:o,launch:n})=>{n&&t.launchAtUrl(o)}],removeUrl:e.saveUrls,updateUrl:e.saveUrls,launchAtUrl:({url:o})=>{window.location.href=r.launchUrl(o)},cancelProposingUrl:()=>{t.resetProposedUrl()},submitProposedUrlSuccess:()=>{t.setEditUrlIndex(null),t.resetProposedUrl()},copyLaunchCode:({url:o})=>{t.loadManualLaunchParams(o)},loadManualLaunchParamsSuccess:async({manualLaunchParams:o})=>{if(o){let n=`
                if (!window?.posthog) {
                    console.warn('PostHog must be added to the window object on this page, for this to work. This is normally done in the loaded callback of your posthog init code.')
                } else {
                    window.posthog.loadToolbar(${o})
                }
                `;await w(n,"code to paste into the console")}}})),(0,i.selectors)({urlToEdit:[e=>[e.authorizedUrls,e.editUrlIndex],(e,r)=>r===null||r===-1?R:e[r]],urlsKeyed:[e=>[e.authorizedUrls,e.suggestions,e.searchTerm],(e,r,t)=>{let o=e.map((n,s)=>({url:n,type:"authorized",originalIndex:s})).concat(r.map(({url:n,count:s},a)=>({url:n,type:"suggestion",originalIndex:a,count:s})));return t?new x(o,{keys:["url"],threshold:.3}).search(t).map(n=>n.item):o}],launchUrl:[(e,r)=>[r.actionId,r.experimentId],(e,r)=>t=>r?m(t,{experimentId:r}):m(t,{actionId:e})],isAddUrlFormVisible:[e=>[e.editUrlIndex],e=>e===-1],onlyAllowDomains:[(e,r)=>[r.type],e=>e==="RECORDING_DOMAINS"],checkUrlIsAuthorized:[e=>[e.authorizedUrls],e=>r=>z(r,e)]}),(0,c.urlToAction)(({actions:e})=>({[P.toolbarLaunch()]:(r,t)=>{t.addNew&&e.newUrl()}}))]);export{m as a,re as b,te as c};
//# sourceMappingURL=/static/chunk-X3DMY2SE.js.map
