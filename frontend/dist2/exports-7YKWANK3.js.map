{
  "version": 3,
  "sources": ["../../ee/frontend/exports.ts", "../../ee/frontend/mobile-replay/index.ts", "../../ee/frontend/mobile-replay/schema/mobile/rr-mobile-schema.json", "../../ee/frontend/mobile-replay/schema/web/rr-web-schema.json", "../../ee/frontend/mobile-replay/transformer/transformers.ts", "../../ee/frontend/mobile-replay/mobile.types.ts", "../../ee/frontend/mobile-replay/transformer/screen-chrome.ts", "../../ee/frontend/mobile-replay/transformer/colors.ts", "../../ee/frontend/mobile-replay/transformer/wireframeStyle.ts"],
  "sourcesContent": ["import { PostHogEE } from '@posthog/ee/types'\n\nimport { transformEventToWeb, transformToWeb } from './mobile-replay'\n\nexport default async (): Promise<PostHogEE> =>\n    Promise.resolve({\n        enabled: true,\n        mobileReplay: {\n            transformEventToWeb,\n            transformToWeb,\n        },\n    })\n", "import { eventWithTime } from '@posthog/rrweb-types'\nimport { captureException, captureMessage } from '@sentry/react'\nimport Ajv, { ErrorObject } from 'ajv'\n\nimport { mobileEventWithTime } from './mobile.types'\nimport mobileSchema from './schema/mobile/rr-mobile-schema.json'\nimport webSchema from './schema/web/rr-web-schema.json'\nimport { makeCustomEvent, makeFullEvent, makeIncrementalEvent, makeMetaEvent } from './transformer/transformers'\n\nconst ajv = new Ajv({\n    allowUnionTypes: true,\n}) // options can be passed, e.g. {allErrors: true}\n\nconst transformers: Record<number, (x: any) => eventWithTime> = {\n    2: makeFullEvent,\n    3: makeIncrementalEvent,\n    4: makeMetaEvent,\n    5: makeCustomEvent,\n}\n\nconst mobileSchemaValidator = ajv.compile(mobileSchema)\n\nexport function validateFromMobile(data: unknown): {\n    isValid: boolean\n    errors: ErrorObject[] | null | undefined\n} {\n    const isValid = mobileSchemaValidator(data)\n    return {\n        isValid,\n        errors: isValid ? null : mobileSchemaValidator.errors,\n    }\n}\n\nconst webSchemaValidator = ajv.compile(webSchema)\n\nfunction couldBeEventWithTime(x: unknown): x is eventWithTime | mobileEventWithTime {\n    return typeof x === 'object' && x !== null && 'type' in x && 'timestamp' in x\n}\n\nexport function transformEventToWeb(event: unknown, validateTransformation?: boolean): eventWithTime {\n    // the transformation needs to never break a recording itself\n    // so, we default to returning what we received\n    // replacing it only if there's a valid transformation\n    let result = event as eventWithTime\n    try {\n        if (couldBeEventWithTime(event)) {\n            const transformer = transformers[event.type]\n            if (transformer) {\n                const transformed = transformer(event)\n                if (validateTransformation) {\n                    validateAgainstWebSchema(transformed)\n                }\n                result = transformed\n            }\n        } else {\n            captureMessage(`No type in event`, { extra: { event } })\n        }\n    } catch (e) {\n        captureException(e, { extra: { event } })\n    }\n    return result\n}\n\nexport function transformToWeb(mobileData: (eventWithTime | mobileEventWithTime)[]): eventWithTime[] {\n    return mobileData.reduce((acc, event) => {\n        const transformed = transformEventToWeb(event)\n        acc.push(transformed ? transformed : (event as eventWithTime))\n        return acc\n    }, [] as eventWithTime[])\n}\n\nexport function validateAgainstWebSchema(data: unknown): boolean {\n    const validationResult = webSchemaValidator(data)\n    if (!validationResult) {\n        // we are passing all data through this validation now and don't know how safe the schema is\n        captureMessage('transformation did not match schema', {\n            extra: { data, errors: webSchemaValidator.errors },\n        })\n    }\n\n    return validationResult\n}\n", "{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"anyOf\": [\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"initialOffset\": {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"left\": {\n                                    \"type\": \"number\"\n                                },\n                                \"top\": {\n                                    \"type\": \"number\"\n                                }\n                            },\n                            \"required\": [\"top\", \"left\"],\n                            \"type\": \"object\"\n                        },\n                        \"wireframes\": {\n                            \"description\": \"This mimics the RRWeb full snapshot event type, except instead of reporting a serialized DOM it reports a wireframe representation of the screen.\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/wireframe\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"wireframes\", \"initialOffset\"],\n                    \"type\": \"object\"\n                },\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.FullSnapshot\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"height\": {\n                            \"type\": \"number\"\n                        },\n                        \"href\": {\n                            \"type\": \"string\"\n                        },\n                        \"width\": {\n                            \"type\": \"number\"\n                        }\n                    },\n                    \"required\": [\"width\", \"height\"],\n                    \"type\": \"object\"\n                },\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.Meta\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"payload\": {},\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"tag\", \"payload\"],\n                    \"type\": \"object\"\n                },\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.Custom\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {},\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.IncrementalSnapshot\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {\n                    \"$ref\": \"#/definitions/MobileNodeMutationData\",\n                    \"description\": \"This sits alongside the RRWeb incremental snapshot event type, mobile replay can send any of the RRWeb incremental snapshot event types, which will be passed unchanged to the player - for example to send touch events. removed node mutations are passed unchanged to the player.\"\n                },\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.IncrementalSnapshot\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"payload\": {\n                            \"anyOf\": [\n                                {\n                                    \"additionalProperties\": false,\n                                    \"properties\": {\n                                        \"height\": {\n                                            \"type\": \"number\"\n                                        },\n                                        \"open\": {\n                                            \"const\": true,\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"styles\": {\n                                            \"$ref\": \"#/definitions/MobileStyles\"\n                                        },\n                                        \"width\": {\n                                            \"type\": \"number\"\n                                        },\n                                        \"x\": {\n                                            \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present then the keyboard is at the bottom of the screen\",\n                                            \"type\": \"number\"\n                                        },\n                                        \"y\": {\n                                            \"type\": \"number\"\n                                        }\n                                    },\n                                    \"required\": [\"open\", \"height\"],\n                                    \"type\": \"object\"\n                                },\n                                {\n                                    \"additionalProperties\": false,\n                                    \"properties\": {\n                                        \"open\": {\n                                            \"const\": false,\n                                            \"type\": \"boolean\"\n                                        }\n                                    },\n                                    \"required\": [\"open\"],\n                                    \"type\": \"object\"\n                                }\n                            ]\n                        },\n                        \"tag\": {\n                            \"const\": \"keyboard\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"tag\", \"payload\"],\n                    \"type\": \"object\"\n                },\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.Custom\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        }\n    ],\n    \"definitions\": {\n        \"EventType.Custom\": {\n            \"const\": 5,\n            \"type\": \"number\"\n        },\n        \"EventType.FullSnapshot\": {\n            \"const\": 2,\n            \"type\": \"number\"\n        },\n        \"EventType.IncrementalSnapshot\": {\n            \"const\": 3,\n            \"type\": \"number\"\n        },\n        \"EventType.Meta\": {\n            \"const\": 4,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.Mutation\": {\n            \"const\": 0,\n            \"type\": \"number\"\n        },\n        \"MobileNodeMutation\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"parentId\": {\n                    \"type\": \"number\"\n                },\n                \"wireframe\": {\n                    \"$ref\": \"#/definitions/wireframe\"\n                }\n            },\n            \"required\": [\"parentId\", \"wireframe\"],\n            \"type\": \"object\"\n        },\n        \"MobileNodeMutationData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"adds\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/MobileNodeMutation\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"removes\": {\n                    \"description\": \"A mobile remove is identical to a web remove\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/removedNodeMutation\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.Mutation\"\n                },\n                \"updates\": {\n                    \"description\": \"An update is implemented as a remove and then an add, so the updates array contains the ID of the removed node and the wireframe for the added node\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/MobileNodeMutation\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"source\"],\n            \"type\": \"object\"\n        },\n        \"MobileNodeType\": {\n            \"enum\": [\n                \"text\",\n                \"image\",\n                \"screenshot\",\n                \"rectangle\",\n                \"placeholder\",\n                \"web_view\",\n                \"input\",\n                \"div\",\n                \"radio_group\",\n                \"status_bar\",\n                \"navigation_bar\"\n            ],\n            \"type\": \"string\"\n        },\n        \"MobileStyles\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"backgroundColor\": {\n                    \"description\": \"maps to CSS background-color. Accepts any valid CSS color value. Expects a #RGB value e.g. #000 or #000000\",\n                    \"type\": \"string\"\n                },\n                \"backgroundImage\": {\n                    \"description\": \"if provided this will be used as a base64 encoded image source for the backgroundImage css property, with no other attributes it is assumed to be a PNG\",\n                    \"type\": \"string\"\n                },\n                \"backgroundSize\": {\n                    \"description\": \"can be used alongside the background image property to specify how the image is rendered. Accepts a subset of the valid values for CSS background-size property. If not provided (and backgroundImage is present) defaults to 'auto'\",\n                    \"enum\": [\"contain\", \"cover\", \"auto\"],\n                    \"type\": \"string\"\n                },\n                \"borderColor\": {\n                    \"description\": \"if borderColor is present, then border style is assumed to be solid\",\n                    \"type\": \"string\"\n                },\n                \"borderRadius\": {\n                    \"description\": \"if borderRadius is present, then border style is assumed to be solid\",\n                    \"type\": [\"string\", \"number\"]\n                },\n                \"borderWidth\": {\n                    \"description\": \"if borderWidth is present, then border style is assumed to be solid\",\n                    \"type\": [\"string\", \"number\"]\n                },\n                \"color\": {\n                    \"description\": \"maps to CSS color. Accepts any valid CSS color value. Expects a #RGB value e.g. #000 or #000000\",\n                    \"type\": \"string\"\n                },\n                \"fontFamily\": {\n                    \"description\": \"maps to CSS font-family. Accepts any valid CSS font-family value.\",\n                    \"type\": \"string\"\n                },\n                \"fontSize\": {\n                    \"description\": \"maps to CSS font-size. Accepts any valid CSS font-size value. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px\",\n                    \"type\": [\"string\", \"number\"]\n                },\n                \"horizontalAlign\": {\n                    \"description\": \"horizontal alignment with respect to its parent\",\n                    \"enum\": [\"left\", \"right\", \"center\"],\n                    \"type\": \"string\"\n                },\n                \"paddingBottom\": {\n                    \"description\": \"maps to CSS padding-bottom. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px\",\n                    \"type\": [\"string\", \"number\"]\n                },\n                \"paddingLeft\": {\n                    \"description\": \"maps to CSS padding-left. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px\",\n                    \"type\": [\"string\", \"number\"]\n                },\n                \"paddingRight\": {\n                    \"description\": \"maps to CSS padding-right. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px\",\n                    \"type\": [\"string\", \"number\"]\n                },\n                \"paddingTop\": {\n                    \"description\": \"maps to CSS padding-top. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px\",\n                    \"type\": [\"string\", \"number\"]\n                },\n                \"verticalAlign\": {\n                    \"description\": \"vertical alignment with respect to its parent\",\n                    \"enum\": [\"top\", \"bottom\", \"center\"],\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"removedNodeMutation\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"isShadow\": {\n                    \"type\": \"boolean\"\n                },\n                \"parentId\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"parentId\", \"id\"],\n            \"type\": \"object\"\n        },\n        \"wireframe\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/wireframeText\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeImage\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeScreenshot\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeRectangle\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeDiv\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeInputComponent\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeRadioGroup\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeWebView\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframePlaceholder\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeStatusBar\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeNavigationBar\"\n                }\n            ]\n        },\n        \"wireframeButton\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"disabled\": {\n                    \"description\": \"for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\",\n                    \"type\": \"boolean\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"inputType\": {\n                    \"const\": \"button\",\n                    \"type\": \"string\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"value\": {\n                    \"description\": \"this is the text that is displayed on the button, if not sent then you must send childNodes with the button content\",\n                    \"type\": \"string\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"disabled\", \"height\", \"id\", \"inputType\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeCheckBox\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"checked\": {\n                    \"description\": \"for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input checked>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\",\n                    \"type\": \"boolean\"\n                },\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"disabled\": {\n                    \"description\": \"for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\",\n                    \"type\": \"boolean\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"inputType\": {\n                    \"const\": \"checkbox\",\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"checked\", \"disabled\", \"height\", \"id\", \"inputType\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeDiv\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"id\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeImage\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"base64\": {\n                    \"description\": \"this will be used as base64 encoded image source, with no other attributes it is assumed to be a PNG, if omitted a placeholder is rendered\",\n                    \"type\": \"string\"\n                },\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"id\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeInput\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"disabled\": {\n                    \"description\": \"for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\",\n                    \"type\": \"boolean\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"inputType\": {\n                    \"enum\": [\"text\", \"password\", \"email\", \"number\", \"search\", \"tel\", \"url\"],\n                    \"type\": \"string\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"disabled\", \"height\", \"id\", \"inputType\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeInputComponent\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/wireframeCheckBox\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeRadio\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeInput\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeSelect\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeTextArea\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeButton\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeProgress\"\n                },\n                {\n                    \"$ref\": \"#/definitions/wireframeToggle\"\n                }\n            ]\n        },\n        \"wireframeNavigationBar\": {\n            \"additionalProperties\": false,\n            \"description\": \"the navigation bar respects styling and positioning, but it is expected to be at the bottom of the screen with limited styling and no child elements\",\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"id\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframePlaceholder\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"id\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeProgress\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"disabled\": {\n                    \"description\": \"for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\",\n                    \"type\": \"boolean\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"inputType\": {\n                    \"const\": \"progress\",\n                    \"type\": \"string\"\n                },\n                \"max\": {\n                    \"description\": \"The max attribute, if present, must have a value greater than 0 and be a valid floating point number. The default value is 1. When bar style is rating this is the number of stars.\",\n                    \"type\": \"number\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"value\": {\n                    \"description\": \"This attribute specifies how much of the task that has been completed. It must be a valid floating point number between 0 and max, or between 0 and 1 if max is omitted. If there is no value attribute, the progress bar is indeterminate; this indicates that an activity is ongoing with no indication of how long it is expected to take. When bar style is rating this is the number of filled stars.\",\n                    \"type\": \"number\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"disabled\", \"height\", \"id\", \"inputType\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeRadio\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"checked\": {\n                    \"description\": \"for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input checked>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\",\n                    \"type\": \"boolean\"\n                },\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"disabled\": {\n                    \"description\": \"for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\",\n                    \"type\": \"boolean\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"inputType\": {\n                    \"const\": \"radio\",\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"checked\", \"disabled\", \"height\", \"id\", \"inputType\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeRadioGroup\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"id\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeRectangle\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"id\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeScreenshot\": {\n            \"additionalProperties\": false,\n            \"description\": \"a screenshot behaves exactly like an image, but it is expected to be a screenshot of the screen at the time of the event, when sent as a mutation it must always attached to the root of the playback, when sent as an initial snapshot it must be sent as the first or only snapshot so that it attaches to the body of the playback\",\n            \"properties\": {\n                \"base64\": {\n                    \"description\": \"this will be used as base64 encoded image source, with no other attributes it is assumed to be a PNG, if omitted a placeholder is rendered\",\n                    \"type\": \"string\"\n                },\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"id\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeSelect\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"disabled\": {\n                    \"description\": \"for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\",\n                    \"type\": \"boolean\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"inputType\": {\n                    \"const\": \"select\",\n                    \"type\": \"string\"\n                },\n                \"options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"disabled\", \"height\", \"id\", \"inputType\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeStatusBar\": {\n            \"additionalProperties\": false,\n            \"description\": \"the status bar respects styling and positioning, but it is expected to be at the top of the screen with limited styling and no child elements\",\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"id\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeText\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"text\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"id\", \"text\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeTextArea\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"disabled\": {\n                    \"description\": \"for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\",\n                    \"type\": \"boolean\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"inputType\": {\n                    \"const\": \"text_area\",\n                    \"type\": \"string\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"disabled\", \"height\", \"id\", \"inputType\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeToggle\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"checked\": {\n                    \"type\": \"boolean\"\n                },\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"disabled\": {\n                    \"description\": \"for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\",\n                    \"type\": \"boolean\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"inputType\": {\n                    \"const\": \"toggle\",\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"checked\", \"disabled\", \"height\", \"id\", \"inputType\", \"type\", \"width\"],\n            \"type\": \"object\"\n        },\n        \"wireframeWebView\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"childWireframes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/wireframe\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"style\": {\n                    \"$ref\": \"#/definitions/MobileStyles\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MobileNodeType\"\n                },\n                \"url\": {\n                    \"type\": \"string\"\n                },\n                \"width\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"const\": \"100vw\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"x\": {\n                    \"description\": \"x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\",\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"id\", \"type\", \"width\"],\n            \"type\": \"object\"\n        }\n    }\n}\n", "{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"anyOf\": [\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {},\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.DomContentLoaded\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {},\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.Load\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"initialOffset\": {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"left\": {\n                                    \"type\": \"number\"\n                                },\n                                \"top\": {\n                                    \"type\": \"number\"\n                                }\n                            },\n                            \"required\": [\"top\", \"left\"],\n                            \"type\": \"object\"\n                        },\n                        \"node\": {\n                            \"$ref\": \"#/definitions/serializedNodeWithId\"\n                        }\n                    },\n                    \"required\": [\"node\", \"initialOffset\"],\n                    \"type\": \"object\"\n                },\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.FullSnapshot\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {\n                    \"$ref\": \"#/definitions/incrementalData\"\n                },\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.IncrementalSnapshot\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"height\": {\n                            \"type\": \"number\"\n                        },\n                        \"href\": {\n                            \"type\": \"string\"\n                        },\n                        \"width\": {\n                            \"type\": \"number\"\n                        }\n                    },\n                    \"required\": [\"href\", \"width\", \"height\"],\n                    \"type\": \"object\"\n                },\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.Meta\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"payload\": {},\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"tag\", \"payload\"],\n                    \"type\": \"object\"\n                },\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.Custom\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        },\n        {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"payload\": {},\n                        \"plugin\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"plugin\", \"payload\"],\n                    \"type\": \"object\"\n                },\n                \"delay\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EventType.Plugin\"\n                }\n            },\n            \"required\": [\"data\", \"timestamp\", \"type\"],\n            \"type\": \"object\"\n        }\n    ],\n    \"definitions\": {\n        \"CanvasContext\": {\n            \"enum\": [0, 1, 2],\n            \"type\": \"number\"\n        },\n        \"EventType.Custom\": {\n            \"const\": 5,\n            \"type\": \"number\"\n        },\n        \"EventType.DomContentLoaded\": {\n            \"const\": 0,\n            \"type\": \"number\"\n        },\n        \"EventType.FullSnapshot\": {\n            \"const\": 2,\n            \"type\": \"number\"\n        },\n        \"EventType.IncrementalSnapshot\": {\n            \"const\": 3,\n            \"type\": \"number\"\n        },\n        \"EventType.Load\": {\n            \"const\": 1,\n            \"type\": \"number\"\n        },\n        \"EventType.Meta\": {\n            \"const\": 4,\n            \"type\": \"number\"\n        },\n        \"EventType.Plugin\": {\n            \"const\": 6,\n            \"type\": \"number\"\n        },\n        \"FontFaceDescriptors\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"display\": {\n                    \"type\": \"string\"\n                },\n                \"featureSettings\": {\n                    \"type\": \"string\"\n                },\n                \"stretch\": {\n                    \"type\": \"string\"\n                },\n                \"style\": {\n                    \"type\": \"string\"\n                },\n                \"unicodeRange\": {\n                    \"type\": \"string\"\n                },\n                \"variant\": {\n                    \"type\": \"string\"\n                },\n                \"weight\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"IncrementalSource.AdoptedStyleSheet\": {\n            \"const\": 15,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.CanvasMutation\": {\n            \"const\": 9,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.CustomElement\": {\n            \"const\": 16,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.Drag\": {\n            \"const\": 12,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.Font\": {\n            \"const\": 10,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.Input\": {\n            \"const\": 5,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.MediaInteraction\": {\n            \"const\": 7,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.MouseInteraction\": {\n            \"const\": 2,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.MouseMove\": {\n            \"const\": 1,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.Mutation\": {\n            \"const\": 0,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.Scroll\": {\n            \"const\": 3,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.Selection\": {\n            \"const\": 14,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.StyleDeclaration\": {\n            \"const\": 13,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.StyleSheetRule\": {\n            \"const\": 8,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.TouchMove\": {\n            \"const\": 6,\n            \"type\": \"number\"\n        },\n        \"IncrementalSource.ViewportResize\": {\n            \"const\": 4,\n            \"type\": \"number\"\n        },\n        \"MediaInteractions\": {\n            \"enum\": [0, 1, 2, 3, 4],\n            \"type\": \"number\"\n        },\n        \"MouseInteractions\": {\n            \"enum\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n            \"type\": \"number\"\n        },\n        \"NodeType.CDATA\": {\n            \"const\": 4,\n            \"type\": \"number\"\n        },\n        \"NodeType.Comment\": {\n            \"const\": 5,\n            \"type\": \"number\"\n        },\n        \"NodeType.Document\": {\n            \"const\": 0,\n            \"type\": \"number\"\n        },\n        \"NodeType.DocumentType\": {\n            \"const\": 1,\n            \"type\": \"number\"\n        },\n        \"NodeType.Element\": {\n            \"const\": 2,\n            \"type\": \"number\"\n        },\n        \"NodeType.Text\": {\n            \"const\": 3,\n            \"type\": \"number\"\n        },\n        \"PointerTypes\": {\n            \"enum\": [0, 1, 2],\n            \"type\": \"number\"\n        },\n        \"SelectionRange\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"end\": {\n                    \"type\": \"number\"\n                },\n                \"endOffset\": {\n                    \"type\": \"number\"\n                },\n                \"start\": {\n                    \"type\": \"number\"\n                },\n                \"startOffset\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"start\", \"startOffset\", \"end\", \"endOffset\"],\n            \"type\": \"object\"\n        },\n        \"addedNodeMutation\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"nextId\": {\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"node\": {\n                    \"$ref\": \"#/definitions/serializedNodeWithId\"\n                },\n                \"parentId\": {\n                    \"type\": \"number\"\n                },\n                \"previousId\": {\n                    \"type\": [\"number\", \"null\"]\n                }\n            },\n            \"required\": [\"parentId\", \"nextId\", \"node\"],\n            \"type\": \"object\"\n        },\n        \"adoptedStyleSheetData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.AdoptedStyleSheet\"\n                },\n                \"styleIds\": {\n                    \"items\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"styles\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"rules\": {\n                                \"items\": {\n                                    \"$ref\": \"#/definitions/styleSheetAddRule\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            \"styleId\": {\n                                \"type\": \"number\"\n                            }\n                        },\n                        \"required\": [\"styleId\", \"rules\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"id\", \"source\", \"styleIds\"],\n            \"type\": \"object\"\n        },\n        \"attributeMutation\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"attributes\": {\n                    \"additionalProperties\": {\n                        \"anyOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/definitions/styleOMValue\"\n                            },\n                            {\n                                \"type\": \"null\"\n                            }\n                        ]\n                    },\n                    \"type\": \"object\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"id\", \"attributes\"],\n            \"type\": \"object\"\n        },\n        \"attributes\": {\n            \"additionalProperties\": {\n                \"type\": [\"string\", \"number\", \"boolean\", \"null\"]\n            },\n            \"properties\": {\n                \"_cssText\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"canvasMutationCommand\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"args\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"property\": {\n                    \"type\": \"string\"\n                },\n                \"setter\": {\n                    \"const\": true,\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\"property\", \"args\"],\n            \"type\": \"object\"\n        },\n        \"canvasMutationData\": {\n            \"anyOf\": [\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"commands\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/canvasMutationCommand\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"id\": {\n                            \"type\": \"number\"\n                        },\n                        \"source\": {\n                            \"$ref\": \"#/definitions/IncrementalSource.CanvasMutation\"\n                        },\n                        \"type\": {\n                            \"$ref\": \"#/definitions/CanvasContext\"\n                        }\n                    },\n                    \"required\": [\"commands\", \"id\", \"source\", \"type\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"args\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"id\": {\n                            \"type\": \"number\"\n                        },\n                        \"property\": {\n                            \"type\": \"string\"\n                        },\n                        \"setter\": {\n                            \"const\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"source\": {\n                            \"$ref\": \"#/definitions/IncrementalSource.CanvasMutation\"\n                        },\n                        \"type\": {\n                            \"$ref\": \"#/definitions/CanvasContext\"\n                        }\n                    },\n                    \"required\": [\"args\", \"id\", \"property\", \"source\", \"type\"],\n                    \"type\": \"object\"\n                }\n            ]\n        },\n        \"customElementData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"define\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"name\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"name\"],\n                    \"type\": \"object\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.CustomElement\"\n                }\n            },\n            \"required\": [\"source\"],\n            \"type\": \"object\"\n        },\n        \"fontData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"buffer\": {\n                    \"type\": \"boolean\"\n                },\n                \"descriptors\": {\n                    \"$ref\": \"#/definitions/FontFaceDescriptors\"\n                },\n                \"family\": {\n                    \"type\": \"string\"\n                },\n                \"fontSource\": {\n                    \"type\": \"string\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.Font\"\n                }\n            },\n            \"required\": [\"buffer\", \"family\", \"fontSource\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"incrementalData\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/mutationData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/mousemoveData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/mouseInteractionData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/scrollData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/viewportResizeData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/inputData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/mediaInteractionData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/styleSheetRuleData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/canvasMutationData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/fontData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/selectionData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/styleDeclarationData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/adoptedStyleSheetData\"\n                },\n                {\n                    \"$ref\": \"#/definitions/customElementData\"\n                }\n            ]\n        },\n        \"inputData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"isChecked\": {\n                    \"type\": \"boolean\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.Input\"\n                },\n                \"text\": {\n                    \"type\": \"string\"\n                },\n                \"userTriggered\": {\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\"id\", \"isChecked\", \"source\", \"text\"],\n            \"type\": \"object\"\n        },\n        \"mediaInteractionData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"currentTime\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"loop\": {\n                    \"type\": \"boolean\"\n                },\n                \"muted\": {\n                    \"type\": \"boolean\"\n                },\n                \"playbackRate\": {\n                    \"type\": \"number\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.MediaInteraction\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MediaInteractions\"\n                },\n                \"volume\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"id\", \"source\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"mouseInteractionData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"pointerType\": {\n                    \"$ref\": \"#/definitions/PointerTypes\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.MouseInteraction\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/MouseInteractions\"\n                },\n                \"x\": {\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"id\", \"source\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"mousePosition\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"timeOffset\": {\n                    \"type\": \"number\"\n                },\n                \"x\": {\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"x\", \"y\", \"id\", \"timeOffset\"],\n            \"type\": \"object\"\n        },\n        \"mousemoveData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"positions\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/mousePosition\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"source\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/IncrementalSource.MouseMove\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/IncrementalSource.TouchMove\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/IncrementalSource.Drag\"\n                        }\n                    ]\n                }\n            },\n            \"required\": [\"source\", \"positions\"],\n            \"type\": \"object\"\n        },\n        \"mutationData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"adds\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/addedNodeMutation\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"attributes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/attributeMutation\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"isAttachIframe\": {\n                    \"const\": true,\n                    \"type\": \"boolean\"\n                },\n                \"removes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/removedNodeMutation\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.Mutation\"\n                },\n                \"texts\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/textMutation\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"adds\", \"attributes\", \"removes\", \"source\", \"texts\"],\n            \"type\": \"object\"\n        },\n        \"removedNodeMutation\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"isShadow\": {\n                    \"type\": \"boolean\"\n                },\n                \"parentId\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"parentId\", \"id\"],\n            \"type\": \"object\"\n        },\n        \"scrollData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.Scroll\"\n                },\n                \"x\": {\n                    \"type\": \"number\"\n                },\n                \"y\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"id\", \"source\", \"x\", \"y\"],\n            \"type\": \"object\"\n        },\n        \"selectionData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"ranges\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/SelectionRange\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.Selection\"\n                }\n            },\n            \"required\": [\"ranges\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"serializedNodeWithId\": {\n            \"anyOf\": [\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"childNodes\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/serializedNodeWithId\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"compatMode\": {\n                            \"type\": \"string\"\n                        },\n                        \"id\": {\n                            \"type\": \"number\"\n                        },\n                        \"isShadow\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"isShadowHost\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"rootId\": {\n                            \"type\": \"number\"\n                        },\n                        \"type\": {\n                            \"$ref\": \"#/definitions/NodeType.Document\"\n                        }\n                    },\n                    \"required\": [\"childNodes\", \"id\", \"type\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"number\"\n                        },\n                        \"isShadow\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"isShadowHost\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"publicId\": {\n                            \"type\": \"string\"\n                        },\n                        \"rootId\": {\n                            \"type\": \"number\"\n                        },\n                        \"systemId\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": {\n                            \"$ref\": \"#/definitions/NodeType.DocumentType\"\n                        }\n                    },\n                    \"required\": [\"id\", \"name\", \"publicId\", \"systemId\", \"type\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"attributes\": {\n                            \"$ref\": \"#/definitions/attributes\"\n                        },\n                        \"childNodes\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/serializedNodeWithId\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"id\": {\n                            \"type\": \"number\"\n                        },\n                        \"isCustom\": {\n                            \"const\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"isSVG\": {\n                            \"const\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"isShadow\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"isShadowHost\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"needBlock\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"rootId\": {\n                            \"type\": \"number\"\n                        },\n                        \"tagName\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": {\n                            \"$ref\": \"#/definitions/NodeType.Element\"\n                        }\n                    },\n                    \"required\": [\"attributes\", \"childNodes\", \"id\", \"tagName\", \"type\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"number\"\n                        },\n                        \"isShadow\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"isShadowHost\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"isStyle\": {\n                            \"const\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"rootId\": {\n                            \"type\": \"number\"\n                        },\n                        \"textContent\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": {\n                            \"$ref\": \"#/definitions/NodeType.Text\"\n                        }\n                    },\n                    \"required\": [\"id\", \"textContent\", \"type\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"number\"\n                        },\n                        \"isShadow\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"isShadowHost\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"rootId\": {\n                            \"type\": \"number\"\n                        },\n                        \"textContent\": {\n                            \"const\": \"\",\n                            \"type\": \"string\"\n                        },\n                        \"type\": {\n                            \"$ref\": \"#/definitions/NodeType.CDATA\"\n                        }\n                    },\n                    \"required\": [\"id\", \"textContent\", \"type\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"number\"\n                        },\n                        \"isShadow\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"isShadowHost\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"rootId\": {\n                            \"type\": \"number\"\n                        },\n                        \"textContent\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": {\n                            \"$ref\": \"#/definitions/NodeType.Comment\"\n                        }\n                    },\n                    \"required\": [\"id\", \"textContent\", \"type\"],\n                    \"type\": \"object\"\n                }\n            ]\n        },\n        \"styleDeclarationData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"index\": {\n                    \"items\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"remove\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"property\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"property\"],\n                    \"type\": \"object\"\n                },\n                \"set\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"priority\": {\n                            \"type\": \"string\"\n                        },\n                        \"property\": {\n                            \"type\": \"string\"\n                        },\n                        \"value\": {\n                            \"type\": [\"string\", \"null\"]\n                        }\n                    },\n                    \"required\": [\"property\", \"value\"],\n                    \"type\": \"object\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.StyleDeclaration\"\n                },\n                \"styleId\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"index\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"styleOMValue\": {\n            \"additionalProperties\": {\n                \"anyOf\": [\n                    {\n                        \"$ref\": \"#/definitions/styleValueWithPriority\"\n                    },\n                    {\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"const\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            },\n            \"type\": \"object\"\n        },\n        \"styleSheetAddRule\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"index\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"items\": {\n                                \"type\": \"number\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    ]\n                },\n                \"rule\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"rule\"],\n            \"type\": \"object\"\n        },\n        \"styleSheetDeleteRule\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"index\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"items\": {\n                                \"type\": \"number\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    ]\n                }\n            },\n            \"required\": [\"index\"],\n            \"type\": \"object\"\n        },\n        \"styleSheetRuleData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"adds\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/styleSheetAddRule\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"removes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/styleSheetDeleteRule\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"replace\": {\n                    \"type\": \"string\"\n                },\n                \"replaceSync\": {\n                    \"type\": \"string\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.StyleSheetRule\"\n                },\n                \"styleId\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"source\"],\n            \"type\": \"object\"\n        },\n        \"styleValueWithPriority\": {\n            \"items\": {\n                \"type\": \"string\"\n            },\n            \"maxItems\": 2,\n            \"minItems\": 2,\n            \"type\": \"array\"\n        },\n        \"textMutation\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"number\"\n                },\n                \"value\": {\n                    \"type\": [\"string\", \"null\"]\n                }\n            },\n            \"required\": [\"id\", \"value\"],\n            \"type\": \"object\"\n        },\n        \"viewportResizeData\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/IncrementalSource.ViewportResize\"\n                },\n                \"width\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"height\", \"source\", \"width\"],\n            \"type\": \"object\"\n        }\n    }\n}\n", "import {\n    addedNodeMutation,\n    customEvent,\n    EventType,\n    fullSnapshotEvent,\n    incrementalSnapshotEvent,\n    IncrementalSource,\n    metaEvent,\n    mutationData,\n    removedNodeMutation,\n} from '@posthog/rrweb-types'\nimport { captureMessage } from '@sentry/react'\nimport { isObject } from 'lib/utils'\nimport { PLACEHOLDER_SVG_DATA_IMAGE_URL } from 'scenes/session-recordings/player/rrweb'\n\nimport {\n    attributes,\n    documentNode,\n    elementNode,\n    fullSnapshotEvent as MobileFullSnapshotEvent,\n    keyboardEvent,\n    metaEvent as MobileMetaEvent,\n    MobileIncrementalSnapshotEvent,\n    MobileNodeMutation,\n    MobileNodeType,\n    NodeType,\n    serializedNodeWithId,\n    textNode,\n    wireframe,\n    wireframeButton,\n    wireframeCheckBox,\n    wireframeDiv,\n    wireframeImage,\n    wireframeInputComponent,\n    wireframeNavigationBar,\n    wireframePlaceholder,\n    wireframeProgress,\n    wireframeRadio,\n    wireframeRadioGroup,\n    wireframeRectangle,\n    wireframeScreenshot,\n    wireframeSelect,\n    wireframeStatusBar,\n    wireframeText,\n    wireframeToggle,\n} from '../mobile.types'\nimport { makeNavigationBar, makeOpenKeyboardPlaceholder, makeStatusBar } from './screen-chrome'\nimport { ConversionContext, ConversionResult } from './types'\nimport {\n    asStyleString,\n    makeBodyStyles,\n    makeColorStyles,\n    makeDeterminateProgressStyles,\n    makeHTMLStyles,\n    makeIndeterminateProgressStyles,\n    makeMinimalStyles,\n    makePositionStyles,\n    makeStylesString,\n} from './wireframeStyle'\n\nexport const BACKGROUND = '#f3f4ef'\nconst FOREGROUND = '#35373e'\n\n/**\n * generates a sequence of ids\n * from 100 to 9,999,999\n * the transformer reserves ids in the range 0 to 9,999,999\n * we reserve a range of ids because we need nodes to have stable ids across snapshots\n * in order for incremental snapshots to work\n * some mobile elements have to be wrapped in other elements in order to be styled correctly\n * which means the web version of a mobile replay will use ids that don't exist in the mobile replay,\n * and we need to ensure they don't clash\n * -----\n * id is typed as a number in rrweb\n * and there's a few places in their code where rrweb uses a check for `id === -1` to bail out of processing\n * so, it's safest to assume that id is expected to be a positive integer\n */\nfunction* ids(): Generator<number> {\n    let i = 100\n    while (i < 9999999) {\n        yield i++\n    }\n}\n\nlet globalIdSequence = ids()\n\n// there are some fixed ids that we need to use for fixed elements or artificial mutations\nconst DOCUMENT_ID = 1\nconst HTML_DOC_TYPE_ID = 2\nconst HTML_ELEMENT_ID = 3\nconst HEAD_ID = 4\nconst BODY_ID = 5\n// the nav bar should always be the last item in the body so that it is at the top of the stack\nconst NAVIGATION_BAR_PARENT_ID = 7\nexport const NAVIGATION_BAR_ID = 8\n// the keyboard so that it is still before the nav bar\nconst KEYBOARD_PARENT_ID = 9\nexport const KEYBOARD_ID = 10\nexport const STATUS_BAR_PARENT_ID = 11\nexport const STATUS_BAR_ID = 12\n\nfunction isKeyboardEvent(x: unknown): x is keyboardEvent {\n    return isObject(x) && 'data' in x && isObject(x.data) && 'tag' in x.data && x.data.tag === 'keyboard'\n}\n\nexport function _isPositiveInteger(id: unknown): id is number {\n    return typeof id === 'number' && id > 0 && id % 1 === 0\n}\n\nfunction _isNullish(x: unknown): x is null | undefined {\n    return x === null || x === undefined\n}\n\nfunction isRemovedNodeMutation(x: addedNodeMutation | removedNodeMutation): x is removedNodeMutation {\n    return isObject(x) && 'id' in x\n}\n\nexport const makeCustomEvent = (\n    mobileCustomEvent: (customEvent | keyboardEvent) & {\n        timestamp: number\n        delay?: number\n    }\n): (customEvent | incrementalSnapshotEvent) & {\n    timestamp: number\n    delay?: number\n} => {\n    if (isKeyboardEvent(mobileCustomEvent)) {\n        // keyboard events are handled as incremental snapshots to add or remove a keyboard from the DOM\n        // TODO eventually we can pass something to makeIncrementalEvent here\n        const adds: addedNodeMutation[] = []\n        const removes = []\n        if (mobileCustomEvent.data.payload.open) {\n            const keyboardPlaceHolder = makeOpenKeyboardPlaceholder(mobileCustomEvent, {\n                timestamp: mobileCustomEvent.timestamp,\n                idSequence: globalIdSequence,\n            })\n            if (keyboardPlaceHolder) {\n                adds.push({\n                    parentId: KEYBOARD_PARENT_ID,\n                    nextId: null,\n                    node: keyboardPlaceHolder.result,\n                })\n                // mutations seem not to want a tree of nodes to add\n                // so even though `keyboardPlaceholder` is a tree with content\n                // we have to add the text content as well\n                adds.push({\n                    parentId: keyboardPlaceHolder.result.id,\n                    nextId: null,\n                    node: {\n                        type: NodeType.Text,\n                        id: globalIdSequence.next().value,\n                        textContent: 'keyboard',\n                    },\n                })\n            } else {\n                captureMessage('Failed to create keyboard placeholder', { extra: { mobileCustomEvent } })\n            }\n        } else {\n            removes.push({\n                parentId: KEYBOARD_PARENT_ID,\n                id: KEYBOARD_ID,\n            })\n        }\n        const mutation: mutationData = { adds, attributes: [], removes, source: IncrementalSource.Mutation, texts: [] }\n        return {\n            type: EventType.IncrementalSnapshot,\n            data: mutation,\n            timestamp: mobileCustomEvent.timestamp,\n        }\n    }\n    return mobileCustomEvent\n}\n\nexport const makeMetaEvent = (\n    mobileMetaEvent: MobileMetaEvent & {\n        timestamp: number\n    }\n): metaEvent & {\n    timestamp: number\n    delay?: number\n} => ({\n    type: EventType.Meta,\n    data: {\n        href: mobileMetaEvent.data.href || '', // the replay doesn't use the href, so we safely ignore any absence\n        // mostly we need width and height in order to size the viewport\n        width: mobileMetaEvent.data.width,\n        height: mobileMetaEvent.data.height,\n    },\n    timestamp: mobileMetaEvent.timestamp,\n})\n\nexport function makeDivElement(\n    wireframe: wireframeDiv,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    const _id = _isPositiveInteger(wireframe.id) ? wireframe.id : context.idSequence.next().value\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                style: asStyleString([makeStylesString(wireframe), 'overflow:hidden', 'white-space:nowrap']),\n                'data-rrweb-id': _id,\n            },\n            id: _id,\n            childNodes: children,\n        },\n        context,\n    }\n}\n\nfunction makeTextElement(\n    wireframe: wireframeText,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    if (wireframe.type !== 'text') {\n        console.error('Passed incorrect wireframe type to makeTextElement')\n        return null\n    }\n\n    // because we might have to style the text, we always wrap it in a div\n    // and apply styles to that\n    const id = context.idSequence.next().value\n\n    const childNodes = [...children]\n    if (!_isNullish(wireframe.text)) {\n        childNodes.unshift({\n            type: NodeType.Text,\n            textContent: wireframe.text,\n            // since the text node is wrapped, we assign it a synthetic id\n            id,\n        })\n    }\n\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                style: asStyleString([makeStylesString(wireframe), 'overflow:hidden', 'white-space:normal']),\n                'data-rrweb-id': wireframe.id,\n            },\n            id: wireframe.id,\n            childNodes,\n        },\n        context,\n    }\n}\n\nfunction makeWebViewElement(\n    wireframe: wireframe,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    const labelledWireframe: wireframePlaceholder = { ...wireframe } as wireframePlaceholder\n    if ('url' in wireframe) {\n        labelledWireframe.label = wireframe.url\n    }\n\n    return makePlaceholderElement(labelledWireframe, children, context)\n}\n\nexport function makePlaceholderElement(\n    wireframe: wireframe,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    const txt = 'label' in wireframe && wireframe.label ? wireframe.label : wireframe.type || 'PLACEHOLDER'\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                style: makeStylesString(wireframe, {\n                    verticalAlign: 'center',\n                    horizontalAlign: 'center',\n                    backgroundColor: wireframe.style?.backgroundColor || BACKGROUND,\n                    color: wireframe.style?.color || FOREGROUND,\n                    backgroundImage: PLACEHOLDER_SVG_DATA_IMAGE_URL,\n                    backgroundSize: 'auto',\n                    backgroundRepeat: 'unset',\n                    ...context.styleOverride,\n                }),\n                'data-rrweb-id': wireframe.id,\n            },\n            id: wireframe.id,\n            childNodes: [\n                {\n                    type: NodeType.Text,\n                    // since the text node is wrapped, we assign it a synthetic id\n                    id: context.idSequence.next().value,\n                    textContent: txt,\n                },\n                ...children,\n            ],\n        },\n        context,\n    }\n}\n\nexport function dataURIOrPNG(src: string): string {\n    // replace all new lines in src\n    src = src.replace(/\\r?\\n|\\r/g, '')\n    if (!src.startsWith('data:image/')) {\n        return 'data:image/png;base64,' + src\n    }\n    return src\n}\n\nfunction makeImageElement(\n    wireframe: wireframeImage | wireframeScreenshot,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    if (!wireframe.base64) {\n        return makePlaceholderElement(wireframe, children, context)\n    }\n\n    const src = dataURIOrPNG(wireframe.base64)\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'img',\n            attributes: {\n                src: src,\n                width: wireframe.width,\n                height: wireframe.height,\n                style: makeStylesString(wireframe),\n                'data-rrweb-id': wireframe.id,\n            },\n            id: wireframe.id,\n            childNodes: children,\n        },\n        context,\n    }\n}\n\nfunction inputAttributes<T extends wireframeInputComponent>(wireframe: T): attributes {\n    const attributes = {\n        style: makeStylesString(wireframe),\n        type: wireframe.inputType,\n        ...(wireframe.disabled ? { disabled: wireframe.disabled } : {}),\n        'data-rrweb-id': wireframe.id,\n    }\n\n    switch (wireframe.inputType) {\n        case 'checkbox':\n            return {\n                ...attributes,\n                style: null, // checkboxes are styled by being combined with a label\n                ...(wireframe.checked ? { checked: wireframe.checked } : {}),\n            }\n        case 'toggle':\n            return {\n                ...attributes,\n                style: null, // toggle are styled by being combined with a label\n                ...(wireframe.checked ? { checked: wireframe.checked } : {}),\n            }\n        case 'radio':\n            return {\n                ...attributes,\n                style: null, // radio buttons are styled by being combined with a label\n                ...(wireframe.checked ? { checked: wireframe.checked } : {}),\n                // radio value defaults to the string \"on\" if not specified\n                // we're not really submitting the form, so it doesn't matter \uD83E\uDD1E\n                // radio name is used to correctly uncheck values when one is checked\n                // mobile doesn't really have it, and we will be checking based on snapshots,\n                // so we can ignore it for now\n            }\n        case 'button':\n            return {\n                ...attributes,\n            }\n        case 'text_area':\n            return {\n                ...attributes,\n                value: wireframe.value || '',\n            }\n        case 'progress':\n            return {\n                ...attributes,\n                // indeterminate when omitted\n                value: wireframe.value || null,\n                // defaults to 1 when omitted\n                max: wireframe.max || null,\n                type: null, // progress has no type attribute\n            }\n        default:\n            return {\n                ...attributes,\n                value: wireframe.value || '',\n            }\n    }\n}\n\nfunction makeButtonElement(\n    wireframe: wireframeButton,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    const buttonText: textNode | null = wireframe.value\n        ? {\n              type: NodeType.Text,\n              textContent: wireframe.value,\n          }\n        : null\n\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'button',\n            attributes: inputAttributes(wireframe),\n            id: wireframe.id,\n            childNodes: buttonText ? [{ ...buttonText, id: context.idSequence.next().value }, ...children] : children,\n        },\n        context,\n    }\n}\n\nfunction makeSelectOptionElement(\n    option: string,\n    selected: boolean,\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> {\n    const optionId = context.idSequence.next().value\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'option',\n            attributes: {\n                ...(selected ? { selected: selected } : {}),\n                'data-rrweb-id': optionId,\n            },\n            id: optionId,\n            childNodes: [\n                {\n                    type: NodeType.Text,\n                    textContent: option,\n                    id: context.idSequence.next().value,\n                },\n            ],\n        },\n        context,\n    }\n}\n\nfunction makeSelectElement(\n    wireframe: wireframeSelect,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    const selectOptions: serializedNodeWithId[] = []\n    if (wireframe.options) {\n        let optionContext = context\n        for (let i = 0; i < wireframe.options.length; i++) {\n            const option = wireframe.options[i]\n            const conversion = makeSelectOptionElement(option, wireframe.value === option, optionContext)\n            selectOptions.push(conversion.result)\n            optionContext = conversion.context\n        }\n    }\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'select',\n            attributes: inputAttributes(wireframe),\n            id: wireframe.id,\n            childNodes: [...selectOptions, ...children],\n        },\n        context,\n    }\n}\n\nfunction groupRadioButtons(children: serializedNodeWithId[], radioGroupName: string): serializedNodeWithId[] {\n    return children.map((child) => {\n        if (child.type === NodeType.Element && child.tagName === 'input' && child.attributes.type === 'radio') {\n            return {\n                ...child,\n                attributes: {\n                    ...child.attributes,\n                    name: radioGroupName,\n                    'data-rrweb-id': child.id,\n                },\n            }\n        }\n        return child\n    })\n}\n\nfunction makeRadioGroupElement(\n    wireframe: wireframeRadioGroup,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    const radioGroupName = 'radio_group_' + wireframe.id\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                style: makeStylesString(wireframe),\n                'data-rrweb-id': wireframe.id,\n            },\n            id: wireframe.id,\n            childNodes: groupRadioButtons(children, radioGroupName),\n        },\n        context,\n    }\n}\n\nfunction makeStar(title: string, path: string, context: ConversionContext): serializedNodeWithId {\n    const svgId = context.idSequence.next().value\n    const titleId = context.idSequence.next().value\n    const pathId = context.idSequence.next().value\n    return {\n        type: NodeType.Element,\n        tagName: 'svg',\n        isSVG: true,\n        attributes: {\n            style: asStyleString(['height: 100%', 'overflow-clip-margin: content-box', 'overflow:hidden']),\n            viewBox: '0 0 24 24',\n            fill: 'currentColor',\n            'data-rrweb-id': svgId,\n        },\n        id: svgId,\n        childNodes: [\n            {\n                type: NodeType.Element,\n                tagName: 'title',\n                isSVG: true,\n                attributes: {\n                    'data-rrweb-id': titleId,\n                },\n                id: titleId,\n                childNodes: [\n                    {\n                        type: NodeType.Text,\n                        textContent: title,\n                        id: context.idSequence.next().value,\n                    },\n                ],\n            },\n            {\n                type: NodeType.Element,\n                tagName: 'path',\n                isSVG: true,\n                attributes: {\n                    d: path,\n                    'data-rrweb-id': pathId,\n                },\n                id: pathId,\n                childNodes: [],\n            },\n        ],\n    }\n}\n\nfunction filledStar(context: ConversionContext): serializedNodeWithId {\n    return makeStar(\n        'filled star',\n        'M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z',\n        context\n    )\n}\n\nfunction halfStar(context: ConversionContext): serializedNodeWithId {\n    return makeStar(\n        'half-filled star',\n        'M12,15.4V6.1L13.71,10.13L18.09,10.5L14.77,13.39L15.76,17.67M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z',\n        context\n    )\n}\n\nfunction emptyStar(context: ConversionContext): serializedNodeWithId {\n    return makeStar(\n        'empty star',\n        'M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z',\n        context\n    )\n}\n\nfunction makeRatingBar(\n    wireframe: wireframeProgress,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    // max is the number of stars... and value is the number of stars to fill\n\n    // deliberate double equals, because we want to allow null and undefined\n    if (wireframe.value == null || wireframe.max == null) {\n        return makePlaceholderElement(wireframe, children, context)\n    }\n\n    const numberOfFilledStars = Math.floor(wireframe.value)\n    const numberOfHalfStars = wireframe.value - numberOfFilledStars > 0 ? 1 : 0\n    const numberOfEmptyStars = wireframe.max - numberOfFilledStars - numberOfHalfStars\n\n    const filledStars = Array(numberOfFilledStars)\n        .fill(undefined)\n        .map(() => filledStar(context))\n    const halfStars = Array(numberOfHalfStars)\n        .fill(undefined)\n        .map(() => halfStar(context))\n    const emptyStars = Array(numberOfEmptyStars)\n        .fill(undefined)\n        .map(() => emptyStar(context))\n\n    const ratingBarId = context.idSequence.next().value\n    const ratingBar = {\n        type: NodeType.Element,\n        tagName: 'div',\n        id: ratingBarId,\n        attributes: {\n            style: asStyleString([\n                makeColorStyles(wireframe),\n                'position: relative',\n                'display: flex',\n                'flex-direction: row',\n                'padding: 2px 4px',\n            ]),\n            'data-rrweb-id': ratingBarId,\n        },\n        childNodes: [...filledStars, ...halfStars, ...emptyStars],\n    } as serializedNodeWithId\n\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                style: makeStylesString(wireframe),\n                'data-rrweb-id': wireframe.id,\n            },\n            id: wireframe.id,\n            childNodes: [ratingBar, ...children],\n        },\n        context,\n    }\n}\n\nfunction makeProgressElement(\n    wireframe: wireframeProgress,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    if (wireframe.style?.bar === 'circular') {\n        // value needs to be expressed as a number between 0 and 100\n        const max = wireframe.max || 1\n        let value = wireframe.value || null\n        if (_isPositiveInteger(value) && value <= max) {\n            value = (value / max) * 100\n        } else {\n            value = null\n        }\n\n        const styleOverride = {\n            color: wireframe.style?.color || FOREGROUND,\n            backgroundColor: wireframe.style?.backgroundColor || BACKGROUND,\n        }\n\n        // if not _isPositiveInteger(value) then we render a spinner,\n        // so we need to add a style element with the spin keyframe\n        const stylingChildren: serializedNodeWithId[] = _isPositiveInteger(value)\n            ? []\n            : [\n                  {\n                      type: NodeType.Element,\n                      tagName: 'style',\n                      attributes: {\n                          type: 'text/css',\n                      },\n                      id: context.idSequence.next().value,\n                      childNodes: [\n                          {\n                              type: NodeType.Text,\n                              textContent: `@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }`,\n                              id: context.idSequence.next().value,\n                          },\n                      ],\n                  },\n              ]\n\n        const wrappingDivId = context.idSequence.next().value\n        return {\n            result: {\n                type: NodeType.Element,\n                tagName: 'div',\n                attributes: {\n                    style: makeMinimalStyles(wireframe),\n                    'data-rrweb-id': wireframe.id,\n                },\n                id: wireframe.id,\n                childNodes: [\n                    {\n                        type: NodeType.Element,\n                        tagName: 'div',\n                        attributes: {\n                            // with no provided value we render a spinner\n                            style: _isPositiveInteger(value)\n                                ? makeDeterminateProgressStyles(wireframe, styleOverride)\n                                : makeIndeterminateProgressStyles(wireframe, styleOverride),\n                            'data-rrweb-id': wrappingDivId,\n                        },\n                        id: wrappingDivId,\n                        childNodes: stylingChildren,\n                    },\n                    ...children,\n                ],\n            },\n            context,\n        }\n    } else if (wireframe.style?.bar === 'rating') {\n        return makeRatingBar(wireframe, children, context)\n    }\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'progress',\n            attributes: inputAttributes(wireframe),\n            id: wireframe.id,\n            childNodes: children,\n        },\n        context,\n    }\n}\n\nfunction makeToggleParts(wireframe: wireframeToggle, context: ConversionContext): serializedNodeWithId[] {\n    const togglePosition = wireframe.checked ? 'right' : 'left'\n    const defaultColor = wireframe.checked ? '#1d4aff' : BACKGROUND\n    const sliderPartId = context.idSequence.next().value\n    const handlePartId = context.idSequence.next().value\n    return [\n        {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                'data-toggle-part': 'slider',\n                style: asStyleString([\n                    'position:absolute',\n                    'top:33%',\n                    'left:5%',\n                    'display:inline-block',\n                    'width:75%',\n                    'height:33%',\n                    'opacity: 0.2',\n                    'border-radius:7.5%',\n                    `background-color:${wireframe.style?.color || defaultColor}`,\n                ]),\n                'data-rrweb-id': sliderPartId,\n            },\n            id: sliderPartId,\n            childNodes: [],\n        },\n        {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                'data-toggle-part': 'handle',\n                style: asStyleString([\n                    'position:absolute',\n                    'top:1.5%',\n                    `${togglePosition}:5%`,\n                    'display:flex',\n                    'align-items:center',\n                    'justify-content:center',\n                    'width:40%',\n                    'height:75%',\n                    'cursor:inherit',\n                    'border-radius:50%',\n                    `background-color:${wireframe.style?.color || defaultColor}`,\n                    `border:2px solid ${wireframe.style?.borderColor || wireframe.style?.color || defaultColor}`,\n                ]),\n                'data-rrweb-id': handlePartId,\n            },\n            id: handlePartId,\n            childNodes: [],\n        },\n    ]\n}\n\nfunction makeToggleElement(\n    wireframe: wireframeToggle,\n    context: ConversionContext\n): ConversionResult<\n    elementNode & {\n        id: number\n    }\n> | null {\n    const isLabelled = 'label' in wireframe\n    const wrappingDivId = context.idSequence.next().value\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                // if labelled take up available space, otherwise use provided positioning\n                style: isLabelled ? asStyleString(['height:100%', 'flex:1']) : makePositionStyles(wireframe),\n                'data-rrweb-id': wireframe.id,\n            },\n            id: wireframe.id,\n            childNodes: [\n                {\n                    type: NodeType.Element,\n                    tagName: 'div',\n                    attributes: {\n                        // relative position, fills parent\n                        style: asStyleString(['position:relative', 'width:100%', 'height:100%']),\n                        'data-rrweb-id': wrappingDivId,\n                    },\n                    id: wrappingDivId,\n                    childNodes: makeToggleParts(wireframe, context),\n                },\n            ],\n        },\n        context,\n    }\n}\n\nfunction makeLabelledInput(\n    wireframe: wireframeCheckBox | wireframeRadio | wireframeToggle,\n    theInputElement: serializedNodeWithId,\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> {\n    const theLabel: serializedNodeWithId = {\n        type: NodeType.Text,\n        textContent: wireframe.label || '',\n        id: context.idSequence.next().value,\n    }\n\n    const orderedChildren = wireframe.inputType === 'toggle' ? [theLabel, theInputElement] : [theInputElement, theLabel]\n\n    const labelId = context.idSequence.next().value\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'label',\n            attributes: {\n                style: makeStylesString(wireframe),\n                'data-rrweb-id': labelId,\n            },\n            id: labelId,\n            childNodes: orderedChildren,\n        },\n        context,\n    }\n}\n\nfunction makeInputElement(\n    wireframe: wireframeInputComponent,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    if (!wireframe.inputType) {\n        return null\n    }\n\n    if (wireframe.inputType === 'button') {\n        return makeButtonElement(wireframe, children, context)\n    }\n\n    if (wireframe.inputType === 'select') {\n        return makeSelectElement(wireframe, children, context)\n    }\n\n    if (wireframe.inputType === 'progress') {\n        return makeProgressElement(wireframe, children, context)\n    }\n\n    const theInputElement: ConversionResult<serializedNodeWithId> | null =\n        wireframe.inputType === 'toggle'\n            ? makeToggleElement(wireframe, context)\n            : {\n                  result: {\n                      type: NodeType.Element,\n                      tagName: 'input',\n                      attributes: inputAttributes(wireframe),\n                      id: wireframe.id,\n                      childNodes: children,\n                  },\n                  context,\n              }\n\n    if (!theInputElement) {\n        return null\n    }\n\n    if ('label' in wireframe) {\n        return makeLabelledInput(wireframe, theInputElement.result, theInputElement.context)\n    }\n    // when labelled no styles are needed, when un-labelled as here - we add the styling in.\n    ;(theInputElement.result as elementNode).attributes.style = makeStylesString(wireframe)\n    return theInputElement\n}\n\nfunction makeRectangleElement(\n    wireframe: wireframeRectangle,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                style: makeStylesString(wireframe),\n                'data-rrweb-id': wireframe.id,\n            },\n            id: wireframe.id,\n            childNodes: children,\n        },\n        context,\n    }\n}\n\nfunction chooseConverter<T extends wireframe>(\n    wireframe: T\n): (\n    wireframe: T,\n    children: serializedNodeWithId[],\n    context: ConversionContext\n) => ConversionResult<serializedNodeWithId> | null {\n    // in theory type is always present\n    // but since this is coming over the wire we can't really be sure,\n    // and so we default to div\n    const converterType: MobileNodeType = wireframe.type || 'div'\n    const converterMapping: Record<\n        MobileNodeType,\n        (wireframe: T, children: serializedNodeWithId[]) => ConversionResult<serializedNodeWithId> | null\n    > = {\n        // KLUDGE: TS can't tell that the wireframe type of each function is safe based on the converter type\n        text: makeTextElement as any,\n        image: makeImageElement as any,\n        rectangle: makeRectangleElement as any,\n        div: makeDivElement as any,\n        input: makeInputElement as any,\n        radio_group: makeRadioGroupElement as any,\n        web_view: makeWebViewElement as any,\n        placeholder: makePlaceholderElement as any,\n        status_bar: makeStatusBar as any,\n        navigation_bar: makeNavigationBar as any,\n        screenshot: makeImageElement as any,\n    }\n    return converterMapping[converterType]\n}\n\nfunction convertWireframe(\n    wireframe: wireframe,\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    const children = convertWireframesFor(wireframe.childWireframes, context)\n    const converted = chooseConverter(wireframe)?.(wireframe, children.result, children.context)\n    return converted || null\n}\n\nfunction convertWireframesFor(\n    wireframes: wireframe[] | undefined,\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId[]> {\n    if (!wireframes) {\n        return { result: [], context }\n    }\n\n    const result: serializedNodeWithId[] = []\n    for (const wireframe of wireframes) {\n        const converted = convertWireframe(wireframe, context)\n        if (converted) {\n            result.push(converted.result)\n            context = converted.context\n        }\n    }\n    return { result, context }\n}\n\nfunction isMobileIncrementalSnapshotEvent(x: unknown): x is MobileIncrementalSnapshotEvent {\n    const isIncrementalSnapshot = isObject(x) && 'type' in x && x.type === EventType.IncrementalSnapshot\n    if (!isIncrementalSnapshot) {\n        return false\n    }\n    const hasData = isObject(x) && 'data' in x\n    const data = hasData ? x.data : null\n\n    const hasMutationSource = isObject(data) && 'source' in data && data.source === IncrementalSource.Mutation\n\n    const adds = isObject(data) && 'adds' in data && Array.isArray(data.adds) ? data.adds : null\n    const updates = isObject(data) && 'updates' in data && Array.isArray(data.updates) ? data.updates : null\n\n    const hasUpdatedWireframe = !!updates && updates.length > 0 && isObject(updates[0]) && 'wireframe' in updates[0]\n    const hasAddedWireframe = !!adds && adds.length > 0 && isObject(adds[0]) && 'wireframe' in adds[0]\n\n    return hasMutationSource && (hasAddedWireframe || hasUpdatedWireframe)\n}\n\nfunction chooseParentId(nodeType: MobileNodeType, providedParentId: number): number {\n    return nodeType === 'screenshot' ? BODY_ID : providedParentId\n}\n\nfunction makeIncrementalAdd(add: MobileNodeMutation, context: ConversionContext): addedNodeMutation[] | null {\n    const converted = convertWireframe(add.wireframe, context)\n\n    if (!converted) {\n        return null\n    }\n\n    const addition: addedNodeMutation = {\n        parentId: chooseParentId(add.wireframe.type, add.parentId),\n        nextId: null,\n        node: converted.result,\n    }\n    const adds: addedNodeMutation[] = []\n    if (addition) {\n        const flattened = flattenMutationAdds(addition)\n        flattened.forEach((x) => adds.push(x))\n        return adds\n    }\n    return null\n}\n\n/**\n * When processing an update we remove the entire item, and then add it back in.\n */\nfunction makeIncrementalRemoveForUpdate(update: MobileNodeMutation): removedNodeMutation {\n    return {\n        parentId: chooseParentId(update.wireframe.type, update.parentId),\n        id: update.wireframe.id,\n    }\n}\n\nfunction isNode(x: unknown): x is serializedNodeWithId {\n    // KLUDGE: really we should check that x.type is valid, but we're safe enough already\n    return isObject(x) && 'type' in x && 'id' in x\n}\n\nfunction isNodeWithChildren(x: unknown): x is elementNode | documentNode {\n    return isNode(x) && 'childNodes' in x && Array.isArray(x.childNodes)\n}\n\n/**\n * when creating incremental adds we have to flatten the node tree structure\n * there's no point, then keeping those child nodes in place\n */\nfunction cloneWithoutChildren(converted: addedNodeMutation): addedNodeMutation {\n    const cloned = { ...converted }\n    const clonedNode: serializedNodeWithId = { ...converted.node }\n    if (isNodeWithChildren(clonedNode)) {\n        clonedNode.childNodes = []\n    }\n    cloned.node = clonedNode\n    return cloned\n}\n\nfunction flattenMutationAdds(converted: addedNodeMutation): addedNodeMutation[] {\n    const flattened: addedNodeMutation[] = []\n\n    flattened.push(cloneWithoutChildren(converted))\n\n    const node: unknown = converted.node\n    const newParentId = converted.node.id\n    if (isNodeWithChildren(node)) {\n        node.childNodes.forEach((child) => {\n            flattened.push(\n                cloneWithoutChildren({\n                    parentId: newParentId,\n                    nextId: null,\n                    node: child,\n                })\n            )\n            if (isNodeWithChildren(child)) {\n                flattened.push(...flattenMutationAdds({ parentId: newParentId, nextId: null, node: child }))\n            }\n        })\n    }\n    return flattened\n}\n\n/**\n * each update wireframe carries the entire tree because we don't want to diff on the client\n * that means that we might create multiple mutations for the same node\n * we only want to add it once, so we dedupe the mutations\n * the app guarantees that for a given ID that is present more than once in a single snapshot\n * every instance of that ID is identical\n * it might change in the next snapshot but for a single incremental snapshot there is one\n * and only one version of any given ID\n */\nfunction dedupeMutations<T extends addedNodeMutation | removedNodeMutation>(mutations: T[]): T[] {\n    // KLUDGE: it's slightly yucky to stringify everything but since synthetic nodes\n    // introduce a new id, we can't just compare the id\n    const seen = new Set<string>()\n\n    // in case later mutations are the ones we want to keep, we reverse the array\n    // this does help with the deduping, so, it's likely that the view for a single ID\n    // is not consistent over a snapshot, but it's cheap to reverse so :YOLO:\n    return mutations\n        .reverse()\n        .filter((mutation: addedNodeMutation | removedNodeMutation) => {\n            let toCompare: string\n            if (isRemovedNodeMutation(mutation)) {\n                toCompare = JSON.stringify(mutation)\n            } else {\n                // if this is a synthetic addition, then we need to ignore the id,\n                // since duplicates won't have duplicate ids\n                toCompare = JSON.stringify({\n                    ...mutation.node,\n                    id: 0,\n                })\n            }\n\n            if (seen.has(toCompare)) {\n                return false\n            }\n            seen.add(toCompare)\n            return true\n        })\n        .reverse()\n}\n\n/**\n * We want to ensure that any events don't use id = 0.\n * They must always represent a valid ID from the dom, so we swap in the body id when the id = 0.\n *\n * For \"removes\", we don't need to do anything, the id of the element to be removed remains valid. We won't try and remove other elements that we added during transformation in order to show that element.\n *\n * \"adds\" are converted from wireframes to nodes and converted to `incrementalSnapshotEvent.adds`\n *\n * \"updates\" are converted to a remove and an add.\n *\n */\nexport const makeIncrementalEvent = (\n    mobileEvent: (MobileIncrementalSnapshotEvent | incrementalSnapshotEvent) & {\n        timestamp: number\n        delay?: number\n    }\n): incrementalSnapshotEvent & {\n    timestamp: number\n    delay?: number\n} => {\n    const converted = mobileEvent as unknown as incrementalSnapshotEvent & {\n        timestamp: number\n        delay?: number\n    }\n    if ('id' in converted.data && converted.data.id === 0) {\n        converted.data.id = BODY_ID\n    }\n\n    if (isMobileIncrementalSnapshotEvent(mobileEvent)) {\n        const adds: addedNodeMutation[] = []\n        const removes: removedNodeMutation[] = mobileEvent.data.removes || []\n        if ('adds' in mobileEvent.data && Array.isArray(mobileEvent.data.adds)) {\n            const addsContext = {\n                timestamp: mobileEvent.timestamp,\n                idSequence: globalIdSequence,\n            }\n\n            mobileEvent.data.adds.forEach((add) => {\n                makeIncrementalAdd(add, addsContext)?.forEach((x) => adds.push(x))\n            })\n        }\n        if ('updates' in mobileEvent.data && Array.isArray(mobileEvent.data.updates)) {\n            const updatesContext = {\n                timestamp: mobileEvent.timestamp,\n                idSequence: globalIdSequence,\n            }\n            const updateAdditions: addedNodeMutation[] = []\n            mobileEvent.data.updates.forEach((update) => {\n                const removal = makeIncrementalRemoveForUpdate(update)\n                if (removal) {\n                    removes.push(removal)\n                }\n                makeIncrementalAdd(update, updatesContext)?.forEach((x) => updateAdditions.push(x))\n            })\n            dedupeMutations(updateAdditions).forEach((x) => adds.push(x))\n        }\n\n        converted.data = {\n            source: IncrementalSource.Mutation,\n            attributes: [],\n            texts: [],\n            adds: dedupeMutations(adds),\n            // TODO: this assumes that removes are processed before adds \uD83E\uDD1E\n            removes: dedupeMutations(removes),\n        }\n    }\n\n    return converted\n}\n\nfunction makeKeyboardParent(): serializedNodeWithId {\n    return {\n        type: NodeType.Element,\n        tagName: 'div',\n        attributes: {\n            'data-render-reason': 'a fixed placeholder to contain the keyboard in the correct stacking position',\n            'data-rrweb-id': KEYBOARD_PARENT_ID,\n        },\n        id: KEYBOARD_PARENT_ID,\n        childNodes: [],\n    }\n}\n\nfunction makeStatusBarNode(\n    statusBar: wireframeStatusBar | undefined,\n    context: ConversionContext\n): serializedNodeWithId {\n    const childNodes = statusBar ? convertWireframesFor([statusBar], context).result : []\n    return {\n        type: NodeType.Element,\n        tagName: 'div',\n        attributes: {\n            'data-rrweb-id': STATUS_BAR_PARENT_ID,\n        },\n        id: STATUS_BAR_PARENT_ID,\n        childNodes,\n    }\n}\n\nfunction makeNavBarNode(\n    navigationBar: wireframeNavigationBar | undefined,\n    context: ConversionContext\n): serializedNodeWithId {\n    const childNodes = navigationBar ? convertWireframesFor([navigationBar], context).result : []\n    return {\n        type: NodeType.Element,\n        tagName: 'div',\n        attributes: {\n            'data-rrweb-id': NAVIGATION_BAR_PARENT_ID,\n        },\n        id: NAVIGATION_BAR_PARENT_ID,\n        childNodes,\n    }\n}\n\nfunction stripBarsFromWireframe(wireframe: wireframe): {\n    wireframe: wireframe | undefined\n    statusBar: wireframeStatusBar | undefined\n    navBar: wireframeNavigationBar | undefined\n} {\n    if (wireframe.type === 'status_bar') {\n        return { wireframe: undefined, statusBar: wireframe, navBar: undefined }\n    } else if (wireframe.type === 'navigation_bar') {\n        return { wireframe: undefined, statusBar: undefined, navBar: wireframe }\n    }\n    let statusBar: wireframeStatusBar | undefined\n    let navBar: wireframeNavigationBar | undefined\n    const wireframeToReturn: wireframe | undefined = { ...wireframe }\n    wireframeToReturn.childWireframes = []\n    for (const child of wireframe.childWireframes || []) {\n        const {\n            wireframe: childWireframe,\n            statusBar: childStatusBar,\n            navBar: childNavBar,\n        } = stripBarsFromWireframe(child)\n        statusBar = statusBar || childStatusBar\n        navBar = navBar || childNavBar\n        if (childWireframe) {\n            wireframeToReturn.childWireframes.push(childWireframe)\n        }\n    }\n    return { wireframe: wireframeToReturn, statusBar, navBar }\n}\n\n/**\n * We want to be able to place the status bar and navigation bar in the correct stacking order.\n * So, we lift them out of the tree, and return them separately.\n */\nexport function stripBarsFromWireframes(wireframes: wireframe[]): {\n    statusBar: wireframeStatusBar | undefined\n    navigationBar: wireframeNavigationBar | undefined\n    appNodes: wireframe[]\n} {\n    let statusBar: wireframeStatusBar | undefined\n    let navigationBar: wireframeNavigationBar | undefined\n    const copiedNodes: wireframe[] = []\n\n    wireframes.forEach((w) => {\n        const matches = stripBarsFromWireframe(w)\n        if (matches.statusBar) {\n            statusBar = matches.statusBar\n        }\n        if (matches.navBar) {\n            navigationBar = matches.navBar\n        }\n        if (matches.wireframe) {\n            copiedNodes.push(matches.wireframe)\n        }\n    })\n    return { statusBar, navigationBar, appNodes: copiedNodes }\n}\n\nexport const makeFullEvent = (\n    mobileEvent: MobileFullSnapshotEvent & {\n        timestamp: number\n        delay?: number\n    }\n): fullSnapshotEvent & {\n    timestamp: number\n    delay?: number\n} => {\n    // we can restart the id sequence on each full snapshot\n    globalIdSequence = ids()\n\n    if (!('wireframes' in mobileEvent.data)) {\n        return mobileEvent as unknown as fullSnapshotEvent & {\n            timestamp: number\n            delay?: number\n        }\n    }\n\n    const conversionContext = {\n        timestamp: mobileEvent.timestamp,\n        idSequence: globalIdSequence,\n    }\n\n    const { statusBar, navigationBar, appNodes } = stripBarsFromWireframes(mobileEvent.data.wireframes)\n\n    const nodeGroups = {\n        appNodes: convertWireframesFor(appNodes, conversionContext).result || [],\n        statusBarNode: makeStatusBarNode(statusBar, conversionContext),\n        navBarNode: makeNavBarNode(navigationBar, conversionContext),\n    }\n\n    return {\n        type: EventType.FullSnapshot,\n        timestamp: mobileEvent.timestamp,\n        data: {\n            node: {\n                type: NodeType.Document,\n                childNodes: [\n                    {\n                        type: NodeType.DocumentType,\n                        name: 'html',\n                        publicId: '',\n                        systemId: '',\n                        id: HTML_DOC_TYPE_ID,\n                    },\n                    {\n                        type: NodeType.Element,\n                        tagName: 'html',\n                        attributes: { style: makeHTMLStyles(), 'data-rrweb-id': HTML_ELEMENT_ID },\n                        id: HTML_ELEMENT_ID,\n                        childNodes: [\n                            {\n                                type: NodeType.Element,\n                                tagName: 'head',\n                                attributes: { 'data-rrweb-id': HEAD_ID },\n                                id: HEAD_ID,\n                                childNodes: [makeCSSReset(conversionContext)],\n                            },\n                            {\n                                type: NodeType.Element,\n                                tagName: 'body',\n                                attributes: { style: makeBodyStyles(), 'data-rrweb-id': BODY_ID },\n                                id: BODY_ID,\n                                childNodes: [\n                                    // in the order they should stack if they ever clash\n                                    // lower is higher in the stacking context\n                                    ...nodeGroups.appNodes,\n                                    makeKeyboardParent(),\n                                    nodeGroups.navBarNode,\n                                    nodeGroups.statusBarNode,\n                                ],\n                            },\n                        ],\n                    },\n                ],\n                id: DOCUMENT_ID,\n            },\n            initialOffset: {\n                top: 0,\n                left: 0,\n            },\n        },\n    }\n}\n\nfunction makeCSSReset(context: ConversionContext): serializedNodeWithId {\n    // we need to normalize CSS so browsers don't do unexpected things\n    return {\n        type: NodeType.Element,\n        tagName: 'style',\n        attributes: {\n            type: 'text/css',\n        },\n        id: context.idSequence.next().value,\n        childNodes: [\n            {\n                type: NodeType.Text,\n                textContent: `\n                    body {\n                      margin: unset;\n                    }\n                    input, button, select, textarea {\n                        font: inherit;\n                        margin: 0;\n                        padding: 0;\n                        border: 0;\n                        outline: 0;\n                        background: transparent;\n                        padding-block: 0 !important;\n                    }\n                    .input:focus {\n                        outline: none;\n                    }\n                    img {\n                      border-style: none;\n                    }\n                `,\n                id: context.idSequence.next().value,\n            },\n        ],\n    }\n}\n", "// copied from rrweb-snapshot, not included in rrweb types\nimport { customEvent, EventType, IncrementalSource, removedNodeMutation } from '@posthog/rrweb-types'\n\nexport enum NodeType {\n    Document = 0,\n    DocumentType = 1,\n    Element = 2,\n    Text = 3,\n    CDATA = 4,\n    Comment = 5,\n}\n\nexport type documentNode = {\n    type: NodeType.Document\n    childNodes: serializedNodeWithId[]\n    compatMode?: string\n}\n\nexport type documentTypeNode = {\n    type: NodeType.DocumentType\n    name: string\n    publicId: string\n    systemId: string\n}\n\nexport type attributes = {\n    [key: string]: string | number | true | null\n}\n\nexport type elementNode = {\n    type: NodeType.Element\n    tagName: string\n    attributes: attributes\n    childNodes: serializedNodeWithId[]\n    isSVG?: true\n    needBlock?: boolean\n    // This is a custom element or not.\n    isCustom?: true\n}\n\nexport type textNode = {\n    type: NodeType.Text\n    textContent: string\n    isStyle?: true\n}\n\nexport type cdataNode = {\n    type: NodeType.CDATA\n    textContent: ''\n}\n\nexport type commentNode = {\n    type: NodeType.Comment\n    textContent: string\n}\n\nexport type serializedNode = (documentNode | documentTypeNode | elementNode | textNode | cdataNode | commentNode) & {\n    rootId?: number\n    isShadowHost?: boolean\n    isShadow?: boolean\n}\n\nexport type serializedNodeWithId = serializedNode & { id: number }\n\n// end copied section\n\nexport type MobileNodeType =\n    | 'text'\n    | 'image'\n    | 'screenshot'\n    | 'rectangle'\n    | 'placeholder'\n    | 'web_view'\n    | 'input'\n    | 'div'\n    | 'radio_group'\n    | 'status_bar'\n    | 'navigation_bar'\n\nexport type MobileStyles = {\n    /**\n     * @description maps to CSS color. Accepts any valid CSS color value. Expects a #RGB value e.g. #000 or #000000\n     */\n    color?: string\n    /**\n     * @description maps to CSS background-color. Accepts any valid CSS color value. Expects a #RGB value e.g. #000 or #000000\n     */\n    backgroundColor?: string\n    /**\n     * @description if provided this will be used as a base64 encoded image source for the backgroundImage css property, with no other attributes it is assumed to be a PNG\n     */\n    backgroundImage?: string\n    /**\n     * @description can be used alongside the background image property to specify how the image is rendered. Accepts a subset of the valid values for CSS background-size property. If not provided (and backgroundImage is present) defaults to 'auto'\n     */\n    backgroundSize?: 'contain' | 'cover' | 'auto'\n    /**\n     * @description if borderWidth is present, then border style is assumed to be solid\n     */\n    borderWidth?: string | number\n    /**\n     * @description if borderRadius is present, then border style is assumed to be solid\n     */\n    borderRadius?: string | number\n    /**\n     * @description if borderColor is present, then border style is assumed to be solid\n     */\n    borderColor?: string\n    /**\n     * @description vertical alignment with respect to its parent\n     */\n    verticalAlign?: 'top' | 'bottom' | 'center'\n    /**\n     * @description horizontal alignment with respect to its parent\n     */\n    horizontalAlign?: 'left' | 'right' | 'center'\n    /**\n     * @description maps to CSS font-size. Accepts any valid CSS font-size value. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px\n     */\n    fontSize?: string | number\n    /**\n     * @description maps to CSS font-family. Accepts any valid CSS font-family value.\n     */\n    fontFamily?: string\n    /**\n     * @description maps to CSS padding-left. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px\n     */\n    paddingLeft?: string | number\n    /**\n     * @description maps to CSS padding-right. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px\n     */\n    paddingRight?: string | number\n    /**\n     * @description maps to CSS padding-top. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px\n     */\n    paddingTop?: string | number\n    /**\n     * @description maps to CSS padding-bottom. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px\n     */\n    paddingBottom?: string | number\n}\n\ntype wireframeBase = {\n    id: number\n    /**\n     * @description x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0\n     */\n    x?: number\n    y?: number\n    /*\n     * @description the width dimension of the element, either '100vw' i.e. viewport width. Or a value in pixels. You can omit the unit when specifying pixels.\n     */\n    width: number | '100vw'\n    /*\n     * @description the height dimension of the element, the only accepted units is pixels. You can omit the unit.\n     */\n    height: number\n    childWireframes?: wireframe[]\n    type: MobileNodeType\n    style?: MobileStyles\n}\n\nexport type wireframeInputBase = wireframeBase & {\n    type: 'input'\n    /**\n     * @description for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\n     */\n    disabled: boolean\n}\n\nexport type wireframeCheckBox = wireframeInputBase & {\n    inputType: 'checkbox'\n    /**\n     * @description for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input checked>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\n     */\n    checked: boolean\n    label?: string\n}\n\nexport type wireframeToggle = wireframeInputBase & {\n    inputType: 'toggle'\n    checked: boolean\n    label?: string\n}\n\nexport type wireframeRadioGroup = wireframeBase & {\n    type: 'radio_group'\n}\n\nexport type wireframeRadio = wireframeInputBase & {\n    inputType: 'radio'\n    /**\n     * @description for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input checked>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.\n     */\n    checked: boolean\n    label?: string\n}\n\nexport type wireframeInput = wireframeInputBase & {\n    inputType: 'text' | 'password' | 'email' | 'number' | 'search' | 'tel' | 'url'\n    value?: string\n}\n\nexport type wireframeSelect = wireframeInputBase & {\n    inputType: 'select'\n    value?: string\n    options?: string[]\n}\n\nexport type wireframeTextArea = wireframeInputBase & {\n    inputType: 'text_area'\n    value?: string\n}\n\nexport type wireframeButton = wireframeInputBase & {\n    inputType: 'button'\n    /**\n     * @description this is the text that is displayed on the button, if not sent then you must send childNodes with the button content\n     */\n    value?: string\n}\n\nexport type wireframeProgress = wireframeInputBase & {\n    inputType: 'progress'\n    /**\n     * @description This attribute specifies how much of the task that has been completed. It must be a valid floating point number between 0 and max, or between 0 and 1 if max is omitted. If there is no value attribute, the progress bar is indeterminate; this indicates that an activity is ongoing with no indication of how long it is expected to take. When bar style is rating this is the number of filled stars.\n     */\n    value?: number\n    /**\n     * @description The max attribute, if present, must have a value greater than 0 and be a valid floating point number. The default value is 1. When bar style is rating this is the number of stars.\n     */\n    max?: number\n    style?: MobileStyles & {\n        bar: 'horizontal' | 'circular' | 'rating'\n    }\n}\n\n// these are grouped as a type so that we can easily use them as function parameters\nexport type wireframeInputComponent =\n    | wireframeCheckBox\n    | wireframeRadio\n    | wireframeInput\n    | wireframeSelect\n    | wireframeTextArea\n    | wireframeButton\n    | wireframeProgress\n    | wireframeToggle\n\nexport type wireframeText = wireframeBase & {\n    type: 'text'\n    text: string\n}\n\nexport type wireframeImage = wireframeBase & {\n    type: 'image'\n    /**\n     * @description this will be used as base64 encoded image source, with no other attributes it is assumed to be a PNG, if omitted a placeholder is rendered\n     */\n    base64?: string\n}\n\n/**\n * @description a screenshot behaves exactly like an image, but it is expected to be a screenshot of the screen at the time of the event, when sent as a mutation it must always attached to the root of the playback, when sent as an initial snapshot it must be sent as the first or only snapshot so that it attaches to the body of the playback\n */\nexport type wireframeScreenshot = wireframeImage & {\n    type: 'screenshot'\n}\n\nexport type wireframeRectangle = wireframeBase & {\n    type: 'rectangle'\n}\n\nexport type wireframeWebView = wireframeBase & {\n    type: 'web_view'\n    url?: string\n}\n\nexport type wireframePlaceholder = wireframeBase & {\n    type: 'placeholder'\n    label?: string\n}\n\nexport type wireframeDiv = wireframeBase & {\n    /*\n     * @description this is the default type, if no type is specified then it is assumed to be a div\n     */\n    type: 'div'\n}\n\n/**\n * @description the status bar respects styling and positioning, but it is expected to be at the top of the screen with limited styling and no child elements\n */\nexport type wireframeStatusBar = wireframeBase & {\n    type: 'status_bar'\n}\n\n/**\n * @description the navigation bar respects styling and positioning, but it is expected to be at the bottom of the screen with limited styling and no child elements\n */\nexport type wireframeNavigationBar = wireframeBase & {\n    type: 'navigation_bar'\n}\n\nexport type wireframe =\n    | wireframeText\n    | wireframeImage\n    | wireframeScreenshot\n    | wireframeRectangle\n    | wireframeDiv\n    | wireframeInputComponent\n    | wireframeRadioGroup\n    | wireframeWebView\n    | wireframePlaceholder\n    | wireframeStatusBar\n    | wireframeNavigationBar\n\n// the rrweb full snapshot event type, but it contains wireframes not html\nexport type fullSnapshotEvent = {\n    type: EventType.FullSnapshot\n    data: {\n        /**\n         * @description This mimics the RRWeb full snapshot event type, except instead of reporting a serialized DOM it reports a wireframe representation of the screen.\n         */\n        wireframes: wireframe[]\n        initialOffset: {\n            top: number\n            left: number\n        }\n    }\n}\n\nexport type incrementalSnapshotEvent =\n    | {\n          type: EventType.IncrementalSnapshot\n          data: any // keeps a loose incremental type so that we can accept any rrweb incremental snapshot event type\n      }\n    | MobileIncrementalSnapshotEvent\n\nexport type MobileNodeMutation = {\n    parentId: number\n    wireframe: wireframe\n}\n\nexport type MobileNodeMutationData = {\n    source: IncrementalSource.Mutation\n    /**\n     * @description An update is implemented as a remove and then an add, so the updates array contains the ID of the removed node and the wireframe for the added node\n     */\n    updates?: MobileNodeMutation[]\n    adds?: MobileNodeMutation[]\n    /**\n     * @description A mobile remove is identical to a web remove\n     */\n    removes?: removedNodeMutation[]\n}\n\nexport type MobileIncrementalSnapshotEvent = {\n    type: EventType.IncrementalSnapshot\n    /**\n     * @description This sits alongside the RRWeb incremental snapshot event type, mobile replay can send any of the RRWeb incremental snapshot event types, which will be passed unchanged to the player - for example to send touch events. removed node mutations are passed unchanged to the player.\n     */\n    data: MobileNodeMutationData\n}\n\nexport type metaEvent = {\n    type: EventType.Meta\n    data: {\n        href?: string\n        width: number\n        height: number\n    }\n}\n\n// this is a custom event _but_ rrweb only types tag as string, and we want to be more specific\nexport type keyboardEvent = {\n    type: EventType.Custom\n    data: {\n        tag: 'keyboard'\n        payload:\n            | {\n                  open: true\n                  styles?: MobileStyles\n                  /**\n                   * @description x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present then the keyboard is at the bottom of the screen\n                   */\n                  x?: number\n                  y?: number\n                  /*\n                   * @description the height dimension of the keyboard, the only accepted units is pixels. You can omit the unit.\n                   */\n                  height: number\n                  /*\n                   * @description the width dimension of the keyboard, the only accepted units is pixels. You can omit the unit. If not present defaults to width of the viewport\n                   */\n                  width?: number\n              }\n            | { open: false }\n    }\n}\n\nexport type mobileEvent = fullSnapshotEvent | metaEvent | customEvent | incrementalSnapshotEvent | keyboardEvent\n\nexport type mobileEventWithTime = mobileEvent & {\n    timestamp: number\n    delay?: number\n}\n", "import {\n    keyboardEvent,\n    NodeType,\n    serializedNodeWithId,\n    wireframeNavigationBar,\n    wireframeStatusBar,\n} from '../mobile.types'\nimport { isLight } from './colors'\nimport {\n    _isPositiveInteger,\n    BACKGROUND,\n    KEYBOARD_ID,\n    makePlaceholderElement,\n    NAVIGATION_BAR_ID,\n    STATUS_BAR_ID,\n} from './transformers'\nimport { ConversionContext, ConversionResult } from './types'\nimport { asStyleString, makeStylesString } from './wireframeStyle'\n\nexport let navigationBackgroundColor: string | undefined = undefined\nexport let navigationColor: string | undefined = undefined\n\nfunction spacerDiv(idSequence: Generator<number>): serializedNodeWithId {\n    const spacerId = idSequence.next().value\n    return {\n        type: NodeType.Element,\n        tagName: 'div',\n        attributes: {\n            style: 'width: 5px;',\n            'data-rrweb-id': spacerId,\n        },\n        id: spacerId,\n        childNodes: [],\n    }\n}\n\nfunction makeFakeNavButton(icon: string, context: ConversionContext): serializedNodeWithId {\n    return {\n        type: NodeType.Element,\n        tagName: 'div',\n        attributes: {},\n        id: context.idSequence.next().value,\n        childNodes: [\n            {\n                type: NodeType.Text,\n                textContent: icon,\n                id: context.idSequence.next().value,\n            },\n        ],\n    }\n}\n\nexport function makeNavigationBar(\n    wireframe: wireframeNavigationBar,\n    _children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    const _id = wireframe.id || NAVIGATION_BAR_ID\n\n    const backArrowTriangle = makeFakeNavButton('\u25C0', context)\n    const homeCircle = makeFakeNavButton('\u26AA', context)\n    const screenButton = makeFakeNavButton('\u2B1C\uFE0F', context)\n\n    navigationBackgroundColor = wireframe.style?.backgroundColor\n    navigationColor = isLight(navigationBackgroundColor || BACKGROUND) ? 'black' : 'white'\n\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                style: asStyleString([\n                    makeStylesString(wireframe),\n                    'display:flex',\n                    'flex-direction:row',\n                    'align-items:center',\n                    'justify-content:space-around',\n                    'color:' + navigationColor,\n                ]),\n                'data-rrweb-id': _id,\n            },\n            id: _id,\n            childNodes: [backArrowTriangle, homeCircle, screenButton],\n        },\n        context,\n    }\n}\n\n/**\n * tricky: we need to accept children because that's the interface of converters, but we don't use them\n */\nexport function makeStatusBar(\n    wireframe: wireframeStatusBar,\n    _children: serializedNodeWithId[],\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> {\n    const clockId = context.idSequence.next().value\n    // convert the wireframe timestamp to a date time, then get just the hour and minute of the time from that\n    const clockTime = context.timestamp\n        ? new Date(context.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n        : ''\n\n    const clockFontColor = isLight(wireframe.style?.backgroundColor || '#ffffff') ? 'black' : 'white'\n\n    const clock: serializedNodeWithId = {\n        type: NodeType.Element,\n        tagName: 'div',\n        attributes: {\n            'data-rrweb-id': clockId,\n        },\n        id: clockId,\n        childNodes: [\n            {\n                type: NodeType.Text,\n                textContent: clockTime,\n                id: context.idSequence.next().value,\n            },\n        ],\n    }\n\n    return {\n        result: {\n            type: NodeType.Element,\n            tagName: 'div',\n            attributes: {\n                style: asStyleString([\n                    makeStylesString(wireframe, { color: clockFontColor }),\n                    'display:flex',\n                    'flex-direction:row',\n                    'align-items:center',\n                ]),\n                'data-rrweb-id': STATUS_BAR_ID,\n            },\n            id: STATUS_BAR_ID,\n            childNodes: [spacerDiv(context.idSequence), clock],\n        },\n        context,\n    }\n}\n\nexport function makeOpenKeyboardPlaceholder(\n    mobileCustomEvent: keyboardEvent & {\n        timestamp: number\n        delay?: number\n    },\n    context: ConversionContext\n): ConversionResult<serializedNodeWithId> | null {\n    if (!mobileCustomEvent.data.payload.open) {\n        return null\n    }\n\n    const shouldAbsolutelyPosition =\n        _isPositiveInteger(mobileCustomEvent.data.payload.x) || _isPositiveInteger(mobileCustomEvent.data.payload.y)\n\n    return makePlaceholderElement(\n        {\n            id: KEYBOARD_ID,\n            type: 'placeholder',\n            label: 'keyboard',\n            height: mobileCustomEvent.data.payload.height,\n            width: _isPositiveInteger(mobileCustomEvent.data.payload.width)\n                ? mobileCustomEvent.data.payload.width\n                : '100vw',\n            style: {\n                backgroundColor: navigationBackgroundColor,\n                color: navigationBackgroundColor ? navigationColor : undefined,\n            },\n        },\n        [],\n        {\n            timestamp: context.timestamp,\n            idSequence: context.idSequence,\n            styleOverride: {\n                ...(shouldAbsolutelyPosition ? {} : { bottom: true }),\n            },\n        }\n    )\n}\n", "// from https://gist.github.com/t1grok/a0f6d04db569890bcb57\n\ninterface rgb {\n    r: number\n    g: number\n    b: number\n}\ninterface yuv {\n    y: number\n    u: number\n    v: number\n}\n\nfunction hexToRgb(hexColor: string): rgb | null {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i\n    hexColor = hexColor.replace(shorthandRegex, function (_, r, g, b) {\n        return r + r + g + g + b + b\n    })\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hexColor)\n    return result\n        ? {\n              r: parseInt(result[1], 16),\n              g: parseInt(result[2], 16),\n              b: parseInt(result[3], 16),\n          }\n        : null\n}\n\nfunction rgbToYuv(rgbColor: rgb): yuv {\n    let y, u, v\n\n    y = rgbColor.r * 0.299 + rgbColor.g * 0.587 + rgbColor.b * 0.114\n    u = rgbColor.r * -0.168736 + rgbColor.g * -0.331264 + rgbColor.b * 0.5 + 128\n    v = rgbColor.r * 0.5 + rgbColor.g * -0.418688 + rgbColor.b * -0.081312 + 128\n\n    y = Math.floor(y)\n    u = Math.floor(u)\n    v = Math.floor(v)\n\n    return { y: y, u: u, v: v }\n}\n\nexport const isLight = (hexColor: string): boolean => {\n    const rgbColor = hexToRgb(hexColor)\n    if (!rgbColor) {\n        return false\n    }\n    const yuvColor = rgbToYuv(rgbColor)\n    return yuvColor.y > 128\n}\n", "import { wireframe, wireframeProgress } from '../mobile.types'\nimport { dataURIOrPNG } from './transformers'\nimport { StyleOverride } from './types'\n\nfunction ensureTrailingSemicolon(styles: string): string {\n    return styles.endsWith(';') ? styles : styles + ';'\n}\n\nfunction stripTrailingSemicolon(styles: string): string {\n    return styles.endsWith(';') ? styles.slice(0, -1) : styles\n}\n\nexport function asStyleString(styleParts: string[]): string {\n    if (styleParts.length === 0) {\n        return ''\n    }\n    return ensureTrailingSemicolon(\n        styleParts\n            .map(stripTrailingSemicolon)\n            .filter((x) => !!x)\n            .join(';')\n    )\n}\n\nfunction isNumber(candidate: unknown): candidate is number {\n    return typeof candidate === 'number'\n}\n\nfunction isString(candidate: unknown): candidate is string {\n    return typeof candidate === 'string'\n}\n\nfunction isUnitLike(candidate: unknown): candidate is string | number {\n    return isNumber(candidate) || (isString(candidate) && candidate.length > 0)\n}\n\nfunction ensureUnit(value: string | number): string {\n    return isNumber(value) ? `${value}px` : value.replace(/px$/g, '') + 'px'\n}\n\nfunction makeBorderStyles(wireframe: wireframe, styleOverride?: StyleOverride): string {\n    const styleParts: string[] = []\n\n    const combinedStyles = {\n        ...wireframe.style,\n        ...styleOverride,\n    }\n\n    if (isUnitLike(combinedStyles.borderWidth)) {\n        const borderWidth = ensureUnit(combinedStyles.borderWidth)\n        styleParts.push(`border-width: ${borderWidth}`)\n    }\n    if (isUnitLike(combinedStyles.borderRadius)) {\n        const borderRadius = ensureUnit(combinedStyles.borderRadius)\n        styleParts.push(`border-radius: ${borderRadius}`)\n    }\n    if (combinedStyles?.borderColor) {\n        styleParts.push(`border-color: ${combinedStyles.borderColor}`)\n    }\n\n    if (styleParts.length > 0) {\n        styleParts.push(`border-style: solid`)\n    }\n\n    return asStyleString(styleParts)\n}\n\nexport function makeDimensionStyles(wireframe: wireframe): string {\n    const styleParts: string[] = []\n\n    if (wireframe.width === '100vw') {\n        styleParts.push(`width: 100vw`)\n    } else if (isNumber(wireframe.width)) {\n        styleParts.push(`width: ${ensureUnit(wireframe.width)}`)\n    }\n\n    if (isNumber(wireframe.height)) {\n        styleParts.push(`height: ${ensureUnit(wireframe.height)}`)\n    }\n\n    return asStyleString(styleParts)\n}\n\nexport function makePositionStyles(wireframe: wireframe, styleOverride?: StyleOverride): string {\n    const styleParts: string[] = []\n\n    styleParts.push(makeDimensionStyles(wireframe))\n\n    if (styleOverride?.bottom) {\n        styleParts.push(`bottom: 0`)\n        styleParts.push(`position: fixed`)\n    } else {\n        const posX = wireframe.x || 0\n        const posY = wireframe.y || 0\n        if (isNumber(posX) || isNumber(posY)) {\n            styleParts.push(`position: fixed`)\n            if (isNumber(posX)) {\n                styleParts.push(`left: ${ensureUnit(posX)}`)\n            }\n            if (isNumber(posY)) {\n                styleParts.push(`top: ${ensureUnit(posY)}`)\n            }\n        }\n    }\n\n    if (styleOverride?.['z-index']) {\n        styleParts.push(`z-index: ${styleOverride['z-index']}`)\n    }\n\n    return asStyleString(styleParts)\n}\n\nfunction makeLayoutStyles(wireframe: wireframe, styleOverride?: StyleOverride): string {\n    const styleParts: string[] = []\n\n    const combinedStyles = {\n        ...wireframe.style,\n        ...styleOverride,\n    }\n\n    if (combinedStyles.verticalAlign) {\n        styleParts.push(\n            `align-items: ${{ top: 'flex-start', center: 'center', bottom: 'flex-end' }[combinedStyles.verticalAlign]}`\n        )\n    }\n    if (combinedStyles.horizontalAlign) {\n        styleParts.push(\n            `justify-content: ${\n                { left: 'flex-start', center: 'center', right: 'flex-end' }[combinedStyles.horizontalAlign]\n            }`\n        )\n    }\n\n    if (styleParts.length) {\n        styleParts.push(`display: flex`)\n    }\n\n    if (isUnitLike(combinedStyles.paddingLeft)) {\n        styleParts.push(`padding-left: ${ensureUnit(combinedStyles.paddingLeft)}`)\n    }\n    if (isUnitLike(combinedStyles.paddingRight)) {\n        styleParts.push(`padding-right: ${ensureUnit(combinedStyles.paddingRight)}`)\n    }\n    if (isUnitLike(combinedStyles.paddingTop)) {\n        styleParts.push(`padding-top: ${ensureUnit(combinedStyles.paddingTop)}`)\n    }\n    if (isUnitLike(combinedStyles.paddingBottom)) {\n        styleParts.push(`padding-bottom: ${ensureUnit(combinedStyles.paddingBottom)}`)\n    }\n\n    return asStyleString(styleParts)\n}\n\nfunction makeFontStyles(wireframe: wireframe, styleOverride?: StyleOverride): string {\n    const styleParts: string[] = []\n\n    const combinedStyles = {\n        ...wireframe.style,\n        ...styleOverride,\n    }\n\n    if (isUnitLike(combinedStyles.fontSize)) {\n        styleParts.push(`font-size: ${ensureUnit(combinedStyles?.fontSize)}`)\n    }\n\n    if (combinedStyles.fontFamily) {\n        styleParts.push(`font-family: ${combinedStyles.fontFamily}`)\n    }\n\n    return asStyleString(styleParts)\n}\n\nexport function makeIndeterminateProgressStyles(wireframe: wireframeProgress, styleOverride?: StyleOverride): string {\n    const combinedStyles = {\n        ...wireframe.style,\n        ...styleOverride,\n    }\n\n    return asStyleString([\n        makeBackgroundStyles(wireframe, styleOverride),\n        makePositionStyles(wireframe),\n        `border: 4px solid ${combinedStyles.borderColor || combinedStyles.color || 'transparent'};`,\n        `border-radius: 50%;border-top: 4px solid #fff;`,\n        `animation: spin 2s linear infinite;`,\n    ])\n}\n\nexport function makeDeterminateProgressStyles(wireframe: wireframeProgress, styleOverride?: StyleOverride): string {\n    const combinedStyles = {\n        ...wireframe.style,\n        ...styleOverride,\n    }\n\n    const radialGradient = `radial-gradient(closest-side, white 80%, transparent 0 99.9%, white 0)`\n    const conicGradient = `conic-gradient(${combinedStyles.color || 'black'} calc(${wireframe.value} * 1%), ${\n        combinedStyles.backgroundColor\n    } 0)`\n\n    return asStyleString([\n        makeBackgroundStyles(wireframe, styleOverride),\n        makePositionStyles(wireframe),\n        'border-radius: 50%',\n\n        `background: ${radialGradient}, ${conicGradient}`,\n    ])\n}\n\n/**\n * normally use makeStylesString instead, but sometimes you need styles without any colors applied\n * */\nexport function makeMinimalStyles(wireframe: wireframe, styleOverride?: StyleOverride): string {\n    return asStyleString([\n        makePositionStyles(wireframe, styleOverride),\n        makeLayoutStyles(wireframe, styleOverride),\n        makeFontStyles(wireframe, styleOverride),\n    ])\n}\n\nexport function makeBackgroundStyles(wireframe: wireframe, styleOverride?: StyleOverride): string {\n    let styleParts: string[] = []\n\n    const combinedStyles = {\n        ...wireframe.style,\n        ...styleOverride,\n    }\n\n    if (combinedStyles.backgroundColor) {\n        styleParts.push(`background-color: ${combinedStyles.backgroundColor}`)\n    }\n\n    if (combinedStyles.backgroundImage) {\n        const backgroundImageURL = combinedStyles.backgroundImage.startsWith('url(')\n            ? combinedStyles.backgroundImage\n            : `url('${dataURIOrPNG(combinedStyles.backgroundImage)}')`\n        styleParts = styleParts.concat([\n            `background-image: ${backgroundImageURL}`,\n            `background-size: ${combinedStyles.backgroundSize || 'contain'}`,\n            `background-repeat: ${combinedStyles.backgroundRepeat || 'no-repeat'}`,\n        ])\n    }\n\n    return asStyleString(styleParts)\n}\n\nexport function makeColorStyles(wireframe: wireframe, styleOverride?: StyleOverride): string {\n    const combinedStyles = {\n        ...wireframe.style,\n        ...styleOverride,\n    }\n\n    const styleParts = [makeBackgroundStyles(wireframe, styleOverride), makeBorderStyles(wireframe, styleOverride)]\n    if (combinedStyles.color) {\n        styleParts.push(`color: ${combinedStyles.color}`)\n    }\n\n    return asStyleString(styleParts)\n}\n\nexport function makeStylesString(wireframe: wireframe, styleOverride?: StyleOverride): string {\n    return asStyleString([makeColorStyles(wireframe, styleOverride), makeMinimalStyles(wireframe, styleOverride)])\n}\n\nexport function makeHTMLStyles(): string {\n    return 'height: 100vh; width: 100vw;'\n}\n\nexport function makeBodyStyles(): string {\n    return 'height: 100vh; width: 100vw;'\n}\n"],
  "mappings": "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",
  "names": ["init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_ajv", "rr_mobile_schema_default", "rr_web_schema_default", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "hexToRgb", "hexColor", "shorthandRegex", "_", "r", "g", "b", "result", "rgbToYuv", "rgbColor", "y", "u", "v", "isLight", "init_dirname", "init_buffer", "init_process", "ensureTrailingSemicolon", "styles", "stripTrailingSemicolon", "asStyleString", "styleParts", "x", "isNumber", "candidate", "isString", "isUnitLike", "ensureUnit", "value", "makeBorderStyles", "wireframe", "styleOverride", "combinedStyles", "borderWidth", "borderRadius", "makeDimensionStyles", "makePositionStyles", "posX", "posY", "makeLayoutStyles", "makeFontStyles", "makeIndeterminateProgressStyles", "makeBackgroundStyles", "makeDeterminateProgressStyles", "radialGradient", "conicGradient", "makeMinimalStyles", "backgroundImageURL", "dataURIOrPNG", "makeColorStyles", "makeStylesString", "makeHTMLStyles", "makeBodyStyles", "navigationBackgroundColor", "navigationColor", "spacerDiv", "idSequence", "spacerId", "makeFakeNavButton", "icon", "context", "makeNavigationBar", "wireframe", "_children", "_id", "NAVIGATION_BAR_ID", "backArrowTriangle", "homeCircle", "screenButton", "isLight", "BACKGROUND", "asStyleString", "makeStylesString", "makeStatusBar", "clockId", "clockTime", "clockFontColor", "clock", "STATUS_BAR_ID", "makeOpenKeyboardPlaceholder", "mobileCustomEvent", "shouldAbsolutelyPosition", "_isPositiveInteger", "makePlaceholderElement", "KEYBOARD_ID", "BACKGROUND", "FOREGROUND", "ids", "i", "globalIdSequence", "DOCUMENT_ID", "HTML_DOC_TYPE_ID", "HTML_ELEMENT_ID", "HEAD_ID", "BODY_ID", "NAVIGATION_BAR_PARENT_ID", "NAVIGATION_BAR_ID", "KEYBOARD_PARENT_ID", "KEYBOARD_ID", "STATUS_BAR_PARENT_ID", "STATUS_BAR_ID", "isKeyboardEvent", "x", "isObject", "_isPositiveInteger", "id", "_isNullish", "isRemovedNodeMutation", "makeCustomEvent", "mobileCustomEvent", "adds", "removes", "keyboardPlaceHolder", "makeOpenKeyboardPlaceholder", "captureMessage", "mutation", "IncrementalSource", "EventType", "makeMetaEvent", "mobileMetaEvent", "makeDivElement", "wireframe", "children", "context", "_id", "asStyleString", "makeStylesString", "makeTextElement", "childNodes", "makeWebViewElement", "labelledWireframe", "makePlaceholderElement", "txt", "PLACEHOLDER_SVG_DATA_IMAGE_URL", "dataURIOrPNG", "src", "makeImageElement", "inputAttributes", "attributes", "makeButtonElement", "buttonText", "makeSelectOptionElement", "option", "selected", "optionId", "makeSelectElement", "selectOptions", "optionContext", "conversion", "groupRadioButtons", "radioGroupName", "child", "makeRadioGroupElement", "makeStar", "title", "path", "svgId", "titleId", "pathId", "filledStar", "halfStar", "emptyStar", "makeRatingBar", "numberOfFilledStars", "numberOfHalfStars", "numberOfEmptyStars", "filledStars", "halfStars", "emptyStars", "ratingBarId", "ratingBar", "makeColorStyles", "makeProgressElement", "max", "value", "styleOverride", "stylingChildren", "wrappingDivId", "makeMinimalStyles", "makeDeterminateProgressStyles", "makeIndeterminateProgressStyles", "makeToggleParts", "togglePosition", "defaultColor", "sliderPartId", "handlePartId", "makeToggleElement", "isLabelled", "makePositionStyles", "makeLabelledInput", "theInputElement", "theLabel", "orderedChildren", "labelId", "makeInputElement", "makeRectangleElement", "chooseConverter", "converterType", "makeStatusBar", "makeNavigationBar", "convertWireframe", "convertWireframesFor", "wireframes", "result", "converted", "isMobileIncrementalSnapshotEvent", "data", "hasMutationSource", "updates", "hasUpdatedWireframe", "hasAddedWireframe", "chooseParentId", "nodeType", "providedParentId", "makeIncrementalAdd", "add", "addition", "flattenMutationAdds", "makeIncrementalRemoveForUpdate", "update", "isNode", "isNodeWithChildren", "cloneWithoutChildren", "cloned", "clonedNode", "flattened", "node", "newParentId", "dedupeMutations", "mutations", "seen", "toCompare", "makeIncrementalEvent", "mobileEvent", "addsContext", "updatesContext", "updateAdditions", "removal", "makeKeyboardParent", "makeStatusBarNode", "statusBar", "makeNavBarNode", "navigationBar", "stripBarsFromWireframe", "navBar", "wireframeToReturn", "childWireframe", "childStatusBar", "childNavBar", "stripBarsFromWireframes", "copiedNodes", "w", "matches", "makeFullEvent", "conversionContext", "appNodes", "nodeGroups", "makeHTMLStyles", "makeCSSReset", "makeBodyStyles", "ajv", "Ajv", "transformers", "makeFullEvent", "makeIncrementalEvent", "makeMetaEvent", "makeCustomEvent", "mobileSchemaValidator", "rr_mobile_schema_default", "webSchemaValidator", "ajv", "rr_web_schema_default", "couldBeEventWithTime", "x", "transformEventToWeb", "event", "validateTransformation", "result", "transformer", "transformers", "transformed", "validateAgainstWebSchema", "captureMessage", "e", "captureException", "transformToWeb", "mobileData", "acc", "data", "validationResult", "exports_default", "transformEventToWeb", "transformToWeb"]
}
