{
  "version": 3,
  "sources": ["../src/scenes/persons/PersonDeleteModal.tsx", "../src/queries/nodes/DataTable/DataTable.tsx", "../src/scenes/activity/explore/EventDetails.tsx", "../../products/llm_observability/frontend/ConversationDisplay/ConversationDisplay.tsx", "../src/queries/nodes/DataNode/DateRange.tsx", "../src/queries/nodes/DataNode/Reload.tsx", "../src/queries/nodes/DataNode/TestAccountFilters.tsx", "../src/queries/nodes/DataTable/BackToSource.tsx", "../src/queries/nodes/DataTable/ColumnConfigurator/ColumnConfigurator.tsx", "../src/queries/nodes/DataTable/ColumnConfigurator/columnConfiguratorLogic.tsx", "../src/queries/nodes/DataTable/defaultEventsQuery.ts", "../src/queries/nodes/DataTable/EventRowActions.tsx", "../src/queries/nodes/DataTable/InsightActorsQueryOptions.tsx", "../src/queries/nodes/DataTable/insightActorsQueryOptionsLogic.ts", "../src/queries/nodes/DataTable/SavedQueries.tsx", "../src/queries/nodes/EventsNode/EventName.tsx", "../src/scenes/actions/EventName.tsx", "../src/queries/nodes/EventsNode/EventPropertyFilters.tsx", "../src/queries/nodes/HogQLQuery/HogQLQueryEditor.tsx", "../src/queries/nodes/HogQLQuery/hogQLQueryEditorLogic.tsx", "../src/queries/nodes/Node/EditHogQLButton.tsx", "../src/queries/nodes/Node/OpenEditorButton.tsx", "../src/queries/nodes/PersonsNode/PersonPropertyFilters.tsx", "../src/queries/nodes/PersonsNode/PersonsSearch.tsx", "../src/queries/hooks/useDebouncedQuery.ts", "../src/queries/nodes/DataTable/DataTableOpenEditor.tsx", "../src/queries/schema-guards.ts", "../src/queries/schema.json"],
  "sourcesContent": ["import { LemonButton, LemonCheckbox, LemonModal, Link } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { useState } from 'react'\nimport { personDeleteModalLogic } from 'scenes/persons/personDeleteModalLogic'\n\nimport { PersonType } from '~/types'\n\nimport { asDisplay } from './person-utils'\n\nexport function PersonDeleteModal(): JSX.Element | null {\n    const { personDeleteModal } = useValues(personDeleteModalLogic)\n    const [isDeletionConfirmed, setIsDeletionConfirmed] = useState(false)\n    const { deletePerson, showPersonDeleteModal } = useActions(personDeleteModalLogic)\n\n    return (\n        <LemonModal\n            isOpen={!!personDeleteModal}\n            onClose={() => showPersonDeleteModal(null)}\n            title={`Are you sure you want to delete \"${asDisplay(personDeleteModal)}\"?`}\n            description={\n                <>\n                    <p>This action cannot be undone.</p>\n                    <p>\n                        If you want to re-use the distinct ids do NOT use delete person and instead use split IDs.\n                        Re-using deleted person's distinct ids is not supported and will result in bad data state.\n                    </p>\n                    <p>\n                        If you opt to delete the person and its corresponding events, the events will not be immediately\n                        removed. Instead these events will be deleted on a set schedule during non-peak usage times.{' '}\n                        <Link to=\"https://posthog.com/docs/privacy/data-deletion\" target=\"_blank\" className=\"font-bold\">\n                            Learn more\n                        </Link>\n                    </p>\n                    <LemonCheckbox\n                        onChange={(value) => setIsDeletionConfirmed(value)}\n                        checked={isDeletionConfirmed}\n                        className=\"mt-3\"\n                        label=\"I understand that re-using the same distinct_id will result in a bad state.\"\n                    />\n                </>\n            }\n            footer={\n                <>\n                    <LemonButton\n                        status=\"danger\"\n                        type=\"tertiary\"\n                        onClick={() => deletePerson(personDeleteModal as PersonType, true)}\n                        disabled={!isDeletionConfirmed}\n                        data-attr=\"delete-person-with-events\"\n                    >\n                        Delete person and all corresponding events\n                    </LemonButton>\n                    <LemonButton\n                        type=\"secondary\"\n                        onClick={() => showPersonDeleteModal(null)}\n                        data-attr=\"delete-person-cancel\"\n                    >\n                        Cancel\n                    </LemonButton>\n                    <LemonButton\n                        type=\"secondary\"\n                        status=\"danger\"\n                        onClick={() => deletePerson(personDeleteModal as PersonType, false)}\n                        disabled={!isDeletionConfirmed}\n                        data-attr=\"delete-person-no-events\"\n                    >\n                        Delete person\n                    </LemonButton>\n                </>\n            }\n        />\n    )\n}\n", "import './DataTable.scss'\n\nimport clsx from 'clsx'\nimport { BindLogic, useValues } from 'kea'\nimport { TaxonomicFilterGroupType } from 'lib/components/TaxonomicFilter/types'\nimport { TaxonomicPopover } from 'lib/components/TaxonomicPopover/TaxonomicPopover'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { LemonDivider } from 'lib/lemon-ui/LemonDivider'\nimport { LemonTable, LemonTableColumn } from 'lib/lemon-ui/LemonTable'\nimport { useCallback, useState } from 'react'\nimport { EventDetails } from 'scenes/activity/explore/EventDetails'\nimport { InsightEmptyState, InsightErrorState } from 'scenes/insights/EmptyStates'\nimport { PersonDeleteModal } from 'scenes/persons/PersonDeleteModal'\n\nimport { dataNodeLogic, DataNodeLogicProps } from '~/queries/nodes/DataNode/dataNodeLogic'\nimport { DateRange } from '~/queries/nodes/DataNode/DateRange'\nimport { ElapsedTime } from '~/queries/nodes/DataNode/ElapsedTime'\nimport { LoadNext } from '~/queries/nodes/DataNode/LoadNext'\nimport { Reload } from '~/queries/nodes/DataNode/Reload'\nimport { TestAccountFilters } from '~/queries/nodes/DataNode/TestAccountFilters'\nimport { BackToSource } from '~/queries/nodes/DataTable/BackToSource'\nimport { ColumnConfigurator } from '~/queries/nodes/DataTable/ColumnConfigurator/ColumnConfigurator'\nimport { DataTableExport } from '~/queries/nodes/DataTable/DataTableExport'\nimport { dataTableLogic, DataTableLogicProps, DataTableRow } from '~/queries/nodes/DataTable/dataTableLogic'\nimport { EventRowActions } from '~/queries/nodes/DataTable/EventRowActions'\nimport { InsightActorsQueryOptions } from '~/queries/nodes/DataTable/InsightActorsQueryOptions'\nimport { QueryFeature } from '~/queries/nodes/DataTable/queryFeatures'\nimport { renderColumn } from '~/queries/nodes/DataTable/renderColumn'\nimport { renderColumnMeta } from '~/queries/nodes/DataTable/renderColumnMeta'\nimport { SavedQueries } from '~/queries/nodes/DataTable/SavedQueries'\nimport {\n    extractExpressionComment,\n    getDataNodeDefaultColumns,\n    removeExpressionComment,\n} from '~/queries/nodes/DataTable/utils'\nimport { EventName } from '~/queries/nodes/EventsNode/EventName'\nimport { EventPropertyFilters } from '~/queries/nodes/EventsNode/EventPropertyFilters'\nimport { HogQLQueryEditor } from '~/queries/nodes/HogQLQuery/HogQLQueryEditor'\nimport { insightVizDataNodeKey } from '~/queries/nodes/InsightViz/InsightViz'\nimport { EditHogQLButton } from '~/queries/nodes/Node/EditHogQLButton'\nimport { OpenEditorButton } from '~/queries/nodes/Node/OpenEditorButton'\nimport { PersonPropertyFilters } from '~/queries/nodes/PersonsNode/PersonPropertyFilters'\nimport { PersonsSearch } from '~/queries/nodes/PersonsNode/PersonsSearch'\nimport {\n    ActorsQuery,\n    AnyResponseType,\n    DataTableNode,\n    EventsNode,\n    EventsQuery,\n    HogQLQuery,\n    PersonsNode,\n    SessionAttributionExplorerQuery,\n    TracesQuery,\n} from '~/queries/schema/schema-general'\nimport { QueryContext } from '~/queries/types'\nimport {\n    isActorsQuery,\n    isEventsQuery,\n    isHogQlAggregation,\n    isHogQLQuery,\n    isInsightActorsQuery,\n    taxonomicEventFilterToHogQL,\n    taxonomicPersonFilterToHogQL,\n} from '~/queries/utils'\nimport { EventType, InsightLogicProps } from '~/types'\n\nimport { DataTableOpenEditor } from './DataTableOpenEditor'\n\ninterface DataTableProps {\n    uniqueKey?: string | number\n    query: DataTableNode\n    setQuery: (query: DataTableNode) => void\n    /** Custom table columns */\n    context?: QueryContext<DataTableNode>\n    /* Cached Results are provided when shared or exported,\n    the data node logic becomes read only implicitly */\n    cachedResults?: AnyResponseType\n    // Override the data logic node key if needed\n    dataNodeLogicKey?: string\n    readOnly?: boolean\n}\n\nconst eventGroupTypes = [\n    TaxonomicFilterGroupType.HogQLExpression,\n    TaxonomicFilterGroupType.EventProperties,\n    TaxonomicFilterGroupType.PersonProperties,\n    TaxonomicFilterGroupType.EventFeatureFlags,\n]\nconst personGroupTypes = [TaxonomicFilterGroupType.HogQLExpression, TaxonomicFilterGroupType.PersonProperties]\n\nlet uniqueNode = 0\n\nexport function DataTable({\n    uniqueKey,\n    query,\n    setQuery,\n    context,\n    cachedResults,\n    readOnly,\n}: DataTableProps): JSX.Element {\n    const [uniqueNodeKey] = useState(() => uniqueNode++)\n    const [dataKey] = useState(() => `DataNode.${uniqueKey || uniqueNodeKey}`)\n    const insightProps: InsightLogicProps<DataTableNode> = context?.insightProps || {\n        dashboardItemId: `new-AdHoc.${dataKey}`,\n        dataNodeCollectionId: dataKey,\n    }\n    const vizKey = insightVizDataNodeKey(insightProps)\n    const dataNodeLogicProps: DataNodeLogicProps = {\n        query: query.source,\n        key: vizKey,\n        cachedResults: cachedResults,\n        dataNodeCollectionId: context?.insightProps?.dataNodeCollectionId || dataKey,\n        alwaysRefresh: context?.alwaysRefresh,\n    }\n    const builtDataNodeLogic = dataNodeLogic(dataNodeLogicProps)\n\n    const {\n        response,\n        responseLoading,\n        responseError,\n        queryCancelled,\n        nextDataLoading,\n        newDataLoading,\n        highlightedRows,\n        backToSourceQuery,\n    } = useValues(builtDataNodeLogic)\n\n    const dataTableLogicProps: DataTableLogicProps = {\n        query,\n        vizKey,\n        dataKey,\n        dataNodeLogicKey: dataNodeLogicProps.key,\n        context,\n    }\n    const { dataTableRows, columnsInQuery, columnsInResponse, queryWithDefaults, canSort, sourceFeatures } = useValues(\n        dataTableLogic(dataTableLogicProps)\n    )\n\n    const {\n        showActions,\n        showDateRange,\n        showTestAccountFilters,\n        showSearch,\n        showEventFilter,\n        showPropertyFilter,\n        showHogQLEditor,\n        showReload,\n        showExport,\n        showElapsedTime,\n        showColumnConfigurator,\n        showPersistentColumnConfigurator,\n        showSavedQueries,\n        expandable,\n        embedded,\n        showOpenEditorButton,\n        showResultsTable,\n        showTimings,\n    } = queryWithDefaults\n\n    const isReadOnly = !!readOnly\n\n    const eventActionsColumnShown =\n        showActions && sourceFeatures.has(QueryFeature.eventActionsColumn) && columnsInResponse?.includes('*')\n    const columnsInLemonTable = sourceFeatures.has(QueryFeature.columnsInResponse)\n        ? columnsInResponse ?? columnsInQuery\n        : columnsInQuery\n\n    const groupTypes = isActorsQuery(query.source) ? personGroupTypes : eventGroupTypes\n\n    const lemonColumns: LemonTableColumn<DataTableRow, any>[] = [\n        ...columnsInLemonTable.map((key, index) => ({\n            dataIndex: key as any,\n            ...renderColumnMeta(key, query, context),\n            render: function RenderDataTableColumn(_: any, { result, label }: DataTableRow, recordIndex: number) {\n                if (label) {\n                    if (index === (expandable ? 1 : 0)) {\n                        return {\n                            children: label,\n                            props: { colSpan: columnsInLemonTable.length + (eventActionsColumnShown ? 1 : 0) },\n                        }\n                    }\n                    return { props: { colSpan: 0 } }\n                } else if (result) {\n                    if (sourceFeatures.has(QueryFeature.resultIsArrayOfArrays)) {\n                        return renderColumn(key, result[index], result, recordIndex, query, setQuery, context)\n                    }\n                    return renderColumn(key, result[key], result, recordIndex, query, setQuery, context)\n                }\n            },\n            sorter: undefined, // using custom sorting code\n            more:\n                !isReadOnly && showActions && sourceFeatures.has(QueryFeature.selectAndOrderByColumns) ? (\n                    <>\n                        <div className=\"px-2 py-1\">\n                            <div className=\"font-mono font-bold\">{extractExpressionComment(key)}</div>\n                            {extractExpressionComment(key) !== removeExpressionComment(key) && (\n                                <div className=\"font-mono\">{removeExpressionComment(key)}</div>\n                            )}\n                        </div>\n                        <LemonDivider />\n                        <TaxonomicPopover\n                            groupType={TaxonomicFilterGroupType.HogQLExpression}\n                            value={key}\n                            groupTypes={groupTypes}\n                            metadataSource={query.source}\n                            renderValue={() => <>Edit column</>}\n                            type=\"tertiary\"\n                            fullWidth\n                            onChange={(v, g) => {\n                                const hogQl = isActorsQuery(query.source)\n                                    ? taxonomicPersonFilterToHogQL(g, v)\n                                    : taxonomicEventFilterToHogQL(g, v)\n                                if (setQuery && hogQl && sourceFeatures.has(QueryFeature.selectAndOrderByColumns)) {\n                                    // Typecasting to a query type with select and order_by fields.\n                                    // The actual query may or may not be an events query.\n                                    const source = query.source as EventsQuery\n                                    const columns = columnsInLemonTable ?? getDataNodeDefaultColumns(source)\n                                    const isAggregation = isHogQlAggregation(hogQl)\n                                    const isOrderBy = source.orderBy?.[0] === key\n                                    const isDescOrderBy = source.orderBy?.[0] === `${key} DESC`\n                                    setQuery({\n                                        ...query,\n                                        source: {\n                                            ...source,\n                                            select: columns\n                                                .map((s, i) => (i === index ? hogQl : s))\n                                                .filter((c) =>\n                                                    isAggregation ? c !== '*' && c !== 'person.$delete' : true\n                                                ),\n                                            orderBy:\n                                                isOrderBy || isDescOrderBy\n                                                    ? [isDescOrderBy ? `${hogQl} DESC` : hogQl]\n                                                    : source.orderBy,\n                                        },\n                                    })\n                                }\n                            }}\n                        />\n                        <LemonDivider />\n                        {canSort && key !== 'person.$delete' && key !== 'person' ? (\n                            <>\n                                <LemonButton\n                                    fullWidth\n                                    data-attr=\"datatable-sort-asc\"\n                                    onClick={() => {\n                                        setQuery?.({\n                                            ...query,\n                                            source: {\n                                                ...query.source,\n                                                orderBy: [key],\n                                            } as EventsQuery,\n                                        })\n                                    }}\n                                >\n                                    Sort ascending\n                                </LemonButton>\n                                <LemonButton\n                                    fullWidth\n                                    data-attr=\"datatable-sort-desc\"\n                                    onClick={() => {\n                                        setQuery?.({\n                                            ...query,\n                                            source: {\n                                                ...query.source,\n                                                orderBy: [`${key} DESC`],\n                                            } as EventsQuery,\n                                        })\n                                    }}\n                                >\n                                    Sort descending\n                                </LemonButton>\n                                <LemonDivider />\n                            </>\n                        ) : null}\n                        <TaxonomicPopover\n                            groupType={TaxonomicFilterGroupType.HogQLExpression}\n                            value=\"\"\n                            groupTypes={groupTypes}\n                            metadataSource={query.source}\n                            placeholder={<span className=\"not-italic\">Add column left</span>}\n                            data-attr=\"datatable-add-column-left\"\n                            type=\"tertiary\"\n                            fullWidth\n                            onChange={(v, g) => {\n                                const hogQl = isActorsQuery(query.source)\n                                    ? taxonomicPersonFilterToHogQL(g, v)\n                                    : taxonomicEventFilterToHogQL(g, v)\n                                if (setQuery && hogQl && sourceFeatures.has(QueryFeature.selectAndOrderByColumns)) {\n                                    const isAggregation = isHogQlAggregation(hogQl)\n                                    const source = query.source as EventsQuery\n                                    const columns = columnsInLemonTable ?? getDataNodeDefaultColumns(source)\n                                    setQuery({\n                                        ...query,\n                                        source: {\n                                            ...source,\n                                            select: [...columns.slice(0, index), hogQl, ...columns.slice(index)].filter(\n                                                (c) => (isAggregation ? c !== '*' && c !== 'person.$delete' : true)\n                                            ),\n                                        } as EventsQuery | ActorsQuery,\n                                    })\n                                }\n                            }}\n                        />\n                        <TaxonomicPopover\n                            groupType={TaxonomicFilterGroupType.HogQLExpression}\n                            value=\"\"\n                            groupTypes={groupTypes}\n                            metadataSource={query.source}\n                            placeholder={<span className=\"not-italic\">Add column right</span>}\n                            data-attr=\"datatable-add-column-right\"\n                            type=\"tertiary\"\n                            fullWidth\n                            onChange={(v, g) => {\n                                const hogQl = isActorsQuery(query.source)\n                                    ? taxonomicPersonFilterToHogQL(g, v)\n                                    : taxonomicEventFilterToHogQL(g, v)\n                                if (setQuery && hogQl && sourceFeatures.has(QueryFeature.selectAndOrderByColumns)) {\n                                    const isAggregation = isHogQlAggregation(hogQl)\n                                    const source = query.source as EventsQuery\n                                    const columns = columnsInLemonTable ?? getDataNodeDefaultColumns(source)\n                                    setQuery?.({\n                                        ...query,\n                                        source: {\n                                            ...source,\n                                            select: [\n                                                ...columns.slice(0, index + 1),\n                                                hogQl,\n                                                ...columns.slice(index + 1),\n                                            ].filter((c) =>\n                                                isAggregation ? c !== '*' && c !== 'person.$delete' : true\n                                            ),\n                                        } as EventsQuery | ActorsQuery,\n                                    })\n                                }\n                            }}\n                        />\n                        {columnsInQuery.filter((c) => c !== '*').length > 1 ? (\n                            <>\n                                <LemonDivider />\n                                <LemonButton\n                                    fullWidth\n                                    status=\"danger\"\n                                    data-attr=\"datatable-remove-column\"\n                                    onClick={() => {\n                                        const cleanColumnKey = removeExpressionComment(key)\n                                        const newSource: EventsQuery = {\n                                            ...(query.source as EventsQuery),\n                                            select: (query.source as EventsQuery).select.filter((_, i) => i !== index),\n                                            // remove the current column from orderBy if it's there\n                                            orderBy: (query.source as EventsQuery).orderBy?.find(\n                                                (orderKey) =>\n                                                    removeExpressionComment(orderKey) === cleanColumnKey ||\n                                                    removeExpressionComment(orderKey) === `-${cleanColumnKey}`\n                                            )\n                                                ? undefined\n                                                : (query.source as EventsQuery).orderBy,\n                                        }\n                                        setQuery?.({\n                                            ...query,\n                                            source: newSource,\n                                        })\n                                    }}\n                                >\n                                    Remove column\n                                </LemonButton>\n                            </>\n                        ) : null}\n                    </>\n                ) : undefined,\n        })),\n        ...(eventActionsColumnShown\n            ? [\n                  {\n                      dataIndex: '__more' as any,\n                      title: '',\n                      render: function RenderMore(_: any, { label, result }: DataTableRow) {\n                          if (label) {\n                              return { props: { colSpan: 0 } }\n                          }\n                          if (result && columnsInResponse?.includes('*')) {\n                              return <EventRowActions event={result[columnsInResponse.indexOf('*')]} />\n                          }\n                          return null\n                      },\n                      width: 0,\n                  },\n              ]\n            : []),\n    ].filter((column) => !query.hiddenColumns?.includes(column.dataIndex) && column.dataIndex !== '*')\n\n    const setQuerySource = useCallback(\n        (\n            source:\n                | EventsNode\n                | EventsQuery\n                | PersonsNode\n                | ActorsQuery\n                | HogQLQuery\n                | SessionAttributionExplorerQuery\n                | TracesQuery\n        ) => setQuery?.({ ...query, source }),\n        [setQuery, query]\n    )\n\n    const firstRowLeft = [\n        backToSourceQuery ? <BackToSource key=\"return-to-source\" /> : null,\n        backToSourceQuery && isActorsQuery(query.source) && isInsightActorsQuery(query.source.source) ? (\n            <InsightActorsQueryOptions\n                query={query.source.source}\n                setQuery={(q) =>\n                    setQuerySource({\n                        ...query.source,\n                        source: { ...(query.source as ActorsQuery).source, ...q },\n                    } as ActorsQuery)\n                }\n                key=\"source-query-options\"\n            />\n        ) : null,\n        showDateRange && sourceFeatures.has(QueryFeature.dateRangePicker) ? (\n            <DateRange\n                key=\"date-range\"\n                query={query.source as HogQLQuery | EventsQuery | SessionAttributionExplorerQuery | TracesQuery}\n                setQuery={setQuerySource}\n            />\n        ) : null,\n        showEventFilter && sourceFeatures.has(QueryFeature.eventNameFilter) ? (\n            <EventName key=\"event-name\" query={query.source as EventsQuery} setQuery={setQuerySource} />\n        ) : null,\n        showSearch && sourceFeatures.has(QueryFeature.personsSearch) ? (\n            <PersonsSearch key=\"persons-search\" query={query.source as PersonsNode} setQuery={setQuerySource} />\n        ) : null,\n        showPropertyFilter && sourceFeatures.has(QueryFeature.eventPropertyFilters) ? (\n            <EventPropertyFilters\n                key=\"event-property\"\n                query={query.source as EventsQuery | HogQLQuery | SessionAttributionExplorerQuery | TracesQuery}\n                setQuery={setQuerySource}\n                taxonomicGroupTypes={Array.isArray(showPropertyFilter) ? showPropertyFilter : undefined}\n            />\n        ) : null,\n        showPropertyFilter && sourceFeatures.has(QueryFeature.personPropertyFilters) ? (\n            <PersonPropertyFilters\n                key=\"person-property\"\n                query={query.source as PersonsNode}\n                setQuery={setQuerySource}\n            />\n        ) : null,\n    ].filter((x) => !!x)\n\n    const firstRowRight = [\n        showTestAccountFilters && sourceFeatures.has(QueryFeature.testAccountFilters) ? (\n            <TestAccountFilters key=\"test-account-filters\" query={query.source} setQuery={setQuerySource} />\n        ) : null,\n        showSavedQueries && sourceFeatures.has(QueryFeature.savedEventsQueries) ? (\n            <SavedQueries key=\"saved-queries\" query={query} setQuery={setQuery} />\n        ) : null,\n    ].filter((x) => !!x)\n\n    const secondRowLeft = [\n        showReload ? <Reload key=\"reload\" /> : null,\n        showElapsedTime ? <ElapsedTime key=\"elapsed-time\" showTimings={showTimings} /> : null,\n    ].filter((x) => !!x)\n\n    const secondRowRight = [\n        (showColumnConfigurator || showPersistentColumnConfigurator) &&\n        sourceFeatures.has(QueryFeature.columnConfigurator) ? (\n            <ColumnConfigurator key=\"column-configurator\" query={query} setQuery={setQuery} />\n        ) : null,\n        showExport ? <DataTableExport key=\"data-table-export\" query={query} setQuery={setQuery} /> : null,\n        showExport && showOpenEditorButton ? (\n            <DataTableOpenEditor key=\"data-table-open-editor\" query={query} setQuery={setQuery} />\n        ) : null,\n    ].filter((x) => !!x)\n\n    const showFirstRow = !isReadOnly && (firstRowLeft.length > 0 || firstRowRight.length > 0)\n    const showSecondRow = !isReadOnly && (secondRowLeft.length > 0 || secondRowRight.length > 0)\n    const inlineEditorButtonOnRow = showFirstRow ? 1 : showSecondRow ? 2 : 0\n\n    const editorButton = (\n        <>\n            <OpenEditorButton query={query} />\n            {response?.hogql ? <EditHogQLButton hogql={response.hogql} /> : null}\n        </>\n    )\n\n    // The editor button moved under \"export\". Show only if there's no export button.\n    if (!showExport && showOpenEditorButton && !isReadOnly) {\n        if (inlineEditorButtonOnRow === 1) {\n            firstRowRight.push(editorButton)\n        } else if (inlineEditorButtonOnRow === 2) {\n            secondRowRight.push(editorButton)\n        }\n    }\n\n    return (\n        <BindLogic logic={dataTableLogic} props={dataTableLogicProps}>\n            <BindLogic logic={dataNodeLogic} props={dataNodeLogicProps}>\n                <div className=\"relative w-full flex flex-col gap-4 flex-1 h-full\">\n                    {showHogQLEditor && isHogQLQuery(query.source) && !isReadOnly ? (\n                        <HogQLQueryEditor query={query.source} setQuery={setQuerySource} embedded={embedded} />\n                    ) : null}\n                    {showFirstRow && (\n                        <div className=\"flex gap-x-4 gap-y-2 items-center flex-wrap\">\n                            {firstRowLeft}\n                            {firstRowLeft.length > 0 && firstRowRight.length > 0 ? <div className=\"flex-1\" /> : null}\n                            {firstRowRight}\n                        </div>\n                    )}\n                    {showFirstRow && showSecondRow && <LemonDivider className=\"my-0\" />}\n                    {showSecondRow && (\n                        <div className=\"flex gap-4 justify-between flex-wrap\">\n                            <div className=\"flex gap-4 items-center\">{secondRowLeft}</div>\n                            <div className=\"flex gap-4 items-center\">{secondRowRight}</div>\n                        </div>\n                    )}\n                    {showOpenEditorButton && inlineEditorButtonOnRow === 0 && !isReadOnly ? (\n                        <div className=\"absolute right-0 z-10 p-1\">{editorButton}</div>\n                    ) : null}\n                    {showResultsTable && (\n                        <LemonTable\n                            className=\"DataTable\"\n                            loading={responseLoading && !nextDataLoading && !newDataLoading}\n                            columns={lemonColumns}\n                            embedded={embedded}\n                            key={\n                                [...(columnsInResponse ?? []), ...columnsInQuery].join(\n                                    '::'\n                                ) /* Bust the LemonTable cache when columns change */\n                            }\n                            dataSource={dataTableRows ?? []}\n                            rowKey={(_, rowIndex) => {\n                                return rowIndex\n                            }}\n                            sorting={null}\n                            useURLForSorting={false}\n                            emptyState={\n                                responseError ? (\n                                    sourceFeatures.has(QueryFeature.displayResponseError) ? (\n                                        <InsightErrorState\n                                            query={query}\n                                            excludeDetail\n                                            title={\n                                                queryCancelled\n                                                    ? 'The query was cancelled'\n                                                    : response && 'error' in response\n                                                    ? (response as any).error\n                                                    : responseError\n                                            }\n                                        />\n                                    ) : (\n                                        <InsightErrorState query={query} />\n                                    )\n                                ) : (\n                                    <InsightEmptyState\n                                        heading={context?.emptyStateHeading}\n                                        detail={context?.emptyStateDetail}\n                                    />\n                                )\n                            }\n                            expandable={\n                                expandable && columnsInResponse?.includes('*')\n                                    ? {\n                                          expandedRowRender: function renderExpand({ result }) {\n                                              if (isEventsQuery(query.source) && Array.isArray(result)) {\n                                                  return (\n                                                      <EventDetails\n                                                          event={result[columnsInResponse.indexOf('*')] ?? {}}\n                                                      />\n                                                  )\n                                              }\n                                              if (result && !Array.isArray(result)) {\n                                                  return <EventDetails event={result as EventType} />\n                                              }\n                                          },\n                                          rowExpandable: ({ result }) => !!result,\n                                          noIndent: true,\n                                      }\n                                    : undefined\n                            }\n                            rowClassName={({ result, label }) =>\n                                clsx('DataTable__row', {\n                                    'DataTable__row--highlight_once': result && highlightedRows.has(result),\n                                    'DataTable__row--category_row': !!label,\n                                    'border border-x-danger-dark bg-danger-highlight':\n                                        sourceFeatures.has(QueryFeature.highlightExceptionEventRows) &&\n                                        result &&\n                                        result[0] &&\n                                        result[0]['event'] === '$exception',\n                                })\n                            }\n                            footer={\n                                (dataTableRows ?? []).length > 0 &&\n                                !sourceFeatures.has(QueryFeature.hideLoadNextButton) ? (\n                                    <LoadNext query={query.source} />\n                                ) : null\n                            }\n                            onRow={context?.rowProps}\n                        />\n                    )}\n                    {/* TODO: this doesn't seem like the right solution... */}\n                    <PersonDeleteModal />\n                </div>\n            </BindLogic>\n        </BindLogic>\n    )\n}\n", "import './EventDetails.scss'\n\nimport { ErrorDisplay } from 'lib/components/Errors/ErrorDisplay'\nimport { HTMLElementsDisplay } from 'lib/components/HTMLElementsDisplay/HTMLElementsDisplay'\nimport { JSONViewer } from 'lib/components/JSONViewer'\nimport { PropertiesTable } from 'lib/components/PropertiesTable'\nimport { dayjs } from 'lib/dayjs'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { LemonTableProps } from 'lib/lemon-ui/LemonTable'\nimport { LemonTabs } from 'lib/lemon-ui/LemonTabs'\nimport { Link } from 'lib/lemon-ui/Link'\nimport { CORE_FILTER_DEFINITIONS_BY_GROUP, KNOWN_PROMOTED_PROPERTY_PARENTS } from 'lib/taxonomy'\nimport { pluralize } from 'lib/utils'\nimport { AutocaptureImageTab, autocaptureToImage } from 'lib/utils/event-property-utls'\nimport { ConversationDisplay } from 'products/llm_observability/frontend/ConversationDisplay/ConversationDisplay'\nimport { useState } from 'react'\n\nimport { EventType, PropertyDefinitionType } from '~/types'\n\ninterface EventDetailsProps {\n    event: EventType\n    tableProps?: Partial<LemonTableProps<Record<string, any>>>\n}\n\nexport function EventDetails({ event, tableProps }: EventDetailsProps): JSX.Element {\n    const [showSystemProps, setShowSystemProps] = useState(false)\n    const [activeTab, setActiveTab] = useState(\n        event.event === '$ai_generation' ? 'conversation' : event.event === '$exception' ? 'exception' : 'properties'\n    )\n\n    const displayedEventProperties = {}\n    const visibleSystemProperties = {}\n    const featureFlagProperties = {}\n    let setProperties = {}\n    let setOnceProperties = {}\n    let systemPropsCount = 0\n    for (const key of Object.keys(event.properties)) {\n        if (CORE_FILTER_DEFINITIONS_BY_GROUP.events[key] && CORE_FILTER_DEFINITIONS_BY_GROUP.events[key].system) {\n            systemPropsCount += 1\n            if (showSystemProps) {\n                visibleSystemProperties[key] = event.properties[key]\n            }\n        }\n        if (!CORE_FILTER_DEFINITIONS_BY_GROUP.events[key] || !CORE_FILTER_DEFINITIONS_BY_GROUP.events[key].system) {\n            if (key.startsWith('$feature') || key === '$active_feature_flags') {\n                featureFlagProperties[key] = event.properties[key]\n            } else if (key === '$set') {\n                setProperties = event.properties[key]\n            } else if (key === '$set_once') {\n                setOnceProperties = event.properties[key]\n            } else {\n                displayedEventProperties[key] = event.properties[key]\n            }\n        }\n    }\n\n    const tabs = [\n        {\n            key: 'properties',\n            label: 'Properties',\n            content: (\n                <div className=\"mx-3\">\n                    <PropertiesTable\n                        type={PropertyDefinitionType.Event}\n                        properties={{\n                            ...('timestamp' in event ? { $timestamp: dayjs(event.timestamp).toISOString() } : {}),\n                            ...displayedEventProperties,\n                            ...visibleSystemProperties,\n                        }}\n                        useDetectedPropertyType={true}\n                        tableProps={tableProps}\n                        filterable\n                        searchable\n                        parent={event.event as KNOWN_PROMOTED_PROPERTY_PARENTS}\n                    />\n                    {systemPropsCount > 0 && (\n                        <LemonButton className=\"mb-2\" onClick={() => setShowSystemProps(!showSystemProps)} size=\"small\">\n                            {showSystemProps ? 'Hide' : 'Show'}{' '}\n                            {pluralize(systemPropsCount, 'system property', 'system properties')}\n                        </LemonButton>\n                    )}\n                </div>\n            ),\n        },\n        {\n            key: 'metadata',\n            label: 'Metadata',\n            content: (\n                <div className=\"mx-3 -mt-4\">\n                    <PropertiesTable\n                        type={PropertyDefinitionType.Meta}\n                        properties={{\n                            event: event.event,\n                            distinct_id: event.distinct_id,\n                            timestamp: event.timestamp,\n                        }}\n                        sortProperties\n                        tableProps={tableProps}\n                    />\n                </div>\n            ),\n        },\n        {\n            key: 'raw',\n            label: 'Raw',\n            content: (\n                <div className=\"mx-3 -mt-3 py-2\">\n                    <JSONViewer src={event} name=\"event\" collapsed={1} collapseStringsAfterLength={80} sortKeys />\n                </div>\n            ),\n        },\n    ]\n\n    if (event.elements && event.elements.length > 0) {\n        tabs.push({\n            key: 'elements',\n            label: 'Elements',\n            content: (\n                <HTMLElementsDisplay elements={event.elements} selectedText={event.properties['$selected_content']} />\n            ),\n        })\n    }\n\n    if (event.elements && autocaptureToImage(event.elements)) {\n        tabs.push({\n            key: 'image',\n            label: 'Image',\n            content: <AutocaptureImageTab elements={event.elements} />,\n        })\n    }\n\n    if (event.event === '$exception') {\n        tabs.splice(0, 0, {\n            key: 'exception',\n            label: 'Exception',\n            content: (\n                <div className=\"mx-3\">\n                    <ErrorDisplay eventProperties={event.properties} />\n                </div>\n            ),\n        })\n    } else if (event.event === '$ai_generation') {\n        tabs.splice(0, 0, {\n            key: 'conversation',\n            label: 'Conversation',\n            content: (\n                <div className=\"mx-3 -mt-2 mb-2 space-y-2\">\n                    <ConversationDisplay eventProperties={event.properties} />\n                </div>\n            ),\n        })\n    }\n\n    if (Object.keys(featureFlagProperties).length > 0) {\n        tabs.push({\n            key: 'feature_flags',\n            label: 'Feature flags',\n            content: (\n                <div className=\"ml-10 mt-2\">\n                    <PropertiesTable\n                        type={PropertyDefinitionType.Event}\n                        properties={{\n                            ...featureFlagProperties,\n                        }}\n                        useDetectedPropertyType={true}\n                        tableProps={tableProps}\n                        searchable\n                    />\n                </div>\n            ),\n        })\n    }\n\n    if (Object.keys(setProperties).length > 0) {\n        tabs.push({\n            key: 'set',\n            label: 'Person properties',\n            content: (\n                <div className=\"ml-10 mt-2\">\n                    <p>\n                        Person properties sent with this event. Will replace any property value that may have been set\n                        on this person profile before now.{' '}\n                        <Link to=\"https://posthog.com/docs/getting-started/person-properties\">Learn more</Link>\n                    </p>\n                    <PropertiesTable\n                        type={PropertyDefinitionType.Event}\n                        properties={{\n                            ...setProperties,\n                        }}\n                        useDetectedPropertyType={true}\n                        tableProps={tableProps}\n                        searchable\n                    />\n                </div>\n            ),\n        })\n    }\n\n    if (Object.keys(setOnceProperties).length > 0) {\n        tabs.push({\n            key: 'set_once',\n            content: (\n                <div className=\"ml-10 mt-2\">\n                    <p>\n                        \"Set once\" person properties sent with this event. Will replace any property value that have\n                        never been set on this person profile before now.{' '}\n                        <Link to=\"https://posthog.com/docs/getting-started/person-properties\">Learn more</Link>\n                    </p>\n                    <PropertiesTable\n                        type={PropertyDefinitionType.Event}\n                        properties={{\n                            ...setOnceProperties,\n                        }}\n                        useDetectedPropertyType={true}\n                        tableProps={tableProps}\n                        searchable\n                    />\n                </div>\n            ),\n            label: 'Set once person properties',\n        })\n    }\n\n    return <LemonTabs data-attr=\"event-details\" tabs={tabs} activeKey={activeTab} onChange={setActiveTab} />\n}\n", "import { EventType } from '~/types'\n\nimport { ConversationMessagesDisplay } from './ConversationMessagesDisplay'\nimport { MetadataHeader } from './MetadataHeader'\n\nexport function ConversationDisplay({ eventProperties }: { eventProperties: EventType['properties'] }): JSX.Element {\n    return (\n        <>\n            <header className=\"mb-2\">\n                <MetadataHeader\n                    inputTokens={eventProperties.$ai_input_tokens}\n                    outputTokens={eventProperties.$ai_output_tokens}\n                    totalCostUsd={eventProperties.$ai_total_cost_usd}\n                    model={eventProperties.$ai_model}\n                    latency={eventProperties.$ai_latency}\n                />\n            </header>\n            <ConversationMessagesDisplay\n                input={eventProperties.$ai_input}\n                output={eventProperties.$ai_output_choices ?? eventProperties.$ai_output ?? eventProperties.$ai_error}\n                httpStatus={eventProperties.$ai_http_status}\n                raisedError={eventProperties.$ai_is_error}\n                bordered\n            />\n        </>\n    )\n}\n", "import { DateFilter } from 'lib/components/DateFilter/DateFilter'\n\nimport { EventsQuery, HogQLQuery, SessionAttributionExplorerQuery, TracesQuery } from '~/queries/schema/schema-general'\nimport { isEventsQuery, isHogQLQuery, isSessionAttributionExplorerQuery, isTracesQuery } from '~/queries/utils'\n\ninterface DateRangeProps<Q extends EventsQuery | HogQLQuery | SessionAttributionExplorerQuery | TracesQuery> {\n    query: Q\n    setQuery?: (query: Q) => void\n}\nexport function DateRange<Q extends EventsQuery | HogQLQuery | SessionAttributionExplorerQuery | TracesQuery>({\n    query,\n    setQuery,\n}: DateRangeProps<Q>): JSX.Element | null {\n    if (isEventsQuery(query)) {\n        return (\n            <DateFilter\n                dateFrom={query.after ?? undefined}\n                dateTo={query.before ?? undefined}\n                onChange={(changedDateFrom, changedDateTo) => {\n                    const newQuery: Q = {\n                        ...query,\n                        after: changedDateFrom ?? undefined,\n                        before: changedDateTo ?? undefined,\n                    }\n                    setQuery?.(newQuery)\n                }}\n            />\n        )\n    }\n\n    if (isHogQLQuery(query) || isSessionAttributionExplorerQuery(query)) {\n        return (\n            <DateFilter\n                size=\"medium\"\n                dateFrom={query.filters?.dateRange?.date_from ?? undefined}\n                dateTo={query.filters?.dateRange?.date_to ?? undefined}\n                onChange={(changedDateFrom, changedDateTo) => {\n                    const newQuery: Q = {\n                        ...query,\n                        filters: {\n                            ...(query.filters ?? {}),\n                            dateRange: {\n                                date_from: changedDateFrom ?? undefined,\n                                date_to: changedDateTo ?? undefined,\n                            },\n                        },\n                    }\n                    setQuery?.(newQuery)\n                }}\n            />\n        )\n    }\n\n    if (isTracesQuery(query)) {\n        return (\n            <DateFilter\n                dateFrom={query.dateRange?.date_from ?? undefined}\n                dateTo={query.dateRange?.date_to ?? undefined}\n                onChange={(changedDateFrom, changedDateTo) => {\n                    const newQuery: Q = {\n                        ...query,\n                        dateRange: {\n                            date_from: changedDateFrom ?? undefined,\n                            date_to: changedDateTo ?? undefined,\n                        },\n                    }\n                    setQuery?.(newQuery)\n                }}\n            />\n        )\n    }\n\n    return null\n}\n", "import { useActions, useValues } from 'kea'\nimport { IconRefresh } from 'lib/lemon-ui/icons'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { Spinner } from 'lib/lemon-ui/Spinner'\n\nimport { dataNodeCollectionLogic } from '~/queries/nodes/DataNode/dataNodeCollectionLogic'\nimport { dataNodeLogic } from '~/queries/nodes/DataNode/dataNodeLogic'\n\nexport function Reload(): JSX.Element {\n    const { responseLoading } = useValues(dataNodeLogic)\n    const { loadData, cancelQuery } = useActions(dataNodeLogic)\n\n    return (\n        <LemonButton\n            type=\"secondary\"\n            onClick={() => {\n                if (responseLoading) {\n                    cancelQuery()\n                } else {\n                    loadData(true)\n                }\n            }}\n            // Setting the loading icon manually to capture clicks while spinning.\n            icon={responseLoading ? <Spinner textColored /> : <IconRefresh />}\n        >\n            {responseLoading ? 'Cancel' : 'Reload'}\n        </LemonButton>\n    )\n}\n\nexport function ReloadAll(): JSX.Element {\n    const { areAnyLoading } = useValues(dataNodeCollectionLogic)\n    const { reloadAll } = useActions(dataNodeCollectionLogic)\n\n    return (\n        <LemonButton\n            className=\"w-full\"\n            type=\"secondary\"\n            size=\"small\"\n            onClick={reloadAll}\n            // Setting the loading icon manually to capture clicks while spinning.\n            icon={areAnyLoading ? <Spinner textColored /> : <IconRefresh />}\n            disabledReason={areAnyLoading ? 'Loading' : undefined}\n        >\n            Reload\n        </LemonButton>\n    )\n}\n", "import { useActions, useValues } from 'kea'\nimport { TestAccountFilterSwitch } from 'lib/components/TestAccountFiltersSwitch'\nimport { filterTestAccountsDefaultsLogic } from 'scenes/settings/environment/filterTestAccountDefaultsLogic'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { DataNode, EventsQuery, HogQLQuery, TracesQuery } from '~/queries/schema/schema-general'\nimport { isEventsQuery, isHogQLQuery, isTracesQuery } from '~/queries/utils'\n\ninterface TestAccountFiltersProps {\n    query: DataNode\n    setQuery?: (query: EventsQuery | HogQLQuery | TracesQuery) => void\n}\nexport function TestAccountFilters({ query, setQuery }: TestAccountFiltersProps): JSX.Element | null {\n    const { currentTeam } = useValues(teamLogic)\n    const hasFilters = (currentTeam?.test_account_filters || []).length > 0\n    const { setLocalDefault } = useActions(filterTestAccountsDefaultsLogic)\n\n    if (!isEventsQuery(query) && !isHogQLQuery(query) && !isTracesQuery(query)) {\n        return null\n    }\n    const checked = hasFilters\n        ? !!(isHogQLQuery(query)\n              ? query.filters?.filterTestAccounts\n              : isEventsQuery(query) || isTracesQuery(query)\n              ? query.filterTestAccounts\n              : false)\n        : false\n    const onChange = isHogQLQuery(query)\n        ? (checked: boolean) => {\n              const newQuery: HogQLQuery = {\n                  ...query,\n                  filters: {\n                      ...query.filters,\n                      filterTestAccounts: checked,\n                  },\n              }\n              setQuery?.(newQuery)\n          }\n        : isEventsQuery(query) || isTracesQuery(query)\n        ? (checked: boolean) => {\n              const newQuery: EventsQuery | TracesQuery = {\n                  ...query,\n                  filterTestAccounts: checked,\n              }\n              setQuery?.(newQuery)\n          }\n        : undefined\n\n    return (\n        <TestAccountFilterSwitch\n            checked={checked}\n            onChange={(checked: boolean) => {\n                onChange?.(checked)\n                setLocalDefault(checked)\n            }}\n        />\n    )\n}\n", "import { useValues } from 'kea'\nimport { router } from 'kea-router'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { summarizeInsightQuery } from 'scenes/insights/summarizeInsight'\nimport { mathsLogic } from 'scenes/trends/mathsLogic'\nimport { urls } from 'scenes/urls'\n\nimport { cohortsModel } from '~/models/cohortsModel'\nimport { groupsModel } from '~/models/groupsModel'\nimport { dataNodeLogic } from '~/queries/nodes/DataNode/dataNodeLogic'\n\nexport function BackToSource(): JSX.Element | null {\n    const { aggregationLabel } = useValues(groupsModel)\n    const { cohortsById } = useValues(cohortsModel)\n    const { mathDefinitions } = useValues(mathsLogic)\n\n    const { backToSourceQuery } = useValues(dataNodeLogic)\n\n    if (!backToSourceQuery) {\n        return null\n    }\n\n    const summary = summarizeInsightQuery(backToSourceQuery.source, {\n        aggregationLabel,\n        cohortsById,\n        mathDefinitions,\n    })\n\n    return (\n        <LemonButton\n            tooltip={summary}\n            type=\"secondary\"\n            onClick={() => router.actions.push(urls.insightNew({ query: backToSourceQuery }))}\n        >\n            &laquo; Back to {backToSourceQuery.source.kind?.replace('Query', '') ?? 'Insight'}\n        </LemonButton>\n    )\n}\n", "import './ColumnConfigurator.scss'\n\nimport { DndContext } from '@dnd-kit/core'\nimport { restrictToParentElement, restrictToVerticalAxis } from '@dnd-kit/modifiers'\nimport { SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\nimport { IconPencil, IconX } from '@posthog/icons'\nimport { BindLogic, useActions, useValues } from 'kea'\nimport { PropertyFilterIcon } from 'lib/components/PropertyFilters/components/PropertyFilterIcon'\nimport { PropertyKeyInfo } from 'lib/components/PropertyKeyInfo'\nimport { RestrictionScope, useRestrictedArea } from 'lib/components/RestrictedArea'\nimport { TaxonomicFilter } from 'lib/components/TaxonomicFilter/TaxonomicFilter'\nimport { TaxonomicFilterGroupType } from 'lib/components/TaxonomicFilter/types'\nimport { TeamMembershipLevel } from 'lib/constants'\nimport { IconTuning, SortableDragIcon } from 'lib/lemon-ui/icons'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { LemonCheckbox } from 'lib/lemon-ui/LemonCheckbox'\nimport { LemonModal } from 'lib/lemon-ui/LemonModal'\nimport { Tooltip } from 'lib/lemon-ui/Tooltip'\nimport { useState } from 'react'\nimport { AutoSizer } from 'react-virtualized/dist/es/AutoSizer'\n\nimport { dataTableLogic } from '~/queries/nodes/DataTable/dataTableLogic'\nimport { DataTableNode, NodeKind } from '~/queries/schema/schema-general'\nimport { isEventsQuery, taxonomicEventFilterToHogQL, trimQuotes } from '~/queries/utils'\nimport { PropertyFilterType } from '~/types'\n\nimport { defaultDataTableColumns, extractExpressionComment, removeExpressionComment } from '../utils'\nimport { columnConfiguratorLogic, ColumnConfiguratorLogicProps } from './columnConfiguratorLogic'\n\nlet uniqueNode = 0\n\ninterface ColumnConfiguratorProps {\n    query: DataTableNode\n    setQuery?: (query: DataTableNode) => void\n}\n\nexport function ColumnConfigurator({ query, setQuery }: ColumnConfiguratorProps): JSX.Element {\n    const { columnsInQuery } = useValues(dataTableLogic)\n\n    const [key] = useState(() => String(uniqueNode++))\n    const columnConfiguratorLogicProps: ColumnConfiguratorLogicProps = {\n        key,\n        isPersistent: !!query.showPersistentColumnConfigurator,\n        columns: columnsInQuery,\n        setColumns: (columns: string[]) => {\n            if (isEventsQuery(query.source)) {\n                let orderBy = query.source.orderBy\n                if (orderBy && orderBy.length > 0) {\n                    const orderColumn = removeExpressionComment(\n                        orderBy[0].endsWith(' DESC') ? orderBy[0].replace(/ DESC$/, '') : orderBy[0]\n                    )\n                    // the old orderBy column was removed, so remove it from the new query\n                    if (!columns.some((c) => removeExpressionComment(c) === orderColumn)) {\n                        orderBy = undefined\n                    }\n                }\n                setQuery?.({\n                    ...query,\n                    source: {\n                        ...query.source,\n                        orderBy,\n                        select: columns,\n                    },\n                })\n            } else {\n                setQuery?.({ ...query, columns })\n            }\n        },\n    }\n    const { showModal } = useActions(columnConfiguratorLogic(columnConfiguratorLogicProps))\n\n    return (\n        <BindLogic logic={columnConfiguratorLogic} props={columnConfiguratorLogicProps}>\n            <LemonButton\n                type=\"secondary\"\n                data-attr=\"events-table-column-selector\"\n                icon={<IconTuning />}\n                onClick={showModal}\n            >\n                Configure columns\n            </LemonButton>\n            <ColumnConfiguratorModal query={query} setQuery={setQuery} />\n        </BindLogic>\n    )\n}\n\nfunction ColumnConfiguratorModal({ query }: ColumnConfiguratorProps): JSX.Element {\n    const restrictionReason = useRestrictedArea({\n        minimumAccessLevel: TeamMembershipLevel.Admin,\n        scope: RestrictionScope.Project,\n    })\n    const { modalVisible, columns, saveAsDefault } = useValues(columnConfiguratorLogic)\n    const { hideModal, moveColumn, setColumns, selectColumn, unselectColumn, save, toggleSaveAsDefault } =\n        useActions(columnConfiguratorLogic)\n\n    const onEditColumn = (column: string, index: number): void => {\n        const newColumn = window.prompt('Edit column', column)\n        if (newColumn) {\n            setColumns(columns.map((c, i) => (i === index ? newColumn : c)))\n        }\n    }\n\n    return (\n        <LemonModal\n            isOpen={modalVisible}\n            title=\"Configure columns\"\n            onClose={hideModal}\n            footer={\n                <>\n                    <div className=\"flex-1\">\n                        <LemonButton\n                            type=\"secondary\"\n                            onClick={() => setColumns(defaultDataTableColumns(NodeKind.EventsQuery))}\n                        >\n                            Reset to defaults\n                        </LemonButton>\n                    </div>\n                    <LemonButton type=\"secondary\" onClick={hideModal}>\n                        Close\n                    </LemonButton>\n                    <LemonButton type=\"primary\" onClick={save} data-attr=\"items-selector-confirm\">\n                        Save\n                    </LemonButton>\n                </>\n            }\n        >\n            <div className=\"ColumnConfiguratorModal\">\n                <div className=\"Columns\">\n                    <div className=\"HalfColumn\">\n                        <h4 className=\"secondary uppercase text-secondary\">\n                            Visible columns ({columns.length}) - Drag to reorder\n                        </h4>\n                        <DndContext\n                            onDragEnd={({ active, over }) => {\n                                if (over && active.id !== over.id) {\n                                    moveColumn(\n                                        columns.indexOf(active.id.toString()),\n                                        columns.indexOf(over.id.toString())\n                                    )\n                                }\n                            }}\n                            modifiers={[restrictToVerticalAxis, restrictToParentElement]}\n                        >\n                            <SortableContext items={columns} strategy={verticalListSortingStrategy}>\n                                {columns.map((column, index) => (\n                                    <SelectedColumn\n                                        key={column}\n                                        column={column}\n                                        dataIndex={index}\n                                        onEdit={onEditColumn}\n                                        onRemove={unselectColumn}\n                                    />\n                                ))}\n                            </SortableContext>\n                        </DndContext>\n                    </div>\n                    <div className=\"HalfColumn\">\n                        <h4 className=\"secondary uppercase text-secondary\">Available columns</h4>\n                        <div className=\"h-[360px]\">\n                            <AutoSizer>\n                                {({ height, width }: { height: number; width: number }) => (\n                                    <TaxonomicFilter\n                                        height={height}\n                                        width={width}\n                                        taxonomicGroupTypes={[\n                                            TaxonomicFilterGroupType.EventProperties,\n                                            TaxonomicFilterGroupType.EventFeatureFlags,\n                                            TaxonomicFilterGroupType.PersonProperties,\n                                            ...(isEventsQuery(query.source)\n                                                ? [TaxonomicFilterGroupType.HogQLExpression]\n                                                : []),\n                                        ]}\n                                        value={undefined}\n                                        onChange={(group, value) => {\n                                            const column = taxonomicEventFilterToHogQL(group.type, value)\n                                            if (column !== null) {\n                                                selectColumn(column)\n                                            }\n                                        }}\n                                        popoverEnabled={false}\n                                        selectFirstItem={false}\n                                    />\n                                )}\n                            </AutoSizer>\n                        </div>\n                    </div>\n                </div>\n                {isEventsQuery(query.source) && query.showPersistentColumnConfigurator ? (\n                    <LemonCheckbox\n                        label=\"Save as default for all project members\"\n                        className=\"mt-2\"\n                        data-attr=\"events-table-save-columns-as-default-toggle\"\n                        bordered\n                        checked={saveAsDefault}\n                        onChange={toggleSaveAsDefault}\n                        disabledReason={restrictionReason}\n                    />\n                ) : null}\n            </div>\n        </LemonModal>\n    )\n}\n\nconst SelectedColumn = ({\n    column,\n    dataIndex,\n    onEdit,\n    onRemove,\n}: {\n    column: string\n    dataIndex: number\n    onEdit: (column: string, index: number) => void\n    onRemove: (column: string) => void\n}): JSX.Element => {\n    const { setNodeRef, attributes, transform, transition, listeners } = useSortable({ id: column })\n\n    let columnType: PropertyFilterType | null = null\n    let filterGroupType: TaxonomicFilterGroupType | undefined\n    let columnKey = column\n    if (column.startsWith('person.properties.')) {\n        columnType = PropertyFilterType.Person\n        filterGroupType = TaxonomicFilterGroupType.PersonProperties\n        columnKey = column.substring(18)\n    }\n    if (column.startsWith('properties.')) {\n        columnType = PropertyFilterType.Event\n        columnKey = column.substring(11)\n    }\n\n    columnKey = trimQuotes(extractExpressionComment(columnKey))\n\n    return (\n        <div\n            ref={setNodeRef}\n            // eslint-disable-next-line react/forbid-dom-props\n            style={{\n                transform: CSS.Transform.toString(transform),\n                transition,\n            }}\n            {...attributes}\n        >\n            <div className=\"SelectedColumn\">\n                <span {...listeners} className=\"drag-handle\">\n                    <SortableDragIcon />\n                </span>\n                {columnType && <PropertyFilterIcon type={columnType} />}\n                <PropertyKeyInfo\n                    className=\"ml-1\"\n                    value={columnKey}\n                    type={filterGroupType || TaxonomicFilterGroupType.EventProperties}\n                />\n                <div className=\"flex-1\" />\n                <Tooltip title=\"Edit\">\n                    <LemonButton onClick={() => onEdit(column, dataIndex)} size=\"small\">\n                        <IconPencil data-attr=\"column-display-item-edit-icon\" />\n                    </LemonButton>\n                </Tooltip>\n                <Tooltip title=\"Remove\">\n                    <LemonButton onClick={() => onRemove(column)} status=\"danger\" size=\"small\">\n                        <IconX data-attr=\"column-display-item-remove-icon\" />\n                    </LemonButton>\n                </Tooltip>\n            </div>\n        </div>\n    )\n}\n", "import { actions, kea, key, listeners, path, props, propsChanged, reducers } from 'kea'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { HOGQL_COLUMNS_KEY } from '~/queries/nodes/DataTable/defaultEventsQuery'\n\nimport type { columnConfiguratorLogicType } from './columnConfiguratorLogicType'\n\nexport interface ColumnConfiguratorLogicProps {\n    key: string\n    columns: string[]\n    setColumns: (columns: string[]) => void\n    isPersistent?: boolean\n}\n\nexport const columnConfiguratorLogic = kea<columnConfiguratorLogicType>([\n    props({} as ColumnConfiguratorLogicProps),\n    path(['queries', 'nodes', 'DataTable', 'columnConfiguratorLogic']),\n    key((props) => props.key),\n    actions({\n        showModal: true,\n        hideModal: true,\n        selectColumn: (column: string) => ({ column }),\n        unselectColumn: (column: string) => ({ column }),\n        setColumns: (columns: string[]) => ({ columns }),\n        moveColumn: (oldIndex: number, newIndex: number) => ({ oldIndex, newIndex }),\n        save: true,\n        toggleSaveAsDefault: true,\n    }),\n    reducers(({ props }) => ({\n        saveAsDefault: [\n            false,\n            {\n                toggleSaveAsDefault: (state) => !state,\n                showModal: () => false,\n            },\n        ],\n        modalVisible: [\n            false,\n            {\n                showModal: () => true,\n                hideModal: () => false,\n                save: () => false,\n            },\n        ],\n        columns: [\n            props.columns,\n            {\n                setColumns: (_, { columns }) => columns,\n                selectColumn: (state, { column }) => Array.from(new Set([...state, column])),\n                unselectColumn: (state, { column }) => state.filter((c) => c !== column),\n                moveColumn: (state, { oldIndex, newIndex }) => {\n                    const newColumns = [...state]\n                    const [removed] = newColumns.splice(oldIndex, 1)\n                    newColumns.splice(newIndex, 0, removed)\n                    return newColumns\n                },\n            },\n        ],\n    })),\n    propsChanged(({ actions, props }, oldProps) => {\n        if (JSON.stringify(props.columns) !== JSON.stringify(oldProps.columns)) {\n            actions.setColumns(props.columns)\n        }\n    }),\n    listeners(({ values, props }) => ({\n        save: () => {\n            if (props.isPersistent && values.saveAsDefault) {\n                teamLogic.actions.updateCurrentTeam({ live_events_columns: [HOGQL_COLUMNS_KEY, ...values.columns] })\n            }\n            props.setColumns(values.columns)\n        },\n    })),\n])\n", "import { getDefaultEventsSceneQuery } from 'scenes/activity/explore/defaults'\n\nimport { EventsQuery, NodeKind } from '~/queries/schema/schema-general'\nimport { escapePropertyAsHogQlIdentifier } from '~/queries/utils'\nimport { TeamType } from '~/types'\n\n/** Indicates HogQL usage if team.live_events_columns = [HOGQL_COLUMNS_KEY, ...] */\nexport const HOGQL_COLUMNS_KEY = '--v2:hogql'\n\nexport function cleanLiveEventsColumns(columns: string[]): string[] {\n    // new columns\n    if (columns.length > 0 && columns[0] === HOGQL_COLUMNS_KEY) {\n        return columns.slice(1)\n    }\n    // legacy columns\n    return [\n        '*',\n        ...columns.map((column) => {\n            if (column === 'event' || column === 'person') {\n                return column\n            }\n            if (column === 'url') {\n                return 'coalesce(properties.$current_url, properties.$screen_name) -- Url / Screen'\n            }\n            if (column === 'source') {\n                return 'properties.$lib'\n            }\n            return `properties.${escapePropertyAsHogQlIdentifier(String(column))}`\n        }),\n        'timestamp',\n    ]\n}\n\nexport function getDefaultEventsQueryForTeam(team: Partial<TeamType>): EventsQuery | null {\n    const liveColumns = team?.live_events_columns ? cleanLiveEventsColumns(team.live_events_columns) : null\n    return liveColumns\n        ? {\n              kind: NodeKind.EventsQuery,\n              select: liveColumns,\n              after: '-24h',\n              orderBy: liveColumns.includes('timestamp') ? ['timestamp DESC'] : [],\n          }\n        : null\n}\n\nexport function getEventsQueriesForTeam(team: Partial<TeamType>): Record<string, EventsQuery> {\n    const projectDefault = getDefaultEventsQueryForTeam(team)\n    return {\n        ...(projectDefault ? { 'Project default view': projectDefault } : {}),\n        'PostHog default view': getDefaultEventsSceneQuery().source as EventsQuery,\n        'Event counts view': {\n            kind: NodeKind.EventsQuery,\n            select: ['event', 'count()'],\n            after: '-24h',\n            orderBy: ['count() DESC'],\n        } as EventsQuery,\n    }\n}\n", "import { IconWarning } from '@posthog/icons'\nimport { router } from 'kea-router'\nimport ViewRecordingButton, { mightHaveRecording } from 'lib/components/ViewRecordingButton'\nimport { IconLink } from 'lib/lemon-ui/icons'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { More } from 'lib/lemon-ui/LemonButton/More'\nimport { copyToClipboard } from 'lib/utils/copyToClipboard'\nimport { getCurrentTeamId } from 'lib/utils/getAppContext'\nimport { createActionFromEvent } from 'scenes/activity/explore/createActionFromEvent'\nimport { insightUrlForEvent } from 'scenes/insights/utils'\nimport { teamLogic } from 'scenes/teamLogic'\nimport { urls } from 'scenes/urls'\n\nimport { EventType } from '~/types'\n\ninterface EventActionProps {\n    event: EventType\n}\n\nexport function EventRowActions({ event }: EventActionProps): JSX.Element {\n    const insightUrl = insightUrlForEvent(event)\n\n    return (\n        <More\n            overlay={\n                <>\n                    {getCurrentTeamId() && (\n                        <LemonButton\n                            onClick={() =>\n                                void createActionFromEvent(\n                                    getCurrentTeamId(),\n                                    event,\n                                    0,\n                                    teamLogic.findMounted()?.values.currentTeam?.data_attributes || []\n                                )\n                            }\n                            fullWidth\n                            data-attr=\"events-table-create-action\"\n                        >\n                            Create action from event\n                        </LemonButton>\n                    )}\n                    {event.uuid && event.timestamp && (\n                        <LemonButton\n                            fullWidth\n                            sideIcon={<IconLink />}\n                            data-attr=\"events-table-event-link\"\n                            onClick={() =>\n                                void copyToClipboard(\n                                    urls.absolute(urls.currentProject(urls.event(String(event.uuid), event.timestamp))),\n                                    'link to event'\n                                )\n                            }\n                        >\n                            Copy link to event\n                        </LemonButton>\n                    )}\n                    <ViewRecordingButton\n                        fullWidth\n                        inModal\n                        sessionId={event.properties.$session_id}\n                        timestamp={event.timestamp}\n                        disabledReason={\n                            mightHaveRecording(event.properties)\n                                ? undefined\n                                : 'Replay was not active when capturing this event'\n                        }\n                        data-attr=\"events-table-usage\"\n                    />\n                    {event.event === '$exception' && '$exception_issue_id' in event.properties ? (\n                        <LemonButton\n                            fullWidth\n                            sideIcon={<IconWarning />}\n                            data-attr=\"events-table-exception-link\"\n                            onClick={() =>\n                                router.actions.push(\n                                    urls.errorTrackingIssue(\n                                        event.properties.$exception_issue_id,\n                                        event.properties.$exception_fingerprint\n                                    )\n                                )\n                            }\n                        >\n                            Visit issue\n                        </LemonButton>\n                    ) : null}\n                    {insightUrl && (\n                        <LemonButton to={insightUrl} fullWidth data-attr=\"events-table-usage\">\n                            Try out in Insights\n                        </LemonButton>\n                    )}\n                </>\n            }\n        />\n    )\n}\n", "import { useMountedLogic, useValues } from 'kea'\nimport { LemonSelect } from 'lib/lemon-ui/LemonSelect'\nimport { cleanedInsightActorsQueryOptions } from 'scenes/trends/persons-modal/persons-modal-utils'\n\nimport { dataNodeLogic } from '~/queries/nodes/DataNode/dataNodeLogic'\nimport { insightActorsQueryOptionsLogic } from '~/queries/nodes/DataTable/insightActorsQueryOptionsLogic'\nimport { InsightActorsQuery } from '~/queries/schema/schema-general'\n\ninterface InsightActorsQueryOptionsProps {\n    query: InsightActorsQuery\n    setQuery?: (query: InsightActorsQuery) => void\n}\nexport function InsightActorsQueryOptions({ setQuery, query }: InsightActorsQueryOptionsProps): JSX.Element | null {\n    const localDataNodeLogic = useMountedLogic(dataNodeLogic)\n    const { insightActorsQueryOptions } = useValues(\n        insightActorsQueryOptionsLogic({\n            key: localDataNodeLogic.key,\n            query: query,\n        })\n    )\n\n    return query && insightActorsQueryOptions ? (\n        <>\n            {cleanedInsightActorsQueryOptions(insightActorsQueryOptions, query).map(([key, options]) => (\n                <div key={key}>\n                    <LemonSelect\n                        fullWidth\n                        className=\"min-w-32\"\n                        placeholder={key}\n                        value={query?.[key] ?? null}\n                        onChange={(v) =>\n                            setQuery?.({\n                                ...query,\n                                [key]: v,\n                            })\n                        }\n                        options={options}\n                    />\n                </div>\n            ))}\n        </>\n    ) : null\n}\n", "import { actions, afterMount, kea, path, props, propsChanged } from 'kea'\nimport { loaders } from 'kea-loaders'\n\nimport { performQuery } from '~/queries/query'\nimport {\n    InsightActorsQuery,\n    InsightActorsQueryOptions,\n    InsightActorsQueryOptionsResponse,\n    NodeKind,\n} from '~/queries/schema/schema-general'\nimport { isInsightActorsQuery } from '~/queries/utils'\n\nimport type { insightActorsQueryOptionsLogicType } from './insightActorsQueryOptionsLogicType'\n\nexport const insightActorsQueryOptionsLogic = kea<insightActorsQueryOptionsLogicType>([\n    path(['queries', 'nodes', 'DataTable', 'sourceQueryOptionsLogic']),\n    props({} as { key: string; query: InsightActorsQuery }),\n    actions({\n        load: true,\n    }),\n    loaders(({ values, props }) => ({\n        insightActorsQueryOptions: [\n            null as InsightActorsQueryOptionsResponse | null,\n            {\n                load: async () => {\n                    if (!props.query || !isInsightActorsQuery(props.query)) {\n                        return values.insightActorsQueryOptions || null\n                    }\n                    const optionsQuery: InsightActorsQueryOptions = {\n                        kind: NodeKind.InsightActorsQueryOptions,\n                        source: props.query,\n                    }\n                    return await performQuery(optionsQuery)\n                },\n            },\n        ],\n    })),\n    afterMount(({ actions }) => {\n        actions.load()\n    }),\n    propsChanged(({ actions, props }, oldProps) => {\n        if (JSON.stringify(props.query) !== JSON.stringify(oldProps.query)) {\n            actions.load()\n        }\n    }),\n])\n", "import equal from 'fast-deep-equal'\nimport { useValues } from 'kea'\nimport { LemonButton, LemonButtonWithDropdown } from 'lib/lemon-ui/LemonButton'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { getEventsQueriesForTeam } from '~/queries/nodes/DataTable/defaultEventsQuery'\nimport { DataTableNode } from '~/queries/schema/schema-general'\n\ninterface SavedQueriesProps {\n    query: DataTableNode\n    setQuery?: (query: DataTableNode) => void\n}\n\nexport function SavedQueries({ query, setQuery }: SavedQueriesProps): JSX.Element | null {\n    const { currentTeam } = useValues(teamLogic)\n\n    if (!setQuery || !currentTeam) {\n        return null\n    }\n\n    const eventsQueries = getEventsQueriesForTeam(currentTeam)\n    let selectedTitle = Object.keys(eventsQueries).find((key) => equal(eventsQueries[key], query.source))\n\n    if (!selectedTitle) {\n        // is there any query that only changed the dates\n        selectedTitle = Object.keys(eventsQueries).find((key) => {\n            return equal({ ...eventsQueries[key], before: '', after: '' }, { ...query.source, before: '', after: '' })\n        })\n    }\n    if (!selectedTitle) {\n        selectedTitle = 'Custom query'\n    }\n\n    return (\n        <LemonButtonWithDropdown\n            dropdown={{\n                matchWidth: false,\n                overlay: Object.entries(eventsQueries).map(([title, eventsQuery]) => (\n                    <LemonButton\n                        key={title}\n                        fullWidth\n                        active={title === selectedTitle}\n                        onClick={() => setQuery?.({ ...query, source: eventsQuery })}\n                    >\n                        {title}\n                    </LemonButton>\n                )),\n            }}\n            type=\"secondary\"\n        >\n            {selectedTitle}\n        </LemonButtonWithDropdown>\n    )\n}\n", "import { LemonEventName } from 'scenes/actions/EventName'\n\nimport { EventsNode, EventsQuery } from '~/queries/schema/schema-general'\n\ninterface EventNameProps {\n    query: EventsNode | EventsQuery\n    setQuery?: (query: EventsNode | EventsQuery) => void\n}\n\nexport function EventName({ query, setQuery }: EventNameProps): JSX.Element {\n    return (\n        <LemonEventName\n            value={query.event ?? ''}\n            disabled={!setQuery}\n            onChange={(value) => setQuery?.({ ...query, event: value })}\n            allEventsOption=\"clear\"\n        />\n    )\n}\n", "import { PropertyKeyInfo } from 'lib/components/PropertyKeyInfo'\nimport { TaxonomicFilterGroupType } from 'lib/components/TaxonomicFilter/types'\nimport { TaxonomicPopover } from 'lib/components/TaxonomicPopover/TaxonomicPopover'\n\ninterface LemonEventNamePropsWithoutAllEvents {\n    value: string\n    onChange: (value: string) => void\n    disabled?: boolean\n    placeholder?: string\n    /** By default \"All events\" is not allowed. */\n    allEventsOption?: never\n}\ninterface LemonEventNamePropsWithAllEvents {\n    value: string | null\n    onChange: (value: string | null) => void\n    disabled?: boolean\n    placeholder?: string\n    /** Allow \"All events\", in either explicit option item form, or clear button form. */\n    allEventsOption: 'explicit' | 'clear'\n}\nexport function LemonEventName({\n    value,\n    onChange,\n    disabled,\n    placeholder = 'Select an event',\n    allEventsOption,\n}: LemonEventNamePropsWithAllEvents | LemonEventNamePropsWithoutAllEvents): JSX.Element {\n    return (\n        <TaxonomicPopover\n            groupType={TaxonomicFilterGroupType.Events}\n            onChange={onChange}\n            disabled={disabled}\n            value={value as string}\n            type=\"secondary\"\n            placeholder={placeholder}\n            data-attr=\"event-name-box\"\n            renderValue={(v) =>\n                v !== null ? <PropertyKeyInfo value={v} disablePopover type={TaxonomicFilterGroupType.Events} /> : null\n            }\n            allowClear={allEventsOption === 'clear'}\n            excludedProperties={allEventsOption !== 'explicit' ? { events: [null] } : undefined}\n            size=\"small\"\n        />\n    )\n}\n", "import { useValues } from 'kea'\nimport { PropertyFilters } from 'lib/components/PropertyFilters/PropertyFilters'\nimport { TaxonomicFilterGroupType } from 'lib/components/TaxonomicFilter/types'\nimport { useState } from 'react'\n\nimport { groupsModel } from '~/models/groupsModel'\nimport {\n    EventsNode,\n    EventsQuery,\n    HogQLQuery,\n    SessionAttributionExplorerQuery,\n    TracesQuery,\n} from '~/queries/schema/schema-general'\nimport { isHogQLQuery, isSessionAttributionExplorerQuery } from '~/queries/utils'\nimport { AnyPropertyFilter } from '~/types'\n\ninterface EventPropertyFiltersProps<\n    Q extends EventsNode | EventsQuery | HogQLQuery | SessionAttributionExplorerQuery | TracesQuery\n> {\n    query: Q\n    setQuery?: (query: Q) => void\n    taxonomicGroupTypes?: TaxonomicFilterGroupType[]\n}\n\nlet uniqueNode = 0\nexport function EventPropertyFilters<\n    Q extends EventsNode | EventsQuery | HogQLQuery | SessionAttributionExplorerQuery | TracesQuery\n>({ query, setQuery, taxonomicGroupTypes }: EventPropertyFiltersProps<Q>): JSX.Element {\n    const [id] = useState(() => uniqueNode++)\n    const properties =\n        isHogQLQuery(query) || isSessionAttributionExplorerQuery(query) ? query.filters?.properties : query.properties\n    const eventNames =\n        isHogQLQuery(query) || isSessionAttributionExplorerQuery(query)\n            ? []\n            : 'event' in query && query.event\n            ? [query.event]\n            : []\n    const { groupsTaxonomicTypes } = useValues(groupsModel)\n\n    return !properties || Array.isArray(properties) ? (\n        <PropertyFilters\n            propertyFilters={properties || []}\n            taxonomicGroupTypes={\n                taxonomicGroupTypes || [\n                    TaxonomicFilterGroupType.EventProperties,\n                    TaxonomicFilterGroupType.PersonProperties,\n                    TaxonomicFilterGroupType.EventFeatureFlags,\n                    ...groupsTaxonomicTypes,\n                    TaxonomicFilterGroupType.Cohorts,\n                    TaxonomicFilterGroupType.Elements,\n                    TaxonomicFilterGroupType.HogQLExpression,\n                ]\n            }\n            onChange={(value: AnyPropertyFilter[]) => {\n                if (isHogQLQuery(query) || isSessionAttributionExplorerQuery(query)) {\n                    setQuery?.({ ...query, filters: { ...(query.filters ?? {}), properties: value } })\n                } else {\n                    setQuery?.({ ...query, properties: value })\n                }\n            }}\n            pageKey={`EventPropertyFilters.${id}`}\n            eventNames={eventNames}\n        />\n    ) : (\n        <div>Error: property groups are not supported.</div>\n    )\n}\n", "import { Monaco } from '@monaco-editor/react'\nimport { IconMagicWand } from '@posthog/icons'\nimport { LemonInput, Link } from '@posthog/lemon-ui'\nimport clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { router } from 'kea-router'\nimport { FlaggedFeature } from 'lib/components/FlaggedFeature'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { LemonBanner } from 'lib/lemon-ui/LemonBanner'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { CodeEditor } from 'lib/monaco/CodeEditor'\nimport { codeEditorLogic, CodeEditorLogicProps } from 'lib/monaco/codeEditorLogic'\nimport type { editor as importedEditor, IDisposable } from 'monaco-editor'\nimport { useEffect, useRef, useState } from 'react'\nimport { dataWarehouseSceneLogic } from 'scenes/data-warehouse/settings/dataWarehouseSceneLogic'\nimport { urls } from 'scenes/urls'\n\nimport { HogQLQuery } from '~/queries/schema/schema-general'\n\nimport { hogQLQueryEditorLogic } from './hogQLQueryEditorLogic'\n\nexport interface HogQLQueryEditorProps {\n    query: HogQLQuery\n    setQuery?: (query: HogQLQuery) => void\n    onChange?: (query: string) => void\n    embedded?: boolean\n    editorFooter?: (hasErrors: boolean, errors: string | null, isValidView: boolean) => JSX.Element\n    queryResponse?: Record<string, any>\n}\n\nlet uniqueNode = 0\n\nconst EDITOR_HEIGHT = 222\n\nexport function HogQLQueryEditor(props: HogQLQueryEditorProps): JSX.Element {\n    const editorRef = useRef<HTMLDivElement | null>(null)\n\n    const [key, setKey] = useState(() =>\n        router.values.location.pathname.includes(urls.dataWarehouse()) ? router.values.location.pathname : uniqueNode++\n    )\n\n    useEffect(() => {\n        if (router.values.location.pathname.includes(urls.dataWarehouse())) {\n            setKey(router.values.location.pathname)\n        }\n    }, [router.values.location.pathname])\n\n    const [monacoAndEditor, setMonacoAndEditor] = useState(\n        null as [Monaco, importedEditor.IStandaloneCodeEditor] | null\n    )\n    const [monaco, editor] = monacoAndEditor ?? []\n    const hogQLQueryEditorLogicProps = {\n        query: props.query,\n        setQuery: props.setQuery,\n        onChange: props.onChange,\n        key,\n        editor,\n        monaco,\n        queryResponse: props.queryResponse,\n    }\n    const logic = hogQLQueryEditorLogic(hogQLQueryEditorLogicProps)\n    const { queryInput, prompt, aiAvailable, promptError, promptLoading } = useValues(logic)\n    const { setQueryInput, saveQuery, setPrompt, draftFromPrompt, saveAsView, onUpdateView } = useActions(logic)\n\n    const codeEditorKey = `hogQLQueryEditor/${key}`\n\n    const codeEditorLogicProps: CodeEditorLogicProps = {\n        key: codeEditorKey,\n        sourceQuery: props.query,\n        query: queryInput,\n        language: 'hogQL',\n        metadataFilters: props.query.filters,\n    }\n\n    const { hasErrors, error, isValidView } = useValues(codeEditorLogic(codeEditorLogicProps))\n\n    const { editingView } = useValues(\n        dataWarehouseSceneLogic({\n            monaco,\n            editor,\n        })\n    )\n    // Using useRef, not useState, as we don't want to reload the component when this changes.\n    const monacoDisposables = useRef([] as IDisposable[])\n    useEffect(() => {\n        return () => {\n            monacoDisposables.current.forEach((d) => d?.dispose())\n        }\n    }, [])\n\n    return (\n        <div className=\"flex items-start gap-2\">\n            <div\n                data-attr=\"hogql-query-editor\"\n                className={clsx(\n                    'flex flex-col rounded space-y-2 w-full overflow-hidden',\n                    !props.embedded && 'p-2 border'\n                )}\n            >\n                <FlaggedFeature flag={FEATURE_FLAGS.ARTIFICIAL_HOG}>\n                    <div className=\"flex gap-2\">\n                        <LemonInput\n                            className=\"grow\"\n                            prefix={<IconMagicWand />}\n                            value={prompt}\n                            onPressEnter={() => draftFromPrompt()}\n                            onChange={(value) => setPrompt(value)}\n                            placeholder={\n                                aiAvailable\n                                    ? 'What do you want to know? How would you like to tweak the query?'\n                                    : 'To use AI features, set environment variable OPENAI_API_KEY for this instance of PostHog'\n                            }\n                            disabled={!aiAvailable}\n                            maxLength={400}\n                        />\n                        <LemonButton\n                            type=\"primary\"\n                            onClick={() => draftFromPrompt()}\n                            disabledReason={\n                                !aiAvailable\n                                    ? 'Environment variable OPENAI_API_KEY is unset for this instance of PostHog'\n                                    : !prompt\n                                    ? 'Provide a prompt first'\n                                    : null\n                            }\n                            tooltipPlacement=\"left\"\n                            loading={promptLoading}\n                        >\n                            Think\n                        </LemonButton>\n                    </div>\n                </FlaggedFeature>\n                {promptError ? <LemonBanner type=\"warning\">{promptError}</LemonBanner> : null}\n                <div className=\"relative flex-1 overflow-hidden flex-col\">\n                    {/* eslint-disable-next-line react/forbid-dom-props */}\n                    <div ref={editorRef} className=\"resize-y overflow-hidden\" style={{ height: EDITOR_HEIGHT }}>\n                        <CodeEditor\n                            queryKey={codeEditorKey}\n                            sourceQuery={props.query}\n                            className=\"border rounded-b overflow-hidden h-full\"\n                            language=\"hogQL\"\n                            value={queryInput}\n                            onChange={(v) => {\n                                setQueryInput(v ?? '')\n                            }}\n                            height=\"100%\"\n                            onMount={(editor, monaco) => {\n                                setMonacoAndEditor([monaco, editor])\n                            }}\n                            onPressCmdEnter={(value, selectionType) => {\n                                if (value && selectionType === 'selection') {\n                                    saveQuery(value)\n                                } else {\n                                    saveQuery()\n                                }\n                            }}\n                            options={{\n                                minimap: {\n                                    enabled: false,\n                                },\n                                wordWrap: 'on',\n                                scrollBeyondLastLine: false,\n                                automaticLayout: true,\n                                fixedOverflowWidgets: true,\n                                suggest: {\n                                    showInlineDetails: true,\n                                },\n                                quickSuggestionsDelay: 300,\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className=\"flex flex-row px-px\">\n                    {props.editorFooter ? (\n                        props.editorFooter(hasErrors, error, isValidView)\n                    ) : (\n                        <>\n                            <div className=\"flex-1\">\n                                <LemonButton\n                                    onClick={() => saveQuery()}\n                                    type=\"primary\"\n                                    disabledReason={\n                                        !props.setQuery\n                                            ? 'No permission to update'\n                                            : hasErrors\n                                            ? error ?? 'Query has errors'\n                                            : undefined\n                                    }\n                                    center\n                                    fullWidth\n                                    data-attr=\"hogql-query-editor-save\"\n                                >\n                                    {!props.setQuery ? 'No permission to update' : 'Update and run'}\n                                </LemonButton>\n                            </div>\n                            {editingView ? (\n                                <LemonButton\n                                    className=\"ml-2\"\n                                    onClick={onUpdateView}\n                                    type=\"primary\"\n                                    center\n                                    disabledReason={\n                                        hasErrors\n                                            ? error ?? 'Query has errors'\n                                            : !isValidView\n                                            ? 'Some fields may need an alias'\n                                            : ''\n                                    }\n                                    data-attr=\"hogql-query-editor-update-view\"\n                                >\n                                    Update view\n                                </LemonButton>\n                            ) : (\n                                <LemonButton\n                                    className=\"ml-2\"\n                                    onClick={saveAsView}\n                                    type=\"primary\"\n                                    center\n                                    disabledReason={\n                                        hasErrors\n                                            ? error ?? 'Query has errors'\n                                            : !isValidView\n                                            ? 'Some fields may need an alias'\n                                            : ''\n                                    }\n                                    data-attr=\"hogql-query-editor-save-as-view\"\n                                    tooltip={\n                                        <div>\n                                            Save a query as a view that can be referenced in another query. This is\n                                            useful for modeling data and organizing large queries into readable chunks.{' '}\n                                            <Link to=\"https://posthog.com/docs/data-warehouse\">More Info</Link>{' '}\n                                        </div>\n                                    }\n                                >\n                                    Save as view\n                                </LemonButton>\n                            )}\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n", "import type { Monaco } from '@monaco-editor/react'\nimport { LemonDialog, LemonInput } from '@posthog/lemon-ui'\nimport { actions, connect, kea, key, listeners, path, props, propsChanged, reducers, selectors } from 'kea'\nimport { combineUrl } from 'kea-router'\nimport api from 'lib/api'\nimport { LemonField } from 'lib/lemon-ui/LemonField'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\n// Note: we can only import types and not values from monaco-editor, because otherwise some Monaco code breaks\n// auto reload in development. Specifically, on this line:\n// `export const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar')`\n// `new MenuId('suggestWidgetStatusBar')` causes the app to crash, because it cannot be called twice in the same\n// JS context, and that's exactly what happens on auto-reload when the new script chunks are loaded. Unfortunately\n// esbuild doesn't support manual chunks as of 2023, so we can't just put Monaco in its own chunk, which would prevent\n// re-importing. As for @monaco-editor/react, it does some lazy loading and doesn't have this problem.\nimport type { editor } from 'monaco-editor'\nimport { dataWarehouseViewsLogic } from 'scenes/data-warehouse/saved_queries/dataWarehouseViewsLogic'\nimport { dataWarehouseSceneLogic } from 'scenes/data-warehouse/settings/dataWarehouseSceneLogic'\nimport { preflightLogic } from 'scenes/PreflightCheck/preflightLogic'\n\nimport { DataNode, HogQLQuery, NodeKind } from '~/queries/schema/schema-general'\n\nimport type { hogQLQueryEditorLogicType } from './hogQLQueryEditorLogicType'\n\nexport interface HogQLQueryEditorLogicProps {\n    key: string | number\n    query: HogQLQuery\n    setQuery?: (query: HogQLQuery) => void\n    onChange?: (query: string) => void\n    monaco?: Monaco | null\n    editor?: editor.IStandaloneCodeEditor | null\n    metadataSource?: DataNode\n    queryResponse?: Record<string, any>\n}\n\nexport const hogQLQueryEditorLogic = kea<hogQLQueryEditorLogicType>([\n    path(['queries', 'nodes', 'HogQLQuery', 'hogQLQueryEditorLogic']),\n    props({} as HogQLQueryEditorLogicProps),\n    key((props) => props.key),\n    propsChanged(({ actions, props }, oldProps) => {\n        const selection = props.editor?.getSelection()\n        const model = props.editor?.getModel()\n        const highlightedQuery = selection && model ? model.getValueInRange(selection) : null\n\n        if (highlightedQuery && props.query.query === highlightedQuery) {\n            return\n        }\n\n        if (\n            typeof props.query.query === 'string' &&\n            (props.query.query !== oldProps.query.query || props.editor !== oldProps.editor)\n        ) {\n            actions.setQueryInput(props.query.query)\n        }\n    }),\n    connect({\n        values: [featureFlagLogic, ['featureFlags']],\n        actions: [dataWarehouseViewsLogic, ['createDataWarehouseSavedQuery'], dataWarehouseSceneLogic, ['updateView']],\n    }),\n    actions({\n        saveQuery: (queryOverride?: string) => ({ queryOverride }),\n        setQueryInput: (queryInput: string) => ({ queryInput }),\n        setPrompt: (prompt: string) => ({ prompt }),\n        setPromptError: (error: string | null) => ({ error }),\n        draftFromPrompt: true,\n        draftFromPromptComplete: true,\n        saveAsView: true,\n        saveAsViewSuccess: (name: string) => ({ name }),\n        onUpdateView: true,\n    }),\n    reducers(({ props }) => ({\n        queryInput: [\n            typeof props.query.query === 'string' ? props.query.query : '',\n            { setQueryInput: (_, { queryInput }) => queryInput },\n        ],\n        prompt: ['', { setPrompt: (_, { prompt }) => prompt }],\n        promptError: [\n            null as string | null,\n            { setPromptError: (_, { error }) => error, draftFromPrompt: () => null, saveQuery: () => null },\n        ],\n        promptLoading: [false, { draftFromPrompt: () => true, draftFromPromptComplete: () => false }],\n    })),\n    selectors({\n        aiAvailable: [() => [preflightLogic.selectors.preflight], (preflight) => preflight?.openai_available],\n    }),\n    listeners(({ actions, props, values }) => ({\n        saveQuery: ({ queryOverride }) => {\n            const query = values.queryInput\n            // TODO: Is below line necessary if the only way for queryInput to change is already through setQueryInput?\n            actions.setQueryInput(query)\n\n            props.setQuery?.({ ...props.query, query: queryOverride ?? query })\n        },\n        setQueryInput: async ({ queryInput }) => {\n            props.onChange?.(queryInput)\n        },\n        draftFromPrompt: async () => {\n            if (!values.aiAvailable) {\n                throw new Error(\n                    'To use AI features, configure environment variable OPENAI_API_KEY for this instance of PostHog'\n                )\n            }\n            try {\n                const result = await api.get(\n                    combineUrl(`api/projects/@current/query/draft_sql/`, {\n                        prompt: values.prompt,\n                        current_query: values.queryInput,\n                    }).url\n                )\n                const { sql } = result\n                actions.setQueryInput(sql)\n            } catch (e) {\n                actions.setPromptError((e as { code: string; detail: string }).detail)\n            } finally {\n                actions.draftFromPromptComplete()\n            }\n        },\n        saveAsView: async () => {\n            LemonDialog.openForm({\n                title: 'Save as view',\n                initialValues: { viewName: '' },\n                content: (\n                    <LemonField name=\"viewName\">\n                        <LemonInput placeholder=\"Please enter the name of the view\" autoFocus />\n                    </LemonField>\n                ),\n                errors: {\n                    viewName: (name) => (!name ? 'You must enter a name' : undefined),\n                },\n                onSubmit: ({ viewName }) => actions.saveAsViewSuccess(viewName),\n            })\n        },\n        saveAsViewSuccess: async ({ name }) => {\n            const query: HogQLQuery = {\n                kind: NodeKind.HogQLQuery,\n                query: values.queryInput,\n            }\n            const types = props.queryResponse?.types ?? []\n\n            await dataWarehouseViewsLogic.asyncActions.createDataWarehouseSavedQuery({ name, query, types })\n        },\n        onUpdateView: async () => {\n            const types = props.queryResponse?.types ?? []\n            actions.updateView(values.queryInput, types)\n        },\n    })),\n])\n", "import { IconQueryEditor } from 'lib/lemon-ui/icons'\nimport { LemonButton, LemonButtonWithoutSideActionProps } from 'lib/lemon-ui/LemonButton'\nimport { urls } from 'scenes/urls'\n\nimport { DataTableNode, NodeKind } from '~/queries/schema/schema-general'\n\nexport interface EditHogQLButtonProps extends LemonButtonWithoutSideActionProps {\n    hogql: string\n}\n\nexport function EditHogQLButton({ hogql, ...props }: EditHogQLButtonProps): JSX.Element {\n    const query: DataTableNode = {\n        kind: NodeKind.DataTableNode,\n        full: true,\n        source: { kind: NodeKind.HogQLQuery, query: hogql },\n    }\n    return (\n        <LemonButton\n            data-attr=\"open-json-editor-button\"\n            type=\"secondary\"\n            to={urls.insightNew({ query })}\n            icon={<IconQueryEditor />}\n            tooltip=\"Edit SQL directly\"\n            {...props}\n        />\n    )\n}\n", "import { IconPreview } from 'lib/lemon-ui/icons'\nimport { LemonButton, LemonButtonWithoutSideActionProps } from 'lib/lemon-ui/LemonButton'\nimport { urls } from 'scenes/urls'\n\nimport { Node } from '~/queries/schema/schema-general'\n\nexport interface OpenEditorButtonProps extends LemonButtonWithoutSideActionProps {\n    query: Node | null\n}\n\nexport function OpenEditorButton({ query, ...props }: OpenEditorButtonProps): JSX.Element {\n    return (\n        <LemonButton\n            data-attr=\"open-json-editor-button\"\n            type=\"secondary\"\n            to={query ? urls.insightNew({ query }) : undefined}\n            icon={<IconPreview />}\n            tooltip=\"Open as a new insight\"\n            {...props}\n        />\n    )\n}\n", "import { PropertyFilters } from 'lib/components/PropertyFilters/PropertyFilters'\nimport { TaxonomicFilterGroupType } from 'lib/components/TaxonomicFilter/types'\nimport { useState } from 'react'\n\nimport { ActorsQuery, NodeKind, PersonsNode } from '~/queries/schema/schema-general'\nimport { isActorsQuery } from '~/queries/utils'\nimport { PersonPropertyFilter } from '~/types'\n\ninterface PersonPropertyFiltersProps {\n    query: PersonsNode | ActorsQuery\n    setQuery?: (query: PersonsNode | ActorsQuery) => void\n}\n\nlet uniqueNode = 0\nexport function PersonPropertyFilters({ query, setQuery }: PersonPropertyFiltersProps): JSX.Element {\n    const [id] = useState(uniqueNode++)\n    return !query.properties || Array.isArray(query.properties) ? (\n        <PropertyFilters\n            propertyFilters={query.properties || []}\n            onChange={(value) => {\n                setQuery?.({\n                    ...query,\n                    properties: value as PersonPropertyFilter[],\n                })\n            }}\n            pageKey={`PersonPropertyFilters.${id}`}\n            taxonomicGroupTypes={\n                isActorsQuery(query)\n                    ? [\n                          TaxonomicFilterGroupType.PersonProperties,\n                          TaxonomicFilterGroupType.Cohorts,\n                          TaxonomicFilterGroupType.HogQLExpression,\n                      ]\n                    : [TaxonomicFilterGroupType.PersonProperties]\n            }\n            metadataSource={{ kind: NodeKind.ActorsQuery }}\n        />\n    ) : (\n        <div>Error: property groups are not supported.</div>\n    )\n}\n", "import { IconInfo } from '@posthog/icons'\nimport { LemonInput } from 'lib/lemon-ui/LemonInput/LemonInput'\nimport { Tooltip } from 'lib/lemon-ui/Tooltip'\n\nimport { useDebouncedQuery } from '~/queries/hooks/useDebouncedQuery'\nimport { ActorsQuery, PersonsNode } from '~/queries/schema/schema-general'\nimport { isQueryForGroup } from '~/queries/utils'\n\ntype ActorType = 'person' | 'group'\ninterface PersonSearchProps {\n    query: PersonsNode | ActorsQuery\n    setQuery?: (query: PersonsNode | ActorsQuery) => void\n}\n\ninterface LabelType {\n    label: string\n    description: string\n}\n\nconst labels: Record<ActorType, LabelType> = {\n    person: {\n        label: 'persons',\n        description: 'Search by name, email, Person ID or Distinct ID.',\n    },\n    group: {\n        label: 'groups',\n        description:\n            'Search by group name or Distinct ID. Group name will match partially. Distinct ID needs to match exactly.',\n    },\n}\n\nexport function PersonsSearch({ query, setQuery }: PersonSearchProps): JSX.Element {\n    const { value, onChange } = useDebouncedQuery<PersonsNode | ActorsQuery, string>(\n        query,\n        setQuery,\n        (query) => query.search || '',\n        (query, value) => ({ ...query, search: value })\n    )\n    const target: ActorType = isQueryForGroup(query) ? 'group' : 'person'\n\n    return (\n        <div className=\"flex items-center gap-2\">\n            <LemonInput\n                type=\"search\"\n                value={value}\n                placeholder={`Search for ${labels[target].label}`}\n                data-attr=\"persons-search\"\n                disabled={!setQuery}\n                onChange={onChange}\n            />\n            <Tooltip title={labels[target].description}>\n                <IconInfo className=\"text-2xl text-secondary shrink-0\" />\n            </Tooltip>\n        </div>\n    )\n}\n", "import { useEffect, useRef, useState } from 'react'\n\nimport { Node } from '~/queries/schema/schema-general'\n\nexport function useDebouncedQuery<T extends Node = Node, V extends string = string>(\n    query: T,\n    setQuery: ((query: T) => void) | undefined,\n    getValueFromQuery: (query: T) => V,\n    getModifiedQuery: (query: T, value: V) => T,\n    timeoutMs: number = 300\n): { value: V; onChange: (value: V) => void } {\n    const propsValue: V = getValueFromQuery(query)\n    const [localValue, setLocalValue] = useState(propsValue)\n\n    // keep a ref to the latest query, so we don't override any other changes while waiting\n    const queryRef = useRef(query)\n    useEffect(() => {\n        queryRef.current = query\n    }, [query])\n\n    const timeoutRef = useRef<number>()\n    const onChange = (newValue: V): void => {\n        setLocalValue(newValue)\n        timeoutRef.current && clearTimeout(timeoutRef.current)\n        timeoutRef.current = window.setTimeout(() => {\n            setQuery?.(getModifiedQuery(queryRef.current, newValue))\n        }, timeoutMs)\n    }\n    return { value: localValue, onChange }\n}\n", "import { LemonButton } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { IconTableChart } from 'lib/lemon-ui/icons'\nimport { LemonMenuOverlay } from 'lib/lemon-ui/LemonMenu/LemonMenu'\nimport { urls } from 'scenes/urls'\n\nimport { DataTableNode, NodeKind } from '~/queries/schema/schema-general'\n\nimport { dataTableLogic } from './dataTableLogic'\n\ninterface DataTableOpenEditorProps {\n    query: DataTableNode\n    setQuery?: (query: DataTableNode) => void\n}\n\nexport function DataTableOpenEditor({ query }: DataTableOpenEditorProps): JSX.Element | null {\n    const { response } = useValues(dataTableLogic)\n\n    const tableInsightQuery: DataTableNode | null = response?.hogql\n        ? {\n              kind: NodeKind.DataTableNode,\n              full: true,\n              source: { kind: NodeKind.HogQLQuery, query: response.hogql },\n          }\n        : null\n\n    return (\n        <LemonButton\n            type=\"secondary\"\n            icon={<IconTableChart />}\n            to={urls.insightNew({ query })}\n            sideAction={\n                response?.hogql\n                    ? {\n                          dropdown: {\n                              overlay: (\n                                  <LemonMenuOverlay\n                                      items={[\n                                          {\n                                              label: 'Open as direct SQL insight',\n                                              to: urls.insightNew({ query: tableInsightQuery! }),\n                                              'data-attr': 'open-sql-editor-button',\n                                          },\n                                      ]}\n                                  />\n                              ),\n                          },\n                      }\n                    : undefined\n            }\n            data-attr=\"open-json-editor-button\"\n        >\n            Open as new insight\n        </LemonButton>\n    )\n}\n", "import Ajv from 'ajv'\n\nimport { WebAnalyticsPropertyFilters } from '~/queries/schema/schema-general'\nimport { AnyPropertyFilter, SessionPropertyFilter } from '~/types'\n\nimport schema from './schema.json'\nconst ajv = new Ajv({\n    allowUnionTypes: true,\n})\najv.addSchema(schema)\n\nexport const isAnyPropertyFilters = (data: unknown): data is AnyPropertyFilter[] => {\n    const validator = ajv.getSchema('#/definitions/AnyPropertyFilter')\n    if (!validator) {\n        throw new Error('Could not find validator for AnyPropertyFilter')\n    }\n    if (!Array.isArray(data)) {\n        return false\n    }\n    return data.every((item) => validator(item))\n}\n\nexport const isWebAnalyticsPropertyFilters = (data: unknown): data is WebAnalyticsPropertyFilters => {\n    const validator = ajv.getSchema('#/definitions/WebAnalyticsPropertyFilters')\n    if (!validator) {\n        throw new Error('Could not find validator for WebAnalyticsPropertyFilters')\n    }\n    return validator(data) as boolean\n}\n\nexport const isSessionPropertyFilters = (data: unknown): data is SessionPropertyFilter[] => {\n    const validator = ajv.getSchema('#/definitions/SessionPropertyFilter')\n    if (!validator) {\n        throw new Error('Could not find validator for SessionPropertyFilter')\n    }\n    if (!Array.isArray(data)) {\n        return false\n    }\n    return data.every((item) => validator(item))\n}\n", "{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"definitions\": {\n        \"ActionConversionGoal\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"actionId\": {\n                    \"$ref\": \"#/definitions/integer\"\n                }\n            },\n            \"required\": [\"actionId\"],\n            \"type\": \"object\"\n        },\n        \"ActionsNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"type\": \"string\"\n                },\n                \"fixedProperties\": {\n                    \"description\": \"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"id\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"kind\": {\n                    \"const\": \"ActionsNode\",\n                    \"type\": \"string\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/MathType\"\n                },\n                \"math_group_type_index\": {\n                    \"enum\": [0, 1, 2, 3, 4],\n                    \"type\": \"number\"\n                },\n                \"math_hogql\": {\n                    \"type\": \"string\"\n                },\n                \"math_property\": {\n                    \"type\": \"string\"\n                },\n                \"math_property_type\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"id\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"ActorsPropertyTaxonomyQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"group_type_index\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"kind\": {\n                    \"const\": \"ActorsPropertyTaxonomyQuery\",\n                    \"type\": \"string\"\n                },\n                \"maxPropertyValues\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"property\": {\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ActorsPropertyTaxonomyQueryResponse\"\n                }\n            },\n            \"required\": [\"kind\", \"property\"],\n            \"type\": \"object\"\n        },\n        \"ActorsPropertyTaxonomyQueryResponse\": {\n            \"additionalProperties\": false,\n            \"description\": \"All analytics query responses must inherit from this.\",\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"$ref\": \"#/definitions/ActorsPropertyTaxonomyResponse\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"ActorsPropertyTaxonomyResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"sample_count\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"sample_values\": {\n                    \"items\": {\n                        \"anyOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            },\n                            {\n                                \"type\": \"boolean\"\n                            },\n                            {\n                                \"$ref\": \"#/definitions/integer\"\n                            }\n                        ]\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"sample_values\", \"sample_count\"],\n            \"type\": \"object\"\n        },\n        \"ActorsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"fixedProperties\": {\n                    \"description\": \"Currently only person filters supported. No filters for querying groups. See `filter_conditions()` in actor_strategies.py.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPersonScopeFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"const\": \"ActorsQuery\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"orderBy\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPersonScopeFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilterValue\"\n                        }\n                    ],\n                    \"description\": \"Currently only person filters supported. No filters for querying groups. See `filter_conditions()` in actor_strategies.py.\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ActorsQueryResponse\"\n                },\n                \"search\": {\n                    \"type\": \"string\"\n                },\n                \"select\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/HogQLExpression\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"source\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/InsightActorsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/FunnelsActorsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/FunnelCorrelationActorsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/StickinessActorsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/HogQLQuery\"\n                        }\n                    ]\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"ActorsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"missing_actors_count\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"items\": {},\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"columns\", \"hogql\", \"limit\", \"offset\", \"results\", \"types\"],\n            \"type\": \"object\"\n        },\n        \"AggregationAxisFormat\": {\n            \"enum\": [\"numeric\", \"duration\", \"duration_ms\", \"percentage\", \"percentage_scaled\"],\n            \"type\": \"string\"\n        },\n        \"AlertCalculationInterval\": {\n            \"enum\": [\"hourly\", \"daily\", \"weekly\", \"monthly\"],\n            \"type\": \"string\"\n        },\n        \"AlertCondition\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"type\": {\n                    \"$ref\": \"#/definitions/AlertConditionType\"\n                }\n            },\n            \"required\": [\"type\"],\n            \"type\": \"object\"\n        },\n        \"AlertConditionType\": {\n            \"enum\": [\"absolute_value\", \"relative_increase\", \"relative_decrease\"],\n            \"type\": \"string\"\n        },\n        \"AlertState\": {\n            \"enum\": [\"Firing\", \"Not firing\", \"Errored\", \"Snoozed\"],\n            \"type\": \"string\"\n        },\n        \"AnyDataNode\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/EventsNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ActionsNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PersonsNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ActorsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/InsightActorsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/InsightActorsQueryOptions\"\n                },\n                {\n                    \"$ref\": \"#/definitions/SessionsTimelineQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLMetadata\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLAutocomplete\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebOverviewQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebStatsTableQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebExternalClicksTableQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebGoalsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebVitalsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebVitalsPathBreakdownQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/SessionAttributionExplorerQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ErrorTrackingQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ExperimentFunnelsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ExperimentTrendsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/RecordingsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/TracesQuery\"\n                }\n            ]\n        },\n        \"AnyEntityNode\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/EventsNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ActionsNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DataWarehouseNode\"\n                }\n            ]\n        },\n        \"AnyFilterLike\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PropertyGroupFilterValue\"\n                }\n            ]\n        },\n        \"AnyPersonScopeFilter\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/PersonPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/CohortPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EmptyPropertyFilter\"\n                }\n            ],\n            \"description\": \"Any filter type supported by `property_to_expr(scope=\\\"person\\\", ...)`.\"\n        },\n        \"AnyPropertyFilter\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/EventPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PersonPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ElementPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/SessionPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/CohortPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/RecordingPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/LogEntryPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/GroupPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/FeaturePropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EmptyPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DataWarehousePropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DataWarehousePersonPropertyFilter\"\n                }\n            ]\n        },\n        \"AnyResponseType\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"object\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQueryResponse\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLQueryResponse\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLMetadataResponse\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLAutocompleteResponse\"\n                },\n                {\n                    \"type\": \"object\"\n                },\n                {\n                    \"not\": {}\n                },\n                {\n                    \"$ref\": \"#/definitions/EventsQueryResponse\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ErrorTrackingQueryResponse\"\n                }\n            ]\n        },\n        \"AssistantArrayPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"operator\": {\n                    \"$ref\": \"#/definitions/AssistantArrayPropertyFilterOperator\",\n                    \"description\": \"`exact` - exact match of any of the values. `is_not` - does not match any of the values.\"\n                },\n                \"value\": {\n                    \"description\": \"Only use property values from the plan. Always use strings as values. If you have a number, convert it to a string first. If you have a boolean, convert it to a string \\\"true\\\" or \\\"false\\\".\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"operator\", \"value\"],\n            \"type\": \"object\"\n        },\n        \"AssistantArrayPropertyFilterOperator\": {\n            \"enum\": [\"exact\", \"is_not\"],\n            \"type\": \"string\"\n        },\n        \"AssistantBaseMultipleBreakdownFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"property\": {\n                    \"description\": \"Property name from the plan to break down by.\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"property\"],\n            \"type\": \"object\"\n        },\n        \"AssistantBasePropertyFilter\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/AssistantStringNumberOrBooleanPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/AssistantDateTimePropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/AssistantSetPropertyFilter\"\n                }\n            ]\n        },\n        \"AssistantBreakdownFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdown_limit\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"default\": 25,\n                    \"description\": \"How many distinct values to show.\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"AssistantDateTimePropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"operator\": {\n                    \"$ref\": \"#/definitions/AssistantDateTimePropertyFilterOperator\"\n                },\n                \"value\": {\n                    \"description\": \"Value must be a date in ISO 8601 format.\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"operator\", \"value\"],\n            \"type\": \"object\"\n        },\n        \"AssistantDateTimePropertyFilterOperator\": {\n            \"enum\": [\"is_date_exact\", \"is_date_before\", \"is_date_after\"],\n            \"type\": \"string\"\n        },\n        \"AssistantEventMultipleBreakdownFilterType\": {\n            \"enum\": [\"person\", \"event\", \"session\", \"hogql\"],\n            \"type\": \"string\"\n        },\n        \"AssistantEventType\": {\n            \"enum\": [\"status\", \"message\", \"conversation\"],\n            \"type\": \"string\"\n        },\n        \"AssistantForm\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"options\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantFormOption\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"options\"],\n            \"type\": \"object\"\n        },\n        \"AssistantFormOption\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"value\": {\n                    \"type\": \"string\"\n                },\n                \"variant\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"value\"],\n            \"type\": \"object\"\n        },\n        \"AssistantFunnelsBreakdownFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdown\": {\n                    \"description\": \"The entity property to break down by.\",\n                    \"type\": \"string\"\n                },\n                \"breakdown_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"If `breakdown_type` is `group`, this is the index of the group. Use the index from the group mapping.\"\n                },\n                \"breakdown_limit\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"default\": 25,\n                    \"description\": \"How many distinct values to show.\"\n                },\n                \"breakdown_type\": {\n                    \"$ref\": \"#/definitions/AssistantFunnelsBreakdownType\",\n                    \"default\": \"event\",\n                    \"description\": \"Type of the entity to break down by. If `group` is used, you must also provide `breakdown_group_type_index` from the group mapping.\"\n                }\n            },\n            \"required\": [\"breakdown_type\", \"breakdown\"],\n            \"type\": \"object\"\n        },\n        \"AssistantFunnelsBreakdownType\": {\n            \"enum\": [\"person\", \"event\", \"group\", \"session\"],\n            \"type\": \"string\"\n        },\n        \"AssistantFunnelsEventsNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"description\": \"Optional custom name for the event if it is needed to be renamed.\",\n                    \"type\": \"string\"\n                },\n                \"event\": {\n                    \"description\": \"Name of the event.\",\n                    \"type\": \"string\"\n                },\n                \"kind\": {\n                    \"const\": \"EventsNode\",\n                    \"type\": \"string\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/AssistantTrendsMath\",\n                    \"description\": \"Optional math aggregation type for the series. Only specify this math type if the user wants one of these. `first_time_for_user` - counts the number of users who have completed the event for the first time ever. `first_time_for_user_with_filters` - counts the number of users who have completed the event with specified filters for the first time.\"\n                },\n                \"properties\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"event\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"AssistantFunnelsExclusionEventsNode\": {\n            \"additionalProperties\": false,\n            \"description\": \"Exclustion steps for funnels. The \\\"from\\\" and \\\"to\\\" steps must not exceed the funnel's series length.\",\n            \"properties\": {\n                \"event\": {\n                    \"type\": \"string\"\n                },\n                \"funnelFromStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"funnelToStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"kind\": {\n                    \"const\": \"EventsNode\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"event\", \"funnelFromStep\", \"funnelToStep\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"AssistantFunnelsFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"binCount\": {\n                    \"description\": \"Use this setting only when `funnelVizType` is `time_to_convert`: number of bins to show in histogram.\",\n                    \"type\": \"integer\"\n                },\n                \"exclusions\": {\n                    \"default\": [],\n                    \"description\": \"Users may want to use exclusion events to filter out conversions in which a particular event occurred between specific steps. These events must not be included in the main sequence. You must include start and end indexes for each exclusion where the minimum index is one and the maximum index is the number of steps in the funnel. For example, there is a sequence with three steps: sign up, finish onboarding, purchase. If the user wants to exclude all conversions in which users left the page before finishing the onboarding, the exclusion step would be the event `$pageleave` with start index 2 and end index 3.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantFunnelsExclusionEventsNode\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnelAggregateByHogQL\": {\n                    \"const\": \"properties.$session_id\",\n                    \"description\": \"Use this field only if the user explicitly asks to aggregate the funnel by unique sessions.\",\n                    \"type\": \"string\"\n                },\n                \"funnelOrderType\": {\n                    \"$ref\": \"#/definitions/StepOrderValue\",\n                    \"default\": \"ordered\",\n                    \"description\": \"Defines the behavior of event matching between steps. Prefer the `strict` option unless explicitly told to use a different one. `ordered` - defines a sequential funnel. Step B must happen after Step A, but any number of events can happen between A and B. `strict` - defines a funnel where all events must happen in order. Step B must happen directly after Step A without any events in between. `any` - order doesn't matter. Steps can be completed in any sequence.\"\n                },\n                \"funnelStepReference\": {\n                    \"$ref\": \"#/definitions/FunnelStepReference\",\n                    \"default\": \"total\",\n                    \"description\": \"Whether conversion shown in the graph should be across all steps or just relative to the previous step.\"\n                },\n                \"funnelVizType\": {\n                    \"$ref\": \"#/definitions/FunnelVizType\",\n                    \"default\": \"steps\",\n                    \"description\": \"Defines the type of visualization to use. The `steps` option is recommended. `steps` - shows a step-by-step funnel. Perfect to show a conversion rate of a sequence of events (default). `time_to_convert` - shows a histogram of the time it took to complete the funnel. `trends` - shows trends of the conversion rate of the whole sequence over time.\"\n                },\n                \"funnelWindowInterval\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"default\": 14,\n                    \"description\": \"Controls a time frame value for a conversion to be considered. Select a reasonable value based on the user's query. Use in combination with `funnelWindowIntervalUnit`. The default value is 14 days.\"\n                },\n                \"funnelWindowIntervalUnit\": {\n                    \"$ref\": \"#/definitions/FunnelConversionWindowTimeUnit\",\n                    \"default\": \"day\",\n                    \"description\": \"Controls a time frame interval for a conversion to be considered. Select a reasonable value based on the user's query. Use in combination with `funnelWindowInterval`. The default value is 14 days.\"\n                },\n                \"layout\": {\n                    \"$ref\": \"#/definitions/FunnelLayout\",\n                    \"default\": \"vertical\",\n                    \"description\": \"Controls how the funnel chart is displayed: vertically (preferred) or horizontally.\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"AssistantFunnelsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"description\": \"Use this field to define the aggregation by a specific group from the group mapping that the user has provided.\"\n                },\n                \"breakdownFilter\": {\n                    \"$ref\": \"#/definitions/AssistantFunnelsBreakdownFilter\",\n                    \"description\": \"Breakdown the chart by a property\"\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"funnelsFilter\": {\n                    \"$ref\": \"#/definitions/AssistantFunnelsFilter\",\n                    \"description\": \"Properties specific to the funnels insight\"\n                },\n                \"interval\": {\n                    \"$ref\": \"#/definitions/IntervalType\",\n                    \"description\": \"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`\"\n                },\n                \"kind\": {\n                    \"const\": \"FunnelsQuery\",\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate from 0 to 1 where 1 is 100% of the data.\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"series\": {\n                    \"description\": \"Events to include\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantFunnelsEventsNode\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"kind\", \"series\"],\n            \"type\": \"object\"\n        },\n        \"AssistantGenerationStatusEvent\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"type\": {\n                    \"$ref\": \"#/definitions/AssistantGenerationStatusType\"\n                }\n            },\n            \"required\": [\"type\"],\n            \"type\": \"object\"\n        },\n        \"AssistantGenerationStatusType\": {\n            \"enum\": [\"ack\", \"generation_error\"],\n            \"type\": \"string\"\n        },\n        \"AssistantGenericMultipleBreakdownFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"property\": {\n                    \"description\": \"Property name from the plan to break down by.\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/AssistantEventMultipleBreakdownFilterType\"\n                }\n            },\n            \"required\": [\"property\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"AssistantGenericPropertyFilter\": {\n            \"anyOf\": [\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"key\": {\n                            \"description\": \"Use one of the properties the user has provided in the plan.\",\n                            \"type\": \"string\"\n                        },\n                        \"operator\": {\n                            \"$ref\": \"#/definitions/AssistantSingleValuePropertyFilterOperator\",\n                            \"description\": \"`icontains` - case insensitive contains. `not_icontains` - case insensitive does not contain. `regex` - matches the regex pattern. `not_regex` - does not match the regex pattern.\"\n                        },\n                        \"type\": {\n                            \"anyOf\": [\n                                {\n                                    \"const\": \"event\",\n                                    \"description\": \"Event properties\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"person\",\n                                    \"description\": \"Person properties\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"session\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"feature\",\n                                    \"description\": \"Event property with \\\"$feature/\\\" prepended\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"value\": {\n                            \"description\": \"Only use property values from the plan. If the operator is `regex` or `not_regex`, the value must be a valid ClickHouse regex pattern to match against. Otherwise, the value must be a substring that will be matched against the property value.\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"key\", \"operator\", \"type\", \"value\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"key\": {\n                            \"description\": \"Use one of the properties the user has provided in the plan.\",\n                            \"type\": \"string\"\n                        },\n                        \"operator\": {\n                            \"$ref\": \"#/definitions/AssistantArrayPropertyFilterOperator\",\n                            \"description\": \"`exact` - exact match of any of the values. `is_not` - does not match any of the values.\"\n                        },\n                        \"type\": {\n                            \"anyOf\": [\n                                {\n                                    \"const\": \"event\",\n                                    \"description\": \"Event properties\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"person\",\n                                    \"description\": \"Person properties\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"session\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"feature\",\n                                    \"description\": \"Event property with \\\"$feature/\\\" prepended\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"value\": {\n                            \"description\": \"Only use property values from the plan. Always use strings as values. If you have a number, convert it to a string first. If you have a boolean, convert it to a string \\\"true\\\" or \\\"false\\\".\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"key\", \"operator\", \"type\", \"value\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"key\": {\n                            \"description\": \"Use one of the properties the user has provided in the plan.\",\n                            \"type\": \"string\"\n                        },\n                        \"operator\": {\n                            \"$ref\": \"#/definitions/AssistantDateTimePropertyFilterOperator\"\n                        },\n                        \"type\": {\n                            \"anyOf\": [\n                                {\n                                    \"const\": \"event\",\n                                    \"description\": \"Event properties\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"person\",\n                                    \"description\": \"Person properties\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"session\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"feature\",\n                                    \"description\": \"Event property with \\\"$feature/\\\" prepended\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"value\": {\n                            \"description\": \"Value must be a date in ISO 8601 format.\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"key\", \"operator\", \"type\", \"value\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"key\": {\n                            \"description\": \"Use one of the properties the user has provided in the plan.\",\n                            \"type\": \"string\"\n                        },\n                        \"operator\": {\n                            \"$ref\": \"#/definitions/AssistantSetPropertyFilterOperator\",\n                            \"description\": \"`is_set` - the property has any value. `is_not_set` - the property doesn't have a value or wasn't collected.\"\n                        },\n                        \"type\": {\n                            \"anyOf\": [\n                                {\n                                    \"const\": \"event\",\n                                    \"description\": \"Event properties\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"person\",\n                                    \"description\": \"Person properties\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"session\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"const\": \"feature\",\n                                    \"description\": \"Event property with \\\"$feature/\\\" prepended\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        }\n                    },\n                    \"required\": [\"key\", \"operator\", \"type\"],\n                    \"type\": \"object\"\n                }\n            ]\n        },\n        \"AssistantGroupMultipleBreakdownFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Index of the group type from the group mapping.\"\n                },\n                \"property\": {\n                    \"description\": \"Property name from the plan to break down by.\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"const\": \"group\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"property\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"AssistantGroupPropertyFilter\": {\n            \"anyOf\": [\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"group_type_index\": {\n                            \"$ref\": \"#/definitions/integer\",\n                            \"description\": \"Index of the group type from the group mapping.\"\n                        },\n                        \"key\": {\n                            \"description\": \"Use one of the properties the user has provided in the plan.\",\n                            \"type\": \"string\"\n                        },\n                        \"operator\": {\n                            \"$ref\": \"#/definitions/AssistantSingleValuePropertyFilterOperator\",\n                            \"description\": \"`icontains` - case insensitive contains. `not_icontains` - case insensitive does not contain. `regex` - matches the regex pattern. `not_regex` - does not match the regex pattern.\"\n                        },\n                        \"type\": {\n                            \"const\": \"group\",\n                            \"type\": \"string\"\n                        },\n                        \"value\": {\n                            \"description\": \"Only use property values from the plan. If the operator is `regex` or `not_regex`, the value must be a valid ClickHouse regex pattern to match against. Otherwise, the value must be a substring that will be matched against the property value.\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"group_type_index\", \"key\", \"operator\", \"type\", \"value\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"group_type_index\": {\n                            \"$ref\": \"#/definitions/integer\",\n                            \"description\": \"Index of the group type from the group mapping.\"\n                        },\n                        \"key\": {\n                            \"description\": \"Use one of the properties the user has provided in the plan.\",\n                            \"type\": \"string\"\n                        },\n                        \"operator\": {\n                            \"$ref\": \"#/definitions/AssistantArrayPropertyFilterOperator\",\n                            \"description\": \"`exact` - exact match of any of the values. `is_not` - does not match any of the values.\"\n                        },\n                        \"type\": {\n                            \"const\": \"group\",\n                            \"type\": \"string\"\n                        },\n                        \"value\": {\n                            \"description\": \"Only use property values from the plan. Always use strings as values. If you have a number, convert it to a string first. If you have a boolean, convert it to a string \\\"true\\\" or \\\"false\\\".\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"group_type_index\", \"key\", \"operator\", \"type\", \"value\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"group_type_index\": {\n                            \"$ref\": \"#/definitions/integer\",\n                            \"description\": \"Index of the group type from the group mapping.\"\n                        },\n                        \"key\": {\n                            \"description\": \"Use one of the properties the user has provided in the plan.\",\n                            \"type\": \"string\"\n                        },\n                        \"operator\": {\n                            \"$ref\": \"#/definitions/AssistantDateTimePropertyFilterOperator\"\n                        },\n                        \"type\": {\n                            \"const\": \"group\",\n                            \"type\": \"string\"\n                        },\n                        \"value\": {\n                            \"description\": \"Value must be a date in ISO 8601 format.\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"group_type_index\", \"key\", \"operator\", \"type\", \"value\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"group_type_index\": {\n                            \"$ref\": \"#/definitions/integer\",\n                            \"description\": \"Index of the group type from the group mapping.\"\n                        },\n                        \"key\": {\n                            \"description\": \"Use one of the properties the user has provided in the plan.\",\n                            \"type\": \"string\"\n                        },\n                        \"operator\": {\n                            \"$ref\": \"#/definitions/AssistantSetPropertyFilterOperator\",\n                            \"description\": \"`is_set` - the property has any value. `is_not_set` - the property doesn't have a value or wasn't collected.\"\n                        },\n                        \"type\": {\n                            \"const\": \"group\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"group_type_index\", \"key\", \"operator\", \"type\"],\n                    \"type\": \"object\"\n                }\n            ]\n        },\n        \"AssistantInsightsQueryBase\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"properties\": {\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate from 0 to 1 where 1 is 100% of the data.\",\n                    \"type\": [\"number\", \"null\"]\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"AssistantMessage\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"meta\": {\n                    \"$ref\": \"#/definitions/AssistantMessageMetadata\"\n                },\n                \"tool_calls\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantToolCall\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"type\": {\n                    \"const\": \"ai\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"type\", \"content\"],\n            \"type\": \"object\"\n        },\n        \"AssistantMessageMetadata\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"form\": {\n                    \"$ref\": \"#/definitions/AssistantForm\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"AssistantMessageType\": {\n            \"enum\": [\"human\", \"tool\", \"ai\", \"ai/reasoning\", \"ai/viz\", \"ai/failure\"],\n            \"type\": \"string\"\n        },\n        \"AssistantMultipleBreakdownFilter\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/AssistantGroupMultipleBreakdownFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/AssistantGenericMultipleBreakdownFilter\"\n                }\n            ]\n        },\n        \"AssistantPropertyFilter\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/AssistantGenericPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/AssistantGroupPropertyFilter\"\n                }\n            ]\n        },\n        \"AssistantRetentionFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cumulative\": {\n                    \"description\": \"Whether retention should be rolling (aka unbounded, cumulative). Rolling retention means that a user coming back in period 5 makes them count towards all the previous periods.\",\n                    \"type\": \"boolean\"\n                },\n                \"period\": {\n                    \"$ref\": \"#/definitions/RetentionPeriod\",\n                    \"default\": \"Day\",\n                    \"description\": \"Retention period, the interval to track cohorts by.\"\n                },\n                \"retentionReference\": {\n                    \"description\": \"Whether retention is with regard to initial cohort size, or that of the previous period.\",\n                    \"enum\": [\"total\", \"previous\"],\n                    \"type\": \"string\"\n                },\n                \"retentionType\": {\n                    \"$ref\": \"#/definitions/RetentionType\",\n                    \"description\": \"Retention type: recurring or first time. Recurring retention counts a user as part of a cohort if they performed the cohort event during that time period, irrespective of it was their first time or not. First time retention only counts a user as part of the cohort if it was their first time performing the cohort event.\"\n                },\n                \"returningEntity\": {\n                    \"$ref\": \"#/definitions/RetentionEntity\",\n                    \"description\": \"Retention event (event marking the user coming back).\"\n                },\n                \"showMean\": {\n                    \"description\": \"Whether an additional series should be shown, showing the mean conversion for each period across cohorts.\",\n                    \"type\": \"boolean\"\n                },\n                \"targetEntity\": {\n                    \"$ref\": \"#/definitions/RetentionEntity\",\n                    \"description\": \"Activation event (event putting the actor into the initial cohort).\"\n                },\n                \"totalIntervals\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"default\": 11,\n                    \"description\": \"How many intervals to show in the chart. The default value is 11 (meaning 10 periods after initial cohort).\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"AssistantRetentionQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"RetentionQuery\",\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"retentionFilter\": {\n                    \"$ref\": \"#/definitions/AssistantRetentionFilter\",\n                    \"description\": \"Properties specific to the retention insight\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate from 0 to 1 where 1 is 100% of the data.\",\n                    \"type\": [\"number\", \"null\"]\n                }\n            },\n            \"required\": [\"kind\", \"retentionFilter\"],\n            \"type\": \"object\"\n        },\n        \"AssistantSetPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"operator\": {\n                    \"$ref\": \"#/definitions/AssistantSetPropertyFilterOperator\",\n                    \"description\": \"`is_set` - the property has any value. `is_not_set` - the property doesn't have a value or wasn't collected.\"\n                }\n            },\n            \"required\": [\"operator\"],\n            \"type\": \"object\"\n        },\n        \"AssistantSetPropertyFilterOperator\": {\n            \"enum\": [\"is_set\", \"is_not_set\"],\n            \"type\": \"string\"\n        },\n        \"AssistantSingleValuePropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"operator\": {\n                    \"$ref\": \"#/definitions/AssistantSingleValuePropertyFilterOperator\",\n                    \"description\": \"`icontains` - case insensitive contains. `not_icontains` - case insensitive does not contain. `regex` - matches the regex pattern. `not_regex` - does not match the regex pattern.\"\n                },\n                \"value\": {\n                    \"description\": \"Only use property values from the plan. If the operator is `regex` or `not_regex`, the value must be a valid ClickHouse regex pattern to match against. Otherwise, the value must be a substring that will be matched against the property value.\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"operator\", \"value\"],\n            \"type\": \"object\"\n        },\n        \"AssistantSingleValuePropertyFilterOperator\": {\n            \"enum\": [\"exact\", \"is_not\", \"icontains\", \"not_icontains\", \"regex\", \"not_regex\"],\n            \"type\": \"string\"\n        },\n        \"AssistantStringNumberOrBooleanPropertyFilter\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/AssistantSingleValuePropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/AssistantArrayPropertyFilter\"\n                }\n            ]\n        },\n        \"AssistantToolCall\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"args\": {\n                    \"additionalProperties\": {},\n                    \"type\": \"object\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"id\", \"name\", \"args\"],\n            \"type\": \"object\"\n        },\n        \"AssistantToolCallMessage\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"tool_call_id\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"const\": \"tool\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"type\", \"content\", \"tool_call_id\"],\n            \"type\": \"object\"\n        },\n        \"AssistantTrendsBreakdownFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdown_limit\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"default\": 25,\n                    \"description\": \"How many distinct values to show.\"\n                },\n                \"breakdowns\": {\n                    \"description\": \"Use this field to define breakdowns.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantMultipleBreakdownFilter\"\n                    },\n                    \"maxLength\": 3,\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"breakdowns\"],\n            \"type\": \"object\"\n        },\n        \"AssistantTrendsDisplayType\": {\n            \"anyOf\": [\n                {\n                    \"const\": \"ActionsLineGraph\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"ActionsBar\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"ActionsAreaGraph\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"ActionsLineGraphCumulative\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"BoldNumber\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"ActionsPie\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"ActionsBarValue\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"ActionsTable\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"WorldMap\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"not\": {}\n                }\n            ]\n        },\n        \"AssistantTrendsEventsNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"type\": \"string\"\n                },\n                \"event\": {\n                    \"description\": \"The event or `null` for all events.\",\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"kind\": {\n                    \"const\": \"EventsNode\",\n                    \"type\": \"string\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/MathType\"\n                },\n                \"math_group_type_index\": {\n                    \"enum\": [0, 1, 2, 3, 4],\n                    \"type\": \"number\"\n                },\n                \"math_property\": {\n                    \"type\": \"string\"\n                },\n                \"math_property_type\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"orderBy\": {\n                    \"description\": \"Columns to order by\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"properties\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"AssistantTrendsFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"aggregationAxisFormat\": {\n                    \"$ref\": \"#/definitions/AggregationAxisFormat\",\n                    \"default\": \"numeric\",\n                    \"description\": \"Formats the trends value axis. Do not use the formatting unless you are absolutely sure that formatting will match the data. `numeric` - no formatting. Prefer this option by default. `duration` - formats the value in seconds to a human-readable duration, e.g., `132` becomes `2 minutes 12 seconds`. Use this option only if you are sure that the values are in seconds. `duration_ms` - formats the value in miliseconds to a human-readable duration, e.g., `1050` becomes `1 second 50 milliseconds`. Use this option only if you are sure that the values are in miliseconds. `percentage` - adds a percentage sign to the value, e.g., `50` becomes `50%`. `percentage_scaled` - formats the value as a percentage scaled to 0-100, e.g., `0.5` becomes `50%`.\"\n                },\n                \"aggregationAxisPostfix\": {\n                    \"description\": \"Custom postfix to add to the aggregation axis, e.g., ` clicks` to format 5 as `5 clicks`. You may need to add a space before postfix.\",\n                    \"type\": \"string\"\n                },\n                \"aggregationAxisPrefix\": {\n                    \"description\": \"Custom prefix to add to the aggregation axis, e.g., `$` for USD dollars. You may need to add a space after prefix.\",\n                    \"type\": \"string\"\n                },\n                \"decimalPlaces\": {\n                    \"description\": \"Number of decimal places to show. Do not add this unless you are sure that values will have a decimal point.\",\n                    \"type\": \"number\"\n                },\n                \"display\": {\n                    \"default\": \"ActionsLineGraph\",\n                    \"description\": \"Visualization type. Available values: `ActionsLineGraph` - time-series line chart; most common option, as it shows change over time. `ActionsBar` - time-series bar chart. `ActionsAreaGraph` - time-series area chart. `ActionsLineGraphCumulative` - cumulative time-series line chart; good for cumulative metrics. `BoldNumber` - total value single large number. You can't use this with breakdown or with multiple series; use when user explicitly asks for a single output number. `ActionsBarValue` - total value (NOT time-series) bar chart; good for categorical data. `ActionsPie` - total value pie chart; good for visualizing proportions. `ActionsTable` - total value table; good when using breakdown to list users or other entities. `WorldMap` - total value world map; use when breaking down by country name using property `$geoip_country_name`, and only then.\",\n                    \"enum\": [\n                        \"ActionsLineGraph\",\n                        \"ActionsBar\",\n                        \"ActionsAreaGraph\",\n                        \"ActionsLineGraphCumulative\",\n                        \"BoldNumber\",\n                        \"ActionsPie\",\n                        \"ActionsBarValue\",\n                        \"ActionsTable\",\n                        \"WorldMap\"\n                    ],\n                    \"type\": \"string\"\n                },\n                \"formulas\": {\n                    \"description\": \"If the formula is provided, apply it here.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"showLegend\": {\n                    \"default\": false,\n                    \"description\": \"Whether to show the legend describing series and breakdowns.\",\n                    \"type\": \"boolean\"\n                },\n                \"showPercentStackView\": {\n                    \"default\": false,\n                    \"description\": \"Whether to show a percentage of each series. Use only with\",\n                    \"type\": \"boolean\"\n                },\n                \"showValuesOnSeries\": {\n                    \"default\": false,\n                    \"description\": \"Whether to show a value on each data point.\",\n                    \"type\": \"boolean\"\n                },\n                \"yAxisScaleType\": {\n                    \"default\": \"linear\",\n                    \"description\": \"Whether to scale the y-axis.\",\n                    \"enum\": [\"log10\", \"linear\"],\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"AssistantTrendsMath\": {\n            \"enum\": [\"first_time_for_user\", \"first_time_for_user_with_filters\"],\n            \"type\": \"string\"\n        },\n        \"AssistantTrendsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdownFilter\": {\n                    \"$ref\": \"#/definitions/AssistantTrendsBreakdownFilter\",\n                    \"description\": \"Breakdown of the events\"\n                },\n                \"compareFilter\": {\n                    \"$ref\": \"#/definitions/CompareFilter\",\n                    \"description\": \"Compare to date range\"\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"interval\": {\n                    \"$ref\": \"#/definitions/IntervalType\",\n                    \"default\": \"day\",\n                    \"description\": \"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`\"\n                },\n                \"kind\": {\n                    \"const\": \"TrendsQuery\",\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate from 0 to 1 where 1 is 100% of the data.\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"series\": {\n                    \"description\": \"Events to include\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssistantTrendsEventsNode\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"trendsFilter\": {\n                    \"$ref\": \"#/definitions/AssistantTrendsFilter\",\n                    \"description\": \"Properties specific to the trends insight\"\n                }\n            },\n            \"required\": [\"kind\", \"series\"],\n            \"type\": \"object\"\n        },\n        \"AutocompleteCompletionItem\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"detail\": {\n                    \"description\": \"A human-readable string with additional information about this item, like type or symbol information.\",\n                    \"type\": \"string\"\n                },\n                \"documentation\": {\n                    \"description\": \"A human-readable string that represents a doc-comment.\",\n                    \"type\": \"string\"\n                },\n                \"insertText\": {\n                    \"description\": \"A string or snippet that should be inserted in a document when selecting this completion.\",\n                    \"type\": \"string\"\n                },\n                \"kind\": {\n                    \"$ref\": \"#/definitions/AutocompleteCompletionItemKind\",\n                    \"description\": \"The kind of this completion item. Based on the kind an icon is chosen by the editor.\"\n                },\n                \"label\": {\n                    \"description\": \"The label of this completion item. By default this is also the text that is inserted when selecting this completion.\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"label\", \"insertText\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"AutocompleteCompletionItemKind\": {\n            \"enum\": [\n                \"Method\",\n                \"Function\",\n                \"Constructor\",\n                \"Field\",\n                \"Variable\",\n                \"Class\",\n                \"Struct\",\n                \"Interface\",\n                \"Module\",\n                \"Property\",\n                \"Event\",\n                \"Operator\",\n                \"Unit\",\n                \"Value\",\n                \"Constant\",\n                \"Enum\",\n                \"EnumMember\",\n                \"Keyword\",\n                \"Text\",\n                \"Color\",\n                \"File\",\n                \"Reference\",\n                \"Customcolor\",\n                \"Folder\",\n                \"TypeParameter\",\n                \"User\",\n                \"Issue\",\n                \"Snippet\"\n            ],\n            \"type\": \"string\"\n        },\n        \"BaseAssistantMessage\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"BaseMathType\": {\n            \"enum\": [\n                \"total\",\n                \"dau\",\n                \"weekly_active\",\n                \"monthly_active\",\n                \"unique_session\",\n                \"first_time_for_user\",\n                \"first_matching_event_for_user\"\n            ],\n            \"type\": \"string\"\n        },\n        \"BinCountValue\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"number\"\n                },\n                {\n                    \"const\": \"auto\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        \"Breakdown\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"histogram_bin_count\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"normalize_url\": {\n                    \"type\": \"boolean\"\n                },\n                \"property\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/MultipleBreakdownType\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                }\n            },\n            \"required\": [\"property\"],\n            \"type\": \"object\"\n        },\n        \"BreakdownAttributionType\": {\n            \"enum\": [\"first_touch\", \"last_touch\", \"all_events\", \"step\"],\n            \"type\": \"string\"\n        },\n        \"BreakdownFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdown\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"items\": {\n                                \"anyOf\": [\n                                    {\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"$ref\": \"#/definitions/integer\"\n                                    }\n                                ]\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"breakdown_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"breakdown_hide_other_aggregation\": {\n                    \"type\": [\"boolean\", \"null\"]\n                },\n                \"breakdown_histogram_bin_count\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"breakdown_limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"breakdown_normalize_url\": {\n                    \"type\": \"boolean\"\n                },\n                \"breakdown_type\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/BreakdownType\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"default\": \"event\"\n                },\n                \"breakdowns\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/Breakdown\"\n                    },\n                    \"maxLength\": 3,\n                    \"type\": \"array\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"BreakdownItem\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/BreakdownValueInt\"\n                        }\n                    ]\n                }\n            },\n            \"required\": [\"label\", \"value\"],\n            \"type\": \"object\"\n        },\n        \"BreakdownKeyType\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\"\n                },\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"number\"\n                },\n                {\n                    \"items\": {\n                        \"anyOf\": [\n                            {\n                                \"type\": \"integer\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"type\": \"array\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        },\n        \"BreakdownType\": {\n            \"enum\": [\n                \"cohort\",\n                \"person\",\n                \"event\",\n                \"group\",\n                \"session\",\n                \"hogql\",\n                \"data_warehouse\",\n                \"data_warehouse_person_property\"\n            ],\n            \"type\": \"string\"\n        },\n        \"BreakdownValueInt\": {\n            \"$ref\": \"#/definitions/integer\"\n        },\n        \"CacheMissResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\"\n                }\n            },\n            \"required\": [\"cache_key\"],\n            \"type\": \"object\"\n        },\n        \"CachedActorsPropertyTaxonomyQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"$ref\": \"#/definitions/ActorsPropertyTaxonomyResponse\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedActorsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"missing_actors_count\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"items\": {},\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"columns\",\n                \"hogql\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"limit\",\n                \"next_allowed_client_refresh\",\n                \"offset\",\n                \"results\",\n                \"timezone\",\n                \"types\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedErrorTrackingQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ErrorTrackingIssue\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedEventTaxonomyQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"$ref\": \"#/definitions/EventTaxonomyResponse\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedEventsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"items\": {},\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"columns\",\n                \"hogql\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\",\n                \"types\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedExperimentExposureQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"date_range\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentExposureQuery\",\n                    \"type\": \"string\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"timeseries\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ExperimentExposureTimeSeries\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"total_exposures\": {\n                    \"additionalProperties\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"date_range\",\n                \"is_cached\",\n                \"kind\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"timeseries\",\n                \"timezone\",\n                \"total_exposures\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedExperimentFunnelsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"credible_intervals\": {\n                    \"additionalProperties\": {\n                        \"items\": {\n                            \"type\": \"number\"\n                        },\n                        \"maxItems\": 2,\n                        \"minItems\": 2,\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"expected_loss\": {\n                    \"type\": \"number\"\n                },\n                \"funnels_query\": {\n                    \"$ref\": \"#/definitions/FunnelsQuery\"\n                },\n                \"insight\": {\n                    \"items\": {\n                        \"items\": {\n                            \"type\": \"object\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentFunnelsQuery\",\n                    \"type\": \"string\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"probability\": {\n                    \"additionalProperties\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"significance_code\": {\n                    \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                },\n                \"significant\": {\n                    \"type\": \"boolean\"\n                },\n                \"stats_version\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"variants\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ExperimentVariantFunnelsBaseStats\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"credible_intervals\",\n                \"expected_loss\",\n                \"insight\",\n                \"is_cached\",\n                \"kind\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"probability\",\n                \"significance_code\",\n                \"significant\",\n                \"timezone\",\n                \"variants\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedExperimentQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"credible_intervals\": {\n                    \"additionalProperties\": {\n                        \"items\": {\n                            \"type\": \"number\"\n                        },\n                        \"maxItems\": 2,\n                        \"minItems\": 2,\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"insight\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentQuery\",\n                    \"type\": \"string\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"metric\": {\n                    \"$ref\": \"#/definitions/ExperimentMetric\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"p_value\": {\n                    \"type\": \"number\"\n                },\n                \"probability\": {\n                    \"additionalProperties\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"significance_code\": {\n                    \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                },\n                \"significant\": {\n                    \"type\": \"boolean\"\n                },\n                \"stats_version\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"variants\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ExperimentVariantTrendsBaseStats\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ExperimentVariantFunnelsBaseStats\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    ]\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"credible_intervals\",\n                \"insight\",\n                \"is_cached\",\n                \"kind\",\n                \"last_refresh\",\n                \"metric\",\n                \"next_allowed_client_refresh\",\n                \"p_value\",\n                \"probability\",\n                \"significance_code\",\n                \"significant\",\n                \"timezone\",\n                \"variants\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedExperimentTrendsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"count_query\": {\n                    \"$ref\": \"#/definitions/TrendsQuery\"\n                },\n                \"credible_intervals\": {\n                    \"additionalProperties\": {\n                        \"items\": {\n                            \"type\": \"number\"\n                        },\n                        \"maxItems\": 2,\n                        \"minItems\": 2,\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"exposure_query\": {\n                    \"$ref\": \"#/definitions/TrendsQuery\"\n                },\n                \"insight\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentTrendsQuery\",\n                    \"type\": \"string\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"p_value\": {\n                    \"type\": \"number\"\n                },\n                \"probability\": {\n                    \"additionalProperties\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"significance_code\": {\n                    \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                },\n                \"significant\": {\n                    \"type\": \"boolean\"\n                },\n                \"stats_version\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"variants\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ExperimentVariantTrendsBaseStats\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"credible_intervals\",\n                \"insight\",\n                \"is_cached\",\n                \"kind\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"p_value\",\n                \"probability\",\n                \"significance_code\",\n                \"significant\",\n                \"timezone\",\n                \"variants\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedFunnelCorrelationResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"$ref\": \"#/definitions/FunnelCorrelationResult\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedFunnelsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"isUdf\": {\n                    \"type\": \"boolean\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/FunnelStepsResults\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/FunnelStepsBreakdownResults\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/FunnelTimeToConvertResults\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/FunnelTrendsResults\"\n                        }\n                    ]\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedHogQLQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"clickhouse\": {\n                    \"description\": \"Executed ClickHouse query\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"description\": \"Returned columns\",\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"explain\": {\n                    \"description\": \"Query explanation output\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/HogQLMetadataResponse\",\n                    \"description\": \"Query metadata output\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query\": {\n                    \"description\": \"Input query string\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"description\": \"Types of returned columns\",\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedInsightActorsQueryOptionsResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdown\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/BreakdownItem\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"breakdowns\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/MultipleBreakdownOptions\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"compare\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"label\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"required\": [\"label\", \"value\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"day\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"label\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"anyOf\": [\n                                    {\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"$ref\": \"#/definitions/DatetimeDay\"\n                                    },\n                                    {\n                                        \"$ref\": \"#/definitions/Day\"\n                                    }\n                                ]\n                            }\n                        },\n                        \"required\": [\"label\", \"value\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"interval\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"label\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"$ref\": \"#/definitions/integer\",\n                                \"description\": \"An interval selected out of available intervals in source query\"\n                            }\n                        },\n                        \"required\": [\"label\", \"value\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"series\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"label\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"$ref\": \"#/definitions/integer\"\n                            }\n                        },\n                        \"required\": [\"label\", \"value\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"status\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"label\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"required\": [\"label\", \"value\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"cache_key\", \"is_cached\", \"last_refresh\", \"next_allowed_client_refresh\", \"timezone\"],\n            \"type\": \"object\"\n        },\n        \"CachedLifecycleQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedPathsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/PathsLink\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedRetentionQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/RetentionResult\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedSessionAttributionExplorerQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {},\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedSessionsTimelineQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TimelineEntry\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedStickinessQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedSuggestedQuestionsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"questions\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"questions\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedTeamTaxonomyQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"$ref\": \"#/definitions/TeamTaxonomyResponse\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedTracesQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/LLMTrace\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedTrendsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"description\": \"Wether more breakdown values are available.\",\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedWebExternalClicksTableQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"samplingRate\": {\n                    \"$ref\": \"#/definitions/SamplingRate\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedWebGoalsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"samplingRate\": {\n                    \"$ref\": \"#/definitions/SamplingRate\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedWebOverviewQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"dateFrom\": {\n                    \"type\": \"string\"\n                },\n                \"dateTo\": {\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/WebOverviewItem\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"samplingRate\": {\n                    \"$ref\": \"#/definitions/SamplingRate\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedWebStatsTableQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"samplingRate\": {\n                    \"$ref\": \"#/definitions/SamplingRate\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedWebVitalsPathBreakdownQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/WebVitalsPathBreakdownResult\"\n                    },\n                    \"maxItems\": 1,\n                    \"minItems\": 1,\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"CachedWebVitalsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/WebVitalsItem\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"ChartAxis\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"column\": {\n                    \"type\": \"string\"\n                },\n                \"settings\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"display\": {\n                            \"$ref\": \"#/definitions/ChartSettingsDisplay\"\n                        },\n                        \"formatting\": {\n                            \"$ref\": \"#/definitions/ChartSettingsFormatting\"\n                        }\n                    },\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"column\"],\n            \"type\": \"object\"\n        },\n        \"ChartDisplayCategory\": {\n            \"enum\": [\"TimeSeries\", \"CumulativeTimeSeries\", \"TotalValue\"],\n            \"type\": \"string\"\n        },\n        \"ChartDisplayType\": {\n            \"enum\": [\n                \"ActionsLineGraph\",\n                \"ActionsBar\",\n                \"ActionsStackedBar\",\n                \"ActionsAreaGraph\",\n                \"ActionsLineGraphCumulative\",\n                \"BoldNumber\",\n                \"ActionsPie\",\n                \"ActionsBarValue\",\n                \"ActionsTable\",\n                \"WorldMap\"\n            ],\n            \"type\": \"string\"\n        },\n        \"ChartSettings\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"goalLines\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/GoalLine\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"leftYAxisSettings\": {\n                    \"$ref\": \"#/definitions/YAxisSettings\"\n                },\n                \"rightYAxisSettings\": {\n                    \"$ref\": \"#/definitions/YAxisSettings\"\n                },\n                \"seriesBreakdownColumn\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"showLegend\": {\n                    \"type\": \"boolean\"\n                },\n                \"stackBars100\": {\n                    \"description\": \"Whether we fill the bars to 100% in stacked mode\",\n                    \"type\": \"boolean\"\n                },\n                \"xAxis\": {\n                    \"$ref\": \"#/definitions/ChartAxis\"\n                },\n                \"yAxis\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ChartAxis\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"yAxisAtZero\": {\n                    \"description\": \"Deprecated: use `[left|right]YAxisSettings`. Whether the Y axis should start at zero\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"ChartSettingsDisplay\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"color\": {\n                    \"type\": \"string\"\n                },\n                \"displayType\": {\n                    \"enum\": [\"auto\", \"line\", \"bar\"],\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"trendLine\": {\n                    \"type\": \"boolean\"\n                },\n                \"yAxisPosition\": {\n                    \"enum\": [\"left\", \"right\"],\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"ChartSettingsFormatting\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"decimalPlaces\": {\n                    \"type\": \"number\"\n                },\n                \"prefix\": {\n                    \"type\": \"string\"\n                },\n                \"style\": {\n                    \"enum\": [\"none\", \"number\", \"percent\"],\n                    \"type\": \"string\"\n                },\n                \"suffix\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"ClickhouseQueryProgress\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"active_cpu_time\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"bytes_read\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"estimated_rows_total\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"rows_read\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"time_elapsed\": {\n                    \"$ref\": \"#/definitions/integer\"\n                }\n            },\n            \"required\": [\"bytes_read\", \"rows_read\", \"estimated_rows_total\", \"time_elapsed\", \"active_cpu_time\"],\n            \"type\": \"object\"\n        },\n        \"CohortPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"description\": \"Sync with plugin-server/src/types.ts\",\n            \"properties\": {\n                \"cohort_name\": {\n                    \"type\": \"string\"\n                },\n                \"key\": {\n                    \"const\": \"id\",\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\",\n                    \"default\": \"in\"\n                },\n                \"type\": {\n                    \"const\": \"cohort\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\", \"value\"],\n            \"type\": \"object\"\n        },\n        \"CompareFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"compare\": {\n                    \"default\": false,\n                    \"description\": \"Whether to compare the current date range to a previous date range.\",\n                    \"type\": \"boolean\"\n                },\n                \"compare_to\": {\n                    \"description\": \"The date range to compare to. The value is a relative date. Examples of relative dates are: `-1y` for 1 year ago, `-14m` for 14 months ago, `-100w` for 100 weeks ago, `-14d` for 14 days ago, `-30h` for 30 hours ago.\",\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"ConditionalFormattingRule\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"bytecode\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"color\": {\n                    \"type\": \"string\"\n                },\n                \"colorMode\": {\n                    \"enum\": [\"light\", \"dark\"],\n                    \"type\": \"string\"\n                },\n                \"columnName\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"input\": {\n                    \"type\": \"string\"\n                },\n                \"templateId\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"id\", \"templateId\", \"columnName\", \"bytecode\", \"input\", \"color\"],\n            \"type\": \"object\"\n        },\n        \"CountPerActorMathType\": {\n            \"enum\": [\n                \"avg_count_per_actor\",\n                \"min_count_per_actor\",\n                \"max_count_per_actor\",\n                \"median_count_per_actor\",\n                \"p75_count_per_actor\",\n                \"p90_count_per_actor\",\n                \"p95_count_per_actor\",\n                \"p99_count_per_actor\"\n            ],\n            \"type\": \"string\"\n        },\n        \"CustomChannelCondition\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"key\": {\n                    \"$ref\": \"#/definitions/CustomChannelField\"\n                },\n                \"op\": {\n                    \"$ref\": \"#/definitions/CustomChannelOperator\"\n                },\n                \"value\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    ]\n                }\n            },\n            \"required\": [\"key\", \"op\", \"id\"],\n            \"type\": \"object\"\n        },\n        \"CustomChannelField\": {\n            \"enum\": [\"utm_source\", \"utm_medium\", \"utm_campaign\", \"referring_domain\", \"url\", \"pathname\", \"hostname\"],\n            \"type\": \"string\"\n        },\n        \"CustomChannelOperator\": {\n            \"enum\": [\"exact\", \"is_not\", \"is_set\", \"is_not_set\", \"icontains\", \"not_icontains\", \"regex\", \"not_regex\"],\n            \"type\": \"string\"\n        },\n        \"CustomChannelRule\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"channel_type\": {\n                    \"type\": \"string\"\n                },\n                \"combiner\": {\n                    \"$ref\": \"#/definitions/FilterLogicalOperator\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"items\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/CustomChannelCondition\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"items\", \"combiner\", \"channel_type\", \"id\"],\n            \"type\": \"object\"\n        },\n        \"CustomEventConversionGoal\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"customEventName\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"customEventName\"],\n            \"type\": \"object\"\n        },\n        \"DashboardFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdown_filter\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/BreakdownFilter\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"date_from\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"date_to\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"DataColorToken\": {\n            \"enum\": [\n                \"preset-1\",\n                \"preset-2\",\n                \"preset-3\",\n                \"preset-4\",\n                \"preset-5\",\n                \"preset-6\",\n                \"preset-7\",\n                \"preset-8\",\n                \"preset-9\",\n                \"preset-10\",\n                \"preset-11\",\n                \"preset-12\",\n                \"preset-13\",\n                \"preset-14\",\n                \"preset-15\"\n            ],\n            \"type\": \"string\"\n        },\n        \"DataTableNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"allowSorting\": {\n                    \"description\": \"Can the user click on column headers to sort the table? (default: true)\",\n                    \"type\": \"boolean\"\n                },\n                \"columns\": {\n                    \"description\": \"Columns shown in the table, unless the `source` provides them.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/HogQLExpression\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"embedded\": {\n                    \"description\": \"Uses the embedded version of LemonTable\",\n                    \"type\": \"boolean\"\n                },\n                \"expandable\": {\n                    \"description\": \"Can expand row to show raw event data (default: true)\",\n                    \"type\": \"boolean\"\n                },\n                \"full\": {\n                    \"description\": \"Show with most visual options enabled. Used in scenes.\",\n                    \"type\": \"boolean\"\n                },\n                \"hiddenColumns\": {\n                    \"description\": \"Columns that aren't shown in the table, even if in columns or returned data\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/HogQLExpression\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"const\": \"DataTableNode\",\n                    \"type\": \"string\"\n                },\n                \"propertiesViaUrl\": {\n                    \"description\": \"Link properties via the URL (default: false)\",\n                    \"type\": \"boolean\"\n                },\n                \"response\": {\n                    \"anyOf\": [\n                        {\n                            \"properties\": {},\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"columns\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"hasMore\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"limit\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"offset\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {\n                                    \"items\": {\n                                        \"items\": {},\n                                        \"type\": \"array\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"types\": {\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"columns\", \"hogql\", \"results\", \"types\"],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"columns\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"hasMore\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"limit\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"missing_actors_count\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"offset\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {\n                                    \"items\": {\n                                        \"items\": {},\n                                        \"type\": \"array\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"types\": {\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"columns\", \"hogql\", \"limit\", \"offset\", \"results\", \"types\"],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"clickhouse\": {\n                                    \"description\": \"Executed ClickHouse query\",\n                                    \"type\": \"string\"\n                                },\n                                \"columns\": {\n                                    \"description\": \"Returned columns\",\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"explain\": {\n                                    \"description\": \"Query explanation output\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"hasMore\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"limit\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"metadata\": {\n                                    \"$ref\": \"#/definitions/HogQLMetadataResponse\",\n                                    \"description\": \"Query metadata output\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"offset\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"query\": {\n                                    \"description\": \"Input query string\",\n                                    \"type\": \"string\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"types\": {\n                                    \"description\": \"Types of returned columns\",\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"results\"],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"dateFrom\": {\n                                    \"type\": \"string\"\n                                },\n                                \"dateTo\": {\n                                    \"type\": \"string\"\n                                },\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/WebOverviewItem\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"samplingRate\": {\n                                    \"$ref\": \"#/definitions/SamplingRate\"\n                                },\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"results\"],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"columns\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"hasMore\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"limit\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"offset\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"samplingRate\": {\n                                    \"$ref\": \"#/definitions/SamplingRate\"\n                                },\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"types\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"results\"],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"columns\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"hasMore\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"limit\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"offset\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"samplingRate\": {\n                                    \"$ref\": \"#/definitions/SamplingRate\"\n                                },\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"types\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"results\"],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"columns\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"hasMore\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"limit\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"offset\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"samplingRate\": {\n                                    \"$ref\": \"#/definitions/SamplingRate\"\n                                },\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"types\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"results\"],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/WebVitalsPathBreakdownResult\"\n                                    },\n                                    \"maxItems\": 1,\n                                    \"minItems\": 1,\n                                    \"type\": \"array\"\n                                },\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"results\"],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"columns\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                },\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"hasMore\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"limit\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"offset\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {},\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"types\": {\n                                    \"items\": {},\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"results\"],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"columns\": {\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"hasMore\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"limit\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"offset\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/ErrorTrackingIssue\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"results\"],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"credible_intervals\": {\n                                    \"additionalProperties\": {\n                                        \"items\": {\n                                            \"type\": \"number\"\n                                        },\n                                        \"maxItems\": 2,\n                                        \"minItems\": 2,\n                                        \"type\": \"array\"\n                                    },\n                                    \"type\": \"object\"\n                                },\n                                \"expected_loss\": {\n                                    \"type\": \"number\"\n                                },\n                                \"funnels_query\": {\n                                    \"$ref\": \"#/definitions/FunnelsQuery\"\n                                },\n                                \"insight\": {\n                                    \"items\": {\n                                        \"items\": {\n                                            \"type\": \"object\"\n                                        },\n                                        \"type\": \"array\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"kind\": {\n                                    \"const\": \"ExperimentFunnelsQuery\",\n                                    \"type\": \"string\"\n                                },\n                                \"probability\": {\n                                    \"additionalProperties\": {\n                                        \"type\": \"number\"\n                                    },\n                                    \"type\": \"object\"\n                                },\n                                \"significance_code\": {\n                                    \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                                },\n                                \"significant\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"stats_version\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"variants\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/ExperimentVariantFunnelsBaseStats\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\n                                \"credible_intervals\",\n                                \"expected_loss\",\n                                \"insight\",\n                                \"kind\",\n                                \"probability\",\n                                \"significance_code\",\n                                \"significant\",\n                                \"variants\"\n                            ],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"count_query\": {\n                                    \"$ref\": \"#/definitions/TrendsQuery\"\n                                },\n                                \"credible_intervals\": {\n                                    \"additionalProperties\": {\n                                        \"items\": {\n                                            \"type\": \"number\"\n                                        },\n                                        \"maxItems\": 2,\n                                        \"minItems\": 2,\n                                        \"type\": \"array\"\n                                    },\n                                    \"type\": \"object\"\n                                },\n                                \"exposure_query\": {\n                                    \"$ref\": \"#/definitions/TrendsQuery\"\n                                },\n                                \"insight\": {\n                                    \"items\": {\n                                        \"type\": \"object\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"kind\": {\n                                    \"const\": \"ExperimentTrendsQuery\",\n                                    \"type\": \"string\"\n                                },\n                                \"p_value\": {\n                                    \"type\": \"number\"\n                                },\n                                \"probability\": {\n                                    \"additionalProperties\": {\n                                        \"type\": \"number\"\n                                    },\n                                    \"type\": \"object\"\n                                },\n                                \"significance_code\": {\n                                    \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                                },\n                                \"significant\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"stats_version\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"variants\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/ExperimentVariantTrendsBaseStats\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\n                                \"credible_intervals\",\n                                \"insight\",\n                                \"kind\",\n                                \"p_value\",\n                                \"probability\",\n                                \"significance_code\",\n                                \"significant\",\n                                \"variants\"\n                            ],\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": false,\n                            \"properties\": {\n                                \"columns\": {\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"error\": {\n                                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                                    \"type\": \"string\"\n                                },\n                                \"hasMore\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"hogql\": {\n                                    \"description\": \"Generated HogQL query.\",\n                                    \"type\": \"string\"\n                                },\n                                \"limit\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"modifiers\": {\n                                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                                    \"description\": \"Modifiers used when performing the query\"\n                                },\n                                \"offset\": {\n                                    \"$ref\": \"#/definitions/integer\"\n                                },\n                                \"query_status\": {\n                                    \"$ref\": \"#/definitions/QueryStatus\",\n                                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                                },\n                                \"results\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/LLMTrace\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                \"timings\": {\n                                    \"description\": \"Measured timings for different parts of the query generation process\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/QueryTiming\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            },\n                            \"required\": [\"results\"],\n                            \"type\": \"object\"\n                        }\n                    ]\n                },\n                \"showActions\": {\n                    \"description\": \"Show the kebab menu at the end of the row\",\n                    \"type\": \"boolean\"\n                },\n                \"showColumnConfigurator\": {\n                    \"description\": \"Show a button to configure the table's columns if possible\",\n                    \"type\": \"boolean\"\n                },\n                \"showDateRange\": {\n                    \"description\": \"Show date range selector\",\n                    \"type\": \"boolean\"\n                },\n                \"showElapsedTime\": {\n                    \"description\": \"Show the time it takes to run a query\",\n                    \"type\": \"boolean\"\n                },\n                \"showEventFilter\": {\n                    \"description\": \"Include an event filter above the table (EventsNode only)\",\n                    \"type\": \"boolean\"\n                },\n                \"showExport\": {\n                    \"description\": \"Show the export button\",\n                    \"type\": \"boolean\"\n                },\n                \"showHogQLEditor\": {\n                    \"description\": \"Include a HogQL query editor above HogQL tables\",\n                    \"type\": \"boolean\"\n                },\n                \"showOpenEditorButton\": {\n                    \"description\": \"Show a button to open the current query as a new insight. (default: true)\",\n                    \"type\": \"boolean\"\n                },\n                \"showPersistentColumnConfigurator\": {\n                    \"description\": \"Show a button to configure and persist the table's default columns if possible\",\n                    \"type\": \"boolean\"\n                },\n                \"showPropertyFilter\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"boolean\"\n                        },\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/TaxonomicFilterGroupType\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    ],\n                    \"description\": \"Include a property filter above the table\"\n                },\n                \"showReload\": {\n                    \"description\": \"Show a reload button\",\n                    \"type\": \"boolean\"\n                },\n                \"showResultsTable\": {\n                    \"description\": \"Show a results table\",\n                    \"type\": \"boolean\"\n                },\n                \"showSavedQueries\": {\n                    \"description\": \"Shows a list of saved queries\",\n                    \"type\": \"boolean\"\n                },\n                \"showSearch\": {\n                    \"description\": \"Include a free text search field (PersonsNode only)\",\n                    \"type\": \"boolean\"\n                },\n                \"showTestAccountFilters\": {\n                    \"description\": \"Show filter to exclude test accounts\",\n                    \"type\": \"boolean\"\n                },\n                \"showTimings\": {\n                    \"description\": \"Show a detailed query timing breakdown\",\n                    \"type\": \"boolean\"\n                },\n                \"source\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/EventsNode\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/EventsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PersonsNode\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/ActorsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/HogQLQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/WebOverviewQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/WebStatsTableQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/WebExternalClicksTableQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/WebGoalsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/WebVitalsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/WebVitalsPathBreakdownQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/SessionAttributionExplorerQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/ErrorTrackingQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/ExperimentFunnelsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/ExperimentTrendsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/TracesQuery\"\n                        }\n                    ],\n                    \"description\": \"Source of the events\"\n                }\n            },\n            \"required\": [\"kind\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"DataVisualizationNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"chartSettings\": {\n                    \"$ref\": \"#/definitions/ChartSettings\"\n                },\n                \"display\": {\n                    \"$ref\": \"#/definitions/ChartDisplayType\"\n                },\n                \"kind\": {\n                    \"const\": \"DataVisualizationNode\",\n                    \"type\": \"string\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/HogQLQuery\"\n                },\n                \"tableSettings\": {\n                    \"$ref\": \"#/definitions/TableSettings\"\n                }\n            },\n            \"required\": [\"kind\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"DataWarehouseEventsModifier\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"distinct_id_field\": {\n                    \"type\": \"string\"\n                },\n                \"id_field\": {\n                    \"type\": \"string\"\n                },\n                \"table_name\": {\n                    \"type\": \"string\"\n                },\n                \"timestamp_field\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"table_name\", \"timestamp_field\", \"distinct_id_field\", \"id_field\"],\n            \"type\": \"object\"\n        },\n        \"DataWarehouseNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"type\": \"string\"\n                },\n                \"distinct_id_field\": {\n                    \"type\": \"string\"\n                },\n                \"fixedProperties\": {\n                    \"description\": \"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"id_field\": {\n                    \"type\": \"string\"\n                },\n                \"kind\": {\n                    \"const\": \"DataWarehouseNode\",\n                    \"type\": \"string\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/MathType\"\n                },\n                \"math_group_type_index\": {\n                    \"enum\": [0, 1, 2, 3, 4],\n                    \"type\": \"number\"\n                },\n                \"math_hogql\": {\n                    \"type\": \"string\"\n                },\n                \"math_property\": {\n                    \"type\": \"string\"\n                },\n                \"math_property_type\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"type\": \"object\"\n                },\n                \"table_name\": {\n                    \"type\": \"string\"\n                },\n                \"timestamp_field\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"distinct_id_field\", \"id\", \"id_field\", \"kind\", \"table_name\", \"timestamp_field\"],\n            \"type\": \"object\"\n        },\n        \"DataWarehousePersonPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\"\n                },\n                \"type\": {\n                    \"const\": \"data_warehouse_person_property\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"DataWarehousePropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\"\n                },\n                \"type\": {\n                    \"const\": \"data_warehouse\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaBatchExportTable\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"fields\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/DatabaseSchemaField\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"const\": \"batch_export\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"fields\", \"id\", \"name\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaDataWarehouseTable\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"fields\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/DatabaseSchemaField\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"format\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"schema\": {\n                    \"$ref\": \"#/definitions/DatabaseSchemaSchema\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/DatabaseSchemaSource\"\n                },\n                \"type\": {\n                    \"const\": \"data_warehouse\",\n                    \"type\": \"string\"\n                },\n                \"url_pattern\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"fields\", \"format\", \"id\", \"name\", \"type\", \"url_pattern\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaField\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"chain\": {\n                    \"items\": {\n                        \"anyOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/definitions/integer\"\n                            }\n                        ]\n                    },\n                    \"type\": \"array\"\n                },\n                \"fields\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"hogql_value\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"schema_valid\": {\n                    \"type\": \"boolean\"\n                },\n                \"table\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/DatabaseSerializedFieldType\"\n                }\n            },\n            \"required\": [\"name\", \"hogql_value\", \"type\", \"schema_valid\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaMaterializedViewTable\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"fields\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/DatabaseSchemaField\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"last_run_at\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"query\": {\n                    \"$ref\": \"#/definitions/HogQLQuery\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"const\": \"materialized_view\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"fields\", \"id\", \"name\", \"query\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaPostHogTable\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"fields\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/DatabaseSchemaField\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"const\": \"posthog\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"fields\", \"id\", \"name\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"kind\": {\n                    \"const\": \"DatabaseSchemaQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/DatabaseSchemaQueryResponse\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"tables\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/DatabaseSchemaTable\"\n                    },\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"tables\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaSchema\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"incremental\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_synced_at\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"should_sync\": {\n                    \"type\": \"boolean\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"id\", \"name\", \"should_sync\", \"incremental\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaSource\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"last_synced_at\": {\n                    \"type\": \"string\"\n                },\n                \"prefix\": {\n                    \"type\": \"string\"\n                },\n                \"source_type\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"id\", \"status\", \"source_type\", \"prefix\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaTable\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/DatabaseSchemaPostHogTable\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DatabaseSchemaDataWarehouseTable\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DatabaseSchemaViewTable\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DatabaseSchemaBatchExportTable\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DatabaseSchemaMaterializedViewTable\"\n                }\n            ]\n        },\n        \"DatabaseSchemaTableCommon\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"fields\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/DatabaseSchemaField\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"enum\": [\"posthog\", \"data_warehouse\", \"view\", \"batch_export\", \"materialized_view\"],\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"type\", \"id\", \"name\", \"fields\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSchemaViewTable\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"fields\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/DatabaseSchemaField\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"query\": {\n                    \"$ref\": \"#/definitions/HogQLQuery\"\n                },\n                \"type\": {\n                    \"const\": \"view\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"fields\", \"id\", \"name\", \"query\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"DatabaseSerializedFieldType\": {\n            \"enum\": [\n                \"integer\",\n                \"float\",\n                \"string\",\n                \"datetime\",\n                \"date\",\n                \"boolean\",\n                \"array\",\n                \"json\",\n                \"lazy_table\",\n                \"virtual_table\",\n                \"field_traverser\",\n                \"expression\",\n                \"view\",\n                \"materialized_view\"\n            ],\n            \"type\": \"string\"\n        },\n        \"DateRange\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"date_from\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"date_to\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"explicitDate\": {\n                    \"default\": false,\n                    \"description\": \"Whether the date_from and date_to should be used verbatim. Disables rounding to the start and end of period.\",\n                    \"type\": [\"boolean\", \"null\"]\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"DatetimeDay\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n        },\n        \"Day\": {\n            \"$ref\": \"#/definitions/integer\"\n        },\n        \"DefaultChannelTypes\": {\n            \"enum\": [\n                \"Cross Network\",\n                \"Paid Search\",\n                \"Paid Social\",\n                \"Paid Video\",\n                \"Paid Shopping\",\n                \"Paid Unknown\",\n                \"Direct\",\n                \"Organic Search\",\n                \"Organic Social\",\n                \"Organic Video\",\n                \"Organic Shopping\",\n                \"Push\",\n                \"SMS\",\n                \"Audio\",\n                \"Email\",\n                \"Referral\",\n                \"Affiliate\",\n                \"Unknown\"\n            ],\n            \"type\": \"string\"\n        },\n        \"DurationType\": {\n            \"enum\": [\"duration\", \"active_seconds\", \"inactive_seconds\"],\n            \"type\": \"string\"\n        },\n        \"ElementPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"description\": \"Sync with plugin-server/src/types.ts\",\n            \"properties\": {\n                \"key\": {\n                    \"enum\": [\"tag_name\", \"text\", \"href\", \"selector\"],\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\"\n                },\n                \"type\": {\n                    \"const\": \"element\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"ElementType\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"attr_class\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"attr_id\": {\n                    \"type\": \"string\"\n                },\n                \"attributes\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"href\": {\n                    \"type\": \"string\"\n                },\n                \"nth_child\": {\n                    \"type\": \"number\"\n                },\n                \"nth_of_type\": {\n                    \"type\": \"number\"\n                },\n                \"order\": {\n                    \"type\": \"number\"\n                },\n                \"tag_name\": {\n                    \"type\": \"string\"\n                },\n                \"text\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"attributes\", \"tag_name\"],\n            \"type\": \"object\"\n        },\n        \"EmptyPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"type\": \"object\"\n        },\n        \"EntityNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"type\": \"string\"\n                },\n                \"fixedProperties\": {\n                    \"description\": \"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"$ref\": \"#/definitions/NodeKind\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/MathType\"\n                },\n                \"math_group_type_index\": {\n                    \"enum\": [0, 1, 2, 3, 4],\n                    \"type\": \"number\"\n                },\n                \"math_hogql\": {\n                    \"type\": \"string\"\n                },\n                \"math_property\": {\n                    \"type\": \"string\"\n                },\n                \"math_property_type\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"EntityType\": {\n            \"enum\": [\"actions\", \"events\", \"data_warehouse\", \"new_entity\"],\n            \"type\": \"string\"\n        },\n        \"ErrorTrackingIssue\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"aggregations\": {\n                    \"$ref\": \"#/definitions/ErrorTrackingIssueAggregations\"\n                },\n                \"assignee\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/ErrorTrackingIssueAssignee\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"earliest\": {\n                    \"type\": \"string\"\n                },\n                \"first_seen\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"last_seen\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"status\": {\n                    \"enum\": [\"archived\", \"active\", \"resolved\", \"pending_release\"],\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"assignee\", \"description\", \"first_seen\", \"id\", \"name\", \"status\"],\n            \"type\": \"object\"\n        },\n        \"ErrorTrackingIssueAggregations\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"customVolume\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"type\": \"number\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"occurrences\": {\n                    \"type\": \"number\"\n                },\n                \"sessions\": {\n                    \"type\": \"number\"\n                },\n                \"users\": {\n                    \"type\": \"number\"\n                },\n                \"volumeDay\": {\n                    \"items\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"volumeMonth\": {\n                    \"items\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"occurrences\", \"sessions\", \"users\", \"volumeDay\", \"volumeMonth\", \"customVolume\"],\n            \"type\": \"object\"\n        },\n        \"ErrorTrackingIssueAssignee\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"id\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"type\": {\n                    \"enum\": [\"user_group\", \"user\"],\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"type\", \"id\"],\n            \"type\": \"object\"\n        },\n        \"ErrorTrackingQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"assignee\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/ErrorTrackingIssueAssignee\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"customVolume\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/ErrorTrackingSparklineConfig\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"filterGroup\": {\n                    \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                },\n                \"filterTestAccounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"issueId\": {\n                    \"type\": \"string\"\n                },\n                \"kind\": {\n                    \"const\": \"ErrorTrackingQuery\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"orderBy\": {\n                    \"enum\": [\"last_seen\", \"first_seen\", \"occurrences\", \"users\", \"sessions\"],\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ErrorTrackingQueryResponse\"\n                },\n                \"searchQuery\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"enum\": [\"archived\", \"active\", \"resolved\", \"pending_release\", \"all\"],\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"dateRange\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"ErrorTrackingQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"columns\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ErrorTrackingIssue\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"ErrorTrackingRelationalIssue\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"assignee\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/ErrorTrackingIssueAssignee\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"first_seen\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"status\": {\n                    \"enum\": [\"archived\", \"active\", \"resolved\", \"pending_release\"],\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"id\", \"name\", \"description\", \"assignee\", \"status\", \"first_seen\"],\n            \"type\": \"object\"\n        },\n        \"ErrorTrackingSparklineConfig\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"interval\": {\n                    \"enum\": [\"minute\", \"hour\", \"day\", \"week\", \"month\"],\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/integer\"\n                }\n            },\n            \"required\": [\"value\", \"interval\"],\n            \"type\": \"object\"\n        },\n        \"EventDefinition\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"elements\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"event\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"event\", \"properties\", \"elements\"],\n            \"type\": \"object\"\n        },\n        \"EventOddsRatioSerialized\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"correlation_type\": {\n                    \"enum\": [\"success\", \"failure\"],\n                    \"type\": \"string\"\n                },\n                \"event\": {\n                    \"$ref\": \"#/definitions/EventDefinition\"\n                },\n                \"failure_count\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"odds_ratio\": {\n                    \"type\": \"number\"\n                },\n                \"success_count\": {\n                    \"$ref\": \"#/definitions/integer\"\n                }\n            },\n            \"required\": [\"event\", \"success_count\", \"failure_count\", \"odds_ratio\", \"correlation_type\"],\n            \"type\": \"object\"\n        },\n        \"EventPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"description\": \"Sync with plugin-server/src/types.ts\",\n            \"properties\": {\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\",\n                    \"default\": \"exact\"\n                },\n                \"type\": {\n                    \"const\": \"event\",\n                    \"description\": \"Event properties\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"EventTaxonomyItem\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"property\": {\n                    \"type\": \"string\"\n                },\n                \"sample_count\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"sample_values\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"property\", \"sample_values\", \"sample_count\"],\n            \"type\": \"object\"\n        },\n        \"EventTaxonomyQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"event\": {\n                    \"type\": \"string\"\n                },\n                \"kind\": {\n                    \"const\": \"EventTaxonomyQuery\",\n                    \"type\": \"string\"\n                },\n                \"maxPropertyValues\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/EventTaxonomyQueryResponse\"\n                }\n            },\n            \"required\": [\"event\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"EventTaxonomyQueryResponse\": {\n            \"additionalProperties\": false,\n            \"description\": \"All analytics query responses must inherit from this.\",\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"$ref\": \"#/definitions/EventTaxonomyResponse\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"EventTaxonomyResponse\": {\n            \"items\": {\n                \"$ref\": \"#/definitions/EventTaxonomyItem\"\n            },\n            \"type\": \"array\"\n        },\n        \"EventType\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"distinct_id\": {\n                    \"type\": \"string\"\n                },\n                \"elements\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ElementType\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"elements_chain\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"event\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"person\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"distinct_ids\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"is_identified\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"properties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"required\": [\"distinct_ids\", \"properties\"],\n                    \"type\": \"object\"\n                },\n                \"properties\": {\n                    \"type\": \"object\"\n                },\n                \"timestamp\": {\n                    \"type\": \"string\"\n                },\n                \"uuid\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"id\", \"distinct_id\", \"properties\", \"event\", \"timestamp\", \"elements\"],\n            \"type\": \"object\"\n        },\n        \"EventsNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"type\": \"string\"\n                },\n                \"event\": {\n                    \"description\": \"The event or `null` for all events.\",\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"fixedProperties\": {\n                    \"description\": \"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"const\": \"EventsNode\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/MathType\"\n                },\n                \"math_group_type_index\": {\n                    \"enum\": [0, 1, 2, 3, 4],\n                    \"type\": \"number\"\n                },\n                \"math_hogql\": {\n                    \"type\": \"string\"\n                },\n                \"math_property\": {\n                    \"type\": \"string\"\n                },\n                \"math_property_type\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"orderBy\": {\n                    \"description\": \"Columns to order by\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"EventsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"actionId\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"description\": \"Show events matching a given action\"\n                },\n                \"after\": {\n                    \"description\": \"Only fetch events that happened after this timestamp\",\n                    \"type\": \"string\"\n                },\n                \"before\": {\n                    \"description\": \"Only fetch events that happened before this timestamp\",\n                    \"type\": \"string\"\n                },\n                \"event\": {\n                    \"description\": \"Limit to events matching this string\",\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"filterTestAccounts\": {\n                    \"description\": \"Filter test accounts\",\n                    \"type\": \"boolean\"\n                },\n                \"fixedProperties\": {\n                    \"description\": \"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyFilterLike\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"const\": \"EventsQuery\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"description\": \"Number of rows to return\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"description\": \"Number of rows to skip before returning rows\"\n                },\n                \"orderBy\": {\n                    \"description\": \"Columns to order by\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"personId\": {\n                    \"description\": \"Show events for a given person\",\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/EventsQueryResponse\"\n                },\n                \"select\": {\n                    \"description\": \"Return a limited set of data. Required.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/HogQLExpression\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"where\": {\n                    \"description\": \"HogQL filters to apply on returned data\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/HogQLExpression\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"kind\", \"select\"],\n            \"type\": \"object\"\n        },\n        \"EventsQueryPersonColumn\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"created_at\": {\n                    \"type\": \"string\"\n                },\n                \"distinct_id\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"email\": {\n                            \"type\": \"string\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"uuid\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"uuid\", \"created_at\", \"properties\", \"distinct_id\"],\n            \"type\": \"object\"\n        },\n        \"EventsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"items\": {},\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"columns\", \"hogql\", \"results\", \"types\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentActionMetricConfig\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"action\": {\n                    \"type\": \"number\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentActionMetricConfig\",\n                    \"type\": \"string\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/ExperimentMetricMath\"\n                },\n                \"math_hogql\": {\n                    \"type\": \"string\"\n                },\n                \"math_property\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"kind\", \"action\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentDataWarehouseMetricConfig\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"data_warehouse_join_key\": {\n                    \"type\": \"string\"\n                },\n                \"events_join_key\": {\n                    \"type\": \"string\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentDataWarehouseMetricConfig\",\n                    \"type\": \"string\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/ExperimentMetricMath\"\n                },\n                \"math_hogql\": {\n                    \"type\": \"string\"\n                },\n                \"math_property\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"table_name\": {\n                    \"type\": \"string\"\n                },\n                \"timestamp_field\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"kind\", \"table_name\", \"timestamp_field\", \"events_join_key\", \"data_warehouse_join_key\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentEventMetricConfig\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"event\": {\n                    \"type\": \"string\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentEventMetricConfig\",\n                    \"type\": \"string\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/ExperimentMetricMath\"\n                },\n                \"math_hogql\": {\n                    \"type\": \"string\"\n                },\n                \"math_property\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"kind\", \"event\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentExposureQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"experiment_id\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentExposureQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ExperimentExposureQueryResponse\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentExposureQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"date_range\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentExposureQuery\",\n                    \"type\": \"string\"\n                },\n                \"timeseries\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ExperimentExposureTimeSeries\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"total_exposures\": {\n                    \"additionalProperties\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"kind\", \"timeseries\", \"total_exposures\", \"date_range\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentExposureTimeSeries\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"days\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"exposure_counts\": {\n                    \"items\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"variant\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"variant\", \"days\", \"exposure_counts\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentFunnelsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"experiment_id\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"funnels_query\": {\n                    \"$ref\": \"#/definitions/FunnelsQuery\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentFunnelsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ExperimentFunnelsQueryResponse\"\n                }\n            },\n            \"required\": [\"funnels_query\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentFunnelsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"credible_intervals\": {\n                    \"additionalProperties\": {\n                        \"items\": {\n                            \"type\": \"number\"\n                        },\n                        \"maxItems\": 2,\n                        \"minItems\": 2,\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"expected_loss\": {\n                    \"type\": \"number\"\n                },\n                \"funnels_query\": {\n                    \"$ref\": \"#/definitions/FunnelsQuery\"\n                },\n                \"insight\": {\n                    \"items\": {\n                        \"items\": {\n                            \"type\": \"object\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentFunnelsQuery\",\n                    \"type\": \"string\"\n                },\n                \"probability\": {\n                    \"additionalProperties\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"significance_code\": {\n                    \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                },\n                \"significant\": {\n                    \"type\": \"boolean\"\n                },\n                \"stats_version\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"variants\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ExperimentVariantFunnelsBaseStats\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"kind\",\n                \"insight\",\n                \"variants\",\n                \"probability\",\n                \"significant\",\n                \"significance_code\",\n                \"expected_loss\",\n                \"credible_intervals\"\n            ],\n            \"type\": \"object\"\n        },\n        \"ExperimentMetric\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"filterTestAccounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"inverse\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentMetric\",\n                    \"type\": \"string\"\n                },\n                \"metric_config\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/ExperimentEventMetricConfig\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/ExperimentActionMetricConfig\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/ExperimentDataWarehouseMetricConfig\"\n                        }\n                    ]\n                },\n                \"metric_type\": {\n                    \"$ref\": \"#/definitions/ExperimentMetricType\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"kind\", \"metric_type\", \"metric_config\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentMetricMath\": {\n            \"enum\": [\"total\", \"sum\", \"avg\", \"median\", \"min\", \"max\"],\n            \"type\": \"string\"\n        },\n        \"ExperimentMetricType\": {\n            \"enum\": [\"count\", \"continuous\", \"binomial\"],\n            \"type\": \"string\"\n        },\n        \"ExperimentQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"experiment_id\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentQuery\",\n                    \"type\": \"string\"\n                },\n                \"metric\": {\n                    \"$ref\": \"#/definitions/ExperimentMetric\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ExperimentQueryResponse\"\n                }\n            },\n            \"required\": [\"kind\", \"metric\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"credible_intervals\": {\n                    \"additionalProperties\": {\n                        \"items\": {\n                            \"type\": \"number\"\n                        },\n                        \"maxItems\": 2,\n                        \"minItems\": 2,\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"insight\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentQuery\",\n                    \"type\": \"string\"\n                },\n                \"metric\": {\n                    \"$ref\": \"#/definitions/ExperimentMetric\"\n                },\n                \"p_value\": {\n                    \"type\": \"number\"\n                },\n                \"probability\": {\n                    \"additionalProperties\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"significance_code\": {\n                    \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                },\n                \"significant\": {\n                    \"type\": \"boolean\"\n                },\n                \"stats_version\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"variants\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ExperimentVariantTrendsBaseStats\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ExperimentVariantFunnelsBaseStats\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    ]\n                }\n            },\n            \"required\": [\n                \"kind\",\n                \"insight\",\n                \"metric\",\n                \"variants\",\n                \"probability\",\n                \"significant\",\n                \"significance_code\",\n                \"p_value\",\n                \"credible_intervals\"\n            ],\n            \"type\": \"object\"\n        },\n        \"ExperimentSignificanceCode\": {\n            \"enum\": [\"significant\", \"not_enough_exposure\", \"low_win_probability\", \"high_loss\", \"high_p_value\"],\n            \"type\": \"string\"\n        },\n        \"ExperimentTrendsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"count_query\": {\n                    \"$ref\": \"#/definitions/TrendsQuery\"\n                },\n                \"experiment_id\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"exposure_query\": {\n                    \"$ref\": \"#/definitions/TrendsQuery\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentTrendsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ExperimentTrendsQueryResponse\"\n                }\n            },\n            \"required\": [\"count_query\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentTrendsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"count_query\": {\n                    \"$ref\": \"#/definitions/TrendsQuery\"\n                },\n                \"credible_intervals\": {\n                    \"additionalProperties\": {\n                        \"items\": {\n                            \"type\": \"number\"\n                        },\n                        \"maxItems\": 2,\n                        \"minItems\": 2,\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"exposure_query\": {\n                    \"$ref\": \"#/definitions/TrendsQuery\"\n                },\n                \"insight\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"const\": \"ExperimentTrendsQuery\",\n                    \"type\": \"string\"\n                },\n                \"p_value\": {\n                    \"type\": \"number\"\n                },\n                \"probability\": {\n                    \"additionalProperties\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"object\"\n                },\n                \"significance_code\": {\n                    \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                },\n                \"significant\": {\n                    \"type\": \"boolean\"\n                },\n                \"stats_version\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"variants\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ExperimentVariantTrendsBaseStats\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"kind\",\n                \"insight\",\n                \"variants\",\n                \"probability\",\n                \"significant\",\n                \"significance_code\",\n                \"p_value\",\n                \"credible_intervals\"\n            ],\n            \"type\": \"object\"\n        },\n        \"ExperimentVariantFunnelsBaseStats\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"failure_count\": {\n                    \"type\": \"number\"\n                },\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"success_count\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"key\", \"success_count\", \"failure_count\"],\n            \"type\": \"object\"\n        },\n        \"ExperimentVariantTrendsBaseStats\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"absolute_exposure\": {\n                    \"type\": \"number\"\n                },\n                \"count\": {\n                    \"type\": \"number\"\n                },\n                \"exposure\": {\n                    \"type\": \"number\"\n                },\n                \"key\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"key\", \"count\", \"exposure\", \"absolute_exposure\"],\n            \"type\": \"object\"\n        },\n        \"FailureMessage\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"const\": \"ai/failure\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"type\"],\n            \"type\": \"object\"\n        },\n        \"FeaturePropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\"\n                },\n                \"type\": {\n                    \"const\": \"feature\",\n                    \"description\": \"Event property with \\\"$feature/\\\" prepended\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"FileSystemEntry\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"created_at\": {\n                    \"description\": \"Timestamp when file was added. Used to check persistence\",\n                    \"type\": \"string\"\n                },\n                \"href\": {\n                    \"description\": \"Object's URL\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"description\": \"Unique UUID for tree entry\",\n                    \"type\": \"string\"\n                },\n                \"meta\": {\n                    \"description\": \"Metadata\",\n                    \"type\": \"object\"\n                },\n                \"path\": {\n                    \"description\": \"Object's name and folder\",\n                    \"type\": \"string\"\n                },\n                \"ref\": {\n                    \"description\": \"Object's ID or other unique reference\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/FileSystemType\",\n                    \"description\": \"Type of object, used for icon, e.g. feature_flag, insight, etc\"\n                }\n            },\n            \"required\": [\"path\"],\n            \"type\": \"object\"\n        },\n        \"FileSystemType\": {\n            \"enum\": [\n                \"aichat\",\n                \"broadcast\",\n                \"dashboard\",\n                \"destination\",\n                \"experiment\",\n                \"feature_flag\",\n                \"feature\",\n                \"folder\",\n                \"insight\",\n                \"notebook\",\n                \"repl\",\n                \"site_app\",\n                \"source\",\n                \"sql\",\n                \"survey\",\n                \"transformation\"\n            ],\n            \"type\": \"string\"\n        },\n        \"FilterLogicalOperator\": {\n            \"enum\": [\"AND\", \"OR\"],\n            \"type\": \"string\"\n        },\n        \"FunnelConversionWindowTimeUnit\": {\n            \"enum\": [\"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\"],\n            \"type\": \"string\"\n        },\n        \"FunnelCorrelationActorsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"funnelCorrelationPersonConverted\": {\n                    \"type\": \"boolean\"\n                },\n                \"funnelCorrelationPersonEntity\": {\n                    \"$ref\": \"#/definitions/AnyEntityNode\"\n                },\n                \"funnelCorrelationPropertyValues\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"includeRecordings\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"FunnelCorrelationActorsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ActorsQueryResponse\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/FunnelCorrelationQuery\"\n                }\n            },\n            \"required\": [\"kind\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"FunnelCorrelationQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"funnelCorrelationEventExcludePropertyNames\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnelCorrelationEventNames\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnelCorrelationExcludeEventNames\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnelCorrelationExcludeNames\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnelCorrelationNames\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnelCorrelationType\": {\n                    \"$ref\": \"#/definitions/FunnelCorrelationResultsType\"\n                },\n                \"kind\": {\n                    \"const\": \"FunnelCorrelationQuery\",\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/FunnelCorrelationResponse\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/FunnelsActorsQuery\"\n                }\n            },\n            \"required\": [\"funnelCorrelationType\", \"kind\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"FunnelCorrelationResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"$ref\": \"#/definitions/FunnelCorrelationResult\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"FunnelCorrelationResult\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"events\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/EventOddsRatioSerialized\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"skewed\": {\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\"events\", \"skewed\"],\n            \"type\": \"object\"\n        },\n        \"FunnelCorrelationResultsType\": {\n            \"enum\": [\"events\", \"properties\", \"event_with_properties\"],\n            \"type\": \"string\"\n        },\n        \"FunnelExclusion\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/FunnelExclusionEventsNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/FunnelExclusionActionsNode\"\n                }\n            ]\n        },\n        \"FunnelExclusionActionsNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"type\": \"string\"\n                },\n                \"fixedProperties\": {\n                    \"description\": \"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnelFromStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"funnelToStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"id\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"kind\": {\n                    \"const\": \"ActionsNode\",\n                    \"type\": \"string\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/MathType\"\n                },\n                \"math_group_type_index\": {\n                    \"enum\": [0, 1, 2, 3, 4],\n                    \"type\": \"number\"\n                },\n                \"math_hogql\": {\n                    \"type\": \"string\"\n                },\n                \"math_property\": {\n                    \"type\": \"string\"\n                },\n                \"math_property_type\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"funnelFromStep\", \"funnelToStep\", \"id\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"FunnelExclusionEventsNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"type\": \"string\"\n                },\n                \"event\": {\n                    \"description\": \"The event or `null` for all events.\",\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"fixedProperties\": {\n                    \"description\": \"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnelFromStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"funnelToStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"kind\": {\n                    \"const\": \"EventsNode\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/MathType\"\n                },\n                \"math_group_type_index\": {\n                    \"enum\": [0, 1, 2, 3, 4],\n                    \"type\": \"number\"\n                },\n                \"math_hogql\": {\n                    \"type\": \"string\"\n                },\n                \"math_property\": {\n                    \"type\": \"string\"\n                },\n                \"math_property_type\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"orderBy\": {\n                    \"description\": \"Columns to order by\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"funnelFromStep\", \"funnelToStep\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"FunnelExclusionLegacy\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"funnel_from_step\": {\n                    \"type\": \"number\"\n                },\n                \"funnel_to_step\": {\n                    \"type\": \"number\"\n                },\n                \"id\": {\n                    \"type\": [\"string\", \"number\", \"null\"]\n                },\n                \"index\": {\n                    \"type\": \"number\"\n                },\n                \"name\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"order\": {\n                    \"type\": \"number\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EntityType\"\n                }\n            },\n            \"required\": [\"funnel_from_step\", \"funnel_to_step\"],\n            \"type\": \"object\"\n        },\n        \"FunnelExclusionSteps\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"funnelFromStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"funnelToStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                }\n            },\n            \"required\": [\"funnelFromStep\", \"funnelToStep\"],\n            \"type\": \"object\"\n        },\n        \"FunnelLayout\": {\n            \"enum\": [\"horizontal\", \"vertical\"],\n            \"type\": \"string\"\n        },\n        \"FunnelMathType\": {\n            \"enum\": [\"total\", \"first_time_for_user\", \"first_time_for_user_with_filters\"],\n            \"type\": \"string\"\n        },\n        \"FunnelPathType\": {\n            \"enum\": [\"funnel_path_before_step\", \"funnel_path_between_steps\", \"funnel_path_after_step\"],\n            \"type\": \"string\"\n        },\n        \"FunnelPathsFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"funnelPathType\": {\n                    \"$ref\": \"#/definitions/FunnelPathType\"\n                },\n                \"funnelSource\": {\n                    \"$ref\": \"#/definitions/FunnelsQuery\"\n                },\n                \"funnelStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                }\n            },\n            \"required\": [\"funnelSource\"],\n            \"type\": \"object\"\n        },\n        \"FunnelStepReference\": {\n            \"enum\": [\"total\", \"previous\"],\n            \"type\": \"string\"\n        },\n        \"FunnelStepsBreakdownResults\": {\n            \"items\": {\n                \"items\": {\n                    \"type\": \"object\"\n                },\n                \"type\": \"array\"\n            },\n            \"type\": \"array\"\n        },\n        \"FunnelStepsResults\": {\n            \"items\": {\n                \"type\": \"object\"\n            },\n            \"type\": \"array\"\n        },\n        \"FunnelTimeToConvertResults\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"average_conversion_time\": {\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"bins\": {\n                    \"items\": {\n                        \"items\": {\n                            \"type\": \"integer\"\n                        },\n                        \"maxItems\": 2,\n                        \"minItems\": 2,\n                        \"type\": \"array\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"average_conversion_time\", \"bins\"],\n            \"type\": \"object\"\n        },\n        \"FunnelTrendsResults\": {\n            \"items\": {\n                \"type\": \"object\"\n            },\n            \"type\": \"array\"\n        },\n        \"FunnelVizType\": {\n            \"enum\": [\"steps\", \"time_to_convert\", \"trends\"],\n            \"type\": \"string\"\n        },\n        \"FunnelsActorsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"funnelCustomSteps\": {\n                    \"description\": \"Custom step numbers to get persons for. This overrides `funnelStep`. Primarily for correlation use.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/integer\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnelStep\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"description\": \"Index of the step for which we want to get the timestamp for, per person. Positive for converted persons, negative for dropped of persons.\"\n                },\n                \"funnelStepBreakdown\": {\n                    \"$ref\": \"#/definitions/BreakdownKeyType\",\n                    \"description\": \"The breakdown value for which to get persons for. This is an array for person and event properties, a string for groups and an integer for cohorts.\"\n                },\n                \"funnelTrendsDropOff\": {\n                    \"type\": \"boolean\"\n                },\n                \"funnelTrendsEntrancePeriodStart\": {\n                    \"description\": \"Used together with `funnelTrendsDropOff` for funnels time conversion date for the persons modal.\",\n                    \"type\": \"string\"\n                },\n                \"includeRecordings\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"FunnelsActorsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ActorsQueryResponse\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/FunnelsQuery\"\n                }\n            },\n            \"required\": [\"kind\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"FunnelsFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"binCount\": {\n                    \"type\": \"integer\"\n                },\n                \"breakdownAttributionType\": {\n                    \"$ref\": \"#/definitions/BreakdownAttributionType\",\n                    \"default\": \"first_touch\"\n                },\n                \"breakdownAttributionValue\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"exclusions\": {\n                    \"default\": [],\n                    \"items\": {\n                        \"$ref\": \"#/definitions/FunnelExclusion\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnelAggregateByHogQL\": {\n                    \"type\": \"string\"\n                },\n                \"funnelFromStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"funnelOrderType\": {\n                    \"$ref\": \"#/definitions/StepOrderValue\",\n                    \"default\": \"ordered\"\n                },\n                \"funnelStepReference\": {\n                    \"$ref\": \"#/definitions/FunnelStepReference\",\n                    \"default\": \"total\"\n                },\n                \"funnelToStep\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"funnelVizType\": {\n                    \"$ref\": \"#/definitions/FunnelVizType\",\n                    \"default\": \"steps\"\n                },\n                \"funnelWindowInterval\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"default\": 14\n                },\n                \"funnelWindowIntervalUnit\": {\n                    \"$ref\": \"#/definitions/FunnelConversionWindowTimeUnit\",\n                    \"default\": \"day\"\n                },\n                \"hiddenLegendBreakdowns\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"layout\": {\n                    \"$ref\": \"#/definitions/FunnelLayout\",\n                    \"default\": \"vertical\"\n                },\n                \"resultCustomizations\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/ResultCustomizationByValue\"\n                    },\n                    \"description\": \"Customizations for the appearance of result datasets.\",\n                    \"type\": \"object\"\n                },\n                \"useUdf\": {\n                    \"type\": \"boolean\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"FunnelsFilterLegacy\": {\n            \"additionalProperties\": false,\n            \"description\": \"`FunnelsFilterType` minus everything inherited from `FilterType` and persons modal related params\",\n            \"properties\": {\n                \"bin_count\": {\n                    \"$ref\": \"#/definitions/BinCountValue\"\n                },\n                \"breakdown_attribution_type\": {\n                    \"$ref\": \"#/definitions/BreakdownAttributionType\"\n                },\n                \"breakdown_attribution_value\": {\n                    \"type\": \"number\"\n                },\n                \"exclusions\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/FunnelExclusionLegacy\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnel_aggregate_by_hogql\": {\n                    \"type\": \"string\"\n                },\n                \"funnel_from_step\": {\n                    \"type\": \"number\"\n                },\n                \"funnel_order_type\": {\n                    \"$ref\": \"#/definitions/StepOrderValue\"\n                },\n                \"funnel_step_reference\": {\n                    \"$ref\": \"#/definitions/FunnelStepReference\"\n                },\n                \"funnel_to_step\": {\n                    \"type\": \"number\"\n                },\n                \"funnel_viz_type\": {\n                    \"$ref\": \"#/definitions/FunnelVizType\"\n                },\n                \"funnel_window_interval\": {\n                    \"type\": \"number\"\n                },\n                \"funnel_window_interval_unit\": {\n                    \"$ref\": \"#/definitions/FunnelConversionWindowTimeUnit\"\n                },\n                \"hidden_legend_keys\": {\n                    \"additionalProperties\": {\n                        \"anyOf\": [\n                            {\n                                \"type\": \"boolean\"\n                            },\n                            {\n                                \"not\": {}\n                            }\n                        ]\n                    },\n                    \"type\": \"object\"\n                },\n                \"layout\": {\n                    \"$ref\": \"#/definitions/FunnelLayout\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"FunnelsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Groups aggregation\"\n                },\n                \"breakdownFilter\": {\n                    \"$ref\": \"#/definitions/BreakdownFilter\",\n                    \"description\": \"Breakdown of the events and actions\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"funnelsFilter\": {\n                    \"$ref\": \"#/definitions/FunnelsFilter\",\n                    \"description\": \"Properties specific to the funnels insight\"\n                },\n                \"interval\": {\n                    \"$ref\": \"#/definitions/IntervalType\",\n                    \"description\": \"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`\"\n                },\n                \"kind\": {\n                    \"const\": \"FunnelsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/FunnelsQueryResponse\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"series\": {\n                    \"description\": \"Events and actions to include\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyEntityNode\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"kind\", \"series\"],\n            \"type\": \"object\"\n        },\n        \"FunnelsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"isUdf\": {\n                    \"type\": \"boolean\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/FunnelStepsResults\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/FunnelStepsBreakdownResults\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/FunnelTimeToConvertResults\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/FunnelTrendsResults\"\n                        }\n                    ]\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"GenericCachedQueryResponse\": {\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"cache_key\", \"is_cached\", \"last_refresh\", \"next_allowed_client_refresh\", \"timezone\"],\n            \"type\": \"object\"\n        },\n        \"GoalLine\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"borderColor\": {\n                    \"type\": \"string\"\n                },\n                \"displayLabel\": {\n                    \"type\": \"boolean\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"label\", \"value\"],\n            \"type\": \"object\"\n        },\n        \"GroupMathType\": {\n            \"const\": \"unique_group\",\n            \"type\": \"string\"\n        },\n        \"GroupPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\"\n                },\n                \"type\": {\n                    \"const\": \"group\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"HasPropertiesNode\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/EventsNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PersonsNode\"\n                }\n            ]\n        },\n        \"HogCompileResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"bytecode\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"locals\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"bytecode\", \"locals\"],\n            \"type\": \"object\"\n        },\n        \"HogLanguage\": {\n            \"enum\": [\"hog\", \"hogJson\", \"hogQL\", \"hogQLExpr\", \"hogTemplate\"],\n            \"type\": \"string\"\n        },\n        \"HogQLASTQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"explain\": {\n                    \"deprecated\": \"use modifiers.debug instead\",\n                    \"type\": \"boolean\"\n                },\n                \"filters\": {\n                    \"$ref\": \"#/definitions/HogQLFilters\"\n                },\n                \"kind\": {\n                    \"const\": \"HogQLASTQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"name\": {\n                    \"description\": \"Client provided name of the query\",\n                    \"type\": \"string\"\n                },\n                \"query\": {\n                    \"type\": \"object\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/HogQLQueryResponse\"\n                },\n                \"values\": {\n                    \"description\": \"Constant values that can be referenced with the {placeholder} syntax in the query\",\n                    \"type\": \"object\"\n                },\n                \"variables\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/HogQLVariable\"\n                    },\n                    \"description\": \"Variables to be substituted into the query\",\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"kind\", \"query\"],\n            \"type\": \"object\"\n        },\n        \"HogQLAutocomplete\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"endPosition\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"description\": \"End position of the editor word\"\n                },\n                \"filters\": {\n                    \"$ref\": \"#/definitions/HogQLFilters\",\n                    \"description\": \"Table to validate the expression against\"\n                },\n                \"globals\": {\n                    \"description\": \"Global values in scope\",\n                    \"type\": \"object\"\n                },\n                \"kind\": {\n                    \"const\": \"HogQLAutocomplete\",\n                    \"type\": \"string\"\n                },\n                \"language\": {\n                    \"$ref\": \"#/definitions/HogLanguage\",\n                    \"description\": \"Language to validate\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query\": {\n                    \"description\": \"Query to validate\",\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/HogQLAutocompleteResponse\"\n                },\n                \"sourceQuery\": {\n                    \"$ref\": \"#/definitions/AnyDataNode\",\n                    \"description\": \"Query in whose context to validate.\"\n                },\n                \"startPosition\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"description\": \"Start position of the editor word\"\n                }\n            },\n            \"required\": [\"endPosition\", \"kind\", \"language\", \"query\", \"startPosition\"],\n            \"type\": \"object\"\n        },\n        \"HogQLAutocompleteResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"incomplete_list\": {\n                    \"description\": \"Whether or not the suggestions returned are complete\",\n                    \"type\": \"boolean\"\n                },\n                \"suggestions\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AutocompleteCompletionItem\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"suggestions\", \"incomplete_list\"],\n            \"type\": \"object\"\n        },\n        \"HogQLExpression\": {\n            \"type\": \"string\"\n        },\n        \"HogQLFilters\": {\n            \"additionalProperties\": false,\n            \"description\": \"Filters object that will be converted to a HogQL {filters} placeholder\",\n            \"properties\": {\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"filterTestAccounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"properties\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"HogQLMathType\": {\n            \"const\": \"hogql\",\n            \"type\": \"string\"\n        },\n        \"HogQLMetadata\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"debug\": {\n                    \"description\": \"Enable more verbose output, usually run from the /debug page\",\n                    \"type\": \"boolean\"\n                },\n                \"filters\": {\n                    \"$ref\": \"#/definitions/HogQLFilters\",\n                    \"description\": \"Extra filters applied to query via {filters}\"\n                },\n                \"globals\": {\n                    \"description\": \"Extra globals for the query\",\n                    \"type\": \"object\"\n                },\n                \"kind\": {\n                    \"const\": \"HogQLMetadata\",\n                    \"type\": \"string\"\n                },\n                \"language\": {\n                    \"$ref\": \"#/definitions/HogLanguage\",\n                    \"description\": \"Language to validate\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query\": {\n                    \"description\": \"Query to validate\",\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/HogQLMetadataResponse\"\n                },\n                \"sourceQuery\": {\n                    \"$ref\": \"#/definitions/AnyDataNode\",\n                    \"description\": \"Query within which \\\"expr\\\" and \\\"template\\\" are validated. Defaults to \\\"select * from events\\\"\"\n                },\n                \"variables\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/HogQLVariable\"\n                    },\n                    \"description\": \"Variables to be subsituted into the query\",\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"kind\", \"language\", \"query\"],\n            \"type\": \"object\"\n        },\n        \"HogQLMetadataResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"errors\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/HogQLNotice\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"isValid\": {\n                    \"type\": \"boolean\"\n                },\n                \"isValidView\": {\n                    \"type\": \"boolean\"\n                },\n                \"notices\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/HogQLNotice\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"query\": {\n                    \"type\": \"string\"\n                },\n                \"table_names\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"warnings\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/HogQLNotice\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"errors\", \"warnings\", \"notices\"],\n            \"type\": \"object\"\n        },\n        \"HogQLNotice\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"end\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"fix\": {\n                    \"type\": \"string\"\n                },\n                \"message\": {\n                    \"type\": \"string\"\n                },\n                \"start\": {\n                    \"$ref\": \"#/definitions/integer\"\n                }\n            },\n            \"required\": [\"message\"],\n            \"type\": \"object\"\n        },\n        \"HogQLPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"const\": \"hogql\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"HogQLQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"explain\": {\n                    \"deprecated\": \"use modifiers.debug instead\",\n                    \"type\": \"boolean\"\n                },\n                \"filters\": {\n                    \"$ref\": \"#/definitions/HogQLFilters\"\n                },\n                \"kind\": {\n                    \"const\": \"HogQLQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"name\": {\n                    \"description\": \"Client provided name of the query\",\n                    \"type\": \"string\"\n                },\n                \"query\": {\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/HogQLQueryResponse\"\n                },\n                \"values\": {\n                    \"description\": \"Constant values that can be referenced with the {placeholder} syntax in the query\",\n                    \"type\": \"object\"\n                },\n                \"variables\": {\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/HogQLVariable\"\n                    },\n                    \"description\": \"Variables to be substituted into the query\",\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"kind\", \"query\"],\n            \"type\": \"object\"\n        },\n        \"HogQLQueryModifiers\": {\n            \"additionalProperties\": false,\n            \"description\": \"HogQL Query Options are automatically set per team. However, they can be overridden in the query.\",\n            \"properties\": {\n                \"bounceRateDurationSeconds\": {\n                    \"type\": \"number\"\n                },\n                \"bounceRatePageViewMode\": {\n                    \"enum\": [\"count_pageviews\", \"uniq_urls\", \"uniq_page_screen_autocaptures\"],\n                    \"type\": \"string\"\n                },\n                \"customChannelTypeRules\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/CustomChannelRule\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"dataWarehouseEventsModifiers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/DataWarehouseEventsModifier\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"type\": \"boolean\"\n                },\n                \"inCohortVia\": {\n                    \"enum\": [\"auto\", \"leftjoin\", \"subquery\", \"leftjoin_conjoined\"],\n                    \"type\": \"string\"\n                },\n                \"materializationMode\": {\n                    \"enum\": [\"auto\", \"legacy_null_as_string\", \"legacy_null_as_null\", \"disabled\"],\n                    \"type\": \"string\"\n                },\n                \"optimizeJoinedFilters\": {\n                    \"type\": \"boolean\"\n                },\n                \"personsArgMaxVersion\": {\n                    \"enum\": [\"auto\", \"v1\", \"v2\"],\n                    \"type\": \"string\"\n                },\n                \"personsJoinMode\": {\n                    \"enum\": [\"inner\", \"left\"],\n                    \"type\": \"string\"\n                },\n                \"personsOnEventsMode\": {\n                    \"enum\": [\n                        \"disabled\",\n                        \"person_id_no_override_properties_on_events\",\n                        \"person_id_override_properties_on_events\",\n                        \"person_id_override_properties_joined\"\n                    ],\n                    \"type\": \"string\"\n                },\n                \"propertyGroupsMode\": {\n                    \"enum\": [\"enabled\", \"disabled\", \"optimized\"],\n                    \"type\": \"string\"\n                },\n                \"s3TableUseInvalidColumns\": {\n                    \"type\": \"boolean\"\n                },\n                \"sessionTableVersion\": {\n                    \"enum\": [\"auto\", \"v1\", \"v2\"],\n                    \"type\": \"string\"\n                },\n                \"useMaterializedViews\": {\n                    \"type\": \"boolean\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"HogQLQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"clickhouse\": {\n                    \"description\": \"Executed ClickHouse query\",\n                    \"type\": \"string\"\n                },\n                \"columns\": {\n                    \"description\": \"Returned columns\",\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"explain\": {\n                    \"description\": \"Query explanation output\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/HogQLMetadataResponse\",\n                    \"description\": \"Query metadata output\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query\": {\n                    \"description\": \"Input query string\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"description\": \"Types of returned columns\",\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"HogQLVariable\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"code_name\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {},\n                \"variableId\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"variableId\", \"code_name\"],\n            \"type\": \"object\"\n        },\n        \"HogQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"code\": {\n                    \"type\": \"string\"\n                },\n                \"kind\": {\n                    \"const\": \"HogQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/HogQueryResponse\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"HogQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"bytecode\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"coloredBytecode\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"results\": {},\n                \"stdout\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"HumanMessage\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"const\": \"human\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"type\", \"content\"],\n            \"type\": \"object\"\n        },\n        \"InsightActorsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdown\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/BreakdownValueInt\"\n                        },\n                        {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    ]\n                },\n                \"compare\": {\n                    \"enum\": [\"current\", \"previous\"],\n                    \"type\": \"string\"\n                },\n                \"day\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/Day\"\n                        }\n                    ]\n                },\n                \"includeRecordings\": {\n                    \"type\": \"boolean\"\n                },\n                \"interval\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"description\": \"An interval selected out of available intervals in source query.\"\n                },\n                \"kind\": {\n                    \"const\": \"InsightActorsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ActorsQueryResponse\"\n                },\n                \"series\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/InsightQuerySource\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"kind\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"InsightActorsQueryBase\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"includeRecordings\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"$ref\": \"#/definitions/NodeKind\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ActorsQueryResponse\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"InsightActorsQueryOptions\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"kind\": {\n                    \"const\": \"InsightActorsQueryOptions\",\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/InsightActorsQueryOptionsResponse\"\n                },\n                \"source\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/InsightActorsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/FunnelsActorsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/FunnelCorrelationActorsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/StickinessActorsQuery\"\n                        }\n                    ]\n                }\n            },\n            \"required\": [\"kind\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"InsightActorsQueryOptionsResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdown\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/BreakdownItem\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"breakdowns\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/MultipleBreakdownOptions\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"compare\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"label\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"required\": [\"label\", \"value\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"day\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"label\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"anyOf\": [\n                                    {\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"$ref\": \"#/definitions/DatetimeDay\"\n                                    },\n                                    {\n                                        \"$ref\": \"#/definitions/Day\"\n                                    }\n                                ]\n                            }\n                        },\n                        \"required\": [\"label\", \"value\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"interval\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"label\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"$ref\": \"#/definitions/integer\",\n                                \"description\": \"An interval selected out of available intervals in source query\"\n                            }\n                        },\n                        \"required\": [\"label\", \"value\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"series\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"label\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"$ref\": \"#/definitions/integer\"\n                            }\n                        },\n                        \"required\": [\"label\", \"value\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"status\": {\n                    \"items\": {\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"label\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"required\": [\"label\", \"value\"],\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"InsightFilter\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/TrendsFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/FunnelsFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/RetentionFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PathsFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/StickinessFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/LifecycleFilter\"\n                }\n            ]\n        },\n        \"InsightFilterProperty\": {\n            \"enum\": [\n                \"trendsFilter\",\n                \"funnelsFilter\",\n                \"retentionFilter\",\n                \"pathsFilter\",\n                \"stickinessFilter\",\n                \"lifecycleFilter\"\n            ],\n            \"type\": \"string\"\n        },\n        \"InsightNodeKind\": {\n            \"enum\": [\n                \"TrendsQuery\",\n                \"FunnelsQuery\",\n                \"RetentionQuery\",\n                \"PathsQuery\",\n                \"StickinessQuery\",\n                \"LifecycleQuery\"\n            ],\n            \"type\": \"string\"\n        },\n        \"InsightQueryNode\": {\n            \"discriminator\": {\n                \"propertyName\": \"kind\"\n            },\n            \"oneOf\": [\n                {\n                    \"$ref\": \"#/definitions/TrendsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/FunnelsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/RetentionQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PathsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/StickinessQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/LifecycleQuery\"\n                }\n            ],\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"InsightQuerySource\": {\n            \"$ref\": \"#/definitions/InsightQueryNode\"\n        },\n        \"InsightShortId\": {\n            \"type\": \"string\"\n        },\n        \"InsightThreshold\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"bounds\": {\n                    \"$ref\": \"#/definitions/InsightsThresholdBounds\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/InsightThresholdType\"\n                }\n            },\n            \"required\": [\"type\"],\n            \"type\": \"object\"\n        },\n        \"InsightThresholdType\": {\n            \"enum\": [\"absolute\", \"percentage\"],\n            \"type\": \"string\"\n        },\n        \"InsightVizNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"embedded\": {\n                    \"description\": \"Query is embedded inside another bordered component\",\n                    \"type\": \"boolean\"\n                },\n                \"full\": {\n                    \"description\": \"Show with most visual options enabled. Used in insight scene.\",\n                    \"type\": \"boolean\"\n                },\n                \"hidePersonsModal\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"InsightVizNode\",\n                    \"type\": \"string\"\n                },\n                \"showCorrelationTable\": {\n                    \"type\": \"boolean\"\n                },\n                \"showFilters\": {\n                    \"type\": \"boolean\"\n                },\n                \"showHeader\": {\n                    \"type\": \"boolean\"\n                },\n                \"showLastComputation\": {\n                    \"type\": \"boolean\"\n                },\n                \"showLastComputationRefresh\": {\n                    \"type\": \"boolean\"\n                },\n                \"showResults\": {\n                    \"type\": \"boolean\"\n                },\n                \"showTable\": {\n                    \"type\": \"boolean\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/InsightQueryNode\"\n                },\n                \"suppressSessionAnalysisWarning\": {\n                    \"type\": \"boolean\"\n                },\n                \"vizSpecificOptions\": {\n                    \"$ref\": \"#/definitions/VizSpecificOptions\"\n                }\n            },\n            \"required\": [\"kind\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"InsightsQueryBase<FunnelsQueryResponse>\": {\n            \"additionalProperties\": false,\n            \"description\": \"Base class for insight query nodes. Should not be used directly.\",\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Groups aggregation\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"$ref\": \"#/definitions/NodeKind\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/FunnelsQueryResponse\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"InsightsQueryBase<LifecycleQueryResponse>\": {\n            \"additionalProperties\": false,\n            \"description\": \"Base class for insight query nodes. Should not be used directly.\",\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Groups aggregation\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"$ref\": \"#/definitions/NodeKind\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/LifecycleQueryResponse\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"InsightsQueryBase<PathsQueryResponse>\": {\n            \"additionalProperties\": false,\n            \"description\": \"Base class for insight query nodes. Should not be used directly.\",\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Groups aggregation\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"$ref\": \"#/definitions/NodeKind\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/PathsQueryResponse\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"InsightsQueryBase<RetentionQueryResponse>\": {\n            \"additionalProperties\": false,\n            \"description\": \"Base class for insight query nodes. Should not be used directly.\",\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Groups aggregation\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"$ref\": \"#/definitions/NodeKind\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/RetentionQueryResponse\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"InsightsQueryBase<TrendsQueryResponse>\": {\n            \"additionalProperties\": false,\n            \"description\": \"Base class for insight query nodes. Should not be used directly.\",\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Groups aggregation\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"$ref\": \"#/definitions/NodeKind\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/TrendsQueryResponse\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"InsightsThresholdBounds\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"lower\": {\n                    \"type\": \"number\"\n                },\n                \"upper\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"IntervalType\": {\n            \"enum\": [\"minute\", \"hour\", \"day\", \"week\", \"month\"],\n            \"type\": \"string\"\n        },\n        \"LLMTrace\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"createdAt\": {\n                    \"type\": \"string\"\n                },\n                \"events\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/LLMTraceEvent\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"inputCost\": {\n                    \"type\": \"number\"\n                },\n                \"inputState\": {},\n                \"inputTokens\": {\n                    \"type\": \"number\"\n                },\n                \"outputCost\": {\n                    \"type\": \"number\"\n                },\n                \"outputState\": {},\n                \"outputTokens\": {\n                    \"type\": \"number\"\n                },\n                \"person\": {\n                    \"$ref\": \"#/definitions/LLMTracePerson\"\n                },\n                \"totalCost\": {\n                    \"type\": \"number\"\n                },\n                \"totalLatency\": {\n                    \"type\": \"number\"\n                },\n                \"traceName\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"id\", \"createdAt\", \"person\", \"events\"],\n            \"type\": \"object\"\n        },\n        \"LLMTraceEvent\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"createdAt\": {\n                    \"type\": \"string\"\n                },\n                \"event\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"id\", \"event\", \"properties\", \"createdAt\"],\n            \"type\": \"object\"\n        },\n        \"LLMTracePerson\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"created_at\": {\n                    \"type\": \"string\"\n                },\n                \"distinct_id\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"type\": \"object\"\n                },\n                \"uuid\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"uuid\", \"created_at\", \"properties\", \"distinct_id\"],\n            \"type\": \"object\"\n        },\n        \"LifecycleFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"showLegend\": {\n                    \"default\": false,\n                    \"type\": \"boolean\"\n                },\n                \"showValuesOnSeries\": {\n                    \"type\": \"boolean\"\n                },\n                \"toggledLifecycles\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/LifecycleToggle\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"LifecycleFilterLegacy\": {\n            \"additionalProperties\": false,\n            \"description\": \"`LifecycleFilterType` minus everything inherited from `FilterType`\",\n            \"properties\": {\n                \"show_legend\": {\n                    \"type\": \"boolean\"\n                },\n                \"show_values_on_series\": {\n                    \"type\": \"boolean\"\n                },\n                \"toggledLifecycles\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/LifecycleToggle\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"LifecycleQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Groups aggregation\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"interval\": {\n                    \"$ref\": \"#/definitions/IntervalType\",\n                    \"default\": \"day\",\n                    \"description\": \"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`\"\n                },\n                \"kind\": {\n                    \"const\": \"LifecycleQuery\",\n                    \"type\": \"string\"\n                },\n                \"lifecycleFilter\": {\n                    \"$ref\": \"#/definitions/LifecycleFilter\",\n                    \"description\": \"Properties specific to the lifecycle insight\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/LifecycleQueryResponse\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"series\": {\n                    \"description\": \"Events and actions to include\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyEntityNode\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"kind\", \"series\"],\n            \"type\": \"object\"\n        },\n        \"LifecycleQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"LifecycleToggle\": {\n            \"enum\": [\"new\", \"resurrecting\", \"returning\", \"dormant\"],\n            \"type\": \"string\"\n        },\n        \"LogEntryPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\"\n                },\n                \"type\": {\n                    \"const\": \"log_entry\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"MatchedRecording\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"events\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/MatchedRecordingEvent\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"session_id\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"events\"],\n            \"type\": \"object\"\n        },\n        \"MatchedRecordingEvent\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"uuid\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"uuid\"],\n            \"type\": \"object\"\n        },\n        \"MathType\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/BaseMathType\"\n                },\n                {\n                    \"$ref\": \"#/definitions/FunnelMathType\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PropertyMathType\"\n                },\n                {\n                    \"$ref\": \"#/definitions/CountPerActorMathType\"\n                },\n                {\n                    \"$ref\": \"#/definitions/GroupMathType\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLMathType\"\n                }\n            ]\n        },\n        \"MultipleBreakdownOptions\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"values\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/BreakdownItem\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"values\"],\n            \"type\": \"object\"\n        },\n        \"MultipleBreakdownType\": {\n            \"enum\": [\"person\", \"event\", \"group\", \"session\", \"hogql\"],\n            \"type\": \"string\"\n        },\n        \"NodeKind\": {\n            \"description\": \"PostHog Query Schema definition.\\n\\nThis file acts as the source of truth for:\\n\\n- frontend/src/queries/schema.json   - generated from typescript via \\\"pnpm --filter=@posthog/frontend run schema:build:json\\\"\\n\\n- posthog/schema.py   - generated from json the above json via \\\"pnpm -w run schema:build:python\\\"\",\n            \"enum\": [\n                \"EventsNode\",\n                \"ActionsNode\",\n                \"DataWarehouseNode\",\n                \"EventsQuery\",\n                \"PersonsNode\",\n                \"HogQuery\",\n                \"HogQLQuery\",\n                \"HogQLASTQuery\",\n                \"HogQLMetadata\",\n                \"HogQLAutocomplete\",\n                \"ActorsQuery\",\n                \"FunnelsActorsQuery\",\n                \"FunnelCorrelationActorsQuery\",\n                \"SessionsTimelineQuery\",\n                \"RecordingsQuery\",\n                \"SessionAttributionExplorerQuery\",\n                \"ErrorTrackingQuery\",\n                \"DataTableNode\",\n                \"DataVisualizationNode\",\n                \"SavedInsightNode\",\n                \"InsightVizNode\",\n                \"TrendsQuery\",\n                \"FunnelsQuery\",\n                \"RetentionQuery\",\n                \"PathsQuery\",\n                \"StickinessQuery\",\n                \"LifecycleQuery\",\n                \"InsightActorsQuery\",\n                \"InsightActorsQueryOptions\",\n                \"FunnelCorrelationQuery\",\n                \"WebOverviewQuery\",\n                \"WebStatsTableQuery\",\n                \"WebExternalClicksTableQuery\",\n                \"WebGoalsQuery\",\n                \"WebVitalsQuery\",\n                \"WebVitalsPathBreakdownQuery\",\n                \"ExperimentMetric\",\n                \"ExperimentQuery\",\n                \"ExperimentExposureQuery\",\n                \"ExperimentEventMetricConfig\",\n                \"ExperimentActionMetricConfig\",\n                \"ExperimentDataWarehouseMetricConfig\",\n                \"ExperimentTrendsQuery\",\n                \"ExperimentFunnelsQuery\",\n                \"DatabaseSchemaQuery\",\n                \"SuggestedQuestionsQuery\",\n                \"TeamTaxonomyQuery\",\n                \"EventTaxonomyQuery\",\n                \"ActorsPropertyTaxonomyQuery\",\n                \"TracesQuery\"\n            ],\n            \"type\": \"string\"\n        },\n        \"PathCleaningFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"alias\": {\n                    \"type\": \"string\"\n                },\n                \"regex\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"PathType\": {\n            \"enum\": [\"$pageview\", \"$screen\", \"custom_event\", \"hogql\"],\n            \"type\": \"string\"\n        },\n        \"PathsFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"edgeLimit\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"default\": 50\n                },\n                \"endPoint\": {\n                    \"type\": \"string\"\n                },\n                \"excludeEvents\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"includeEventTypes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/PathType\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"localPathCleaningFilters\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/PathCleaningFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"maxEdgeWeight\": {\n                    \"type\": \"integer\"\n                },\n                \"minEdgeWeight\": {\n                    \"type\": \"integer\"\n                },\n                \"pathDropoffKey\": {\n                    \"description\": \"Relevant only within actors query\",\n                    \"type\": \"string\"\n                },\n                \"pathEndKey\": {\n                    \"description\": \"Relevant only within actors query\",\n                    \"type\": \"string\"\n                },\n                \"pathGroupings\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"pathReplacements\": {\n                    \"type\": \"boolean\"\n                },\n                \"pathStartKey\": {\n                    \"description\": \"Relevant only within actors query\",\n                    \"type\": \"string\"\n                },\n                \"pathsHogQLExpression\": {\n                    \"type\": \"string\"\n                },\n                \"startPoint\": {\n                    \"type\": \"string\"\n                },\n                \"stepLimit\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"default\": 5\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"PathsFilterLegacy\": {\n            \"additionalProperties\": false,\n            \"description\": \"`PathsFilterType` minus everything inherited from `FilterType` and persons modal related params\",\n            \"properties\": {\n                \"edge_limit\": {\n                    \"type\": \"integer\"\n                },\n                \"end_point\": {\n                    \"type\": \"string\"\n                },\n                \"exclude_events\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"funnel_filter\": {\n                    \"type\": \"object\"\n                },\n                \"funnel_paths\": {\n                    \"$ref\": \"#/definitions/FunnelPathType\"\n                },\n                \"include_event_types\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/PathType\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"local_path_cleaning_filters\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/PathCleaningFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"max_edge_weight\": {\n                    \"type\": \"integer\"\n                },\n                \"min_edge_weight\": {\n                    \"type\": \"integer\"\n                },\n                \"path_groupings\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"path_replacements\": {\n                    \"type\": \"boolean\"\n                },\n                \"path_type\": {\n                    \"$ref\": \"#/definitions/PathType\"\n                },\n                \"paths_hogql_expression\": {\n                    \"type\": \"string\"\n                },\n                \"start_point\": {\n                    \"type\": \"string\"\n                },\n                \"step_limit\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"PathsLink\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"average_conversion_time\": {\n                    \"type\": \"number\"\n                },\n                \"source\": {\n                    \"type\": \"string\"\n                },\n                \"target\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"source\", \"target\", \"value\", \"average_conversion_time\"],\n            \"type\": \"object\"\n        },\n        \"PathsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Groups aggregation\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"funnelPathsFilter\": {\n                    \"$ref\": \"#/definitions/FunnelPathsFilter\",\n                    \"description\": \"Used for displaying paths in relation to funnel steps.\"\n                },\n                \"kind\": {\n                    \"const\": \"PathsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"pathsFilter\": {\n                    \"$ref\": \"#/definitions/PathsFilter\",\n                    \"description\": \"Properties specific to the paths insight\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/PathsQueryResponse\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                }\n            },\n            \"required\": [\"kind\", \"pathsFilter\"],\n            \"type\": \"object\"\n        },\n        \"PathsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/PathsLink\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"PersonPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"description\": \"Sync with plugin-server/src/types.ts\",\n            \"properties\": {\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\"\n                },\n                \"type\": {\n                    \"const\": \"person\",\n                    \"description\": \"Person properties\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"PersonType\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"created_at\": {\n                    \"type\": \"string\"\n                },\n                \"distinct_ids\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"is_identified\": {\n                    \"type\": \"boolean\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"type\": \"object\"\n                },\n                \"uuid\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"distinct_ids\", \"properties\"],\n            \"type\": \"object\"\n        },\n        \"PersonsNode\": {\n            \"additionalProperties\": false,\n            \"deprecated\": \"Use `ActorsQuery` instead.\",\n            \"properties\": {\n                \"cohort\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"distinctId\": {\n                    \"type\": \"string\"\n                },\n                \"fixedProperties\": {\n                    \"description\": \"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"const\": \"PersonsNode\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"type\": \"object\"\n                },\n                \"search\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"PropertyFilterType\": {\n            \"enum\": [\n                \"meta\",\n                \"event\",\n                \"person\",\n                \"element\",\n                \"feature\",\n                \"session\",\n                \"cohort\",\n                \"recording\",\n                \"log_entry\",\n                \"group\",\n                \"hogql\",\n                \"data_warehouse\",\n                \"data_warehouse_person_property\"\n            ],\n            \"type\": \"string\"\n        },\n        \"PropertyFilterValue\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"number\"\n                },\n                {\n                    \"items\": {\n                        \"type\": [\"string\", \"number\"]\n                    },\n                    \"type\": \"array\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        },\n        \"PropertyGroupFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"type\": {\n                    \"$ref\": \"#/definitions/FilterLogicalOperator\"\n                },\n                \"values\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/PropertyGroupFilterValue\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"type\", \"values\"],\n            \"type\": \"object\"\n        },\n        \"PropertyGroupFilterValue\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"type\": {\n                    \"$ref\": \"#/definitions/FilterLogicalOperator\"\n                },\n                \"values\": {\n                    \"items\": {\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            {\n                                \"$ref\": \"#/definitions/PropertyGroupFilterValue\"\n                            }\n                        ]\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"type\", \"values\"],\n            \"type\": \"object\"\n        },\n        \"PropertyMathType\": {\n            \"enum\": [\"avg\", \"sum\", \"min\", \"max\", \"median\", \"p75\", \"p90\", \"p95\", \"p99\"],\n            \"type\": \"string\"\n        },\n        \"PropertyOperator\": {\n            \"description\": \"Sync with plugin-server/src/types.ts\",\n            \"enum\": [\n                \"exact\",\n                \"is_not\",\n                \"icontains\",\n                \"not_icontains\",\n                \"regex\",\n                \"not_regex\",\n                \"gt\",\n                \"gte\",\n                \"lt\",\n                \"lte\",\n                \"is_set\",\n                \"is_not_set\",\n                \"is_date_exact\",\n                \"is_date_before\",\n                \"is_date_after\",\n                \"between\",\n                \"not_between\",\n                \"min\",\n                \"max\",\n                \"in\",\n                \"not_in\",\n                \"is_cleaned_path_exact\"\n            ],\n            \"type\": \"string\"\n        },\n        \"QueryRequest\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"async\": {\n                    \"deprecated\": \"Use `refresh` instead.\",\n                    \"type\": \"boolean\"\n                },\n                \"client_query_id\": {\n                    \"description\": \"Client provided query ID. Can be used to retrieve the status or cancel the query.\",\n                    \"type\": \"string\"\n                },\n                \"filters_override\": {\n                    \"$ref\": \"#/definitions/DashboardFilter\"\n                },\n                \"query\": {\n                    \"$ref\": \"#/definitions/QuerySchema\",\n                    \"description\": \"Submit a JSON string representing a query for PostHog data analysis, for example a HogQL query.\\n\\nExample payload:\\n\\n```\\n\\n{\\\"query\\\": {\\\"kind\\\": \\\"HogQLQuery\\\", \\\"query\\\": \\\"select * from events limit 100\\\"}}\\n\\n```\\n\\nFor more details on HogQL queries, see the [PostHog HogQL documentation](/docs/hogql#api-access).\"\n                },\n                \"refresh\": {\n                    \"$ref\": \"#/definitions/RefreshType\",\n                    \"default\": \"blocking\",\n                    \"description\": \"Whether results should be calculated sync or async, and how much to rely on the cache:\\n- `'blocking'` - calculate synchronously (returning only when the query is done), UNLESS there are very fresh results in the cache\\n- `'async'` - kick off background calculation (returning immediately with a query status), UNLESS there are very fresh results in the cache\\n- `'lazy_async'` - kick off background calculation, UNLESS there are somewhat fresh results in the cache\\n- `'force_blocking'` - calculate synchronously, even if fresh results are already cached\\n- `'force_async'` - kick off background calculation, even if fresh results are already cached\\n- `'force_cache'` - return cached data or a cache miss; always completes immediately as it never calculates Background calculation can be tracked using the `query_status` response field.\"\n                },\n                \"variables_override\": {\n                    \"additionalProperties\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"query\"],\n            \"type\": \"object\"\n        },\n        \"QueryResponseAlternative\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"items\": {},\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"columns\", \"hogql\", \"results\", \"types\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"missing_actors_count\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"items\": {},\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"columns\", \"hogql\", \"limit\", \"offset\", \"results\", \"types\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"breakdown\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/BreakdownItem\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"breakdowns\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/MultipleBreakdownOptions\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"compare\": {\n                            \"items\": {\n                                \"additionalProperties\": false,\n                                \"properties\": {\n                                    \"label\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"value\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"required\": [\"label\", \"value\"],\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"day\": {\n                            \"items\": {\n                                \"additionalProperties\": false,\n                                \"properties\": {\n                                    \"label\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"value\": {\n                                        \"anyOf\": [\n                                            {\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"$ref\": \"#/definitions/DatetimeDay\"\n                                            },\n                                            {\n                                                \"$ref\": \"#/definitions/Day\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"required\": [\"label\", \"value\"],\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"interval\": {\n                            \"items\": {\n                                \"additionalProperties\": false,\n                                \"properties\": {\n                                    \"label\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"value\": {\n                                        \"$ref\": \"#/definitions/integer\",\n                                        \"description\": \"An interval selected out of available intervals in source query\"\n                                    }\n                                },\n                                \"required\": [\"label\", \"value\"],\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"series\": {\n                            \"items\": {\n                                \"additionalProperties\": false,\n                                \"properties\": {\n                                    \"label\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"value\": {\n                                        \"$ref\": \"#/definitions/integer\"\n                                    }\n                                },\n                                \"required\": [\"label\", \"value\"],\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"status\": {\n                            \"items\": {\n                                \"additionalProperties\": false,\n                                \"properties\": {\n                                    \"label\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"value\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"required\": [\"label\", \"value\"],\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/TimelineEntry\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"bytecode\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"coloredBytecode\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"results\": {},\n                        \"stdout\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"clickhouse\": {\n                            \"description\": \"Executed ClickHouse query\",\n                            \"type\": \"string\"\n                        },\n                        \"columns\": {\n                            \"description\": \"Returned columns\",\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"explain\": {\n                            \"description\": \"Query explanation output\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"metadata\": {\n                            \"$ref\": \"#/definitions/HogQLMetadataResponse\",\n                            \"description\": \"Query metadata output\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query\": {\n                            \"description\": \"Input query string\",\n                            \"type\": \"string\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"description\": \"Types of returned columns\",\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"errors\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/HogQLNotice\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"isValid\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"isValidView\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"notices\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/HogQLNotice\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"query\": {\n                            \"type\": \"string\"\n                        },\n                        \"table_names\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"warnings\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/HogQLNotice\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"errors\", \"warnings\", \"notices\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"incomplete_list\": {\n                            \"description\": \"Whether or not the suggestions returned are complete\",\n                            \"type\": \"boolean\"\n                        },\n                        \"suggestions\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AutocompleteCompletionItem\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"suggestions\", \"incomplete_list\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {},\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ErrorTrackingIssue\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"credible_intervals\": {\n                            \"additionalProperties\": {\n                                \"items\": {\n                                    \"type\": \"number\"\n                                },\n                                \"maxItems\": 2,\n                                \"minItems\": 2,\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"expected_loss\": {\n                            \"type\": \"number\"\n                        },\n                        \"funnels_query\": {\n                            \"$ref\": \"#/definitions/FunnelsQuery\"\n                        },\n                        \"insight\": {\n                            \"items\": {\n                                \"items\": {\n                                    \"type\": \"object\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"kind\": {\n                            \"const\": \"ExperimentFunnelsQuery\",\n                            \"type\": \"string\"\n                        },\n                        \"probability\": {\n                            \"additionalProperties\": {\n                                \"type\": \"number\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"significance_code\": {\n                            \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                        },\n                        \"significant\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"stats_version\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"variants\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ExperimentVariantFunnelsBaseStats\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\n                        \"kind\",\n                        \"insight\",\n                        \"variants\",\n                        \"probability\",\n                        \"significant\",\n                        \"significance_code\",\n                        \"expected_loss\",\n                        \"credible_intervals\"\n                    ],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"count_query\": {\n                            \"$ref\": \"#/definitions/TrendsQuery\"\n                        },\n                        \"credible_intervals\": {\n                            \"additionalProperties\": {\n                                \"items\": {\n                                    \"type\": \"number\"\n                                },\n                                \"maxItems\": 2,\n                                \"minItems\": 2,\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"exposure_query\": {\n                            \"$ref\": \"#/definitions/TrendsQuery\"\n                        },\n                        \"insight\": {\n                            \"items\": {\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"kind\": {\n                            \"const\": \"ExperimentTrendsQuery\",\n                            \"type\": \"string\"\n                        },\n                        \"p_value\": {\n                            \"type\": \"number\"\n                        },\n                        \"probability\": {\n                            \"additionalProperties\": {\n                                \"type\": \"number\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"significance_code\": {\n                            \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                        },\n                        \"significant\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"stats_version\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"variants\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ExperimentVariantTrendsBaseStats\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\n                        \"kind\",\n                        \"insight\",\n                        \"variants\",\n                        \"probability\",\n                        \"significant\",\n                        \"significance_code\",\n                        \"p_value\",\n                        \"credible_intervals\"\n                    ],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"credible_intervals\": {\n                            \"additionalProperties\": {\n                                \"items\": {\n                                    \"type\": \"number\"\n                                },\n                                \"maxItems\": 2,\n                                \"minItems\": 2,\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"insight\": {\n                            \"items\": {\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"kind\": {\n                            \"const\": \"ExperimentQuery\",\n                            \"type\": \"string\"\n                        },\n                        \"metric\": {\n                            \"$ref\": \"#/definitions/ExperimentMetric\"\n                        },\n                        \"p_value\": {\n                            \"type\": \"number\"\n                        },\n                        \"probability\": {\n                            \"additionalProperties\": {\n                                \"type\": \"number\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"significance_code\": {\n                            \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                        },\n                        \"significant\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"stats_version\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"variants\": {\n                            \"anyOf\": [\n                                {\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/ExperimentVariantTrendsBaseStats\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                {\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/ExperimentVariantFunnelsBaseStats\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            ]\n                        }\n                    },\n                    \"required\": [\n                        \"kind\",\n                        \"insight\",\n                        \"metric\",\n                        \"variants\",\n                        \"probability\",\n                        \"significant\",\n                        \"significance_code\",\n                        \"p_value\",\n                        \"credible_intervals\"\n                    ],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"date_range\": {\n                            \"$ref\": \"#/definitions/DateRange\"\n                        },\n                        \"kind\": {\n                            \"const\": \"ExperimentExposureQuery\",\n                            \"type\": \"string\"\n                        },\n                        \"timeseries\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ExperimentExposureTimeSeries\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"total_exposures\": {\n                            \"additionalProperties\": {\n                                \"type\": \"number\"\n                            },\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"required\": [\"kind\", \"timeseries\", \"total_exposures\", \"date_range\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"dateFrom\": {\n                            \"type\": \"string\"\n                        },\n                        \"dateTo\": {\n                            \"type\": \"string\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/WebOverviewItem\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"samplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"samplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"samplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"samplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/WebVitalsPathBreakdownResult\"\n                            },\n                            \"maxItems\": 1,\n                            \"minItems\": 1,\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"properties\": {},\n                    \"type\": \"object\"\n                },\n                {\n                    \"not\": {}\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"items\": {},\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"columns\", \"hogql\", \"results\", \"types\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"missing_actors_count\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"items\": {},\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"columns\", \"hogql\", \"limit\", \"offset\", \"results\", \"types\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"clickhouse\": {\n                            \"description\": \"Executed ClickHouse query\",\n                            \"type\": \"string\"\n                        },\n                        \"columns\": {\n                            \"description\": \"Returned columns\",\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"explain\": {\n                            \"description\": \"Query explanation output\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"metadata\": {\n                            \"$ref\": \"#/definitions/HogQLMetadataResponse\",\n                            \"description\": \"Query metadata output\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query\": {\n                            \"description\": \"Input query string\",\n                            \"type\": \"string\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"description\": \"Types of returned columns\",\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"dateFrom\": {\n                            \"type\": \"string\"\n                        },\n                        \"dateTo\": {\n                            \"type\": \"string\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/WebOverviewItem\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"samplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"samplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"samplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"samplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/WebVitalsPathBreakdownResult\"\n                            },\n                            \"maxItems\": 1,\n                            \"minItems\": 1,\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {},\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ErrorTrackingIssue\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"credible_intervals\": {\n                            \"additionalProperties\": {\n                                \"items\": {\n                                    \"type\": \"number\"\n                                },\n                                \"maxItems\": 2,\n                                \"minItems\": 2,\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"expected_loss\": {\n                            \"type\": \"number\"\n                        },\n                        \"funnels_query\": {\n                            \"$ref\": \"#/definitions/FunnelsQuery\"\n                        },\n                        \"insight\": {\n                            \"items\": {\n                                \"items\": {\n                                    \"type\": \"object\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"kind\": {\n                            \"const\": \"ExperimentFunnelsQuery\",\n                            \"type\": \"string\"\n                        },\n                        \"probability\": {\n                            \"additionalProperties\": {\n                                \"type\": \"number\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"significance_code\": {\n                            \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                        },\n                        \"significant\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"stats_version\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"variants\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ExperimentVariantFunnelsBaseStats\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\n                        \"credible_intervals\",\n                        \"expected_loss\",\n                        \"insight\",\n                        \"kind\",\n                        \"probability\",\n                        \"significance_code\",\n                        \"significant\",\n                        \"variants\"\n                    ],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"count_query\": {\n                            \"$ref\": \"#/definitions/TrendsQuery\"\n                        },\n                        \"credible_intervals\": {\n                            \"additionalProperties\": {\n                                \"items\": {\n                                    \"type\": \"number\"\n                                },\n                                \"maxItems\": 2,\n                                \"minItems\": 2,\n                                \"type\": \"array\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"exposure_query\": {\n                            \"$ref\": \"#/definitions/TrendsQuery\"\n                        },\n                        \"insight\": {\n                            \"items\": {\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"kind\": {\n                            \"const\": \"ExperimentTrendsQuery\",\n                            \"type\": \"string\"\n                        },\n                        \"p_value\": {\n                            \"type\": \"number\"\n                        },\n                        \"probability\": {\n                            \"additionalProperties\": {\n                                \"type\": \"number\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"significance_code\": {\n                            \"$ref\": \"#/definitions/ExperimentSignificanceCode\"\n                        },\n                        \"significant\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"stats_version\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"variants\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ExperimentVariantTrendsBaseStats\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\n                        \"credible_intervals\",\n                        \"insight\",\n                        \"kind\",\n                        \"p_value\",\n                        \"probability\",\n                        \"significance_code\",\n                        \"significant\",\n                        \"variants\"\n                    ],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/LLMTrace\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"description\": \"Wether more breakdown values are available.\",\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"isUdf\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/FunnelStepsResults\"\n                                },\n                                {\n                                    \"$ref\": \"#/definitions/FunnelStepsBreakdownResults\"\n                                },\n                                {\n                                    \"$ref\": \"#/definitions/FunnelTimeToConvertResults\"\n                                },\n                                {\n                                    \"$ref\": \"#/definitions/FunnelTrendsResults\"\n                                }\n                            ]\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/RetentionResult\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/PathsLink\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"$ref\": \"#/definitions/FunnelCorrelationResult\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"types\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"tables\": {\n                            \"additionalProperties\": {\n                                \"$ref\": \"#/definitions/DatabaseSchemaTable\"\n                            },\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"required\": [\"tables\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"questions\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"questions\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"$ref\": \"#/definitions/TeamTaxonomyResponse\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"$ref\": \"#/definitions/EventTaxonomyResponse\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"$ref\": \"#/definitions/ActorsPropertyTaxonomyResponse\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                },\n                {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"columns\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"error\": {\n                            \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                            \"type\": \"string\"\n                        },\n                        \"hasMore\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hogql\": {\n                            \"description\": \"Generated HogQL query.\",\n                            \"type\": \"string\"\n                        },\n                        \"limit\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"modifiers\": {\n                            \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                            \"description\": \"Modifiers used when performing the query\"\n                        },\n                        \"offset\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        \"query_status\": {\n                            \"$ref\": \"#/definitions/QueryStatus\",\n                            \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                        },\n                        \"results\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/LLMTrace\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"timings\": {\n                            \"description\": \"Measured timings for different parts of the query generation process\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/QueryTiming\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"required\": [\"results\"],\n                    \"type\": \"object\"\n                }\n            ]\n        },\n        \"QuerySchema\": {\n            \"discriminator\": {\n                \"propertyName\": \"kind\"\n            },\n            \"oneOf\": [\n                {\n                    \"$ref\": \"#/definitions/EventsNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ActionsNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PersonsNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DataWarehouseNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ActorsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/InsightActorsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/InsightActorsQueryOptions\"\n                },\n                {\n                    \"$ref\": \"#/definitions/SessionsTimelineQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLMetadata\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HogQLAutocomplete\"\n                },\n                {\n                    \"$ref\": \"#/definitions/SessionAttributionExplorerQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ErrorTrackingQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ExperimentFunnelsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ExperimentTrendsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ExperimentQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ExperimentExposureQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebOverviewQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebStatsTableQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebExternalClicksTableQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebGoalsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebVitalsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebVitalsPathBreakdownQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DataVisualizationNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DataTableNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/SavedInsightNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/InsightVizNode\"\n                },\n                {\n                    \"$ref\": \"#/definitions/TrendsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/FunnelsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/RetentionQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PathsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/StickinessQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/LifecycleQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/FunnelCorrelationQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/DatabaseSchemaQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/SuggestedQuestionsQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/TeamTaxonomyQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaxonomyQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ActorsPropertyTaxonomyQuery\"\n                },\n                {\n                    \"$ref\": \"#/definitions/TracesQuery\"\n                }\n            ],\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"QuerySchemaRoot\": {\n            \"$ref\": \"#/definitions/QuerySchema\"\n        },\n        \"QueryStatus\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"complete\": {\n                    \"default\": false,\n                    \"description\": \"Whether the query is still running. Will be true if the query is complete, even if it errored. Either result or error will be set.\",\n                    \"type\": \"boolean\"\n                },\n                \"dashboard_id\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"end_time\": {\n                    \"description\": \"When did the query execution task finish (whether successfully or not).\",\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"default\": false,\n                    \"description\": \"If the query failed, this will be set to true. More information can be found in the error_message field.\",\n                    \"type\": \"boolean\"\n                },\n                \"error_message\": {\n                    \"default\": null,\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"expiration_time\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"insight_id\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"labels\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"pickup_time\": {\n                    \"description\": \"When was the query execution task picked up by a worker.\",\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_async\": {\n                    \"const\": true,\n                    \"default\": true,\n                    \"description\": \"ONLY async queries use QueryStatus.\",\n                    \"type\": \"boolean\"\n                },\n                \"query_progress\": {\n                    \"$ref\": \"#/definitions/ClickhouseQueryProgress\"\n                },\n                \"results\": {},\n                \"start_time\": {\n                    \"description\": \"When was query execution task enqueued.\",\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"type\": \"string\"\n                },\n                \"team_id\": {\n                    \"$ref\": \"#/definitions/integer\"\n                }\n            },\n            \"required\": [\"id\", \"query_async\", \"team_id\", \"error\", \"complete\", \"error_message\"],\n            \"type\": \"object\"\n        },\n        \"QueryStatusResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\"\n                }\n            },\n            \"required\": [\"query_status\"],\n            \"type\": \"object\"\n        },\n        \"QueryTiming\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"k\": {\n                    \"description\": \"Key. Shortened to 'k' to save on data.\",\n                    \"type\": \"string\"\n                },\n                \"t\": {\n                    \"description\": \"Time in seconds. Shortened to 't' to save on data.\",\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"k\", \"t\"],\n            \"type\": \"object\"\n        },\n        \"ReasoningMessage\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"substeps\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"type\": {\n                    \"const\": \"ai/reasoning\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"type\", \"content\"],\n            \"type\": \"object\"\n        },\n        \"RecordingOrder\": {\n            \"enum\": [\n                \"duration\",\n                \"recording_duration\",\n                \"inactive_seconds\",\n                \"active_seconds\",\n                \"start_time\",\n                \"console_error_count\",\n                \"click_count\",\n                \"keypress_count\",\n                \"mouse_activity_count\",\n                \"activity_score\"\n            ],\n            \"type\": \"string\"\n        },\n        \"RecordingPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"key\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/DurationType\"\n                        },\n                        {\n                            \"const\": \"snapshot_source\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"const\": \"visited_page\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\"\n                },\n                \"type\": {\n                    \"const\": \"recording\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"RecordingsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"actions\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"console_log_filters\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/LogEntryPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"date_from\": {\n                    \"default\": \"-3d\",\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"date_to\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"events\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"filter_test_accounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"having_predicates\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"const\": \"RecordingsQuery\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"operand\": {\n                    \"$ref\": \"#/definitions/FilterLogicalOperator\",\n                    \"default\": \"AND\"\n                },\n                \"order\": {\n                    \"$ref\": \"#/definitions/RecordingOrder\",\n                    \"default\": \"start_time\"\n                },\n                \"person_uuid\": {\n                    \"type\": \"string\"\n                },\n                \"properties\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/RecordingsQueryResponse\"\n                },\n                \"session_ids\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"user_modified_filters\": {\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"RecordingsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"has_next\": {\n                    \"type\": \"boolean\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/SessionRecordingType\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\", \"has_next\"],\n            \"type\": \"object\"\n        },\n        \"RefreshType\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"const\": \"async\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"async_except_on_cache_miss\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"blocking\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"force_async\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"force_blocking\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"force_cache\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"const\": \"lazy_async\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        \"ResultCustomization\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/ResultCustomizationByValue\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ResultCustomizationByPosition\"\n                }\n            ]\n        },\n        \"ResultCustomizationBase\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"color\": {\n                    \"$ref\": \"#/definitions/DataColorToken\"\n                }\n            },\n            \"required\": [\"color\"],\n            \"type\": \"object\"\n        },\n        \"ResultCustomizationBy\": {\n            \"enum\": [\"value\", \"position\"],\n            \"type\": \"string\"\n        },\n        \"ResultCustomizationByPosition\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"assignmentBy\": {\n                    \"const\": \"position\",\n                    \"type\": \"string\"\n                },\n                \"color\": {\n                    \"$ref\": \"#/definitions/DataColorToken\"\n                }\n            },\n            \"required\": [\"assignmentBy\", \"color\"],\n            \"type\": \"object\"\n        },\n        \"ResultCustomizationByValue\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"assignmentBy\": {\n                    \"const\": \"value\",\n                    \"type\": \"string\"\n                },\n                \"color\": {\n                    \"$ref\": \"#/definitions/DataColorToken\"\n                }\n            },\n            \"required\": [\"assignmentBy\", \"color\"],\n            \"type\": \"object\"\n        },\n        \"RetentionEntity\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": [\"string\", \"number\"]\n                },\n                \"kind\": {\n                    \"$ref\": \"#/definitions/RetentionEntityKind\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"order\": {\n                    \"type\": \"integer\"\n                },\n                \"properties\": {\n                    \"description\": \"filters on the event\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/EntityType\"\n                },\n                \"uuid\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"RetentionEntityKind\": {\n            \"enum\": [\"ActionsNode\", \"EventsNode\"],\n            \"type\": \"string\"\n        },\n        \"RetentionFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"cumulative\": {\n                    \"type\": \"boolean\"\n                },\n                \"period\": {\n                    \"$ref\": \"#/definitions/RetentionPeriod\",\n                    \"default\": \"Day\"\n                },\n                \"retentionReference\": {\n                    \"description\": \"Whether retention is with regard to initial cohort size, or that of the previous period.\",\n                    \"enum\": [\"total\", \"previous\"],\n                    \"type\": \"string\"\n                },\n                \"retentionType\": {\n                    \"$ref\": \"#/definitions/RetentionType\"\n                },\n                \"returningEntity\": {\n                    \"$ref\": \"#/definitions/RetentionEntity\"\n                },\n                \"showMean\": {\n                    \"type\": \"boolean\"\n                },\n                \"targetEntity\": {\n                    \"$ref\": \"#/definitions/RetentionEntity\"\n                },\n                \"totalIntervals\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"default\": 11\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"RetentionFilterLegacy\": {\n            \"additionalProperties\": false,\n            \"description\": \"`RetentionFilterType` minus everything inherited from `FilterType`\",\n            \"properties\": {\n                \"cumulative\": {\n                    \"type\": \"boolean\"\n                },\n                \"period\": {\n                    \"$ref\": \"#/definitions/RetentionPeriod\"\n                },\n                \"retention_reference\": {\n                    \"description\": \"Whether retention is with regard to initial cohort size, or that of the previous period.\",\n                    \"enum\": [\"total\", \"previous\"],\n                    \"type\": \"string\"\n                },\n                \"retention_type\": {\n                    \"$ref\": \"#/definitions/RetentionType\"\n                },\n                \"returning_entity\": {\n                    \"$ref\": \"#/definitions/RetentionEntity\"\n                },\n                \"show_mean\": {\n                    \"type\": \"boolean\"\n                },\n                \"target_entity\": {\n                    \"$ref\": \"#/definitions/RetentionEntity\"\n                },\n                \"total_intervals\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"RetentionPeriod\": {\n            \"enum\": [\"Hour\", \"Day\", \"Week\", \"Month\"],\n            \"type\": \"string\"\n        },\n        \"RetentionQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Groups aggregation\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"RetentionQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/RetentionQueryResponse\"\n                },\n                \"retentionFilter\": {\n                    \"$ref\": \"#/definitions/RetentionFilter\",\n                    \"description\": \"Properties specific to the retention insight\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                }\n            },\n            \"required\": [\"kind\", \"retentionFilter\"],\n            \"type\": \"object\"\n        },\n        \"RetentionQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/RetentionResult\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"RetentionResult\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"date\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"values\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/RetentionValue\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"values\", \"label\", \"date\"],\n            \"type\": \"object\"\n        },\n        \"RetentionType\": {\n            \"enum\": [\"retention_recurring\", \"retention_first_time\"],\n            \"type\": \"string\"\n        },\n        \"RetentionValue\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"count\": {\n                    \"$ref\": \"#/definitions/integer\"\n                }\n            },\n            \"required\": [\"count\"],\n            \"type\": \"object\"\n        },\n        \"RevenueTrackingConfig\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"events\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/RevenueTrackingEventItem\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"events\"],\n            \"type\": \"object\"\n        },\n        \"RevenueTrackingEventItem\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"eventName\": {\n                    \"type\": \"string\"\n                },\n                \"revenueProperty\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"eventName\", \"revenueProperty\"],\n            \"type\": \"object\"\n        },\n        \"RootAssistantMessage\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/VisualizationMessage\"\n                },\n                {\n                    \"$ref\": \"#/definitions/ReasoningMessage\"\n                },\n                {\n                    \"$ref\": \"#/definitions/AssistantMessage\"\n                },\n                {\n                    \"$ref\": \"#/definitions/HumanMessage\"\n                },\n                {\n                    \"$ref\": \"#/definitions/FailureMessage\"\n                }\n            ]\n        },\n        \"SamplingRate\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"denominator\": {\n                    \"type\": \"number\"\n                },\n                \"numerator\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"numerator\"],\n            \"type\": \"object\"\n        },\n        \"SavedInsightNode\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"allowSorting\": {\n                    \"description\": \"Can the user click on column headers to sort the table? (default: true)\",\n                    \"type\": \"boolean\"\n                },\n                \"embedded\": {\n                    \"description\": \"Query is embedded inside another bordered component\",\n                    \"type\": \"boolean\"\n                },\n                \"expandable\": {\n                    \"description\": \"Can expand row to show raw event data (default: true)\",\n                    \"type\": \"boolean\"\n                },\n                \"full\": {\n                    \"description\": \"Show with most visual options enabled. Used in insight scene.\",\n                    \"type\": \"boolean\"\n                },\n                \"hidePersonsModal\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"SavedInsightNode\",\n                    \"type\": \"string\"\n                },\n                \"propertiesViaUrl\": {\n                    \"description\": \"Link properties via the URL (default: false)\",\n                    \"type\": \"boolean\"\n                },\n                \"shortId\": {\n                    \"$ref\": \"#/definitions/InsightShortId\"\n                },\n                \"showActions\": {\n                    \"description\": \"Show the kebab menu at the end of the row\",\n                    \"type\": \"boolean\"\n                },\n                \"showColumnConfigurator\": {\n                    \"description\": \"Show a button to configure the table's columns if possible\",\n                    \"type\": \"boolean\"\n                },\n                \"showCorrelationTable\": {\n                    \"type\": \"boolean\"\n                },\n                \"showDateRange\": {\n                    \"description\": \"Show date range selector\",\n                    \"type\": \"boolean\"\n                },\n                \"showElapsedTime\": {\n                    \"description\": \"Show the time it takes to run a query\",\n                    \"type\": \"boolean\"\n                },\n                \"showEventFilter\": {\n                    \"description\": \"Include an event filter above the table (EventsNode only)\",\n                    \"type\": \"boolean\"\n                },\n                \"showExport\": {\n                    \"description\": \"Show the export button\",\n                    \"type\": \"boolean\"\n                },\n                \"showFilters\": {\n                    \"type\": \"boolean\"\n                },\n                \"showHeader\": {\n                    \"type\": \"boolean\"\n                },\n                \"showHogQLEditor\": {\n                    \"description\": \"Include a HogQL query editor above HogQL tables\",\n                    \"type\": \"boolean\"\n                },\n                \"showLastComputation\": {\n                    \"type\": \"boolean\"\n                },\n                \"showLastComputationRefresh\": {\n                    \"type\": \"boolean\"\n                },\n                \"showOpenEditorButton\": {\n                    \"description\": \"Show a button to open the current query as a new insight. (default: true)\",\n                    \"type\": \"boolean\"\n                },\n                \"showPersistentColumnConfigurator\": {\n                    \"description\": \"Show a button to configure and persist the table's default columns if possible\",\n                    \"type\": \"boolean\"\n                },\n                \"showPropertyFilter\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"boolean\"\n                        },\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/TaxonomicFilterGroupType\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    ],\n                    \"description\": \"Include a property filter above the table\"\n                },\n                \"showReload\": {\n                    \"description\": \"Show a reload button\",\n                    \"type\": \"boolean\"\n                },\n                \"showResults\": {\n                    \"type\": \"boolean\"\n                },\n                \"showResultsTable\": {\n                    \"description\": \"Show a results table\",\n                    \"type\": \"boolean\"\n                },\n                \"showSavedQueries\": {\n                    \"description\": \"Shows a list of saved queries\",\n                    \"type\": \"boolean\"\n                },\n                \"showSearch\": {\n                    \"description\": \"Include a free text search field (PersonsNode only)\",\n                    \"type\": \"boolean\"\n                },\n                \"showTable\": {\n                    \"type\": \"boolean\"\n                },\n                \"showTestAccountFilters\": {\n                    \"description\": \"Show filter to exclude test accounts\",\n                    \"type\": \"boolean\"\n                },\n                \"showTimings\": {\n                    \"description\": \"Show a detailed query timing breakdown\",\n                    \"type\": \"boolean\"\n                },\n                \"suppressSessionAnalysisWarning\": {\n                    \"type\": \"boolean\"\n                },\n                \"vizSpecificOptions\": {\n                    \"$ref\": \"#/definitions/VizSpecificOptions\"\n                }\n            },\n            \"required\": [\"kind\", \"shortId\"],\n            \"type\": \"object\"\n        },\n        \"SessionAttributionExplorerQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"filters\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"dateRange\": {\n                            \"$ref\": \"#/definitions/DateRange\"\n                        },\n                        \"properties\": {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/SessionPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"groupBy\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/SessionAttributionGroupBy\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"kind\": {\n                    \"const\": \"SessionAttributionExplorerQuery\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/SessionAttributionExplorerQueryResponse\"\n                }\n            },\n            \"required\": [\"groupBy\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"SessionAttributionExplorerQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {},\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"SessionAttributionGroupBy\": {\n            \"enum\": [\"ChannelType\", \"Medium\", \"Source\", \"Campaign\", \"AdIds\", \"ReferringDomain\", \"InitialURL\"],\n            \"type\": \"string\"\n        },\n        \"SessionPropertyFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/PropertyOperator\"\n                },\n                \"type\": {\n                    \"const\": \"session\",\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/PropertyFilterValue\"\n                }\n            },\n            \"required\": [\"key\", \"operator\", \"type\"],\n            \"type\": \"object\"\n        },\n        \"SessionRecordingType\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"active_seconds\": {\n                    \"type\": \"number\"\n                },\n                \"activity_score\": {\n                    \"description\": \"calculated on the backend so that we can sort by it, definition may change over time\",\n                    \"type\": \"number\"\n                },\n                \"click_count\": {\n                    \"type\": \"number\"\n                },\n                \"console_error_count\": {\n                    \"type\": \"number\"\n                },\n                \"console_log_count\": {\n                    \"type\": \"number\"\n                },\n                \"console_warn_count\": {\n                    \"type\": \"number\"\n                },\n                \"distinct_id\": {\n                    \"type\": \"string\"\n                },\n                \"email\": {\n                    \"type\": \"string\"\n                },\n                \"end_time\": {\n                    \"description\": \"When the recording ends in ISO format.\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"inactive_seconds\": {\n                    \"type\": \"number\"\n                },\n                \"keypress_count\": {\n                    \"type\": \"number\"\n                },\n                \"matching_events\": {\n                    \"description\": \"List of matching events. *\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/MatchedRecording\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"mouse_activity_count\": {\n                    \"description\": \"count of all mouse activity in the recording, not just clicks\",\n                    \"type\": \"number\"\n                },\n                \"ongoing\": {\n                    \"description\": \"whether we have received data for this recording in the last 5 minutes (assumes the recording was loaded from ClickHouse)\\n*\",\n                    \"type\": \"boolean\"\n                },\n                \"person\": {\n                    \"$ref\": \"#/definitions/PersonType\"\n                },\n                \"recording_duration\": {\n                    \"description\": \"Length of recording in seconds.\",\n                    \"type\": \"number\"\n                },\n                \"snapshot_source\": {\n                    \"enum\": [\"web\", \"mobile\", \"unknown\"],\n                    \"type\": \"string\"\n                },\n                \"start_time\": {\n                    \"description\": \"When the recording starts in ISO format.\",\n                    \"type\": \"string\"\n                },\n                \"start_url\": {\n                    \"type\": \"string\"\n                },\n                \"storage\": {\n                    \"description\": \"Where this recording information was loaded from\",\n                    \"enum\": [\"object_storage_lts\", \"object_storage\"],\n                    \"type\": \"string\"\n                },\n                \"summary\": {\n                    \"type\": \"string\"\n                },\n                \"viewed\": {\n                    \"description\": \"Whether this recording has been viewed already.\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\"id\", \"viewed\", \"recording_duration\", \"start_time\", \"end_time\", \"snapshot_source\"],\n            \"type\": \"object\"\n        },\n        \"SessionsTimelineQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"after\": {\n                    \"description\": \"Only fetch sessions that started after this timestamp (default: '-24h')\",\n                    \"type\": \"string\"\n                },\n                \"before\": {\n                    \"description\": \"Only fetch sessions that started before this timestamp (default: '+5s')\",\n                    \"type\": \"string\"\n                },\n                \"kind\": {\n                    \"const\": \"SessionsTimelineQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"personId\": {\n                    \"description\": \"Fetch sessions only for a given person\",\n                    \"type\": \"string\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/SessionsTimelineQueryResponse\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"SessionsTimelineQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TimelineEntry\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"StepOrderValue\": {\n            \"enum\": [\"strict\", \"unordered\", \"ordered\"],\n            \"type\": \"string\"\n        },\n        \"StickinessActorsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdown\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/BreakdownValueInt\"\n                        },\n                        {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        }\n                    ]\n                },\n                \"compare\": {\n                    \"enum\": [\"current\", \"previous\"],\n                    \"type\": \"string\"\n                },\n                \"day\": {\n                    \"anyOf\": [\n                        {\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/Day\"\n                        }\n                    ]\n                },\n                \"includeRecordings\": {\n                    \"type\": \"boolean\"\n                },\n                \"interval\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"description\": \"An interval selected out of available intervals in source query.\"\n                },\n                \"kind\": {\n                    \"const\": \"InsightActorsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/StickinessOperator\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/ActorsQueryResponse\"\n                },\n                \"series\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/InsightQuerySource\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"kind\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"StickinessFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"display\": {\n                    \"$ref\": \"#/definitions/ChartDisplayType\"\n                },\n                \"hiddenLegendIndexes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/integer\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"showLegend\": {\n                    \"type\": \"boolean\"\n                },\n                \"showMultipleYAxes\": {\n                    \"type\": \"boolean\"\n                },\n                \"showValuesOnSeries\": {\n                    \"type\": \"boolean\"\n                },\n                \"stickinessCriteria\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"operator\": {\n                            \"$ref\": \"#/definitions/StickinessOperator\"\n                        },\n                        \"value\": {\n                            \"$ref\": \"#/definitions/integer\"\n                        }\n                    },\n                    \"required\": [\"operator\", \"value\"],\n                    \"type\": \"object\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"StickinessFilterLegacy\": {\n            \"additionalProperties\": false,\n            \"description\": \"`StickinessFilterType` minus everything inherited from `FilterType` and persons modal related params\",\n            \"properties\": {\n                \"compare\": {\n                    \"type\": \"boolean\"\n                },\n                \"compare_to\": {\n                    \"type\": \"string\"\n                },\n                \"display\": {\n                    \"$ref\": \"#/definitions/ChartDisplayType\"\n                },\n                \"hidden_legend_keys\": {\n                    \"additionalProperties\": {\n                        \"anyOf\": [\n                            {\n                                \"type\": \"boolean\"\n                            },\n                            {\n                                \"not\": {}\n                            }\n                        ]\n                    },\n                    \"type\": \"object\"\n                },\n                \"show_legend\": {\n                    \"type\": \"boolean\"\n                },\n                \"show_multiple_y_axes\": {\n                    \"type\": \"boolean\"\n                },\n                \"show_values_on_series\": {\n                    \"type\": \"boolean\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"StickinessOperator\": {\n            \"enum\": [\"gte\", \"lte\", \"exact\"],\n            \"type\": \"string\"\n        },\n        \"StickinessQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"compareFilter\": {\n                    \"$ref\": \"#/definitions/CompareFilter\",\n                    \"description\": \"Compare to date range\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"interval\": {\n                    \"$ref\": \"#/definitions/IntervalType\",\n                    \"default\": \"day\",\n                    \"description\": \"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`\"\n                },\n                \"intervalCount\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"description\": \"How many intervals comprise a period. Only used for cohorts, otherwise default 1.\"\n                },\n                \"kind\": {\n                    \"const\": \"StickinessQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/StickinessQueryResponse\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"series\": {\n                    \"description\": \"Events and actions to include\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyEntityNode\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"stickinessFilter\": {\n                    \"$ref\": \"#/definitions/StickinessFilter\",\n                    \"description\": \"Properties specific to the stickiness insight\"\n                }\n            },\n            \"required\": [\"kind\", \"series\"],\n            \"type\": \"object\"\n        },\n        \"StickinessQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"SuggestedQuestionsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"kind\": {\n                    \"const\": \"SuggestedQuestionsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/SuggestedQuestionsQueryResponse\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"SuggestedQuestionsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"questions\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"questions\"],\n            \"type\": \"object\"\n        },\n        \"TableSettings\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"columns\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ChartAxis\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"conditionalFormatting\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/ConditionalFormattingRule\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"TaxonomicFilterGroupType\": {\n            \"enum\": [\n                \"metadata\",\n                \"actions\",\n                \"cohorts\",\n                \"cohorts_with_all\",\n                \"data_warehouse\",\n                \"data_warehouse_properties\",\n                \"data_warehouse_person_properties\",\n                \"elements\",\n                \"events\",\n                \"event_properties\",\n                \"event_feature_flags\",\n                \"numerical_event_properties\",\n                \"person_properties\",\n                \"pageview_urls\",\n                \"screens\",\n                \"custom_events\",\n                \"wildcard\",\n                \"groups\",\n                \"persons\",\n                \"feature_flags\",\n                \"insights\",\n                \"experiments\",\n                \"plugins\",\n                \"dashboards\",\n                \"name_groups\",\n                \"session_properties\",\n                \"hogql_expression\",\n                \"notebooks\",\n                \"log_entries\",\n                \"replay\"\n            ],\n            \"type\": \"string\"\n        },\n        \"TeamTaxonomyItem\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"count\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"event\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"event\", \"count\"],\n            \"type\": \"object\"\n        },\n        \"TeamTaxonomyQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"kind\": {\n                    \"const\": \"TeamTaxonomyQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/TeamTaxonomyQueryResponse\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"TeamTaxonomyQueryResponse\": {\n            \"additionalProperties\": false,\n            \"description\": \"All analytics query responses must inherit from this.\",\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"$ref\": \"#/definitions/TeamTaxonomyResponse\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"TeamTaxonomyResponse\": {\n            \"items\": {\n                \"$ref\": \"#/definitions/TeamTaxonomyItem\"\n            },\n            \"type\": \"array\"\n        },\n        \"TestBasicQueryResponse\": {\n            \"additionalProperties\": false,\n            \"deprecated\": \"Only exported for use in test_query_runner.py! Don't use anywhere else.\",\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"TestCachedBasicQueryResponse\": {\n            \"additionalProperties\": false,\n            \"deprecated\": \"Only exported for use in test_query_runner.py! Don't use anywhere else.\",\n            \"properties\": {\n                \"cache_key\": {\n                    \"type\": \"string\"\n                },\n                \"cache_target_age\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"calculation_trigger\": {\n                    \"description\": \"What triggered the calculation of the query, leave empty if user/immediate\",\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"is_cached\": {\n                    \"type\": \"boolean\"\n                },\n                \"last_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"next_allowed_client_refresh\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"timezone\": {\n                    \"type\": \"string\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"cache_key\",\n                \"is_cached\",\n                \"last_refresh\",\n                \"next_allowed_client_refresh\",\n                \"results\",\n                \"timezone\"\n            ],\n            \"type\": \"object\"\n        },\n        \"TimelineEntry\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"events\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/EventType\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"recording_duration_s\": {\n                    \"description\": \"Duration of the recording in seconds.\",\n                    \"type\": \"number\"\n                },\n                \"sessionId\": {\n                    \"description\": \"Session ID. None means out-of-session events\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"events\"],\n            \"type\": \"object\"\n        },\n        \"TracesQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"filterTestAccounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"TracesQuery\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"properties\": {\n                    \"description\": \"Properties configurable in the interface\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/TracesQueryResponse\"\n                },\n                \"traceId\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"kind\"],\n            \"type\": \"object\"\n        },\n        \"TracesQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"columns\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/LLMTrace\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"TrendsAlertConfig\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"check_ongoing_interval\": {\n                    \"type\": \"boolean\"\n                },\n                \"series_index\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"type\": {\n                    \"const\": \"TrendsAlertConfig\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"type\", \"series_index\"],\n            \"type\": \"object\"\n        },\n        \"TrendsFilter\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"aggregationAxisFormat\": {\n                    \"$ref\": \"#/definitions/AggregationAxisFormat\",\n                    \"default\": \"numeric\"\n                },\n                \"aggregationAxisPostfix\": {\n                    \"type\": \"string\"\n                },\n                \"aggregationAxisPrefix\": {\n                    \"type\": \"string\"\n                },\n                \"breakdown_histogram_bin_count\": {\n                    \"type\": \"number\"\n                },\n                \"decimalPlaces\": {\n                    \"type\": \"number\"\n                },\n                \"display\": {\n                    \"$ref\": \"#/definitions/ChartDisplayType\",\n                    \"default\": \"ActionsLineGraph\"\n                },\n                \"formula\": {\n                    \"type\": \"string\"\n                },\n                \"formulas\": {\n                    \"description\": \"List of formulas to apply to the data. Takes precedence over formula if both are set.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"goalLines\": {\n                    \"description\": \"Goal Lines\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/GoalLine\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"hiddenLegendIndexes\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/integer\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"resultCustomizationBy\": {\n                    \"$ref\": \"#/definitions/ResultCustomizationBy\",\n                    \"default\": \"value\",\n                    \"description\": \"Wether result datasets are associated by their values or by their order.\"\n                },\n                \"resultCustomizations\": {\n                    \"anyOf\": [\n                        {\n                            \"additionalProperties\": {\n                                \"$ref\": \"#/definitions/ResultCustomizationByValue\"\n                            },\n                            \"type\": \"object\"\n                        },\n                        {\n                            \"additionalProperties\": {\n                                \"$ref\": \"#/definitions/ResultCustomizationByPosition\"\n                            },\n                            \"propertyNames\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"object\"\n                        }\n                    ],\n                    \"description\": \"Customizations for the appearance of result datasets.\"\n                },\n                \"showAlertThresholdLines\": {\n                    \"default\": false,\n                    \"type\": \"boolean\"\n                },\n                \"showLabelsOnSeries\": {\n                    \"type\": \"boolean\"\n                },\n                \"showLegend\": {\n                    \"default\": false,\n                    \"type\": \"boolean\"\n                },\n                \"showMultipleYAxes\": {\n                    \"default\": false,\n                    \"type\": \"boolean\"\n                },\n                \"showPercentStackView\": {\n                    \"default\": false,\n                    \"type\": \"boolean\"\n                },\n                \"showValuesOnSeries\": {\n                    \"default\": false,\n                    \"type\": \"boolean\"\n                },\n                \"smoothingIntervals\": {\n                    \"$ref\": \"#/definitions/integer\",\n                    \"default\": 1\n                },\n                \"yAxisScaleType\": {\n                    \"enum\": [\"log10\", \"linear\"],\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"TrendsFilterLegacy\": {\n            \"additionalProperties\": false,\n            \"description\": \"`TrendsFilterType` minus everything inherited from `FilterType` and `shown_as`\",\n            \"properties\": {\n                \"aggregation_axis_format\": {\n                    \"$ref\": \"#/definitions/AggregationAxisFormat\"\n                },\n                \"aggregation_axis_postfix\": {\n                    \"type\": \"string\"\n                },\n                \"aggregation_axis_prefix\": {\n                    \"type\": \"string\"\n                },\n                \"breakdown_histogram_bin_count\": {\n                    \"type\": \"number\"\n                },\n                \"compare\": {\n                    \"type\": \"boolean\"\n                },\n                \"compare_to\": {\n                    \"type\": \"string\"\n                },\n                \"decimal_places\": {\n                    \"type\": \"number\"\n                },\n                \"display\": {\n                    \"$ref\": \"#/definitions/ChartDisplayType\"\n                },\n                \"formula\": {\n                    \"type\": \"string\"\n                },\n                \"hidden_legend_keys\": {\n                    \"additionalProperties\": {\n                        \"anyOf\": [\n                            {\n                                \"type\": \"boolean\"\n                            },\n                            {\n                                \"not\": {}\n                            }\n                        ]\n                    },\n                    \"type\": \"object\"\n                },\n                \"show_alert_threshold_lines\": {\n                    \"type\": \"boolean\"\n                },\n                \"show_labels_on_series\": {\n                    \"type\": \"boolean\"\n                },\n                \"show_legend\": {\n                    \"type\": \"boolean\"\n                },\n                \"show_multiple_y_axes\": {\n                    \"type\": \"boolean\"\n                },\n                \"show_percent_stack_view\": {\n                    \"type\": \"boolean\"\n                },\n                \"show_values_on_series\": {\n                    \"type\": \"boolean\"\n                },\n                \"smoothing_intervals\": {\n                    \"type\": \"number\"\n                },\n                \"y_axis_scale_type\": {\n                    \"enum\": [\"log10\", \"linear\"],\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"TrendsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"aggregation_group_type_index\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/integer\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Groups aggregation\"\n                },\n                \"breakdownFilter\": {\n                    \"$ref\": \"#/definitions/BreakdownFilter\",\n                    \"description\": \"Breakdown of the events and actions\"\n                },\n                \"compareFilter\": {\n                    \"$ref\": \"#/definitions/CompareFilter\",\n                    \"description\": \"Compare to date range\"\n                },\n                \"conversionGoal\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/WebAnalyticsConversionGoal\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ],\n                    \"description\": \"Whether we should be comparing against a specific conversion goal\"\n                },\n                \"dataColorTheme\": {\n                    \"description\": \"Colors used in the insight's visualization\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\",\n                    \"description\": \"Date range for the query\"\n                },\n                \"filterTestAccounts\": {\n                    \"default\": false,\n                    \"description\": \"Exclude internal and test users by applying the respective filters\",\n                    \"type\": \"boolean\"\n                },\n                \"interval\": {\n                    \"$ref\": \"#/definitions/IntervalType\",\n                    \"default\": \"day\",\n                    \"description\": \"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`\"\n                },\n                \"kind\": {\n                    \"const\": \"TrendsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"properties\": {\n                    \"anyOf\": [\n                        {\n                            \"items\": {\n                                \"$ref\": \"#/definitions/AnyPropertyFilter\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/PropertyGroupFilter\"\n                        }\n                    ],\n                    \"default\": [],\n                    \"description\": \"Property filters for all series\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/TrendsQueryResponse\"\n                },\n                \"samplingFactor\": {\n                    \"description\": \"Sampling rate\",\n                    \"type\": [\"number\", \"null\"]\n                },\n                \"series\": {\n                    \"description\": \"Events and actions to include\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AnyEntityNode\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"trendsFilter\": {\n                    \"$ref\": \"#/definitions/TrendsFilter\",\n                    \"description\": \"Properties specific to the trends insight\"\n                }\n            },\n            \"required\": [\"kind\", \"series\"],\n            \"type\": \"object\"\n        },\n        \"TrendsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"description\": \"Wether more breakdown values are available.\",\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"VisualizationMessage\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"answer\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/AssistantTrendsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/AssistantFunnelsQuery\"\n                        },\n                        {\n                            \"$ref\": \"#/definitions/AssistantRetentionQuery\"\n                        }\n                    ]\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"initiator\": {\n                    \"type\": \"string\"\n                },\n                \"plan\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"const\": \"ai/viz\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\"type\"],\n            \"type\": \"object\"\n        },\n        \"VizSpecificOptions\": {\n            \"additionalProperties\": false,\n            \"description\": \"Chart specific rendering options. Use ChartRenderingMetadata for non-serializable values, e.g. onClick handlers\",\n            \"properties\": {\n                \"ActionsPie\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"disableHoverOffset\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hideAggregation\": {\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"RETENTION\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"hideLineGraph\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"hideSizeColumn\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"useSmallLayout\": {\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    \"type\": \"object\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"WebAnalyticsConversionGoal\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/ActionConversionGoal\"\n                },\n                {\n                    \"$ref\": \"#/definitions/CustomEventConversionGoal\"\n                }\n            ]\n        },\n        \"WebAnalyticsOrderBy\": {\n            \"items\": [\n                {\n                    \"$ref\": \"#/definitions/WebAnalyticsOrderByFields\"\n                },\n                {\n                    \"$ref\": \"#/definitions/WebAnalyticsOrderByDirection\"\n                }\n            ],\n            \"maxItems\": 2,\n            \"minItems\": 2,\n            \"type\": \"array\"\n        },\n        \"WebAnalyticsOrderByDirection\": {\n            \"enum\": [\"ASC\", \"DESC\"],\n            \"type\": \"string\"\n        },\n        \"WebAnalyticsOrderByFields\": {\n            \"enum\": [\n                \"Visitors\",\n                \"Views\",\n                \"Clicks\",\n                \"BounceRate\",\n                \"AverageScrollPercentage\",\n                \"ScrollGt80Percentage\",\n                \"TotalConversions\",\n                \"UniqueConversions\",\n                \"ConversionRate\",\n                \"ConvertingUsers\"\n            ],\n            \"type\": \"string\"\n        },\n        \"WebAnalyticsPropertyFilter\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/EventPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/PersonPropertyFilter\"\n                },\n                {\n                    \"$ref\": \"#/definitions/SessionPropertyFilter\"\n                }\n            ]\n        },\n        \"WebAnalyticsPropertyFilters\": {\n            \"items\": {\n                \"$ref\": \"#/definitions/WebAnalyticsPropertyFilter\"\n            },\n            \"type\": \"array\"\n        },\n        \"WebExternalClicksTableQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"compareFilter\": {\n                    \"$ref\": \"#/definitions/CompareFilter\"\n                },\n                \"conversionGoal\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/WebAnalyticsConversionGoal\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"doPathCleaning\": {\n                    \"type\": \"boolean\"\n                },\n                \"filterTestAccounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"includeRevenue\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"WebExternalClicksTableQuery\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"orderBy\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsOrderBy\"\n                },\n                \"properties\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsPropertyFilters\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/WebExternalClicksTableQueryResponse\"\n                },\n                \"sampling\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"forceSamplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"stripQueryParams\": {\n                    \"type\": \"boolean\"\n                },\n                \"useSessionsTable\": {\n                    \"deprecated\": \"ignored, always treated as enabled *\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\"kind\", \"properties\"],\n            \"type\": \"object\"\n        },\n        \"WebExternalClicksTableQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"samplingRate\": {\n                    \"$ref\": \"#/definitions/SamplingRate\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"WebGoalsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"compareFilter\": {\n                    \"$ref\": \"#/definitions/CompareFilter\"\n                },\n                \"conversionGoal\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/WebAnalyticsConversionGoal\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"doPathCleaning\": {\n                    \"type\": \"boolean\"\n                },\n                \"filterTestAccounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"includeRevenue\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"WebGoalsQuery\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"orderBy\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsOrderBy\"\n                },\n                \"properties\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsPropertyFilters\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/WebGoalsQueryResponse\"\n                },\n                \"sampling\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"forceSamplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"useSessionsTable\": {\n                    \"deprecated\": \"ignored, always treated as enabled *\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\"kind\", \"properties\"],\n            \"type\": \"object\"\n        },\n        \"WebGoalsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"samplingRate\": {\n                    \"$ref\": \"#/definitions/SamplingRate\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"WebOverviewItem\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"changeFromPreviousPct\": {\n                    \"type\": \"number\"\n                },\n                \"isIncreaseBad\": {\n                    \"type\": \"boolean\"\n                },\n                \"key\": {\n                    \"type\": \"string\"\n                },\n                \"kind\": {\n                    \"$ref\": \"#/definitions/WebOverviewItemKind\"\n                },\n                \"previous\": {\n                    \"type\": \"number\"\n                },\n                \"value\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"key\", \"kind\"],\n            \"type\": \"object\"\n        },\n        \"WebOverviewItemKind\": {\n            \"enum\": [\"unit\", \"duration_s\", \"percentage\", \"currency\"],\n            \"type\": \"string\"\n        },\n        \"WebOverviewQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"compareFilter\": {\n                    \"$ref\": \"#/definitions/CompareFilter\"\n                },\n                \"conversionGoal\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/WebAnalyticsConversionGoal\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"doPathCleaning\": {\n                    \"type\": \"boolean\"\n                },\n                \"filterTestAccounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"includeRevenue\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"WebOverviewQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"orderBy\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsOrderBy\"\n                },\n                \"properties\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsPropertyFilters\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/WebOverviewQueryResponse\"\n                },\n                \"sampling\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"forceSamplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"useSessionsTable\": {\n                    \"deprecated\": \"ignored, always treated as enabled *\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\"kind\", \"properties\"],\n            \"type\": \"object\"\n        },\n        \"WebOverviewQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"dateFrom\": {\n                    \"type\": \"string\"\n                },\n                \"dateTo\": {\n                    \"type\": \"string\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/WebOverviewItem\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"samplingRate\": {\n                    \"$ref\": \"#/definitions/SamplingRate\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"WebStatsBreakdown\": {\n            \"enum\": [\n                \"Page\",\n                \"InitialPage\",\n                \"ExitPage\",\n                \"ExitClick\",\n                \"ScreenName\",\n                \"InitialChannelType\",\n                \"InitialReferringDomain\",\n                \"InitialUTMSource\",\n                \"InitialUTMCampaign\",\n                \"InitialUTMMedium\",\n                \"InitialUTMTerm\",\n                \"InitialUTMContent\",\n                \"InitialUTMSourceMediumCampaign\",\n                \"Browser\",\n                \"OS\",\n                \"Viewport\",\n                \"DeviceType\",\n                \"Country\",\n                \"Region\",\n                \"City\",\n                \"Timezone\",\n                \"Language\"\n            ],\n            \"type\": \"string\"\n        },\n        \"WebStatsTableQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"breakdownBy\": {\n                    \"$ref\": \"#/definitions/WebStatsBreakdown\"\n                },\n                \"compareFilter\": {\n                    \"$ref\": \"#/definitions/CompareFilter\"\n                },\n                \"conversionGoal\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/WebAnalyticsConversionGoal\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"doPathCleaning\": {\n                    \"type\": \"boolean\"\n                },\n                \"filterTestAccounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"includeBounceRate\": {\n                    \"type\": \"boolean\"\n                },\n                \"includeRevenue\": {\n                    \"type\": \"boolean\"\n                },\n                \"includeScrollDepth\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"WebStatsTableQuery\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"orderBy\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsOrderBy\"\n                },\n                \"properties\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsPropertyFilters\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/WebStatsTableQueryResponse\"\n                },\n                \"sampling\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"forceSamplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"useSessionsTable\": {\n                    \"deprecated\": \"ignored, always treated as enabled *\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\"breakdownBy\", \"kind\", \"properties\"],\n            \"type\": \"object\"\n        },\n        \"WebStatsTableQueryResponse\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"columns\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hasMore\": {\n                    \"type\": \"boolean\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"limit\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"offset\": {\n                    \"$ref\": \"#/definitions/integer\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                },\n                \"samplingRate\": {\n                    \"$ref\": \"#/definitions/SamplingRate\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"types\": {\n                    \"items\": {},\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"WebVitalsItem\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"action\": {\n                    \"$ref\": \"#/definitions/WebVitalsItemAction\"\n                },\n                \"data\": {\n                    \"items\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"days\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"data\", \"days\", \"action\"],\n            \"type\": \"object\"\n        },\n        \"WebVitalsItemAction\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"custom_name\": {\n                    \"$ref\": \"#/definitions/WebVitalsMetric\"\n                },\n                \"math\": {\n                    \"$ref\": \"#/definitions/WebVitalsPercentile\"\n                }\n            },\n            \"required\": [\"custom_name\", \"math\"],\n            \"type\": \"object\"\n        },\n        \"WebVitalsMetric\": {\n            \"enum\": [\"INP\", \"LCP\", \"CLS\", \"FCP\"],\n            \"type\": \"string\"\n        },\n        \"WebVitalsMetricBand\": {\n            \"enum\": [\"good\", \"needs_improvements\", \"poor\"],\n            \"type\": \"string\"\n        },\n        \"WebVitalsPathBreakdownQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"compareFilter\": {\n                    \"$ref\": \"#/definitions/CompareFilter\"\n                },\n                \"conversionGoal\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/WebAnalyticsConversionGoal\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"doPathCleaning\": {\n                    \"type\": \"boolean\"\n                },\n                \"filterTestAccounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"includeRevenue\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"WebVitalsPathBreakdownQuery\",\n                    \"type\": \"string\"\n                },\n                \"metric\": {\n                    \"$ref\": \"#/definitions/WebVitalsMetric\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"orderBy\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsOrderBy\"\n                },\n                \"percentile\": {\n                    \"$ref\": \"#/definitions/WebVitalsPercentile\"\n                },\n                \"properties\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsPropertyFilters\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/WebVitalsPathBreakdownQueryResponse\"\n                },\n                \"sampling\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"forceSamplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"thresholds\": {\n                    \"items\": {\n                        \"type\": \"number\"\n                    },\n                    \"maxItems\": 2,\n                    \"minItems\": 2,\n                    \"type\": \"array\"\n                },\n                \"useSessionsTable\": {\n                    \"deprecated\": \"ignored, always treated as enabled *\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\"kind\", \"metric\", \"percentile\", \"properties\", \"thresholds\"],\n            \"type\": \"object\"\n        },\n        \"WebVitalsPathBreakdownQueryResponse\": {\n            \"additionalProperties\": false,\n            \"description\": \"All analytics query responses must inherit from this.\",\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/WebVitalsPathBreakdownResult\"\n                    },\n                    \"maxItems\": 1,\n                    \"minItems\": 1,\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"WebVitalsPathBreakdownResult\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"good\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/WebVitalsPathBreakdownResultItem\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"needs_improvements\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/WebVitalsPathBreakdownResultItem\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"poor\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/WebVitalsPathBreakdownResultItem\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"good\", \"needs_improvements\", \"poor\"],\n            \"type\": \"object\"\n        },\n        \"WebVitalsPathBreakdownResultItem\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"path\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\"path\", \"value\"],\n            \"type\": \"object\"\n        },\n        \"WebVitalsPercentile\": {\n            \"enum\": [\"p75\", \"p90\", \"p99\"],\n            \"type\": \"string\"\n        },\n        \"WebVitalsQuery\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"compareFilter\": {\n                    \"$ref\": \"#/definitions/CompareFilter\"\n                },\n                \"conversionGoal\": {\n                    \"anyOf\": [\n                        {\n                            \"$ref\": \"#/definitions/WebAnalyticsConversionGoal\"\n                        },\n                        {\n                            \"type\": \"null\"\n                        }\n                    ]\n                },\n                \"dateRange\": {\n                    \"$ref\": \"#/definitions/DateRange\"\n                },\n                \"doPathCleaning\": {\n                    \"type\": \"boolean\"\n                },\n                \"filterTestAccounts\": {\n                    \"type\": \"boolean\"\n                },\n                \"includeRevenue\": {\n                    \"type\": \"boolean\"\n                },\n                \"kind\": {\n                    \"const\": \"WebVitalsQuery\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"orderBy\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsOrderBy\"\n                },\n                \"properties\": {\n                    \"$ref\": \"#/definitions/WebAnalyticsPropertyFilters\"\n                },\n                \"response\": {\n                    \"$ref\": \"#/definitions/WebGoalsQueryResponse\"\n                },\n                \"sampling\": {\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"forceSamplingRate\": {\n                            \"$ref\": \"#/definitions/SamplingRate\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"source\": {\n                    \"$ref\": \"#/definitions/InsightQueryNode\"\n                },\n                \"useSessionsTable\": {\n                    \"deprecated\": \"ignored, always treated as enabled *\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\"kind\", \"properties\", \"source\"],\n            \"type\": \"object\"\n        },\n        \"WebVitalsQueryResponse\": {\n            \"additionalProperties\": false,\n            \"description\": \"All analytics query responses must inherit from this.\",\n            \"properties\": {\n                \"error\": {\n                    \"description\": \"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.\",\n                    \"type\": \"string\"\n                },\n                \"hogql\": {\n                    \"description\": \"Generated HogQL query.\",\n                    \"type\": \"string\"\n                },\n                \"modifiers\": {\n                    \"$ref\": \"#/definitions/HogQLQueryModifiers\",\n                    \"description\": \"Modifiers used when performing the query\"\n                },\n                \"query_status\": {\n                    \"$ref\": \"#/definitions/QueryStatus\",\n                    \"description\": \"Query status indicates whether next to the provided data, a query is still running.\"\n                },\n                \"results\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/WebVitalsItem\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"timings\": {\n                    \"description\": \"Measured timings for different parts of the query generation process\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/QueryTiming\"\n                    },\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\"results\"],\n            \"type\": \"object\"\n        },\n        \"YAxisSettings\": {\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"scale\": {\n                    \"enum\": [\"linear\", \"logarithmic\"],\n                    \"type\": \"string\"\n                },\n                \"startAtZero\": {\n                    \"description\": \"Whether the Y axis should start at zero\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"integer\": {\n            \"type\": \"integer\"\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "import_jsx_runtime", "PersonDeleteModal", "personDeleteModal", "personDeleteModalLogic", "isDeletionConfirmed", "setIsDeletionConfirmed", "deletePerson", "showPersonDeleteModal", "LemonModal", "asDisplay", "Link", "LemonCheckbox", "value", "LemonButton", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ConversationDisplay", "eventProperties", "MetadataHeader", "ConversationMessagesDisplay", "import_react", "import_jsx_runtime", "EventDetails", "event", "tableProps", "showSystemProps", "setShowSystemProps", "activeTab", "setActiveTab", "displayedEventProperties", "visibleSystemProperties", "featureFlagProperties", "setProperties", "setOnceProperties", "systemPropsCount", "key", "CORE_FILTER_DEFINITIONS_BY_GROUP", "tabs", "PropertiesTable", "dayjs", "LemonButton", "pluralize", "JSONViewer", "HTMLElementsDisplay", "autocaptureToImage", "AutocaptureImageTab", "ErrorDisplay", "ConversationDisplay", "Link", "LemonTabs", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "DateRange", "query", "setQuery", "isEventsQuery", "DateFilter", "changedDateFrom", "changedDateTo", "newQuery", "isHogQLQuery", "isSessionAttributionExplorerQuery", "isTracesQuery", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "Reload", "responseLoading", "dataNodeLogic", "loadData", "cancelQuery", "LemonButton", "Spinner", "IconRefresh", "ReloadAll", "areAnyLoading", "dataNodeCollectionLogic", "reloadAll", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "TestAccountFilters", "query", "setQuery", "currentTeam", "teamLogic", "hasFilters", "setLocalDefault", "filterTestAccountsDefaultsLogic", "isEventsQuery", "isHogQLQuery", "isTracesQuery", "checked", "onChange", "newQuery", "TestAccountFilterSwitch", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_router", "import_jsx_runtime", "BackToSource", "aggregationLabel", "groupsModel", "cohortsById", "cohortsModel", "mathDefinitions", "mathsLogic", "backToSourceQuery", "dataNodeLogic", "summary", "summarizeInsightQuery", "LemonButton", "urls", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "HOGQL_COLUMNS_KEY", "cleanLiveEventsColumns", "columns", "column", "escapePropertyAsHogQlIdentifier", "getDefaultEventsQueryForTeam", "team", "liveColumns", "getEventsQueriesForTeam", "projectDefault", "getDefaultEventsSceneQuery", "columnConfiguratorLogic", "props", "column", "columns", "oldIndex", "newIndex", "state", "_", "c", "newColumns", "removed", "actions", "oldProps", "values", "teamLogic", "HOGQL_COLUMNS_KEY", "import_jsx_runtime", "uniqueNode", "ColumnConfigurator", "query", "setQuery", "columnsInQuery", "dataTableLogic", "key", "columnConfiguratorLogicProps", "columns", "isEventsQuery", "orderBy", "orderColumn", "removeExpressionComment", "c", "showModal", "columnConfiguratorLogic", "LemonButton", "IconTuning", "ColumnConfiguratorModal", "restrictionReason", "useRestrictedArea", "modalVisible", "saveAsDefault", "hideModal", "moveColumn", "setColumns", "selectColumn", "unselectColumn", "save", "toggleSaveAsDefault", "onEditColumn", "column", "index", "newColumn", "i", "LemonModal", "defaultDataTableColumns", "DndContext", "active", "over", "restrictToVerticalAxis", "restrictToParentElement", "SortableContext", "verticalListSortingStrategy", "SelectedColumn", "AutoSizer", "height", "width", "TaxonomicFilter", "group", "value", "taxonomicEventFilterToHogQL", "LemonCheckbox", "dataIndex", "onEdit", "onRemove", "setNodeRef", "attributes", "transform", "transition", "listeners", "useSortable", "columnType", "filterGroupType", "columnKey", "trimQuotes", "extractExpressionComment", "CSS", "SortableDragIcon", "PropertyFilterIcon", "PropertyKeyInfo", "Tooltip", "IconPencil", "IconX", "init_dirname", "init_buffer", "init_process", "import_kea_router", "import_jsx_runtime", "EventRowActions", "event", "insightUrl", "insightUrlForEvent", "More", "getCurrentTeamId", "LemonButton", "createActionFromEvent", "teamLogic", "IconLink", "copyToClipboard", "urls", "ViewRecordingButton", "mightHaveRecording", "IconWarning", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_loaders", "insightActorsQueryOptionsLogic", "values", "props", "isInsightActorsQuery", "optionsQuery", "performQuery", "actions", "oldProps", "import_jsx_runtime", "InsightActorsQueryOptions", "setQuery", "query", "localDataNodeLogic", "dataNodeLogic", "insightActorsQueryOptions", "insightActorsQueryOptionsLogic", "cleanedInsightActorsQueryOptions", "key", "options", "LemonSelect", "v", "init_dirname", "init_buffer", "init_process", "import_fast_deep_equal", "import_kea", "import_jsx_runtime", "SavedQueries", "query", "setQuery", "currentTeam", "teamLogic", "eventsQueries", "getEventsQueriesForTeam", "selectedTitle", "key", "equal", "LemonButtonWithDropdown", "title", "eventsQuery", "LemonButton", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "LemonEventName", "value", "onChange", "disabled", "placeholder", "allEventsOption", "TaxonomicPopover", "v", "PropertyKeyInfo", "import_jsx_runtime", "EventName", "query", "setQuery", "LemonEventName", "value", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "import_jsx_runtime", "uniqueNode", "EventPropertyFilters", "query", "setQuery", "taxonomicGroupTypes", "id", "properties", "isHogQLQuery", "isSessionAttributionExplorerQuery", "eventNames", "groupsTaxonomicTypes", "groupsModel", "PropertyFilters", "value", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_kea_router", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_router", "import_jsx_runtime", "hogQLQueryEditorLogic", "props", "actions", "oldProps", "selection", "model", "highlightedQuery", "featureFlagLogic", "dataWarehouseViewsLogic", "dataWarehouseSceneLogic", "queryOverride", "queryInput", "prompt", "error", "name", "_", "preflightLogic", "preflight", "values", "query", "result", "api_default", "sql", "e", "LemonDialog", "LemonField", "LemonInput", "viewName", "types", "import_jsx_runtime", "uniqueNode", "EDITOR_HEIGHT", "HogQLQueryEditor", "props", "editorRef", "key", "setKey", "urls", "monacoAndEditor", "setMonacoAndEditor", "monaco", "editor", "hogQLQueryEditorLogicProps", "logic", "hogQLQueryEditorLogic", "queryInput", "prompt", "aiAvailable", "promptError", "promptLoading", "setQueryInput", "saveQuery", "setPrompt", "draftFromPrompt", "saveAsView", "onUpdateView", "codeEditorKey", "codeEditorLogicProps", "hasErrors", "error", "isValidView", "codeEditorLogic", "editingView", "dataWarehouseSceneLogic", "monacoDisposables", "d", "clsx", "FlaggedFeature", "FEATURE_FLAGS", "LemonInput", "IconMagicWand", "value", "LemonButton", "LemonBanner", "CodeEditor", "v", "selectionType", "Link", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "EditHogQLButton", "hogql", "props", "query", "LemonButton", "urls", "IconQueryEditor", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "OpenEditorButton", "query", "props", "LemonButton", "urls", "IconPreview", "init_dirname", "init_buffer", "init_process", "import_react", "import_jsx_runtime", "uniqueNode", "PersonPropertyFilters", "query", "setQuery", "id", "PropertyFilters", "value", "isActorsQuery", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_react", "useDebouncedQuery", "query", "setQuery", "getValueFromQuery", "getModifiedQuery", "timeoutMs", "propsValue", "localValue", "setLocalValue", "queryRef", "timeoutRef", "newValue", "import_jsx_runtime", "labels", "PersonsSearch", "query", "setQuery", "value", "onChange", "useDebouncedQuery", "target", "isQueryForGroup", "LemonInput", "Tooltip", "IconInfo", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "DataTableOpenEditor", "query", "response", "dataTableLogic", "tableInsightQuery", "LemonButton", "IconTableChart", "urls", "LemonMenuOverlay", "import_jsx_runtime", "eventGroupTypes", "personGroupTypes", "uniqueNode", "DataTable", "uniqueKey", "query", "setQuery", "context", "cachedResults", "readOnly", "uniqueNodeKey", "dataKey", "insightProps", "vizKey", "insightVizDataNodeKey", "dataNodeLogicProps", "builtDataNodeLogic", "dataNodeLogic", "response", "responseLoading", "responseError", "queryCancelled", "nextDataLoading", "newDataLoading", "highlightedRows", "backToSourceQuery", "dataTableLogicProps", "dataTableRows", "columnsInQuery", "columnsInResponse", "queryWithDefaults", "canSort", "sourceFeatures", "dataTableLogic", "showActions", "showDateRange", "showTestAccountFilters", "showSearch", "showEventFilter", "showPropertyFilter", "showHogQLEditor", "showReload", "showExport", "showElapsedTime", "showColumnConfigurator", "showPersistentColumnConfigurator", "showSavedQueries", "expandable", "embedded", "showOpenEditorButton", "showResultsTable", "showTimings", "isReadOnly", "eventActionsColumnShown", "columnsInLemonTable", "groupTypes", "isActorsQuery", "lemonColumns", "key", "index", "renderColumnMeta", "_", "result", "label", "recordIndex", "renderColumn", "extractExpressionComment", "removeExpressionComment", "LemonDivider", "TaxonomicPopover", "v", "g", "hogQl", "taxonomicPersonFilterToHogQL", "taxonomicEventFilterToHogQL", "source", "columns", "getDataNodeDefaultColumns", "isAggregation", "isHogQlAggregation", "isOrderBy", "isDescOrderBy", "s", "i", "c", "LemonButton", "cleanColumnKey", "newSource", "orderKey", "EventRowActions", "column", "setQuerySource", "firstRowLeft", "BackToSource", "isInsightActorsQuery", "InsightActorsQueryOptions", "q", "DateRange", "EventName", "PersonsSearch", "EventPropertyFilters", "PersonPropertyFilters", "x", "firstRowRight", "TestAccountFilters", "SavedQueries", "secondRowLeft", "Reload", "ElapsedTime", "secondRowRight", "ColumnConfigurator", "DataTableExport", "DataTableOpenEditor", "showFirstRow", "showSecondRow", "inlineEditorButtonOnRow", "editorButton", "OpenEditorButton", "EditHogQLButton", "isHogQLQuery", "HogQLQueryEditor", "LemonTable", "rowIndex", "InsightErrorState", "InsightEmptyState", "isEventsQuery", "EventDetails", "clsx", "LoadNext", "PersonDeleteModal", "init_dirname", "init_buffer", "init_process", "import_ajv", "schema_default", "ajv", "Ajv", "schema_default", "isAnyPropertyFilters", "data", "validator", "item", "isWebAnalyticsPropertyFilters", "isSessionPropertyFilters"]
}
