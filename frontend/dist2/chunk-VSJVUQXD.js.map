{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/jq.js"],
  "sourcesContent": ["'use strict'\n\nmodule.exports = jq\njq.displayName = 'jq'\njq.aliases = []\nfunction jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\n        /__/g,\n        function () {\n          return interpolation\n        }\n      )\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n"],
  "mappings": "mEAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAC,IAAAC,IAAAC,IAEAH,EAAO,QAAUI,EACjBA,EAAG,YAAc,KACjBA,EAAG,QAAU,CAAC,EACd,SAASA,EAAGC,EAAO,EACf,SAAUA,EAAO,CACjB,IAAIC,EAAgB,8BAA8B,OAC9CC,EAAS,OACX,2CAA2C,OAAO,QAChD,MACA,UAAY,CACV,OAAOD,CACT,CACF,CACF,EACIE,EAAsB,CACxB,cAAe,CACb,QAAS,OAAO,0BAA0B,OAASF,CAAa,EAChE,WAAY,GACZ,OAAQ,CACN,QAAS,CACP,QAAS,wBACT,WAAY,GACZ,OAAQ,IACV,EACA,YAAa,WACf,CACF,CACF,EACIF,EAAMC,EAAM,UAAU,GAAK,CAC7B,QAAS,MACT,SAAU,CACR,QAAS,OAAOE,EAAO,OAAS,gBAAgB,MAAM,EACtD,WAAY,GACZ,OAAQ,GACR,OAAQC,CACV,EACA,OAAQ,CACN,QAASD,EACT,WAAY,GACZ,OAAQ,GACR,OAAQC,CACV,EACA,SAAU,CACR,QAAS,uBACT,WAAY,EACd,EACA,SAAU,UACV,mBAAoB,CAClB,QAAS,4BACT,MAAO,UACT,EACA,QACE,wHACF,QAAS,qBACT,OAAQ,4CACR,SAAU,CACR,CACE,QAAS,OACT,MAAO,MACT,EACA,gEACF,EACA,mBAAoB,CAClB,QAAS,wBACT,MAAO,UACT,EACA,YAAa,oCACb,IAAK,CACH,QAAS,KACT,MAAO,WACT,CACF,EACAA,EAAoB,cAAc,OAAO,QAAQ,OAASJ,CAC5D,GAAGC,CAAK,CACV",
  "names": ["require_jq", "__commonJSMin", "exports", "module", "init_dirname", "init_buffer", "init_process", "jq", "Prism", "interpolation", "string", "stringInterpolation"]
}
