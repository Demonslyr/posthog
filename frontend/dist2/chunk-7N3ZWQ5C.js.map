{
  "version": 3,
  "sources": ["../../products/messaging/frontend/FunctionsTable.tsx", "../../products/messaging/frontend/functionsTableLogic.tsx", "../../products/messaging/frontend/MessagingTabs.tsx", "../../products/messaging/frontend/messagingTabsLogic.ts"],
  "sourcesContent": ["import { LemonInput, LemonTable, LemonTableColumn, Link, Tooltip } from '@posthog/lemon-ui'\nimport { BindLogic, useActions, useValues } from 'kea'\nimport { More } from 'lib/lemon-ui/LemonButton/More'\nimport { LemonMenuOverlay } from 'lib/lemon-ui/LemonMenu/LemonMenu'\nimport { updatedAtColumn } from 'lib/lemon-ui/LemonTable/columnUtils'\nimport { LemonTableLink } from 'lib/lemon-ui/LemonTable/LemonTableLink'\nimport { HogFunctionIcon } from 'scenes/pipeline/hogfunctions/HogFunctionIcon'\nimport { HogFunctionStatusIndicator } from 'scenes/pipeline/hogfunctions/HogFunctionStatusIndicator'\nimport { hogFunctionUrl } from 'scenes/pipeline/hogfunctions/urls'\n\nimport { HogFunctionType, HogFunctionTypeType } from '~/types'\n\nimport { functionsTableLogic } from './functionsTableLogic'\n\nexport interface FunctionsTableProps {\n    type?: HogFunctionTypeType\n}\n\nexport function FunctionsTableFilters(): JSX.Element | null {\n    const { filters } = useValues(functionsTableLogic)\n    const { setFilters } = useActions(functionsTableLogic)\n\n    return (\n        <div className=\"space-y-2\">\n            <div className=\"flex items-center gap-2\">\n                <LemonInput\n                    type=\"search\"\n                    placeholder=\"Search...\"\n                    value={filters.search ?? ''}\n                    onChange={(e) => setFilters({ search: e })}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport function FunctionsTable({ type }: FunctionsTableProps): JSX.Element {\n    const { hogFunctions, filteredHogFunctions, loading } = useValues(functionsTableLogic({ type }))\n    const { deleteHogFunction, resetFilters } = useActions(functionsTableLogic({ type }))\n\n    return (\n        <BindLogic logic={functionsTableLogic} props={{ type }}>\n            <div className=\"space-y-2\">\n                <FunctionsTableFilters />\n\n                <LemonTable\n                    dataSource={filteredHogFunctions}\n                    size=\"small\"\n                    loading={loading}\n                    columns={[\n                        {\n                            title: 'App',\n                            width: 0,\n                            render: function RenderAppInfo(_, hogFucntion) {\n                                return <HogFunctionIcon src={hogFucntion.icon_url} size=\"small\" />\n                            },\n                        },\n                        {\n                            title: 'Name',\n                            sticky: true,\n                            sorter: true,\n                            key: 'name',\n                            dataIndex: 'name',\n                            render: function RenderPluginName(_, hogFunction) {\n                                return (\n                                    <LemonTableLink\n                                        to={hogFunctionUrl(hogFunction.type, hogFunction.id, hogFunction.template?.id)}\n                                        title={\n                                            <>\n                                                <Tooltip title=\"Click to update configuration, view metrics, and more\">\n                                                    <span>{hogFunction.name}</span>\n                                                </Tooltip>\n                                            </>\n                                        }\n                                        description={hogFunction.description}\n                                    />\n                                )\n                            },\n                        },\n\n                        updatedAtColumn() as LemonTableColumn<HogFunctionType, any>,\n                        {\n                            title: 'Status',\n                            key: 'enabled',\n                            sorter: (a) => (a.enabled ? 1 : -1),\n                            width: 0,\n                            render: function RenderStatus(_, hogFunction) {\n                                return <HogFunctionStatusIndicator hogFunction={hogFunction} />\n                            },\n                        },\n                        {\n                            width: 0,\n                            render: function Render(_, hogFunction) {\n                                return (\n                                    <More\n                                        overlay={\n                                            <LemonMenuOverlay\n                                                items={[\n                                                    {\n                                                        label: 'Delete',\n                                                        status: 'danger' as const, // for typechecker happiness\n                                                        onClick: () => deleteHogFunction(hogFunction),\n                                                    },\n                                                ]}\n                                            />\n                                        }\n                                    />\n                                )\n                            },\n                        },\n                    ]}\n                    emptyState={\n                        hogFunctions.length === 0 && !loading ? (\n                            'Nothing found'\n                        ) : (\n                            <>\n                                Nothing matches filters. <Link onClick={() => resetFilters()}>Clear filters</Link>{' '}\n                            </>\n                        )\n                    }\n                />\n            </div>\n        </BindLogic>\n    )\n}\n", "import FuseClass from 'fuse.js'\nimport { actions, afterMount, connect, kea, key, path, props, reducers, selectors } from 'kea'\nimport { loaders } from 'kea-loaders'\nimport api from 'lib/api'\nimport { deleteWithUndo } from 'lib/utils/deleteWithUndo'\nimport { projectLogic } from 'scenes/projectLogic'\n\nimport { HogFunctionType, HogFunctionTypeType } from '~/types'\n\nimport type { functionsTableLogicType } from './functionsTableLogicType'\n\n// Helping kea-typegen navigate the exported default class for Fuse\nexport interface Fuse extends FuseClass<HogFunctionType> {}\n\nexport interface FunctionsTableLogicProps {\n    type?: HogFunctionTypeType\n}\nexport interface HogFunctionsFilter {\n    search?: string\n}\nexport const functionsTableLogic = kea<functionsTableLogicType>([\n    path(['products', 'messaging', 'frontend', 'functionsTableLogic']),\n    props({} as FunctionsTableLogicProps),\n    key((props: FunctionsTableLogicProps) => props.type ?? 'destination'),\n    connect({\n        values: [projectLogic, ['currentProjectId']],\n    }),\n    actions({\n        deleteHogFunction: (hogFunction: HogFunctionType) => ({ hogFunction }),\n        setFilters: (filters: Partial<HogFunctionsFilter>) => ({ filters }),\n        resetFilters: true,\n    }),\n    reducers({\n        filters: [\n            {} as HogFunctionsFilter,\n            {\n                setFilters: (state, { filters }) => ({\n                    ...state,\n                    ...filters,\n                }),\n                resetFilters: () => ({}),\n            },\n        ],\n    }),\n    loaders(({ props, values, actions }) => ({\n        hogFunctions: [\n            [] as HogFunctionType[],\n            {\n                loadHogFunctions: async () => {\n                    // TODO: pagination?\n                    return (await api.hogFunctions.list({ types: [props.type ?? 'destination'] })).results\n                },\n                deleteHogFunction: async ({ hogFunction }) => {\n                    await deleteWithUndo({\n                        endpoint: `projects/${values.currentProjectId}/hog_functions`,\n                        object: {\n                            id: hogFunction.id,\n                            name: hogFunction.name,\n                        },\n                        callback: (undo) => {\n                            if (undo) {\n                                actions.loadHogFunctions()\n                            }\n                        },\n                    })\n                    return values.hogFunctions.filter((hf) => hf.id !== hogFunction.id)\n                },\n            },\n        ],\n    })),\n    selectors({\n        loading: [(s) => [s.hogFunctionsLoading], (hogFunctionsLoading) => hogFunctionsLoading],\n        hogFunctionsFuse: [\n            (s) => [s.hogFunctions],\n            (hogFunctions): Fuse => {\n                return new FuseClass(hogFunctions || [], {\n                    keys: ['name', 'description'],\n                    threshold: 0.3,\n                })\n            },\n        ],\n\n        filteredHogFunctions: [\n            (s) => [s.filters, s.hogFunctions, s.hogFunctionsFuse],\n            (filters, hogFunctions, hogFunctionsFuse): HogFunctionType[] => {\n                const { search } = filters\n                return search ? hogFunctionsFuse.search(search).map((x) => x.item) : hogFunctions\n            },\n        ],\n    }),\n    afterMount(({ actions }) => {\n        actions.loadHogFunctions()\n    }),\n])\n", "import { useActions, useValues } from 'kea'\nimport { LemonTabs } from 'lib/lemon-ui/LemonTabs'\nimport { SceneExport } from 'scenes/sceneTypes'\n\nimport { MessagingTab, messagingTabsLogic } from './messagingTabsLogic'\n\nexport function MessagingTabs(): JSX.Element {\n    const { currentTab } = useValues(messagingTabsLogic)\n    const { setTab } = useActions(messagingTabsLogic)\n    return (\n        <LemonTabs\n            activeKey={currentTab}\n            onChange={(tab) => setTab(tab as MessagingTab)}\n            tabs={[\n                { key: 'broadcasts', label: 'Broadcasts' },\n                { key: 'providers', label: 'Providers' },\n            ]}\n        />\n    )\n}\n\nexport const scene: SceneExport = {\n    component: MessagingTabs,\n    logic: messagingTabsLogic,\n}\n", "import { actions, kea, path, reducers } from 'kea'\nimport { actionToUrl, urlToAction } from 'kea-router'\nimport { urls } from 'scenes/urls'\n\nimport type { messagingTabsLogicType } from './messagingTabsLogicType'\n\nexport type MessagingTab = 'broadcasts' | 'providers'\n\nexport const messagingTabsLogic = kea<messagingTabsLogicType>([\n    path(['products', 'messaging', 'frontend', 'messagingTabsLogic']),\n    actions({\n        setTab: (tab: MessagingTab, fromUrl = false) => ({ tab, fromUrl }),\n    }),\n    reducers({\n        currentTab: ['broadcasts' as MessagingTab, { setTab: (_, { tab }) => tab }],\n    }),\n    actionToUrl(({ values }) => ({\n        setTab: ({ fromUrl }) => {\n            // do not override deeper urls like /messaging/broadcasts/new\n            if (!fromUrl) {\n                return (\n                    {\n                        broadcasts: urls.messagingBroadcasts(),\n                        providers: urls.messagingProviders(),\n                    }[values.currentTab] ?? urls.messagingBroadcasts()\n                )\n            }\n        },\n    })),\n    urlToAction(({ actions, values }) => ({\n        '/messaging/:tab': ({ tab }) => {\n            if (tab !== values.currentTab) {\n                actions.setTab(tab as MessagingTab, true)\n            }\n        },\n        '/messaging/:tab/*': ({ tab }) => {\n            if (tab !== values.currentTab) {\n                actions.setTab(tab as MessagingTab, true)\n            }\n        },\n    })),\n])\n"],
  "mappings": "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",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_loaders", "functionsTableLogic", "props", "projectLogic", "hogFunction", "filters", "state", "values", "actions", "api_default", "deleteWithUndo", "undo", "hf", "s", "hogFunctionsLoading", "hogFunctions", "Fuse", "hogFunctionsFuse", "search", "x", "import_jsx_runtime", "FunctionsTableFilters", "filters", "functionsTableLogic", "setFilters", "LemonInput", "e", "FunctionsTable", "type", "hogFunctions", "filteredHogFunctions", "loading", "deleteHogFunction", "resetFilters", "LemonTable", "_", "hogFucntion", "HogFunctionIcon", "hogFunction", "LemonTableLink", "hogFunctionUrl", "Tooltip", "updatedAtColumn", "a", "HogFunctionStatusIndicator", "More", "LemonMenuOverlay", "Link", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_router", "messagingTabsLogic", "tab", "fromUrl", "_", "values", "urls", "actions", "import_jsx_runtime", "MessagingTabs", "currentTab", "messagingTabsLogic", "setTab", "LemonTabs", "tab"]
}
