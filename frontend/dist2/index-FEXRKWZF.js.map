{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/kea-localstorage@3.1.0_kea@3.1.5_react@18.2.0_/node_modules/kea-localstorage/src/index.ts", "../src/index.tsx", "../src/styles/index.tsx", "../src/scenes/App.tsx", "../src/lib/hooks/useThemedHtml.ts", "../src/scenes/appScenes.ts", "../src/layout/navigation-3000/Navigation.tsx", "../src/lib/components/BillingAlertsV2.tsx", "../src/lib/components/CommandBar/CommandBar.tsx", "../src/lib/components/CommandBar/ActionBar.tsx", "../src/lib/components/CommandBar/actionBarLogic.ts", "../src/lib/components/CommandBar/ActionInput.tsx", "../src/lib/components/CommandBar/ActionResults.tsx", "../src/lib/components/CommandBar/utils.ts", "../src/lib/components/CommandBar/constants.ts", "../src/lib/components/CommandBar/ActionResult.tsx", "../src/lib/components/CommandBar/SearchBar.tsx", "../src/lib/components/CommandBar/searchBarLogic.ts", "../src/lib/components/CommandBar/SearchInput.tsx", "../src/lib/components/CommandBar/SearchResults.tsx", "../src/lib/components/CommandBar/SearchResult.tsx", "../src/lib/components/CommandBar/SearchResultPreview.tsx", "../src/lib/components/CommandBar/SearchTabs.tsx", "../src/lib/components/CommandBar/SearchBarTab.tsx", "../src/lib/components/CommandBar/Shortcuts.tsx", "../src/lib/components/CommandBar/shortcutsLogic.ts", "../src/layout/navigation/ProjectNotice.tsx", "../src/layout/navigation-3000/components/MinimalNavigation.tsx", "../src/layout/navigation-3000/components/Navbar.tsx", "../src/layout/navigation-3000/components/NavbarBottom.tsx", "../src/lib/components/DebugNotice.tsx", "../src/layout/navigation-3000/components/NavbarButton.tsx", "../src/layout/navigation/SideBar/SidebarChangeNotice.tsx", "../src/layout/navigation-3000/components/ProjectTree/ProjectTree.tsx", "../src/lib/lemon-ui/LemonTree/LemonTree.tsx", "../../node_modules/.pnpm/@radix-ui+react-accordion@1.2.2_@types+react-dom@18.2.14_@types+react@17.0.52_react-dom@18.2._c6uf3s6x4crpw25xr5krnlyb7y/node_modules/@radix-ui/react-accordion/src/Accordion.tsx", "../../node_modules/.pnpm/@radix-ui+react-context@1.1.1_@types+react@17.0.52_react@18.2.0/node_modules/@radix-ui/react-context/src/createContext.tsx", "../../node_modules/.pnpm/@radix-ui+react-collection@1.1.1_@types+react-dom@18.2.14_@types+react@17.0.52_react-dom@18.2_wlnjyw5jgm3xgoradykvytyb74/node_modules/@radix-ui/react-collection/src/Collection.tsx", "../../node_modules/.pnpm/@radix-ui+react-compose-refs@1.1.1_@types+react@17.0.52_react@18.2.0/node_modules/@radix-ui/react-compose-refs/src/composeRefs.tsx", "../../node_modules/.pnpm/@radix-ui+react-slot@1.1.1_@types+react@17.0.52_react@18.2.0/node_modules/@radix-ui/react-slot/src/Slot.tsx", "../../node_modules/.pnpm/@radix-ui+primitive@1.1.1/node_modules/@radix-ui/primitive/src/primitive.tsx", "../../node_modules/.pnpm/@radix-ui+react-use-controllable-state@1.1.0_@types+react@17.0.52_react@18.2.0/node_modules/@radix-ui/react-use-controllable-state/src/useControllableState.tsx", "../../node_modules/.pnpm/@radix-ui+react-use-callback-ref@1.1.0_@types+react@17.0.52_react@18.2.0/node_modules/@radix-ui/react-use-callback-ref/src/useCallbackRef.tsx", "../../node_modules/.pnpm/@radix-ui+react-primitive@2.0.1_@types+react-dom@18.2.14_@types+react@17.0.52_react-dom@18.2._sfmf6rmyndbllylubtsrltvlvy/node_modules/@radix-ui/react-primitive/src/Primitive.tsx", "../../node_modules/.pnpm/@radix-ui+react-collapsible@1.1.2_@types+react-dom@18.2.14_@types+react@17.0.52_react-dom@18._ljdq4dazyeym3wlayew56adgke/node_modules/@radix-ui/react-collapsible/src/Collapsible.tsx", "../../node_modules/.pnpm/@radix-ui+react-use-layout-effect@1.1.0_@types+react@17.0.52_react@18.2.0/node_modules/@radix-ui/react-use-layout-effect/src/useLayoutEffect.tsx", "../../node_modules/.pnpm/@radix-ui+react-presence@1.1.2_@types+react-dom@18.2.14_@types+react@17.0.52_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/@radix-ui/react-presence/src/Presence.tsx", "../../node_modules/.pnpm/@radix-ui+react-presence@1.1.2_@types+react-dom@18.2.14_@types+react@17.0.52_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/@radix-ui/react-presence/src/useStateMachine.tsx", "../../node_modules/.pnpm/@radix-ui+react-id@1.1.0_@types+react@17.0.52_react@18.2.0/node_modules/@radix-ui/react-id/src/id.tsx", "../../node_modules/.pnpm/@radix-ui+react-direction@1.1.0_@types+react@17.0.52_react@18.2.0/node_modules/@radix-ui/react-direction/src/Direction.tsx", "../src/layout/navigation-3000/components/ProjectTree/projectTreeLogic.tsx", "../src/layout/navigation-3000/components/ProjectTree/defaultTree.tsx", "../src/layout/navigation-3000/components/ProjectTree/utils.ts", "../src/layout/navigation-3000/components/TopBar.tsx", "../src/lib/components/Metalytics/MetalyticsSummary.tsx", "../src/initKea.ts", "../src/loadPostHogJS.tsx"],
  "sourcesContent": ["import {\n  reducers,\n  getPluginContext,\n  KeaPlugin,\n  Logic,\n  ReducerActions,\n  ReducerDefault,\n  setPluginContext,\n  LogicBuilder,\n} from 'kea'\n\nexport interface LocalStoragePluginOptions {\n  prefix: string\n  separator: string\n  storageEngine: Storage | undefined\n}\n\nlet localStorageEngine: Storage | undefined\n\ntry {\n  localStorageEngine = window.localStorage\n\n  const x = '__storage_test__'\n  localStorageEngine.setItem(x, x)\n  localStorageEngine.removeItem(x)\n} catch (e) {\n  localStorageEngine = undefined\n}\n\nexport type PersistenceOptions = {\n  persist?: true\n  prefix?: string\n  separator?: string\n  storageKey?: string\n}\n\nexport type PersistentReducerDefinitions<L extends Logic> = {\n  [K in keyof L['reducers']]?:\n    | [\n        ReducerDefault<L['reducers'][K], L['props']>,\n        PersistenceOptions,\n        ReducerActions<L, ReturnType<L['reducers'][K]>>,\n      ]\n    | [ReducerDefault<L['reducers'][K], L['props']>, ReducerActions<L, ReturnType<L['reducers'][K]>>]\n    | [ReducerDefault<L['reducers'][K], L['props']>]\n    | ReducerActions<L, ReturnType<L['reducers'][K]>>\n}\n\nexport const localStoragePlugin = (pluginOptions: Partial<LocalStoragePluginOptions> = {}): KeaPlugin => {\n  const prefix = pluginOptions.prefix ?? ''\n  const separator = pluginOptions.separator ?? '.'\n  const storageEngine = pluginOptions.storageEngine ?? localStorageEngine\n\n  return {\n    name: 'localStorage',\n\n    events: {\n      afterPlugin() {\n        setPluginContext('localStorage', { storageCache: {}, storageEngine, prefix, separator })\n      },\n      afterLogic(logic, input) {\n        for (const [key, reducerOptions] of Object.entries(logic.reducerOptions)) {\n          if (reducerOptions?.persist) {\n            persistentReducers({ [key]: {} })(logic)\n          }\n        }\n      },\n    },\n  }\n}\n\nexport function persistReducer<L extends Logic>(key: keyof L['reducers']): LogicBuilder<L> {\n  return (logic) => {\n    const key_ = key as string\n    const { storageCache, storageEngine, prefix: __prefix, separator: __separator } = getPluginContext('localStorage')\n    const prefix = logic.reducerOptions[key_]?.prefix || __prefix\n    const separator = logic.reducerOptions[key_]?.separator || __separator\n    const storageKey = logic.reducerOptions[key_]?.storageKey || [...logic.path, key].join(separator)\n    const path = `${prefix ? prefix + separator : ''}${storageKey}`\n\n    if (!storageEngine) {\n      throw new Error(`[KEA] LocalStorage plugin requires a \"storageEngine\"`)\n    }\n    if (logic.pathString.indexOf('kea.logic.') === 0) {\n      throw new Error('[KEA] Logic must have a unique path to persist reducers')\n    }\n\n    logic.cache.localStorage ??= {} as Record<string, boolean>\n    logic.cache.localStorageDefaults ??= {}\n    logic.cache.localStorageDefaults[key] ??= logic.defaults[key as any] ?? null\n\n    if (typeof storageEngine[path] !== 'undefined') {\n      try {\n        logic.defaults[key as any] = JSON.parse(storageEngine[path])\n      } catch (e) {\n        // can't deserialize a value? pretend it never existed\n        storageEngine[path] = undefined\n      }\n    } else {\n      storageEngine[path] = logic.defaults[key as any] ?? null\n    }\n    storageCache[path] = logic.defaults[key as any]\n\n    const reducer = logic.reducers[key as any]\n    if (reducer) {\n      logic.reducers[key as any] = (state, action) => {\n        const result = reducer(state, action)\n        if (storageCache[path] !== result) {\n          storageCache[path] = result\n          storageEngine[path] = JSON.stringify(result)\n        }\n        return result\n      }\n    }\n  }\n}\n\nexport function persistentReducers<L extends Logic = Logic>(\n  input: PersistentReducerDefinitions<L> | ((logic: L) => PersistentReducerDefinitions<L>),\n): LogicBuilder<L> {\n  return (logic) => {\n    const reducersInput = typeof input === 'function' ? input(logic) : input\n    reducers(reducersInput)(logic)\n    for (const key of Object.keys(reducersInput)) {\n      persistReducer(key)(logic)\n    }\n  }\n}\n", "import '~/styles'\n\nimport { getContext } from 'kea'\nimport posthog from 'posthog-js'\nimport { PostHogProvider } from 'posthog-js/react'\nimport { createRoot } from 'react-dom/client'\nimport { App } from 'scenes/App'\n\nimport { initKea } from './initKea'\nimport { ErrorBoundary } from './layout/ErrorBoundary'\nimport { loadPostHogJS } from './loadPostHogJS'\n\nloadPostHogJS()\ninitKea()\n\n// Expose `window.getReduxState()` to make snapshots to storybook easy\nif (typeof window !== 'undefined') {\n    // Disabled in production to prevent leaking secret data, personal API keys, etc\n    if (process.env.NODE_ENV === 'development') {\n        ;(window as any).getReduxState = () => getContext().store.getState()\n    } else {\n        ;(window as any).getReduxState = () => 'Disabled outside development!'\n    }\n}\n\nfunction renderApp(): void {\n    const root = document.getElementById('root')\n    if (root) {\n        createRoot(root).render(\n            <ErrorBoundary>\n                <PostHogProvider client={posthog}>\n                    <App />\n                </PostHogProvider>\n            </ErrorBoundary>\n        )\n    } else {\n        console.error('Attempted, but could not render PostHog app because <div id=\"root\" /> is not found.')\n    }\n}\n\n// Render react only when DOM has loaded - javascript might be cached and loaded before the page is ready.\nif (document.readyState !== 'loading') {\n    renderApp()\n} else {\n    document.addEventListener('DOMContentLoaded', renderApp)\n}\n", "import './global.scss' /* Contains PostHog's main styling configurations */\n", "import { actions, BindLogic, connect, events, kea, path, reducers, selectors, useMountedLogic, useValues } from 'kea'\nimport { MOCK_NODE_PROCESS } from 'lib/constants'\nimport { useThemedHtml } from 'lib/hooks/useThemedHtml'\nimport { ToastCloseButton } from 'lib/lemon-ui/LemonToast/LemonToast'\nimport { SpinnerOverlay } from 'lib/lemon-ui/Spinner/Spinner'\nimport { apiStatusLogic } from 'lib/logic/apiStatusLogic'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { Slide, ToastContainer } from 'react-toastify'\nimport { appScenes } from 'scenes/appScenes'\nimport { organizationLogic } from 'scenes/organizationLogic'\nimport { sceneLogic } from 'scenes/sceneLogic'\nimport { LoadedScene } from 'scenes/sceneTypes'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { ErrorBoundary } from '~/layout/ErrorBoundary'\nimport { GlobalModals } from '~/layout/GlobalModals'\nimport { breadcrumbsLogic } from '~/layout/navigation/Breadcrumbs/breadcrumbsLogic'\nimport { Navigation } from '~/layout/navigation-3000/Navigation'\nimport { themeLogic } from '~/layout/navigation-3000/themeLogic'\n\nimport type { appLogicType } from './AppType'\nimport { preflightLogic } from './PreflightCheck/preflightLogic'\nimport { teamLogic } from './teamLogic'\n\nwindow.process = MOCK_NODE_PROCESS\n\nexport const appLogic = kea<appLogicType>([\n    path(['scenes', 'App']),\n    connect([teamLogic, organizationLogic]),\n    actions({\n        enableDelayedSpinner: true,\n        ignoreFeatureFlags: true,\n    }),\n    reducers({\n        showingDelayedSpinner: [false, { enableDelayedSpinner: () => true }],\n        featureFlagsTimedOut: [false, { ignoreFeatureFlags: () => true }],\n    }),\n    selectors({\n        showApp: [\n            (s) => [\n                userLogic.selectors.userLoading,\n                userLogic.selectors.user,\n                featureFlagLogic.selectors.receivedFeatureFlags,\n                s.featureFlagsTimedOut,\n                preflightLogic.selectors.preflightLoading,\n                preflightLogic.selectors.preflight,\n            ],\n            (userLoading, user, receivedFeatureFlags, featureFlagsTimedOut, preflightLoading, preflight) => {\n                return (\n                    (!userLoading || user) &&\n                    (receivedFeatureFlags || featureFlagsTimedOut) &&\n                    (!preflightLoading || preflight)\n                )\n            },\n        ],\n    }),\n    events(({ actions, cache }) => ({\n        afterMount: () => {\n            cache.spinnerTimeout = window.setTimeout(() => actions.enableDelayedSpinner(), 1000)\n            cache.featureFlagTimeout = window.setTimeout(() => actions.ignoreFeatureFlags(), 3000)\n        },\n        beforeUnmount: () => {\n            window.clearTimeout(cache.spinnerTimeout)\n            window.clearTimeout(cache.featureFlagTimeout)\n        },\n    })),\n])\n\nexport function App(): JSX.Element | null {\n    const { showApp, showingDelayedSpinner } = useValues(appLogic)\n    useMountedLogic(sceneLogic({ scenes: appScenes }))\n    useMountedLogic(apiStatusLogic)\n    useThemedHtml()\n\n    if (showApp) {\n        return (\n            <>\n                <LoadedSceneLogics />\n                <AppScene />\n            </>\n        )\n    }\n\n    return <SpinnerOverlay sceneLevel visible={showingDelayedSpinner} />\n}\n\nfunction LoadedSceneLogic({ scene }: { scene: LoadedScene }): null {\n    if (!scene.logic) {\n        throw new Error('Loading scene without a logic')\n    }\n    useMountedLogic(scene.logic(scene.paramsToProps?.(scene.sceneParams)))\n    return null\n}\n\nfunction LoadedSceneLogics(): JSX.Element {\n    const { loadedScenes } = useValues(sceneLogic)\n    return (\n        <>\n            {Object.entries(loadedScenes)\n                .filter(([, { logic }]) => !!logic)\n                .map(([key, loadedScene]) => (\n                    <LoadedSceneLogic key={key} scene={loadedScene} />\n                ))}\n        </>\n    )\n}\n\nfunction AppScene(): JSX.Element | null {\n    useMountedLogic(breadcrumbsLogic)\n    const { user } = useValues(userLogic)\n    const { activeScene, activeLoadedScene, sceneParams, params, loadedScenes, sceneConfig } = useValues(sceneLogic)\n    const { showingDelayedSpinner } = useValues(appLogic)\n    const { isDarkModeOn } = useValues(themeLogic)\n\n    const toastContainer = (\n        <ToastContainer\n            autoClose={6000}\n            transition={Slide}\n            closeOnClick={false}\n            draggable={false}\n            closeButton={<ToastCloseButton />}\n            position=\"bottom-right\"\n            theme={isDarkModeOn ? 'dark' : 'light'}\n        />\n    )\n\n    let sceneElement: JSX.Element\n    if (activeScene && activeScene in loadedScenes) {\n        const { component: SceneComponent } = loadedScenes[activeScene]\n        sceneElement = <SceneComponent user={user} {...params} />\n    } else {\n        sceneElement = <SpinnerOverlay sceneLevel visible={showingDelayedSpinner} />\n    }\n\n    const wrappedSceneElement = (\n        <ErrorBoundary key={activeScene} tags={{ feature: activeScene }}>\n            {activeLoadedScene?.logic ? (\n                <BindLogic logic={activeLoadedScene.logic} props={activeLoadedScene.paramsToProps?.(sceneParams) || {}}>\n                    {sceneElement}\n                </BindLogic>\n            ) : (\n                sceneElement\n            )}\n        </ErrorBoundary>\n    )\n\n    if (!user) {\n        return sceneConfig?.onlyUnauthenticated || sceneConfig?.allowUnauthenticated ? (\n            <>\n                {wrappedSceneElement}\n                {toastContainer}\n            </>\n        ) : null\n    }\n\n    return (\n        <>\n            <Navigation sceneConfig={sceneConfig}>{wrappedSceneElement}</Navigation>\n            {toastContainer}\n            <GlobalModals />\n        </>\n    )\n}\n", "import { captureException } from '@sentry/react'\nimport { useValues } from 'kea'\nimport { useEffect } from 'react'\nimport { sceneLogic } from 'scenes/sceneLogic'\n\nimport { themeLogic } from '~/layout/navigation-3000/themeLogic'\n\nexport function useThemedHtml(overflowHidden = true): void {\n    const { isDarkModeOn, customCss } = useValues(themeLogic)\n    const { sceneConfig } = useValues(sceneLogic)\n\n    const CUSTOM_THEME_STYLES_ID = 'ph-custom-theme-styles'\n\n    useEffect(() => {\n        const oldStyle = document.getElementById(CUSTOM_THEME_STYLES_ID)\n        if (oldStyle) {\n            document.head.removeChild(oldStyle)\n        }\n\n        document.body.setAttribute('theme', isDarkModeOn ? 'dark' : 'light')\n\n        if (customCss) {\n            const newStyle = document.createElement('style')\n            newStyle.id = CUSTOM_THEME_STYLES_ID\n            newStyle.appendChild(document.createTextNode(customCss))\n            document.head.appendChild(newStyle)\n        }\n    }, [isDarkModeOn, customCss])\n\n    useEffect(() => {\n        // overflow-hidden since each area handles scrolling individually (e.g. navbar, scene, side panel)\n        if (overflowHidden) {\n            document.body.classList.add('overflow-hidden')\n        }\n    }, [overflowHidden])\n\n    useEffect(() => {\n        // Add a theme-color meta tag to the head to change the address bar color on browsers that support it\n        try {\n            const root = document.documentElement\n            const style = getComputedStyle(root)\n            const backgroundColor = sceneConfig?.projectBased\n                ? style.getPropertyValue('--surface-secondary')\n                : style.getPropertyValue('--bg-bridge')\n\n            document.head.querySelector('meta[name=\"theme-color\"]')?.remove()\n            document.head.insertAdjacentHTML('beforeend', `<meta name=\"theme-color\" content=\"${backgroundColor}\">`)\n        } catch (e) {\n            console.warn('Failed to set theme-color meta tag. This could indicate the variables no longer exist', e)\n            captureException(new Error('Failed to set theme-color meta tag'), { extra: { error: e } })\n        }\n    }, [isDarkModeOn, sceneConfig?.projectBased])\n}\n", "import { preloadedScenes } from 'scenes/scenes'\nimport { Scene } from 'scenes/sceneTypes'\n\nimport { productScenes } from '~/products'\n\nexport const appScenes: Record<Scene | string, () => any> = {\n    [Scene.Error404]: () => ({ default: preloadedScenes[Scene.Error404].component }),\n    [Scene.ErrorNetwork]: () => ({ default: preloadedScenes[Scene.ErrorNetwork].component }),\n    [Scene.ErrorProjectUnavailable]: () => ({ default: preloadedScenes[Scene.ErrorProjectUnavailable].component }),\n    ...productScenes,\n    [Scene.Dashboards]: () => import('./dashboard/dashboards/Dashboards'),\n    [Scene.Dashboard]: () => import('./dashboard/Dashboard'),\n    [Scene.Insight]: () => import('./insights/InsightScene'),\n    [Scene.WebAnalytics]: () => import('./web-analytics/WebAnalyticsScene'),\n    [Scene.WebAnalyticsWebVitals]: () => import('./web-analytics/WebAnalyticsScene'),\n    [Scene.Cohort]: () => import('./cohorts/Cohort'),\n    [Scene.DataManagement]: () => import('./data-management/DataManagementScene'),\n    [Scene.Activity]: () => import('./activity/ActivityScene'),\n    [Scene.EventDefinition]: () => import('./data-management/definition/DefinitionView'),\n    [Scene.EventDefinitionEdit]: () => import('./data-management/definition/DefinitionEdit'),\n    [Scene.PropertyDefinition]: () => import('./data-management/definition/DefinitionView'),\n    [Scene.PropertyDefinitionEdit]: () => import('./data-management/definition/DefinitionEdit'),\n    [Scene.Replay]: () => import('./session-recordings/SessionRecordings'),\n    [Scene.ReplaySingle]: () => import('./session-recordings/detail/SessionRecordingDetail'),\n    [Scene.ReplayPlaylist]: () => import('./session-recordings/playlist/SessionRecordingsPlaylistScene'),\n    [Scene.ReplayFilePlayback]: () => import('./session-recordings/file-playback/SessionRecordingFilePlaybackScene'),\n    [Scene.PersonsManagement]: () => import('./persons-management/PersonsManagementScene'),\n    [Scene.Person]: () => import('./persons/PersonScene'),\n    [Scene.PipelineNodeNew]: () => import('./pipeline/PipelineNodeNew'),\n    [Scene.Pipeline]: () => import('./pipeline/Pipeline'),\n    [Scene.PipelineNode]: () => import('./pipeline/PipelineNode'),\n    [Scene.Group]: () => import('./groups/Group'),\n    [Scene.Action]: () => import('./actions/Action'),\n    [Scene.Experiments]: () => import('./experiments/Experiments'),\n    [Scene.ExperimentsSharedMetrics]: () => import('./experiments/SharedMetrics/SharedMetrics'),\n    [Scene.ExperimentsSharedMetric]: () => import('./experiments/SharedMetrics/SharedMetric'),\n    [Scene.Experiment]: () => import('./experiments/Experiment'),\n    [Scene.FeatureFlags]: () => import('./feature-flags/FeatureFlags'),\n    [Scene.FeatureManagement]: () => import('./feature-flags/FeatureManagement'),\n    [Scene.FeatureFlag]: () => import('./feature-flags/FeatureFlag'),\n    [Scene.ErrorTracking]: () => import('./error-tracking/ErrorTrackingScene'),\n    [Scene.ErrorTrackingConfiguration]: () => import('./error-tracking/configuration/ErrorTrackingConfigurationScene'),\n    [Scene.ErrorTrackingAlert]: () => import('./error-tracking/configuration/alerting/ErrorTrackingAlert'),\n    [Scene.ErrorTrackingIssue]: () => import('./error-tracking/ErrorTrackingIssueScene'),\n    [Scene.Surveys]: () => import('./surveys/Surveys'),\n    [Scene.Survey]: () => import('./surveys/Survey'),\n    [Scene.CustomCss]: () => import('./themes/CustomCssScene'),\n    [Scene.SurveyTemplates]: () => import('./surveys/SurveyTemplates'),\n    [Scene.DataWarehouse]: () => import('./data-warehouse/external/DataWarehouseExternalScene'),\n    [Scene.SQLEditor]: () => import('./data-warehouse/editor/EditorScene'),\n    [Scene.DataWarehouseTable]: () => import('./data-warehouse/new/NewSourceWizard'),\n    [Scene.DataWarehouseExternal]: () => import('./data-warehouse/external/DataWarehouseExternalScene'),\n    [Scene.DataWarehouseRedirect]: () => import('./data-warehouse/redirect/DataWarehouseRedirectScene'),\n    [Scene.OrganizationCreateFirst]: () => import('./organization/Create'),\n    [Scene.OrganizationCreationConfirm]: () => import('./organization/ConfirmOrganization/ConfirmOrganization'),\n    [Scene.ProjectHomepage]: () => import('./project-homepage/ProjectHomepage'),\n    [Scene.Max]: () => import('./max/Max'),\n    [Scene.ProjectCreateFirst]: () => import('./project/Create'),\n    [Scene.SystemStatus]: () => import('./instance/SystemStatus'),\n    [Scene.ToolbarLaunch]: () => import('./toolbar-launch/ToolbarLaunch'),\n    [Scene.Site]: () => import('./sites/Site'),\n    [Scene.AsyncMigrations]: () => import('./instance/AsyncMigrations/AsyncMigrations'),\n    [Scene.DeadLetterQueue]: () => import('./instance/DeadLetterQueue/DeadLetterQueue'),\n    [Scene.PreflightCheck]: () => import('./PreflightCheck/PreflightCheck'),\n    [Scene.Signup]: () => import('./authentication/signup/SignupContainer'),\n    [Scene.InviteSignup]: () => import('./authentication/InviteSignup'),\n    [Scene.Billing]: () => import('./billing/Billing'),\n    [Scene.BillingSection]: () => import('./billing/BillingSection'),\n    [Scene.BillingAuthorizationStatus]: () => import('./billing/AuthorizationStatus'),\n    [Scene.Login]: () => import('./authentication/Login'),\n    [Scene.Login2FA]: () => import('./authentication/Login2FA'),\n    [Scene.SavedInsights]: () => import('./saved-insights/SavedInsights'),\n    [Scene.PasswordReset]: () => import('./authentication/PasswordReset'),\n    [Scene.PasswordResetComplete]: () => import('./authentication/PasswordResetComplete'),\n    [Scene.Unsubscribe]: () => import('./Unsubscribe/Unsubscribe'),\n    [Scene.IntegrationsRedirect]: () => import('./IntegrationsRedirect/IntegrationsRedirect'),\n    [Scene.DebugQuery]: () => import('./debug/DebugScene'),\n    [Scene.DebugHog]: () => import('./debug/hog/HogRepl'),\n    [Scene.VerifyEmail]: () => import('./authentication/signup/verify-email/VerifyEmail'),\n    [Scene.Notebooks]: () => import('./notebooks/NotebooksScene'),\n    [Scene.Notebook]: () => import('./notebooks/NotebookScene'),\n    [Scene.Canvas]: () => import('./notebooks/NotebookCanvasScene'),\n    [Scene.Products]: () => import('./products/Products'),\n    [Scene.Onboarding]: () => import('./onboarding/Onboarding'),\n    [Scene.Settings]: () => import('./settings/SettingsScene'),\n    [Scene.MoveToPostHogCloud]: () => import('./moveToPostHogCloud/MoveToPostHogCloud'),\n    [Scene.Heatmaps]: () => import('./heatmaps/HeatmapsScene'),\n    [Scene.SessionAttributionExplorer]: () =>\n        import('scenes/web-analytics/SessionAttributionExplorer/SessionAttributionExplorerScene'),\n}\n", "import './Navigation.scss'\n\nimport clsx from 'clsx'\nimport { useValues } from 'kea'\nimport { BillingAlertsV2 } from 'lib/components/BillingAlertsV2'\nimport { CommandBar } from 'lib/components/CommandBar/CommandBar'\nimport { FlaggedFeature } from 'lib/components/FlaggedFeature'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { ReactNode } from 'react'\nimport { SceneConfig } from 'scenes/sceneTypes'\n\nimport { navigationLogic } from '../navigation/navigationLogic'\nimport { ProjectNotice } from '../navigation/ProjectNotice'\nimport { MinimalNavigation } from './components/MinimalNavigation'\nimport { Navbar } from './components/Navbar'\nimport { ProjectTree } from './components/ProjectTree/ProjectTree'\nimport { Sidebar } from './components/Sidebar'\nimport { TopBar } from './components/TopBar'\nimport { navigation3000Logic } from './navigationLogic'\nimport { SidePanel } from './sidepanel/SidePanel'\nimport { themeLogic } from './themeLogic'\n\nexport function Navigation({\n    children,\n    sceneConfig,\n}: {\n    children: ReactNode\n    sceneConfig: SceneConfig | null\n}): JSX.Element {\n    const { theme } = useValues(themeLogic)\n    const { mobileLayout } = useValues(navigationLogic)\n    const { activeNavbarItem, mode } = useValues(navigation3000Logic)\n\n    if (mode !== 'full') {\n        return (\n            // eslint-disable-next-line react/forbid-dom-props\n            <div className=\"Navigation3000 flex-col\" style={theme?.mainStyle}>\n                {mode === 'minimal' ? <MinimalNavigation /> : null}\n                <main>{children}</main>\n            </div>\n        )\n    }\n\n    return (\n        // eslint-disable-next-line react/forbid-dom-props\n        <div className={clsx('Navigation3000', mobileLayout && 'Navigation3000--mobile')} style={theme?.mainStyle}>\n            <FlaggedFeature flag={FEATURE_FLAGS.TREE_VIEW} fallback={<Navbar />}>\n                <ProjectTree />\n            </FlaggedFeature>\n            <FlaggedFeature flag={FEATURE_FLAGS.POSTHOG_3000_NAV}>\n                {activeNavbarItem && <Sidebar key={activeNavbarItem.identifier} navbarItem={activeNavbarItem} />}\n            </FlaggedFeature>\n            <main>\n                {(sceneConfig?.layout !== 'app-raw-no-header' || mobileLayout) && <TopBar />}\n                <div\n                    className={clsx(\n                        'Navigation3000__scene',\n                        // Hack - once we only have 3000 the \"minimal\" scenes should become \"app-raw\"\n                        sceneConfig?.layout === 'app-raw' && 'Navigation3000__scene--raw',\n                        sceneConfig?.layout === 'app-raw-no-header' && 'Navigation3000__scene--raw-no-header'\n                    )}\n                >\n                    <div className={sceneConfig?.layout === 'app-raw-no-header' ? 'px-4' : ''}>\n                        {!sceneConfig?.hideBillingNotice && <BillingAlertsV2 />}\n                        {!sceneConfig?.hideProjectNotice && <ProjectNotice />}\n                    </div>\n                    {children}\n                </div>\n            </main>\n            <SidePanel />\n            <CommandBar />\n        </div>\n    )\n}\n", "import clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { router } from 'kea-router'\nimport { LemonBanner } from 'lib/lemon-ui/LemonBanner'\nimport { useEffect, useState } from 'react'\nimport { billingLogic } from 'scenes/billing/billingLogic'\nimport { sceneLogic } from 'scenes/sceneLogic'\nimport { urls } from 'scenes/urls'\n\nexport function BillingAlertsV2(): JSX.Element | null {\n    const { billingAlert } = useValues(billingLogic)\n    const { reportBillingAlertShown, reportBillingAlertActionClicked } = useActions(billingLogic)\n    const { currentLocation } = useValues(router)\n    const { sceneConfig } = useValues(sceneLogic)\n    const [alertHidden, setAlertHidden] = useState(false)\n\n    useEffect(() => {\n        if (billingAlert?.pathName && currentLocation.pathname !== billingAlert?.pathName) {\n            setAlertHidden(true)\n        } else {\n            setAlertHidden(false)\n        }\n        if (billingAlert) {\n            reportBillingAlertShown(billingAlert)\n        }\n    }, [billingAlert, currentLocation])\n\n    if (!billingAlert || alertHidden) {\n        return null\n    }\n\n    const showButton =\n        billingAlert.action || billingAlert.contactSupport || currentLocation.pathname !== urls.organizationBilling()\n\n    const requiresHorizontalMargin =\n        sceneConfig?.layout && ['app-raw', 'app-raw-no-header'].includes(sceneConfig.layout)\n\n    const buttonProps = billingAlert.action\n        ? billingAlert.action\n        : billingAlert.contactSupport\n        ? {\n              to: 'mailto:sales@posthog.com',\n              children: billingAlert.buttonCTA || 'Contact support',\n              onClick: () => reportBillingAlertActionClicked(billingAlert),\n          }\n        : {\n              to: urls.organizationBilling(),\n              children: 'Manage billing',\n              onClick: () => reportBillingAlertActionClicked(billingAlert),\n          }\n\n    return (\n        <div className={clsx('my-4', requiresHorizontalMargin && 'mx-4')}>\n            <LemonBanner\n                type={billingAlert.status}\n                action={showButton ? buttonProps : undefined}\n                onClose={\n                    billingAlert.status !== 'error'\n                        ? () => setAlertHidden(true)\n                        : billingAlert.onClose\n                        ? () => billingAlert.onClose?.()\n                        : undefined\n                }\n                dismissKey={billingAlert.dismissKey}\n            >\n                <b>{billingAlert.title}</b>\n                <br />\n                {billingAlert.message}\n            </LemonBanner>\n        </div>\n    )\n}\n", "import './index.scss'\n\nimport { useActions, useValues } from 'kea'\nimport { useOutsideClickHandler } from 'lib/hooks/useOutsideClickHandler'\nimport { forwardRef, useRef } from 'react'\n\nimport { ActionBar } from './ActionBar'\nimport { commandBarLogic } from './commandBarLogic'\nimport { SearchBar } from './SearchBar'\nimport { Shortcuts } from './Shortcuts'\nimport { BarStatus } from './types'\n\ninterface CommandBarOverlayProps {\n    barStatus: BarStatus\n    children?: React.ReactNode\n}\n\nconst CommandBarOverlay = forwardRef<HTMLDivElement, CommandBarOverlayProps>(function CommandBarOverlayInternal(\n    { barStatus, children },\n    ref\n): JSX.Element {\n    return (\n        <div className=\"CommandBar__overlay fixed\">\n            <div className=\"CommandBar__overlay-content\">\n                <div\n                    data-attr=\"command-bar\"\n                    className={`w-full ${\n                        barStatus === BarStatus.SHOW_SEARCH && 'h-full'\n                    } w-full bg-primary rounded overflow-hidden border border-border-bold`}\n                    ref={ref}\n                >\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport function CommandBar(): JSX.Element | null {\n    const containerRef = useRef<HTMLDivElement | null>(null)\n    const { barStatus } = useValues(commandBarLogic)\n    const { hideCommandBar } = useActions(commandBarLogic)\n\n    useOutsideClickHandler([containerRef], hideCommandBar, [])\n\n    if (barStatus === BarStatus.HIDDEN) {\n        return null\n    }\n\n    return (\n        <CommandBarOverlay barStatus={barStatus} ref={containerRef}>\n            {barStatus === BarStatus.SHOW_SEARCH && <SearchBar />}\n            {barStatus === BarStatus.SHOW_ACTIONS && <ActionBar />}\n            {barStatus === BarStatus.SHOW_SHORTCUTS && <Shortcuts />}\n        </CommandBarOverlay>\n    )\n}\n", "import { useValues } from 'kea'\n\nimport { actionBarLogic } from './actionBarLogic'\nimport { ActionInput } from './ActionInput'\nimport { ActionResults } from './ActionResults'\n\nexport const ActionBar = (): JSX.Element => {\n    const { activeFlow } = useValues(actionBarLogic)\n\n    return (\n        <div className=\"flex flex-col h-full\">\n            {(!activeFlow || activeFlow.instruction) && <ActionInput />}\n            <ActionResults />\n        </div>\n    )\n}\n", "import { afterMount, beforeUnmount, connect, kea, listeners, path } from 'kea'\nimport { subscriptions } from 'kea-subscriptions'\nimport { eventUsageLogic } from 'lib/utils/eventUsageLogic'\n\nimport { commandPaletteLogic } from '../CommandPalette/commandPaletteLogic'\nimport type { actionBarLogicType } from './actionBarLogicType'\nimport { commandBarLogic } from './commandBarLogic'\nimport { BarStatus } from './types'\n\nexport const actionBarLogic = kea<actionBarLogicType>([\n    path(['lib', 'components', 'CommandBar', 'actionBarLogic']),\n    connect({\n        actions: [\n            commandBarLogic,\n            ['hideCommandBar', 'setCommandBar', 'clearInitialQuery'],\n            commandPaletteLogic,\n            ['showPalette', 'hidePalette', 'setInput', 'executeResult', 'backFlow', 'onArrowUp', 'onArrowDown'],\n            eventUsageLogic,\n            ['reportCommandBarActionSearch', 'reportCommandBarActionResultExecuted'],\n        ],\n        values: [\n            commandBarLogic,\n            ['initialQuery', 'barStatus'],\n            commandPaletteLogic,\n            [\n                'input',\n                'activeResultIndex',\n                'commandRegistrations',\n                'commandSearchResults',\n                'commandSearchResultsGrouped',\n                'activeFlow',\n            ],\n        ],\n    }),\n    listeners(({ actions }) => ({\n        hidePalette: () => {\n            // listen on hide action from legacy palette, and hide command bar\n            actions.hideCommandBar()\n        },\n        setInput: ({ input }) => {\n            actions.reportCommandBarActionSearch(input)\n        },\n        executeResult: ({ result }) => {\n            actions.reportCommandBarActionResultExecuted(result.display)\n        },\n    })),\n    subscriptions(({ values, actions }) => ({\n        barStatus: (value, oldvalue) => {\n            if (value !== BarStatus.SHOW_ACTIONS || oldvalue === BarStatus.SHOW_ACTIONS) {\n                return\n            }\n\n            if (values.initialQuery !== null) {\n                // set default query from url\n                actions.setInput(values.initialQuery)\n                actions.clearInitialQuery()\n            }\n        },\n    })),\n    afterMount(({ actions, values, cache }) => {\n        // trigger show action from legacy palette\n        actions.showPalette()\n\n        // register keyboard shortcuts\n        cache.onKeyDown = (event: KeyboardEvent) => {\n            if (event.key === 'Enter' && values.commandSearchResults.length) {\n                // execute result\n                const result = values.commandSearchResults[values.activeResultIndex]\n                const isExecutable = !!result.executor\n                if (isExecutable) {\n                    actions.executeResult(result)\n                }\n            } else if (event.key === 'ArrowDown') {\n                // navigate to next result\n                event.preventDefault()\n                actions.onArrowDown(values.commandSearchResults.length - 1)\n            } else if (event.key === 'ArrowUp') {\n                // navigate to previous result\n                event.preventDefault()\n                actions.onArrowUp()\n            } else if (event.key === 'Escape' && event.repeat === false) {\n                event.preventDefault()\n\n                if (values.activeFlow) {\n                    // return to previous flow\n                    actions.backFlow()\n                } else if (values.input) {\n                    // or erase input\n                    actions.setInput('')\n                } else {\n                    // or hide palette\n                    actions.hidePalette()\n                }\n            } else if (event.key === 'Backspace') {\n                if (values.input.length === 0 && event.repeat === false) {\n                    // transition to search when pressing backspace with empty input\n                    actions.setCommandBar(BarStatus.SHOW_SEARCH)\n                }\n            }\n        }\n        window.addEventListener('keydown', cache.onKeyDown)\n    }),\n    beforeUnmount(({ actions, cache }) => {\n        // trigger hide action from legacy palette\n        actions.hidePalette()\n\n        // unregister keyboard shortcuts\n        window.removeEventListener('keydown', cache.onKeyDown)\n    }),\n])\n", "import { IconPencil } from '@posthog/icons'\nimport { LemonInput } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { CommandFlow } from 'lib/components/CommandPalette/commandPaletteLogic'\nimport { IconChevronRight } from 'lib/lemon-ui/icons'\nimport { isMac } from 'lib/utils'\nimport React from 'react'\n\nimport { KeyboardShortcut } from '~/layout/navigation-3000/components/KeyboardShortcut'\n\nimport { actionBarLogic } from './actionBarLogic'\n\ntype PrefixIconProps = {\n    activeFlow: CommandFlow | null\n}\n\nconst PrefixIcon = ({ activeFlow }: PrefixIconProps): React.ReactElement | null => {\n    if (activeFlow) {\n        return <activeFlow.icon className=\"palette__icon\" /> ?? <IconPencil className=\"palette__icon\" />\n    } else {\n        return <IconChevronRight className=\"palette__icon\" />\n    }\n}\n\nexport const ActionInput = (): JSX.Element => {\n    const { input, activeFlow } = useValues(actionBarLogic)\n    const { setInput } = useActions(actionBarLogic)\n\n    return (\n        <div className=\"border-b\">\n            <LemonInput\n                data-attr=\"action-bar-input\"\n                className=\"CommandBar__input\"\n                fullWidth\n                prefix={<PrefixIcon activeFlow={activeFlow} />}\n                suffix={<KeyboardShortcut escape />}\n                placeholder={\n                    activeFlow?.instruction ?? `Run a command\u2026 or press ${isMac() ? 'Delete' : 'Backspace'} for search`\n                }\n                autoFocus\n                value={input}\n                onChange={setInput}\n            />\n        </div>\n    )\n}\n", "import { useValues } from 'kea'\nimport { getNameFromActionScope } from 'lib/components/CommandBar/utils'\n\nimport { CommandResultDisplayable } from '../CommandPalette/commandPaletteLogic'\nimport { actionBarLogic } from './actionBarLogic'\nimport { ActionResult } from './ActionResult'\n\ntype ResultsGroupProps = {\n    scope: string\n    results: CommandResultDisplayable[]\n    activeResultIndex: number\n}\n\nconst ResultsGroup = ({ scope, results, activeResultIndex }: ResultsGroupProps): JSX.Element => {\n    return (\n        <>\n            <div className=\"border-b px-5 pt-1 pb-1 bg-primary text-xs font-bold text-secondary uppercase\">\n                {getNameFromActionScope(scope)}\n            </div>\n            {results.map((result) => (\n                <ActionResult\n                    key={`command_result_${result.index}`}\n                    result={result}\n                    focused={result.index === activeResultIndex}\n                />\n            ))}\n        </>\n    )\n}\n\nexport const ActionResults = (): JSX.Element => {\n    const { commandSearchResultsGrouped, activeResultIndex } = useValues(actionBarLogic)\n\n    return (\n        <div className=\"grow overscroll-none overflow-y-auto\">\n            {commandSearchResultsGrouped.map(([scope, results]) => (\n                <ResultsGroup key={scope} scope={scope} results={results} activeResultIndex={activeResultIndex} />\n            ))}\n        </div>\n    )\n}\n", "import { actionScopeToName } from './constants'\n\nexport const getNameFromActionScope = (scope: string): string => {\n    if (scope in actionScopeToName) {\n        return actionScopeToName[scope]\n    }\n    return scope\n}\n", "export const actionScopeToName: Record<string, string> = {\n    global: 'Global',\n    insights: 'Insights',\n}\n\nexport enum TabGroup {\n    All = 'all',\n    EventData = 'event_data',\n    PostHog = 'posthog',\n}\n\nexport const groupToName: Record<TabGroup, string | null> = {\n    [TabGroup.All]: 'All',\n    [TabGroup.EventData]: 'Event data',\n    [TabGroup.PostHog]: 'PostHog',\n}\n\nexport enum Tab {\n    All = 'all',\n    Action = 'action',\n    Cohort = 'cohort',\n    Dashboard = 'dashboard',\n    EventDefinition = 'event_definition',\n    Experiment = 'experiment',\n    FeatureFlag = 'feature_flag',\n    Insight = 'insight',\n    Notebook = 'notebook',\n    Person = 'person',\n    Group0 = 'group_0',\n    Group1 = 'group_1',\n    Group2 = 'group_2',\n    Group3 = 'group_3',\n    Group4 = 'group_4',\n    Survey = 'survey',\n}\n\nexport const clickhouseTabs = [Tab.Person, Tab.Group0, Tab.Group1, Tab.Group2, Tab.Group3, Tab.Group4]\n\nexport const tabToName: Record<Tab, string | null> = {\n    [Tab.All]: 'All',\n    [Tab.Action]: 'Actions',\n    [Tab.Cohort]: 'Cohorts',\n    [Tab.Dashboard]: 'Dashboards',\n    [Tab.EventDefinition]: 'Events',\n    [Tab.Experiment]: 'Experiments',\n    [Tab.FeatureFlag]: 'Feature flags',\n    [Tab.Insight]: 'Insights',\n    [Tab.Notebook]: 'Notebooks',\n    [Tab.Person]: 'Persons',\n    [Tab.Group0]: null,\n    [Tab.Group1]: null,\n    [Tab.Group2]: null,\n    [Tab.Group3]: null,\n    [Tab.Group4]: null,\n    [Tab.Survey]: 'Surveys',\n}\n", "import clsx from 'clsx'\nimport { useActions } from 'kea'\nimport { useEffect, useRef } from 'react'\n\nimport { CommandResultDisplayable } from '../CommandPalette/commandPaletteLogic'\nimport { actionBarLogic } from './actionBarLogic'\n\ntype SearchResultProps = {\n    result: CommandResultDisplayable\n    focused: boolean\n}\n\nexport const ActionResult = ({ result, focused }: SearchResultProps): JSX.Element => {\n    const { executeResult } = useActions(actionBarLogic)\n\n    const ref = useRef<HTMLDivElement | null>(null)\n    const isExecutable = !!result.executor\n\n    useEffect(() => {\n        if (focused) {\n            ref.current?.scrollIntoView()\n        }\n    }, [focused])\n\n    return (\n        <div\n            className={clsx(\n                'border-l-4',\n                focused ? 'border-accent-primary' : !isExecutable ? 'border-transparent' : null\n            )}\n        >\n            <div\n                className={`flex items-center w-full px-2 hover:bg-surface-secondary ${\n                    focused ? 'bg-surface-secondary' : 'bg-surface-primary'\n                } border-b cursor-pointer`}\n                onClick={() => {\n                    if (isExecutable) {\n                        executeResult(result)\n                    }\n                }}\n                ref={ref}\n            >\n                <div className=\"px-2 py-3 w-full space-y-0.5 flex items-center\">\n                    <result.icon className=\"text-muted-3000\" />\n                    <span className=\"ml-2 text-text-3000 font-bold\">{result.display}</span>\n                </div>\n                {focused && <div className=\"shrink-0 text-primary-3000\">Run command</div>}\n            </div>\n        </div>\n    )\n}\n", "import { useMountedLogic } from 'kea'\nimport { useRef } from 'react'\n\nimport { searchBarLogic } from './searchBarLogic'\nimport { SearchInput } from './SearchInput'\nimport { SearchResults } from './SearchResults'\nimport { SearchTabs } from './SearchTabs'\n\nexport const SearchBar = (): JSX.Element => {\n    useMountedLogic(searchBarLogic) // load initial results\n\n    /** Ref to the search input for focusing after tab change. */\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    return (\n        <div className=\"grid grid-cols-[8.5rem_1fr] lg:grid-cols-[12.5rem_1fr] h-full\">\n            <SearchTabs inputRef={inputRef} />\n            {/* 49px = height of search input, 40rem = height of search results */}\n            <div className=\"grid grid-rows-[49px_calc(40rem-49px)] overflow-hidden overscroll-contain\">\n                <SearchInput ref={inputRef} />\n                <SearchResults />\n            </div>\n        </div>\n    )\n}\n", "import { actions, afterMount, beforeUnmount, connect, kea, listeners, path, reducers, selectors } from 'kea'\nimport { loaders } from 'kea-loaders'\nimport { router } from 'kea-router'\nimport { subscriptions } from 'kea-subscriptions'\nimport api, { CountedPaginatedResponse } from 'lib/api'\nimport { eventUsageLogic } from 'lib/utils/eventUsageLogic'\nimport { urls } from 'scenes/urls'\n\nimport { groupsModel } from '~/models/groupsModel'\nimport { Group, InsightShortId, PersonType, SearchableEntity, SearchResponse } from '~/types'\n\nimport { commandBarLogic } from './commandBarLogic'\nimport { clickhouseTabs, Tab, TabGroup } from './constants'\nimport type { searchBarLogicType } from './searchBarLogicType'\nimport { BarStatus, GroupResult, PersonResult, SearchResult } from './types'\n\nconst DEBOUNCE_MS = 300\n\nfunction calculateRank(query: string): number {\n    // We know each item matches the query. To rank them\n    // between the other results, we rank them higher, when the\n    // query is longer.\n    return query.length / (query.length + 2.0)\n}\n\nfunction rankPersons(persons: PersonType[], query: string): PersonResult[] {\n    const rank = calculateRank(query)\n    return persons.map((person) => ({\n        type: 'person',\n        result_id: person.distinct_ids[0],\n        extra_fields: { ...person },\n        rank,\n    }))\n}\n\nfunction rankGroups(groups: Group[], query: string): GroupResult[] {\n    const rank = calculateRank(query)\n    return groups.map((group) => ({\n        type: 'group',\n        result_id: group.group_key,\n        extra_fields: { ...group },\n        rank,\n    }))\n}\n\nexport const searchBarLogic = kea<searchBarLogicType>([\n    path(['lib', 'components', 'CommandBar', 'searchBarLogic']),\n    connect({\n        values: [commandBarLogic, ['initialQuery', 'barStatus'], groupsModel, ['groupTypes', 'aggregationLabel']],\n        actions: [\n            commandBarLogic,\n            ['hideCommandBar', 'setCommandBar', 'clearInitialQuery'],\n            eventUsageLogic,\n            ['reportCommandBarSearch', 'reportCommandBarSearchResultOpened'],\n        ],\n    }),\n    actions({\n        search: true,\n        setSearchQuery: (query: string) => ({ query }),\n        setActiveTab: (tab: Tab) => ({ tab }),\n        onArrowUp: (activeIndex: number, maxIndex: number) => ({ activeIndex, maxIndex }),\n        onArrowDown: (activeIndex: number, maxIndex: number) => ({ activeIndex, maxIndex }),\n        openResult: (index: number) => ({ index }),\n        setActiveResultIndex: (index: number) => ({ index }),\n    }),\n    loaders(({ values, actions }) => ({\n        rawSearchResponse: [\n            null as SearchResponse | null,\n            {\n                loadSearchResponse: async (_, breakpoint) => {\n                    await breakpoint(DEBOUNCE_MS)\n\n                    actions.reportCommandBarSearch(values.searchQuery.length)\n\n                    let response\n                    if (values.activeTab !== Tab.All && clickhouseTabs.includes(values.activeTab)) {\n                        return null\n                    } else if (clickhouseTabs.includes(values.activeTab)) {\n                        // prevent race conditions when switching tabs quickly\n                        response = values.rawSearchResponse\n                    } else if (values.activeTab === Tab.All) {\n                        response = await api.search.list({ q: values.searchQuery })\n                    } else {\n                        response = await api.search.list({\n                            q: values.searchQuery,\n                            entities: [values.activeTab.toLowerCase() as SearchableEntity],\n                        })\n                    }\n\n                    breakpoint()\n                    return response\n                },\n            },\n        ],\n        rawPersonsResponse: [\n            null as CountedPaginatedResponse<PersonType> | null,\n            {\n                loadPersonsResponse: async (_, breakpoint) => {\n                    await breakpoint(DEBOUNCE_MS)\n\n                    if (values.activeTab !== Tab.All && values.activeTab !== Tab.Person) {\n                        return null\n                    }\n\n                    const response = await api.persons.list({ search: values.searchQuery })\n                    breakpoint()\n                    return response\n                },\n            },\n        ],\n        rawGroup0Response: [\n            null as CountedPaginatedResponse<Group> | null,\n            {\n                loadGroup0Response: async (_, breakpoint) => {\n                    await breakpoint(DEBOUNCE_MS)\n\n                    if (values.activeTab !== Tab.All && values.activeTab !== Tab.Group0) {\n                        return null\n                    }\n\n                    const response = await api.groups.list({ group_type_index: 0, search: values.searchQuery })\n                    breakpoint()\n                    return response\n                },\n            },\n        ],\n        rawGroup1Response: [\n            null as CountedPaginatedResponse<Group> | null,\n            {\n                loadGroup1Response: async (_, breakpoint) => {\n                    await breakpoint(DEBOUNCE_MS)\n\n                    if (values.activeTab !== Tab.All && values.activeTab !== Tab.Group1) {\n                        return null\n                    }\n\n                    const response = await api.groups.list({ group_type_index: 1, search: values.searchQuery })\n                    breakpoint()\n                    return response\n                },\n            },\n        ],\n        rawGroup2Response: [\n            null as CountedPaginatedResponse<Group> | null,\n            {\n                loadGroup2Response: async (_, breakpoint) => {\n                    await breakpoint(DEBOUNCE_MS)\n\n                    if (values.activeTab !== Tab.All && values.activeTab !== Tab.Group2) {\n                        return null\n                    }\n\n                    const response = await api.groups.list({ group_type_index: 2, search: values.searchQuery })\n                    breakpoint()\n                    return response\n                },\n            },\n        ],\n        rawGroup3Response: [\n            null as CountedPaginatedResponse<Group> | null,\n            {\n                loadGroup3Response: async (_, breakpoint) => {\n                    await breakpoint(DEBOUNCE_MS)\n\n                    if (values.activeTab !== Tab.All && values.activeTab !== Tab.Group3) {\n                        return null\n                    }\n\n                    const response = await api.groups.list({ group_type_index: 3, search: values.searchQuery })\n                    breakpoint()\n                    return response\n                },\n            },\n        ],\n        rawGroup4Response: [\n            null as CountedPaginatedResponse<Group> | null,\n            {\n                loadGroup4Response: async (_, breakpoint) => {\n                    await breakpoint(DEBOUNCE_MS)\n\n                    if (values.activeTab !== Tab.All && values.activeTab !== Tab.Group4) {\n                        return null\n                    }\n\n                    const response = await api.groups.list({ group_type_index: 4, search: values.searchQuery })\n                    breakpoint()\n                    return response\n                },\n            },\n        ],\n    })),\n    reducers({\n        searchQuery: ['', { setSearchQuery: (_, { query }) => query }],\n        rawSearchResponse: [\n            null as SearchResponse | null,\n            {\n                search: () => null,\n            },\n        ],\n        rawPersonsResponse: [\n            null as CountedPaginatedResponse<PersonType> | null,\n            {\n                search: () => null,\n            },\n        ],\n        rawGroup0Response: [\n            null as CountedPaginatedResponse<Group> | null,\n            {\n                search: () => null,\n            },\n        ],\n        rawGroup1Response: [\n            null as CountedPaginatedResponse<Group> | null,\n            {\n                search: () => null,\n            },\n        ],\n        rawGroup2Response: [\n            null as CountedPaginatedResponse<Group> | null,\n            {\n                search: () => null,\n            },\n        ],\n        rawGroup3Response: [\n            null as CountedPaginatedResponse<Group> | null,\n            {\n                search: () => null,\n            },\n        ],\n        rawGroup4Response: [\n            null as CountedPaginatedResponse<Group> | null,\n            {\n                search: () => null,\n            },\n        ],\n        activeResultIndex: [\n            0,\n            {\n                setSearchQuery: () => 0,\n                setActiveTab: () => 0,\n                openResult: () => 0,\n                onArrowUp: (_, { activeIndex, maxIndex }) => (activeIndex > 0 ? activeIndex - 1 : maxIndex),\n                onArrowDown: (_, { activeIndex, maxIndex }) => (activeIndex < maxIndex ? activeIndex + 1 : 0),\n                setActiveResultIndex: (_, { index }) => index,\n            },\n        ],\n        activeTab: [\n            Tab.All as Tab,\n            {\n                setActiveTab: (_, { tab }) => tab,\n            },\n        ],\n    }),\n    selectors({\n        combinedSearchResults: [\n            (s) => [\n                s.rawSearchResponse,\n                s.rawPersonsResponse,\n                s.rawGroup0Response,\n                s.rawGroup1Response,\n                s.rawGroup2Response,\n                s.rawGroup3Response,\n                s.rawGroup4Response,\n                s.searchQuery,\n            ],\n            (\n                searchResponse,\n                personsResponse,\n                group0Response,\n                group1Response,\n                group2Response,\n                group3Response,\n                group4Response,\n                query\n            ) => {\n                if (\n                    !searchResponse &&\n                    !personsResponse &&\n                    !group0Response &&\n                    !group1Response &&\n                    !group2Response &&\n                    !group3Response &&\n                    !group4Response\n                ) {\n                    return null\n                }\n\n                return [\n                    ...(searchResponse ? searchResponse.results : []),\n                    ...(personsResponse ? rankPersons(personsResponse.results, query) : []),\n                    ...(group0Response ? rankGroups(group0Response.results, query) : []),\n                    ...(group1Response ? rankGroups(group1Response.results, query) : []),\n                    ...(group2Response ? rankGroups(group2Response.results, query) : []),\n                    ...(group3Response ? rankGroups(group3Response.results, query) : []),\n                    ...(group4Response ? rankGroups(group4Response.results, query) : []),\n                ].sort((a, b) => (a.rank && b.rank ? a.rank - b.rank : 1))\n            },\n        ],\n        combinedSearchLoading: [\n            (s) => [\n                s.rawSearchResponseLoading,\n                s.rawPersonsResponseLoading,\n                s.rawGroup0ResponseLoading,\n                s.rawGroup1ResponseLoading,\n                s.rawGroup2ResponseLoading,\n                s.rawGroup3ResponseLoading,\n                s.rawGroup4ResponseLoading,\n            ],\n            (\n                searchLoading,\n                personsLoading,\n                group0Loading,\n                group1Loading,\n                group2Loading,\n                group3Loading,\n                group4Loading\n            ) =>\n                searchLoading ||\n                personsLoading ||\n                group0Loading ||\n                group1Loading ||\n                group2Loading ||\n                group3Loading ||\n                group4Loading,\n        ],\n        tabsForGroups: [\n            (s) => [s.groupTypes],\n            (groupTypes): Tab[] => {\n                return Array.from(groupTypes.values()).map(({ group_type_index }) => `group_${group_type_index}` as Tab)\n            },\n        ],\n        tabsGrouped: [\n            (s) => [s.tabsForGroups],\n            (tabsForGroups): Record<TabGroup, Tab[]> => {\n                return {\n                    all: [Tab.All],\n                    event_data: [Tab.EventDefinition, Tab.Action, Tab.Person, Tab.Cohort, ...tabsForGroups],\n                    posthog: [Tab.Insight, Tab.Dashboard, Tab.Notebook, Tab.Experiment, Tab.FeatureFlag, Tab.Survey],\n                }\n            },\n        ],\n        tabs: [\n            (s) => [s.tabsGrouped],\n            (tabsGrouped): Tab[] => {\n                return Object.values(tabsGrouped).reduce((acc, val) => acc.concat(val), [])\n            },\n        ],\n        tabsCount: [(s) => [s.tabsCountMemoized], (tabsCountMemoized) => tabsCountMemoized[0]],\n        tabsCountMemoized: [\n            (s) => [\n                s.rawSearchResponse,\n                s.rawPersonsResponse,\n                s.rawGroup0Response,\n                s.rawGroup1Response,\n                s.rawGroup2Response,\n                s.rawGroup3Response,\n                s.rawGroup4Response,\n                s.searchQuery,\n            ],\n            (\n                searchResponse,\n                personsResponse,\n                group0Response,\n                group1Response,\n                group2Response,\n                group3Response,\n                group4Response,\n                searchQuery\n            ): [Record<Tab, string | null>, string] => {\n                /** :TRICKY: We need to pull in the searchQuery to memoize the counts. */\n\n                const counts = {}\n\n                Object.values(Tab).forEach((tab) => {\n                    counts[tab] = searchResponse?.counts[tab]?.toString() || null\n                })\n\n                const clickhouseTabsResults: [string, unknown[] | undefined][] = [\n                    [Tab.Person, personsResponse?.results],\n                    [Tab.Group0, group0Response?.results],\n                    [Tab.Group1, group1Response?.results],\n                    [Tab.Group2, group2Response?.results],\n                    [Tab.Group3, group3Response?.results],\n                    [Tab.Group4, group4Response?.results],\n                ]\n                clickhouseTabsResults.forEach(([tab, results]) => {\n                    if (results !== undefined) {\n                        counts[tab] = results.length === 100 ? '100+' : results.length.toString()\n                    }\n                })\n\n                return [counts as Record<Tab, string | null>, searchQuery]\n            },\n            {\n                resultEqualityCheck: (prev, next) => {\n                    const [prevCounts, prevQuery] = prev\n                    const [nextCounts, nextQuery] = next\n\n                    if (prevQuery !== nextQuery) {\n                        return false\n                    }\n\n                    const prevNulls = Object.values(prevCounts).filter((v) => v === null).length\n                    const nextNulls = Object.values(nextCounts).filter((v) => v === null).length\n\n                    if (nextNulls !== prevNulls) {\n                        return false\n                    }\n\n                    return true\n                },\n            },\n        ],\n        tabsLoading: [\n            (s) => [s.rawSearchResponseLoading, s.rawPersonsResponseLoading, s.activeTab],\n            (searchLoading, personsLoading, activeTab): Tab[] => {\n                const tabs: Tab[] = []\n\n                if (searchLoading) {\n                    if (activeTab === Tab.All) {\n                        tabs.push(...Object.values(Tab).filter((tab) => ![Tab.All, Tab.Person].includes(tab)))\n                    } else {\n                        tabs.push(activeTab)\n                    }\n                }\n\n                if (personsLoading) {\n                    tabs.push(Tab.Person)\n                }\n\n                return tabs\n            },\n        ],\n        maxIndex: [\n            (s) => [s.combinedSearchResults],\n            (combinedResults) => (combinedResults ? combinedResults.length - 1 : 0),\n        ],\n    }),\n    listeners(({ values, actions }) => ({\n        setSearchQuery: actions.search,\n        setActiveTab: actions.search,\n        search: (_) => {\n            // postgres search\n            actions.loadSearchResponse(_)\n\n            // clickhouse persons\n            actions.loadPersonsResponse(_)\n\n            // clickhouse groups\n            actions.loadGroup0Response(_)\n            actions.loadGroup1Response(_)\n            actions.loadGroup2Response(_)\n            actions.loadGroup3Response(_)\n            actions.loadGroup4Response(_)\n        },\n        openResult: ({ index }) => {\n            const result = values.combinedSearchResults![index]\n            router.actions.push(urlForResult(result))\n            actions.hideCommandBar()\n            actions.reportCommandBarSearchResultOpened(result.type)\n        },\n    })),\n    subscriptions(({ values, actions }) => ({\n        barStatus: (value, oldvalue) => {\n            if (value !== BarStatus.SHOW_SEARCH || oldvalue === BarStatus.SHOW_SEARCH) {\n                return\n            }\n\n            if (values.initialQuery !== null) {\n                // set default query from url\n                actions.setSearchQuery(values.initialQuery)\n                actions.clearInitialQuery()\n            } else {\n                // load initial results\n                actions.setSearchQuery('')\n                actions.clearInitialQuery()\n            }\n        },\n    })),\n    afterMount(({ actions, values, cache }) => {\n        // register keyboard shortcuts\n        cache.onKeyDown = (event: KeyboardEvent) => {\n            if (event.key === 'Enter') {\n                // open result\n                event.preventDefault()\n                actions.openResult(values.activeResultIndex)\n            } else if (event.key === 'ArrowDown') {\n                // navigate to next result\n                event.preventDefault()\n                actions.onArrowDown(values.activeResultIndex, values.maxIndex)\n            } else if (event.key === 'ArrowUp') {\n                // navigate to previous result\n                event.preventDefault()\n                actions.onArrowUp(values.activeResultIndex, values.maxIndex)\n            } else if (event.key === 'Escape' && event.repeat === false) {\n                // hide command bar\n                actions.hideCommandBar()\n            } else if (event.key === '>') {\n                const { value, selectionStart, selectionEnd } = event.target as HTMLInputElement\n                if (\n                    values.searchQuery.length === 0 ||\n                    (selectionStart !== null &&\n                        selectionEnd !== null &&\n                        (value.substring(0, selectionStart) + value.substring(selectionEnd)).length === 0)\n                ) {\n                    // transition to actions when entering '>' with empty input, or when replacing the whole input\n                    event.preventDefault()\n                    actions.setCommandBar(BarStatus.SHOW_ACTIONS)\n                }\n            } else if (event.key === 'Tab') {\n                event.preventDefault()\n\n                const currentIndex = values.tabs.findIndex((tab) => tab === values.activeTab)\n                if (event.shiftKey) {\n                    const prevIndex = currentIndex === 0 ? values.tabs.length - 1 : currentIndex - 1\n                    actions.setActiveTab(values.tabs[prevIndex])\n                } else {\n                    const nextIndex = currentIndex === values.tabs.length - 1 ? 0 : currentIndex + 1\n                    actions.setActiveTab(values.tabs[nextIndex])\n                }\n            }\n        }\n        window.addEventListener('keydown', cache.onKeyDown)\n    }),\n    beforeUnmount(({ cache }) => {\n        // unregister keyboard shortcuts\n        window.removeEventListener('keydown', cache.onKeyDown)\n    }),\n])\n\nexport const urlForResult = (result: SearchResult): string => {\n    switch (result.type) {\n        case 'action':\n            return urls.action(result.result_id)\n        case 'cohort':\n            return urls.cohort(result.result_id)\n        case 'dashboard':\n            return urls.dashboard(result.result_id)\n        case 'event_definition':\n            return urls.eventDefinition(result.result_id)\n        case 'experiment':\n            return urls.experiment(result.result_id)\n        case 'feature_flag':\n            return urls.featureFlag(result.result_id)\n        case 'group':\n            return urls.group(result.extra_fields.group_type_index, result.result_id)\n        case 'insight':\n            return urls.insightView(result.result_id as InsightShortId)\n        case 'notebook':\n            return urls.notebook(result.result_id)\n        case 'person':\n            return urls.personByDistinctId(result.result_id)\n        case 'survey':\n            return urls.survey(result.result_id)\n        default:\n            // @ts-expect-error\n            throw new Error(`No action for type '${result?.type}' defined.`)\n    }\n}\n", "import { LemonInput } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { forwardRef, Ref } from 'react'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { KeyboardShortcut } from '~/layout/navigation-3000/components/KeyboardShortcut'\n\nimport { searchBarLogic } from './searchBarLogic'\n\nexport const SearchInput = forwardRef(function SearchInput(_, ref: Ref<HTMLInputElement>): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n    const { searchQuery } = useValues(searchBarLogic)\n    const { setSearchQuery } = useActions(searchBarLogic)\n\n    const placeholder = `Search ${currentTeam ? 'the ' + currentTeam.name : 'this'} project\u2026 or enter > for commands`\n\n    return (\n        <div className=\"border-b\">\n            <LemonInput\n                data-attr=\"search-bar-input\"\n                inputRef={ref}\n                type=\"search\"\n                className=\"CommandBar__input\"\n                fullWidth\n                suffix={<KeyboardShortcut escape />}\n                placeholder={placeholder}\n                autoFocus\n                value={searchQuery}\n                onChange={setSearchQuery}\n            />\n        </div>\n    )\n})\n", "import { useValues } from 'kea'\n\nimport { DetectiveHog } from '../hedgehogs'\nimport { searchBarLogic } from './searchBarLogic'\nimport { SearchResult, SearchResultSkeleton } from './SearchResult'\nimport { SearchResultPreview } from './SearchResultPreview'\n\nexport const SearchResults = (): JSX.Element => {\n    const { combinedSearchResults, combinedSearchLoading, activeResultIndex } = useValues(searchBarLogic)\n\n    return (\n        <>\n            {!combinedSearchLoading && combinedSearchResults?.length === 0 ? (\n                <div className=\"w-full h-full flex flex-col items-center justify-center p-3 text-center\">\n                    <h3 className=\"mb-0 text-xl\">No results</h3>\n                    <p className=\"opacity-75 mb-0\">This doesn't happen often, but we're stumped!</p>\n                    <DetectiveHog height={150} width={150} />\n                </div>\n            ) : (\n                <div className=\"md:grid md:grid-cols-[320px_1fr] overflow-y-auto overflow-x-hidden\">\n                    <div className=\"border-r border-b md:border-b-0 bg-primary overscroll-contain overflow-y-auto overflow-x-hidden\">\n                        {combinedSearchLoading && (\n                            <>\n                                <SearchResultSkeleton />\n                                <SearchResultSkeleton />\n                                <SearchResultSkeleton />\n                            </>\n                        )}\n                        {!combinedSearchLoading &&\n                            combinedSearchResults?.map((result, index) => (\n                                <SearchResult\n                                    key={`${result.type}_${result.result_id}`}\n                                    result={result}\n                                    resultIndex={index}\n                                    focused={index === activeResultIndex}\n                                />\n                            ))}\n                    </div>\n                    <div className=\"p-2 grow hidden md:block overflow-auto\">\n                        <SearchResultPreview />\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n", "import { LemonSkeleton } from '@posthog/lemon-ui'\nimport clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { capitalizeFirstLetter } from 'lib/utils'\nimport { useLayoutEffect, useRef } from 'react'\nimport { useSummarizeInsight } from 'scenes/insights/summarizeInsight'\nimport { Notebook } from 'scenes/notebooks/Notebook/Notebook'\nimport { JSONContent } from 'scenes/notebooks/Notebook/utils'\nimport { groupDisplayId } from 'scenes/persons/GroupActorDisplay'\n\nimport { navigation3000Logic } from '~/layout/navigation-3000/navigationLogic'\nimport { getQueryFromInsightLike } from '~/queries/nodes/InsightViz/utils'\n\nimport { tabToName } from './constants'\nimport { searchBarLogic } from './searchBarLogic'\nimport { SearchResult as ResultType } from './types'\n\ntype SearchResultProps = {\n    result: ResultType\n    resultIndex: number\n    focused: boolean\n}\n\nexport const SearchResult = ({ result, resultIndex, focused }: SearchResultProps): JSX.Element => {\n    const { aggregationLabel } = useValues(searchBarLogic)\n    const { setActiveResultIndex, openResult } = useActions(searchBarLogic)\n    const { mobileLayout } = useValues(navigation3000Logic)\n    const { hideNavOnMobile } = useActions(navigation3000Logic)\n\n    const ref = useRef<HTMLDivElement | null>(null)\n\n    useLayoutEffect(() => {\n        if (focused) {\n            // :HACKY: This uses the non-standard scrollIntoViewIfNeeded api\n            // to improve scroll behaviour. Change to scrollIntoView({ scrollMode: 'if-needed' })\n            // once available.\n            if ((ref.current as any)?.scrollIntoViewIfNeeded) {\n                ;(ref.current as any).scrollIntoViewIfNeeded(false)\n            } else {\n                ref.current?.scrollIntoView({\n                    block: 'nearest',\n                })\n            }\n        }\n    }, [focused])\n\n    return (\n        <>\n            <div\n                className={clsx(\n                    'w-full px-2 hover:bg-primary border-l-4 border-b cursor-pointer',\n                    focused ? 'bg-surface-secondary border-l-accent-primary' : 'bg-surface-primary'\n                )}\n                onClick={() => {\n                    if (mobileLayout) {\n                        hideNavOnMobile()\n                    }\n                    openResult(resultIndex)\n                }}\n                onMouseOver={() => {\n                    setActiveResultIndex(resultIndex)\n                }}\n                ref={ref}\n            >\n                <div className=\"px-2 py-3 w-full space-y-0.5 flex flex-col items-start\">\n                    <span className=\"text-muted-3000 text-xs\">\n                        {result.type !== 'group'\n                            ? tabToName[result.type]\n                            : `${capitalizeFirstLetter(aggregationLabel(result.extra_fields.group_type_index).plural)}`}\n                    </span>\n                    <span className=\"text-text-3000 font-bold\">\n                        <ResultName result={result} />\n                    </span>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport const SearchResultSkeleton = (): JSX.Element => (\n    <div className=\"px-5 py-4 w-full space-y-1.5 flex flex-col items-start bg-surface-primary border-b\">\n        <LemonSkeleton className=\"w-16 opacity-75 h-3\" />\n        <LemonSkeleton className=\"w-40 h-3.5\" />\n    </div>\n)\n\ntype ResultNameProps = {\n    result: ResultType\n}\n\nexport const ResultName = ({ result }: ResultNameProps): JSX.Element | null => {\n    const summarizeInsight = useSummarizeInsight()\n\n    const { type, extra_fields } = result\n    if (type === 'insight') {\n        const query = getQueryFromInsightLike(extra_fields)\n        return extra_fields.name ? <span>{extra_fields.name}</span> : <i>{summarizeInsight(query)}</i>\n    } else if (type === 'feature_flag') {\n        return <span>{extra_fields.key}</span>\n    } else if (type === 'notebook') {\n        return <span>{extra_fields.title}</span>\n    } else if (type === 'group') {\n        return <span>{groupDisplayId(extra_fields.group_key, extra_fields.group_properties)}</span>\n    }\n    return <span>{extra_fields.name}</span>\n}\n\nexport const ResultDescription = ({ result }: ResultNameProps): JSX.Element | null => {\n    const { result_id, type, extra_fields } = result\n    if (type === 'feature_flag') {\n        return extra_fields.name && extra_fields.name !== extra_fields.key ? (\n            <span>{extra_fields.name}</span>\n        ) : (\n            <i>No description.</i>\n        )\n    } else if (type === 'notebook') {\n        return (\n            <Notebook\n                shortId={result_id}\n                mode=\"notebook\"\n                editable={false}\n                initialContent={extra_fields.content as JSONContent}\n            />\n        )\n    }\n    return 'description' in extra_fields ? <span>{extra_fields.description}</span> : <i>No description.</i>\n}\n", "import { useActions, useValues } from 'kea'\nimport { ResultDescription, ResultName } from 'lib/components/CommandBar/SearchResult'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\n\nimport { KeyboardShortcut } from '~/layout/navigation-3000/components/KeyboardShortcut'\n\nimport { tabToName } from './constants'\nimport { searchBarLogic, urlForResult } from './searchBarLogic'\n\nexport const SearchResultPreview = (): JSX.Element | null => {\n    const { activeResultIndex, combinedSearchResults } = useValues(searchBarLogic)\n    const { openResult } = useActions(searchBarLogic)\n\n    if (!combinedSearchResults || combinedSearchResults.length === 0) {\n        return null\n    }\n\n    const result = combinedSearchResults[activeResultIndex]\n\n    return (\n        <div className=\"border bg-surface-primary rounded p-4 md:p-6\">\n            <div className=\"space-y-4\">\n                <div>\n                    <div>{tabToName[result.type as keyof typeof tabToName]}</div>\n                    <div className=\"text-text-3000 font-bold text-lg\">\n                        <ResultName result={result} />\n                    </div>\n                    <span className=\"text-[var(--trace-3000)] text-xs break-all\">\n                        {location.host}\n                        <span className=\"text-muted-3000\">{urlForResult(result)}</span>\n                    </span>\n                    <div className=\"mt-2 text-secondary\">\n                        <ResultDescription result={result} />\n                    </div>\n                </div>\n                <div className=\"grid grid-cols-[auto_1fr] items-center gap-2\">\n                    <LemonButton\n                        type=\"secondary\"\n                        size=\"small\"\n                        onClick={() => {\n                            openResult(activeResultIndex)\n                        }}\n                        aria-label=\"Open search result\"\n                    >\n                        <span className=\"mr-1\">Open</span> <KeyboardShortcut enter />\n                    </LemonButton>\n                </div>\n            </div>\n        </div>\n    )\n}\n", "import { useValues } from 'kea'\nimport { RefObject } from 'react'\n\nimport { groupToName } from './constants'\nimport { searchBarLogic } from './searchBarLogic'\nimport { SearchBarTab } from './SearchBarTab'\n\ntype SearchTabsProps = {\n    inputRef: RefObject<HTMLInputElement>\n}\n\nexport const SearchTabs = ({ inputRef }: SearchTabsProps): JSX.Element | null => {\n    const { tabsGrouped } = useValues(searchBarLogic)\n    return (\n        <div className=\"flex flex-col border-r bg-surface-primary overflow-y-auto\">\n            {Object.entries(tabsGrouped).map(([group, tabs]) => (\n                <div key={group} className={group !== 'all' ? 'pt-1.5' : ''}>\n                    {group !== 'all' && (\n                        <span className=\"ml-4 text-xxs text-secondary uppercase\">\n                            {groupToName[group as keyof typeof groupToName]}\n                        </span>\n                    )}\n                    {tabs.map((tab) => (\n                        <SearchBarTab key={tab} tab={tab} inputRef={inputRef} />\n                    ))}\n                </div>\n            ))}\n        </div>\n    )\n}\n", "import { useActions, useValues } from 'kea'\nimport { Spinner } from 'lib/lemon-ui/Spinner'\nimport { capitalizeFirstLetter } from 'lib/utils'\nimport { RefObject } from 'react'\n\nimport { Tab, tabToName } from './constants'\nimport { searchBarLogic } from './searchBarLogic'\n\ntype SearchBarTabProps = {\n    tab: Tab\n    inputRef: RefObject<HTMLInputElement>\n}\n\nexport const SearchBarTab = ({ tab, inputRef }: SearchBarTabProps): JSX.Element => {\n    const { activeTab, aggregationLabel } = useValues(searchBarLogic)\n    const { setActiveTab } = useActions(searchBarLogic)\n\n    const isActive = tab === activeTab\n\n    return (\n        <div\n            className={`SearchBarTab flex items-center px-4 py-2 cursor-pointer text-xs whitespace-nowrap border-l-2 ${\n                isActive ? 'SearchBarTab__active font-bold border-accent-primary' : 'border-transparent'\n            } ${tab === Tab.All ? 'h-9' : ''}`}\n            onClick={() => {\n                setActiveTab(tab)\n                inputRef.current?.focus()\n            }}\n        >\n            {tabToName[tab] || `${capitalizeFirstLetter(aggregationLabel(Number(tab.split('_')[1])).plural)}`}\n            <Count tab={tab} />\n        </div>\n    )\n}\n\ntype CountProps = {\n    tab: Tab\n}\n\nconst Count = ({ tab }: CountProps): JSX.Element | null => {\n    const { activeTab, tabsCount, tabsLoading } = useValues(searchBarLogic)\n\n    const isLoading = tabsLoading.length > 0\n\n    if (isLoading && tab === Tab.All && activeTab === Tab.All) {\n        return <Spinner className=\"ml-0.5\" />\n    } else if (tabsLoading.includes(tab) && activeTab !== Tab.All) {\n        return <Spinner className=\"ml-0.5\" />\n    } else if (!isLoading && tabsCount[tab] != null) {\n        return <span className=\"ml-1 text-xxs text-tertiary\">{tabsCount[tab]}</span>\n    }\n    return null\n}\n", "import { useMountedLogic } from 'kea'\n\nimport { KeyboardShortcut } from '~/layout/navigation-3000/components/KeyboardShortcut'\n\nimport { shortcutsLogic } from './shortcutsLogic'\n\nexport const Shortcuts = (): JSX.Element => {\n    useMountedLogic(shortcutsLogic)\n\n    return (\n        <div className=\"flex flex-col h-full p-5\">\n            <h3>Keyboard shortcuts</h3>\n            <h4>Site-wide shortcuts</h4>\n            <div className=\"space-y-1\">\n                <div>\n                    <KeyboardShortcut command k /> Open search\n                </div>\n                <div>\n                    <KeyboardShortcut command shift k /> Open command palette\n                </div>\n            </div>\n        </div>\n    )\n}\n", "import { afterMount, beforeUnmount, connect, kea, path } from 'kea'\n\nimport { commandBarLogic } from './commandBarLogic'\nimport type { shortcutsLogicType } from './shortcutsLogicType'\n\nexport const shortcutsLogic = kea<shortcutsLogicType>([\n    path(['lib', 'components', 'CommandBar', 'shortcutsLogic']),\n    connect({\n        actions: [commandBarLogic, ['hideCommandBar']],\n    }),\n    afterMount(({ actions, cache }) => {\n        // register keyboard shortcuts\n        cache.onKeyDown = (event: KeyboardEvent) => {\n            if (event.key === 'Escape') {\n                // hide command bar\n                actions.hideCommandBar()\n            }\n        }\n        window.addEventListener('keydown', cache.onKeyDown)\n    }),\n    beforeUnmount(({ cache }) => {\n        // unregister keyboard shortcuts\n        window.removeEventListener('keydown', cache.onKeyDown)\n    }),\n])\n", "import { IconGear, IconPlus } from '@posthog/icons'\nimport { Spinner } from '@posthog/lemon-ui'\nimport clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { dayjs } from 'lib/dayjs'\nimport { LemonBanner } from 'lib/lemon-ui/LemonBanner'\nimport { LemonBannerAction } from 'lib/lemon-ui/LemonBanner/LemonBanner'\nimport { Link } from 'lib/lemon-ui/Link'\nimport { useEffect, useState } from 'react'\nimport { verifyEmailLogic } from 'scenes/authentication/signup/verify-email/verifyEmailLogic'\nimport { OnboardingStepKey } from 'scenes/onboarding/onboardingLogic'\nimport { organizationLogic } from 'scenes/organizationLogic'\nimport { sceneLogic } from 'scenes/sceneLogic'\nimport { inviteLogic } from 'scenes/settings/organization/inviteLogic'\nimport { urls } from 'scenes/urls'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { ProductKey } from '~/types'\n\nimport { navigationLogic, ProjectNoticeVariant } from './navigationLogic'\n\ninterface ProjectNoticeBlueprint {\n    message: JSX.Element | string\n    action?: LemonBannerAction\n    type?: 'info' | 'warning' | 'success' | 'error'\n    closeable?: boolean\n}\n\nfunction CountDown({ datetime, callback }: { datetime: dayjs.Dayjs; callback?: () => void }): JSX.Element {\n    const [now, setNow] = useState(dayjs())\n\n    // Format the time difference as 00:00:00\n    const duration = dayjs.duration(datetime.diff(now))\n    const pastCountdown = duration.seconds() < 0\n\n    const countdown = pastCountdown\n        ? 'Expired'\n        : duration.hours() > 0\n        ? duration.format('HH:mm:ss')\n        : duration.format('mm:ss')\n\n    useEffect(() => {\n        const interval = setInterval(() => setNow(dayjs()), 1000)\n        return () => clearInterval(interval)\n    }, [])\n\n    useEffect(() => {\n        if (pastCountdown) {\n            callback?.()\n        }\n    }, [pastCountdown])\n\n    return <>{countdown}</>\n}\n\nexport function ProjectNotice(): JSX.Element | null {\n    const { projectNoticeVariant } = useValues(navigationLogic)\n    const { currentOrganization } = useValues(organizationLogic)\n    const { logout, loadUser } = useActions(userLogic)\n    const { user, userLoading } = useValues(userLogic)\n    const { closeProjectNotice } = useActions(navigationLogic)\n    const { showInviteModal } = useActions(inviteLogic)\n    const { requestVerificationLink } = useActions(verifyEmailLogic)\n    const { sceneConfig } = useValues(sceneLogic)\n\n    if (!projectNoticeVariant) {\n        return null\n    }\n\n    const altTeamForIngestion = currentOrganization?.teams?.find((team) => !team.is_demo && !team.ingested_event)\n\n    const NOTICES: Record<ProjectNoticeVariant, ProjectNoticeBlueprint> = {\n        demo_project: {\n            message: (\n                <>\n                    This is a demo project with dummy data.\n                    {altTeamForIngestion && (\n                        <>\n                            {' '}\n                            When you're ready, head on over to the{' '}\n                            <Link\n                                to={urls.project(altTeamForIngestion.id, urls.products())}\n                                data-attr=\"demo-project-alt-team-ingestion_link\"\n                            >\n                                onboarding wizard\n                            </Link>{' '}\n                            to get started with your own data.\n                        </>\n                    )}\n                </>\n            ),\n        },\n\n        real_project_with_no_events: {\n            message: (\n                <>\n                    This project has no events yet. Go to the{' '}\n                    <Link\n                        to={urls.onboarding(ProductKey.PRODUCT_ANALYTICS, OnboardingStepKey.INSTALL)}\n                        data-attr=\"real_project_with_no_events-ingestion_link\"\n                    >\n                        onboarding wizard\n                    </Link>{' '}\n                    or grab your project\u00A0API\u00A0key/HTML\u00A0snippet from{' '}\n                    <Link to={urls.settings()} data-attr=\"real_project_with_no_events-settings\">\n                        Project Settings\n                    </Link>{' '}\n                    to get things moving\n                </>\n            ),\n            action: {\n                to: urls.onboarding(ProductKey.PRODUCT_ANALYTICS, OnboardingStepKey.INSTALL),\n                'data-attr': 'demo-warning-cta',\n                icon: <IconGear />,\n                children: 'Go to wizard',\n            },\n            closeable: true,\n        },\n        invite_teammates: {\n            message: 'Get more out of PostHog by\u00A0inviting your team for\u00A0free',\n            action: {\n                'data-attr': 'invite-warning-cta',\n                onClick: showInviteModal,\n                icon: <IconPlus />,\n                children: 'Invite team members',\n            },\n            closeable: true,\n        },\n        unverified_email: {\n            message: 'Please verify your email address.',\n            action: {\n                'data-attr': 'unverified-email-cta',\n                onClick: () => user && requestVerificationLink(user.uuid),\n                children: 'Send verification email',\n            },\n            type: 'warning',\n        },\n        is_impersonated: {\n            message: (\n                <>\n                    You are currently logged in as a customer.{' '}\n                    {user?.is_impersonated_until && (\n                        <>\n                            Expires in <CountDown datetime={dayjs(user.is_impersonated_until)} callback={loadUser} />\n                            {userLoading ? (\n                                <Spinner />\n                            ) : (\n                                <Link className=\"ml-2\" onClick={() => loadUser()}>\n                                    Refresh\n                                </Link>\n                            )}\n                        </>\n                    )}\n                </>\n            ),\n            type: 'warning',\n            action: {\n                'data-attr': 'stop-impersonation-cta',\n                onClick: () => logout(),\n                children: 'Log out',\n            },\n        },\n        internet_connection_issue: {\n            message: 'PostHog is having trouble connecting to the server. Please check your connection.',\n            type: 'warning',\n            action: {\n                'data-attr': 'reload-page',\n                onClick: () => window.location.reload(),\n                children: 'Reload page',\n            },\n        },\n    }\n\n    const relevantNotice = NOTICES[projectNoticeVariant]\n\n    const requiresHorizontalMargin =\n        sceneConfig?.layout && ['app-raw', 'app-raw-no-header'].includes(sceneConfig.layout)\n\n    return (\n        <LemonBanner\n            type={relevantNotice.type || 'info'}\n            className={clsx('my-4', requiresHorizontalMargin && 'mx-4')}\n            action={relevantNotice.action}\n            onClose={relevantNotice.closeable ? () => closeProjectNotice(projectNoticeVariant) : undefined}\n        >\n            {relevantNotice.message}\n        </LemonBanner>\n    )\n}\n", "import { IconLogomark } from '@posthog/icons'\nimport { LemonButton, Lettermark, Popover, ProfilePicture } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { organizationLogic } from 'scenes/organizationLogic'\nimport { teamLogic } from 'scenes/teamLogic'\nimport { urls } from 'scenes/urls'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { navigationLogic } from '~/layout/navigation/navigationLogic'\nimport { ProjectSwitcherOverlay } from '~/layout/navigation/ProjectSwitcher'\nimport { AccountPopoverOverlay } from '~/layout/navigation/TopBar/AccountPopover'\n\nexport function MinimalNavigation(): JSX.Element {\n    const { user } = useValues(userLogic)\n\n    const { currentTeam } = useValues(teamLogic)\n    const { currentOrganization } = useValues(organizationLogic)\n\n    const { isAccountPopoverOpen, isProjectSwitcherShown } = useValues(navigationLogic)\n    const { closeAccountPopover, toggleAccountPopover, toggleProjectSwitcher, hideProjectSwitcher } =\n        useActions(navigationLogic)\n\n    return (\n        <nav className=\"flex items-center justify-between gap-2 p-2 border-b\">\n            <span className=\"flex-1\">\n                <LemonButton noPadding icon={<IconLogomark className=\"text-3xl\" />} to={urls.projectHomepage()} />\n            </span>\n            {currentOrganization?.teams?.length ?? 0 > 1 ? (\n                <Popover\n                    overlay={<ProjectSwitcherOverlay onClickInside={hideProjectSwitcher} />}\n                    visible={isProjectSwitcherShown}\n                    onClickOutside={hideProjectSwitcher}\n                    placement=\"bottom\"\n                >\n                    <LemonButton\n                        type=\"tertiary\"\n                        icon={<Lettermark name={currentTeam?.name} />}\n                        onClick={toggleProjectSwitcher}\n                    >\n                        {currentTeam?.name ?? 'Current project'}\n                    </LemonButton>\n                </Popover>\n            ) : null}\n            <Popover\n                overlay={<AccountPopoverOverlay />}\n                visible={isAccountPopoverOpen}\n                onClickOutside={closeAccountPopover}\n                placement=\"bottom\"\n            >\n                <LemonButton\n                    type=\"tertiary\"\n                    icon={<ProfilePicture user={user} size=\"md\" />}\n                    onClick={toggleAccountPopover}\n                >\n                    {user?.first_name || user?.email}\n                </LemonButton>\n            </Popover>\n        </nav>\n    )\n}\n", "import clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { Resizer } from 'lib/components/Resizer/Resizer'\nimport { ScrollableShadows } from 'lib/components/ScrollableShadows/ScrollableShadows'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { useRef } from 'react'\n\nimport { themeLogic } from '~/layout/navigation-3000/themeLogic'\n\nimport { navigation3000Logic } from '../navigationLogic'\nimport { NavbarBottom } from './NavbarBottom'\nimport { NavbarButton } from './NavbarButton'\n\nexport function Navbar(): JSX.Element {\n    const { theme } = useValues(themeLogic)\n    const { isNavShown, isSidebarShown, activeNavbarItemId, navbarItems, mobileLayout } = useValues(navigation3000Logic)\n    const { toggleNavCollapsed, hideNavOnMobile, showSidebar, hideSidebar } = useActions(navigation3000Logic)\n    const { featureFlags } = useValues(featureFlagLogic)\n\n    const containerRef = useRef<HTMLDivElement | null>(null)\n\n    return (\n        <>\n            <nav className={clsx('Navbar3000', !isNavShown && 'Navbar3000--hidden')} ref={containerRef}>\n                <div\n                    className=\"Navbar3000__content\"\n                    // eslint-disable-next-line react/forbid-dom-props\n                    style={theme?.sidebarStyle}\n                >\n                    <ScrollableShadows innerClassName=\"Navbar3000__top\" direction=\"vertical\">\n                        {navbarItems.map((section, index) => (\n                            <ul key={index}>\n                                {section.map((item) =>\n                                    item.featureFlag && !featureFlags[item.featureFlag] ? null : (\n                                        <NavbarButton\n                                            key={item.identifier}\n                                            title={item.label}\n                                            identifier={item.identifier}\n                                            icon={item.icon}\n                                            sideAction={item.sideAction}\n                                            tag={item.tag}\n                                            to={'to' in item ? item.to : undefined}\n                                            onClick={() => {\n                                                if ('logic' in item) {\n                                                    if (activeNavbarItemId === item.identifier && !isSidebarShown) {\n                                                        hideSidebar()\n                                                    } else {\n                                                        showSidebar(item.identifier)\n                                                    }\n                                                }\n                                                item.onClick?.()\n                                            }}\n                                            active={activeNavbarItemId === item.identifier && isSidebarShown}\n                                        />\n                                    )\n                                )}\n                            </ul>\n                        ))}\n                    </ScrollableShadows>\n                    <NavbarBottom />\n                </div>\n                {!mobileLayout && (\n                    <Resizer\n                        logicKey=\"navbar\"\n                        placement=\"right\"\n                        containerRef={containerRef}\n                        closeThreshold={100}\n                        onToggleClosed={(shouldBeClosed) => toggleNavCollapsed(shouldBeClosed)}\n                        onDoubleClick={() => toggleNavCollapsed()}\n                    />\n                )}\n            </nav>\n            {mobileLayout && (\n                <div\n                    className={clsx('Navbar3000__overlay', !isNavShown && 'Navbar3000--hidden')}\n                    onClick={() => hideNavOnMobile()}\n                />\n            )}\n        </>\n    )\n}\n", "import { IconGear, IconSearch, IconToolbar, IconWarning } from '@posthog/icons'\nimport { useActions, useValues } from 'kea'\nimport { commandBarLogic } from 'lib/components/CommandBar/commandBarLogic'\nimport { DebugNotice } from 'lib/components/DebugNotice'\nimport { Popover } from 'lib/lemon-ui/Popover'\nimport { ProfilePicture } from 'lib/lemon-ui/ProfilePicture'\nimport { Scene } from 'scenes/sceneTypes'\nimport { urls } from 'scenes/urls'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { navigationLogic } from '~/layout/navigation/navigationLogic'\nimport { AccountPopoverOverlay } from '~/layout/navigation/TopBar/AccountPopover'\nimport { SidePanelTab } from '~/types'\n\nimport { SidePanelActivationIcon } from '../sidepanel/panels/activation/SidePanelActivation'\nimport { sidePanelLogic } from '../sidepanel/sidePanelLogic'\nimport { sidePanelStateLogic } from '../sidepanel/sidePanelStateLogic'\nimport { KeyboardShortcut } from './KeyboardShortcut'\nimport { NavbarButton } from './NavbarButton'\n\nexport function NavbarBottom(): JSX.Element {\n    const { user } = useValues(userLogic)\n    const { isAccountPopoverOpen, systemStatusHealthy } = useValues(navigationLogic)\n    const { closeAccountPopover, toggleAccountPopover } = useActions(navigationLogic)\n    const { toggleSearchBar } = useActions(commandBarLogic)\n    const { openSidePanel } = useActions(sidePanelStateLogic)\n    const { visibleTabs } = useValues(sidePanelLogic)\n    return (\n        <div className=\"Navbar3000__bottom\">\n            <ul>\n                <DebugNotice />\n                {visibleTabs.includes(SidePanelTab.Activation) && (\n                    <NavbarButton\n                        identifier=\"activation-button\"\n                        icon={<SidePanelActivationIcon />}\n                        title=\"Quick start\"\n                        onClick={() => openSidePanel(SidePanelTab.Activation)}\n                    />\n                )}\n                <NavbarButton\n                    identifier=\"search-button\"\n                    icon={<IconSearch />}\n                    shortTitle=\"Search\"\n                    title={\n                        <div className=\"flex flex-col gap-0.5\">\n                            <span>\n                                For search, press <KeyboardShortcut command k />\n                            </span>\n                            <span>\n                                For commands, press <KeyboardShortcut command shift k />\n                            </span>\n                        </div>\n                    }\n                    forceTooltipOnHover\n                    sideIcon={<KeyboardShortcut command k />}\n                    onClick={toggleSearchBar}\n                />\n                <NavbarButton\n                    icon={<IconToolbar />}\n                    identifier={Scene.ToolbarLaunch}\n                    title=\"Toolbar\"\n                    to={urls.toolbarLaunch()}\n                />\n                <NavbarButton\n                    icon={<IconGear />}\n                    identifier={Scene.Settings}\n                    title=\"Settings\"\n                    to={urls.settings('project')}\n                />\n\n                {!systemStatusHealthy ? (\n                    <NavbarButton\n                        icon={<IconWarning />}\n                        identifier={Scene.SystemStatus}\n                        title=\"System issue!\"\n                        to={urls.instanceStatus()}\n                    />\n                ) : null}\n\n                <Popover\n                    overlay={<AccountPopoverOverlay />}\n                    visible={isAccountPopoverOpen}\n                    onClickOutside={closeAccountPopover}\n                    placement=\"right-end\"\n                    className=\"min-w-70\"\n                >\n                    <NavbarButton\n                        icon={<ProfilePicture user={user} size=\"md\" />}\n                        identifier=\"me\"\n                        title={`Hi${user?.first_name ? `, ${user?.first_name}` : ''}!`}\n                        shortTitle={user?.first_name || user?.email}\n                        onClick={toggleAccountPopover}\n                    />\n                </Popover>\n            </ul>\n        </div>\n    )\n}\n", "import { IconCode, IconWarning, IconX } from '@posthog/icons'\nimport { Link, Tooltip } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { IconBranch } from 'lib/lemon-ui/icons'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { useEffect, useState } from 'react'\n\nimport { NavbarButton } from '~/layout/navigation-3000/components/NavbarButton'\nimport { navigation3000Logic } from '~/layout/navigation-3000/navigationLogic'\n\nexport function DebugNotice(): JSX.Element | null {\n    const [debugInfo, setDebugInfo] = useState<{ branch: string; revision: string } | undefined>()\n    const [noticeHidden, setNoticeHidden] = useState(false)\n    const { isNavCollapsed } = useValues(navigation3000Logic)\n\n    useEffect(() => {\n        const bottomNotice = document.getElementById('bottom-notice')\n        const bottomNoticeRevision = document.getElementById('bottom-notice-revision')?.textContent\n        const bottomNoticeBranch = document.getElementById('bottom-notice-branch')?.textContent\n\n        if (bottomNotice && bottomNoticeRevision && bottomNoticeBranch) {\n            setDebugInfo({\n                branch: bottomNoticeBranch || 'unknown',\n                revision: bottomNoticeRevision || 'unknown',\n            })\n\n            bottomNotice.remove()\n        }\n\n        return () => {}\n    }, [])\n\n    if (!debugInfo || noticeHidden) {\n        return null\n    }\n\n    if (isNavCollapsed) {\n        return (\n            <NavbarButton\n                identifier=\"debug-notice\"\n                icon={<IconBranch className=\"text-accent-primary\" />}\n                title={\n                    <div className=\"font-mono\">\n                        <div>\n                            <strong>DEBUG mode!</strong>\n                        </div>\n                        <div>\n                            Branch: <b>{debugInfo.branch}</b>\n                        </div>\n                        <div>\n                            Revision: <b>{debugInfo.revision}</b>\n                        </div>\n                        <div className=\"italic\">Click to hide</div>\n                    </div>\n                }\n                onClick={() => setNoticeHidden(true)}\n            />\n        )\n    }\n    return (\n        <div className=\"border rounded bg-primary overflow-hidden mb-1.5 w-full font-mono max-w-60 text-[13px]\">\n            <div className=\"flex items-center gap-2 px-2 h-8 border-l-4 border-brand-blue justify-between\">\n                <b>DEBUG mode</b>\n                <LemonButton\n                    icon={<IconX />}\n                    tooltip=\"Dismiss\"\n                    tooltipPlacement=\"right\"\n                    size=\"small\"\n                    noPadding\n                    onClick={() => setNoticeHidden(true)}\n                />\n            </div>\n            <Tooltip title=\"Branch\" placement=\"right\">\n                <div className=\"flex items-center gap-2 w-fit px-2 h-8 border-l-4 border-brand-red truncate max-w-full\">\n                    <IconBranch className=\"text-lg\" />\n                    <span className=\"min-w-0 flex-1 truncate font-bold\">{debugInfo.branch}</span>\n                </div>\n            </Tooltip>\n            <Tooltip title=\"Revision\" placement=\"right\">\n                <div className=\"flex items-center gap-2 w-fit px-2 h-8 border-l-4 border-brand-yellow\">\n                    <IconCode className=\"text-lg\" />\n                    <span className=\"min-w-0 flex-1 truncate font-bold\">{debugInfo.revision}</span>\n                </div>\n            </Tooltip>\n            {window.location.port !== '8010' && (\n                <Tooltip\n                    title={\n                        <>\n                            You're currently using the app over port 8000,\n                            <br />\n                            which only serves the web app, without capture (/e/).\n                            <br />\n                            Use port 8010 for full PostHog, proxied via Caddy.\n                        </>\n                    }\n                    placement=\"right\"\n                >\n                    <div className=\"flex items-center gap-2 w-fit px-2 h-8 border-l-4 border-brand-key\">\n                        <IconWarning className=\"text-lg\" />\n                        <Link\n                            to={window.location.href.replace(`:${window.location.port}`, ':8010')}\n                            className=\"font-semibold text-default underline min-w-0 flex-1 truncate\"\n                        >\n                            Click here to fix port!\n                        </Link>\n                    </div>\n                </Tooltip>\n            )}\n        </div>\n    )\n}\n", "import { LemonTag } from '@posthog/lemon-ui'\nimport clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { useFeatureFlag } from 'lib/hooks/useFeatureFlag'\nimport { LemonButton, LemonButtonProps } from 'lib/lemon-ui/LemonButton'\nimport { Tooltip } from 'lib/lemon-ui/Tooltip'\nimport React, { FunctionComponent, ReactElement, useState } from 'react'\nimport { sceneLogic } from 'scenes/sceneLogic'\n\nimport { breadcrumbsLogic } from '~/layout/navigation/Breadcrumbs/breadcrumbsLogic'\nimport { SidebarChangeNoticeContent, useSidebarChangeNotices } from '~/layout/navigation/SideBar/SidebarChangeNotice'\n\nimport { navigation3000Logic } from '../navigationLogic'\nimport { NavbarItem } from '../types'\n\nexport interface NavbarButtonProps extends Pick<LemonButtonProps, 'onClick' | 'icon' | 'sideIcon' | 'to' | 'active'> {\n    identifier: string\n    icon: ReactElement\n    title?: string | ReactElement\n    shortTitle?: string\n    forceTooltipOnHover?: boolean\n    tag?: 'alpha' | 'beta' | 'new'\n    sideAction?: NavbarItem['sideAction']\n}\n\nexport const NavbarButton: FunctionComponent<NavbarButtonProps> = React.forwardRef<\n    HTMLButtonElement,\n    NavbarButtonProps\n>(({ identifier, shortTitle, title, forceTooltipOnHover, tag, onClick, sideAction, ...rest }, ref): JSX.Element => {\n    const { activeScene } = useValues(sceneLogic)\n    const { sceneBreadcrumbKeys } = useValues(breadcrumbsLogic)\n    const { hideNavOnMobile } = useActions(navigation3000Logic)\n    const { isNavCollapsed } = useValues(navigation3000Logic)\n    const isUsingNewNav = useFeatureFlag('POSTHOG_3000_NAV')\n\n    const [hasBeenClicked, setHasBeenClicked] = useState(false)\n\n    const here = activeScene === identifier || sceneBreadcrumbKeys.includes(identifier)\n    const isNavCollapsedActually = isNavCollapsed || isUsingNewNav\n\n    const buttonProps: LemonButtonProps = rest\n    if (!isUsingNewNav) {\n        buttonProps.active = here\n    }\n    let content: JSX.Element | string | undefined\n    if (!isNavCollapsedActually) {\n        content = shortTitle || title\n        if (tag) {\n            content = (\n                <>\n                    <span className=\"grow\">{content}</span>\n                    <LemonTag\n                        type={tag === 'alpha' ? 'completion' : tag === 'beta' ? 'warning' : 'success'}\n                        size=\"small\"\n                        className=\"ml-2\"\n                    >\n                        {tag.toUpperCase()}\n                    </LemonTag>\n                </>\n            )\n        }\n        if (sideAction) {\n            // @ts-expect-error - in this case we are perfectly okay with assigning a sideAction\n            buttonProps.sideAction = {\n                ...sideAction,\n                divider: true,\n                'data-attr': `menu-item-${sideAction.identifier.toLowerCase()}`,\n            }\n            buttonProps.sideIcon = null\n        }\n    } else {\n        buttonProps.sideIcon = null\n    }\n\n    const buttonContent = (\n        <LemonButton\n            ref={ref}\n            data-attr={`menu-item-${identifier.toString().toLowerCase()}`}\n            onMouseEnter={() => setHasBeenClicked(false)}\n            onClick={(e) => {\n                if (buttonProps.to) {\n                    hideNavOnMobile()\n                }\n                setHasBeenClicked(true)\n                onClick?.(e)\n            }}\n            className={clsx('NavbarButton', isUsingNewNav && here && 'NavbarButton--here')}\n            fullWidth\n            type=\"secondary\"\n            status=\"alt\"\n            {...buttonProps}\n        >\n            {content}\n        </LemonButton>\n    )\n\n    const [notices, onAcknowledged] = useSidebarChangeNotices({ identifier })\n\n    return (\n        <li className=\"w-full\">\n            {notices.length ? (\n                <Tooltip\n                    title={<SidebarChangeNoticeContent notices={notices} onAcknowledged={onAcknowledged} />}\n                    placement={notices[0].placement ?? 'right'}\n                    delayMs={0}\n                    visible={true}\n                >\n                    {buttonContent}\n                </Tooltip>\n            ) : (\n                <Tooltip\n                    title={\n                        forceTooltipOnHover || isNavCollapsedActually\n                            ? here\n                                ? `${title} (you are here)`\n                                : title\n                            : null\n                    }\n                    placement=\"right\"\n                    delayMs={0}\n                    visible={hasBeenClicked ? false : undefined} // Force-hide tooltip after button click\n                >\n                    {buttonContent}\n                </Tooltip>\n            )}\n        </li>\n    )\n})\nNavbarButton.displayName = 'NavbarButton'\n", "import { IconX } from '@posthog/icons'\nimport { LemonButton, LemonDivider, TooltipProps } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport posthog from 'posthog-js'\nimport React, { Fragment, useState } from 'react'\nimport { Scene } from 'scenes/sceneTypes'\n\ntype SidebarChangeNoticeProps = {\n    identifier: string | number\n}\n\n/**\n * Used in combination with a feature flag like:\n *\n * sidebar-notice-annotations-2023-10-30\n * matching:\n *   properties:\n *     sidebar_notice/annotations-2023-10-30: doesn't equal true\n *     joined_at: before 2023-10-30\n *\n */\n\nconst NOTICES: {\n    identifier: Scene\n    description: React.ReactNode\n    placement: TooltipProps['placement']\n    flagSuffix: string\n}[] = [\n    {\n        identifier: Scene.DataManagement,\n        description: (\n            <>\n                <b>Annotations</b> have moved here!\n                <br />\n                You can now find them in <b>Data Management</b>\n            </>\n        ),\n        placement: 'bottom-end',\n        flagSuffix: 'annotations-2023-10-30',\n    },\n    {\n        identifier: Scene.PersonsManagement,\n        description: (\n            <>\n                <b>Cohorts</b> have moved here!\n                <br />\n                You can now find them in <b>People</b>\n            </>\n        ),\n        placement: 'top-end',\n        flagSuffix: 'cohorts-2023-10-30',\n    },\n]\n\nexport function SidebarChangeNoticeContent({\n    notices,\n    onAcknowledged,\n}: {\n    notices: typeof NOTICES\n    onAcknowledged: () => void\n}): JSX.Element | null {\n    return (\n        <div className=\"flex items-center gap-1\" onClick={onAcknowledged}>\n            <div className=\"flex-1\">\n                {notices.map((notice, i) => (\n                    <Fragment key={i}>\n                        {notice.description}\n                        {i < notices.length - 1 && <LemonDivider />}\n                    </Fragment>\n                ))}\n            </div>\n\n            <LemonButton size=\"small\" onClick={onAcknowledged} icon={<IconX />} />\n        </div>\n    )\n}\n\nexport function useSidebarChangeNotices({ identifier }: SidebarChangeNoticeProps): [typeof NOTICES, () => void] {\n    const { featureFlags } = useValues(featureFlagLogic)\n    const [noticeAcknowledged, setNoticeAcknowledged] = useState(false)\n\n    const notices = NOTICES.filter((notice) => notice.identifier === identifier).filter(\n        (notice) => featureFlags[`sidebar-notice-${notice.flagSuffix}`]\n    )\n\n    const onAcknowledged = (): void => {\n        notices.forEach((change) => {\n            posthog.capture('sidebar notice acknowledged', {\n                change: change.flagSuffix,\n                $set: {\n                    [`sidebar_notice/${change.flagSuffix}`]: true,\n                },\n            })\n            setNoticeAcknowledged(true)\n        })\n    }\n\n    return [!noticeAcknowledged ? notices : [], onAcknowledged]\n}\n", "import { DndContext, useDraggable, useDroppable } from '@dnd-kit/core'\nimport { CSS } from '@dnd-kit/utilities'\nimport { IconUpload } from '@posthog/icons'\nimport { LemonButton, Spinner } from '@posthog/lemon-ui'\nimport clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { router } from 'kea-router'\nimport { Resizer } from 'lib/components/Resizer/Resizer'\nimport { ScrollableShadows } from 'lib/components/ScrollableShadows/ScrollableShadows'\nimport { More } from 'lib/lemon-ui/LemonButton/More'\nimport { LemonTree } from 'lib/lemon-ui/LemonTree/LemonTree'\nimport { ReactNode, useRef } from 'react'\n\nimport { themeLogic } from '~/layout/navigation-3000/themeLogic'\nimport { FileSystemEntry } from '~/queries/schema/schema-general'\n\nimport { navigation3000Logic } from '../../navigationLogic'\nimport { NavbarBottom } from '../NavbarBottom'\nimport { projectTreeLogic } from './projectTreeLogic'\n\n// TODO: Swap out for a better DnD approach\n// Currently you can only drag the title text, and must click on the icon or to the right of it to trigger a click\nfunction Draggable(props: { id: string; children: ReactNode }): JSX.Element {\n    const { attributes, listeners, setNodeRef, transform } = useDraggable({\n        id: props.id,\n    })\n    const style = {\n        transform: CSS.Translate.toString(transform),\n    }\n\n    return (\n        // eslint-disable-next-line react/forbid-dom-props\n        <div ref={setNodeRef} style={style} {...listeners} {...attributes}>\n            {props.children}\n        </div>\n    )\n}\nexport function Droppable(props: { id: string; children: ReactNode }): JSX.Element {\n    const { setNodeRef } = useDroppable({ id: props.id })\n\n    return <div ref={setNodeRef}>{props.children}</div>\n}\n\nexport function ProjectTree(): JSX.Element {\n    const { theme } = useValues(themeLogic)\n    const { isNavShown, mobileLayout } = useValues(navigation3000Logic)\n    const { toggleNavCollapsed, hideNavOnMobile } = useActions(navigation3000Logic)\n    const { treeData, viableItems, loadingPaths, unappliedPaths } = useValues(projectTreeLogic)\n    const { addFolder, deleteItem, moveItem } = useActions(projectTreeLogic)\n    const containerRef = useRef<HTMLDivElement | null>(null)\n\n    return (\n        <>\n            <nav className={clsx('Navbar3000', !isNavShown && 'Navbar3000--hidden')} ref={containerRef}>\n                <div\n                    className=\"Navbar3000__content w-80\"\n                    // eslint-disable-next-line react/forbid-dom-props\n                    style={theme?.sidebarStyle}\n                >\n                    <DndContext\n                        onDragEnd={({ active, over }) => {\n                            const oldPath = active.id as string\n                            const folder = over?.id\n                            if (folder === oldPath) {\n                                // We can't click on draggable items. If we drag to itself, assume it's a click\n                                // TODO: clicking on expandable folders does not work as we can't control\n                                // the open/closed state of the tree - only files work.\n                                const item = viableItems.find((i) => i.path === oldPath)\n                                if (item) {\n                                    if (item.href) {\n                                        router.actions.push(item.href)\n                                    }\n                                }\n                            } else if (folder === '') {\n                                const oldSplit = oldPath.split('/')\n                                const oldFile = oldSplit.pop()\n                                if (oldFile && oldSplit.length > 0) {\n                                    moveItem(oldPath, oldFile)\n                                }\n                            } else if (folder) {\n                                const item = viableItems.find((i) => i.path === folder)\n                                if (!item || item.type === 'folder') {\n                                    const oldSplit = oldPath.split('/')\n                                    const oldFile = oldSplit.pop()\n                                    const newFile = folder + '/' + oldFile\n                                    if (newFile !== oldPath) {\n                                        moveItem(oldPath, newFile)\n                                    }\n                                }\n                            }\n                        }}\n                    >\n                        <ScrollableShadows innerClassName=\"Navbar3000__top\" direction=\"vertical\">\n                            <LemonTree\n                                className=\"px-0 py-1\"\n                                data={treeData}\n                                renderItem={(item, children): JSX.Element => {\n                                    const path = item.record?.path || ''\n                                    const loading =\n                                        typeof item.record?.path === 'string' || item.record?.type === 'project' ? (\n                                            loadingPaths[path] ? (\n                                                <Spinner className=\"ml-1\" />\n                                            ) : unappliedPaths[path] ? (\n                                                <IconUpload className=\"ml-1 text-warning\" />\n                                            ) : undefined\n                                        ) : undefined\n                                    if (item.record?.type === 'project') {\n                                        return (\n                                            <Droppable id=\"\">\n                                                {children}\n                                                {loading}\n                                            </Droppable>\n                                        )\n                                    } else if (path) {\n                                        return (\n                                            <Droppable id={path}>\n                                                <Draggable id={path}>\n                                                    {children}\n                                                    {loading}\n                                                </Draggable>\n                                            </Droppable>\n                                        )\n                                    }\n                                    return (\n                                        <>\n                                            {children}\n                                            {loading}\n                                        </>\n                                    )\n                                }}\n                                right={({ record }) =>\n                                    record?.created_at || record?.type ? (\n                                        <More\n                                            size=\"xsmall\"\n                                            onClick={(e) => e.stopPropagation()}\n                                            overlay={\n                                                <>\n                                                    {record?.type === 'folder' || record?.type === 'project' ? (\n                                                        <LemonButton\n                                                            onClick={() => {\n                                                                const folder = prompt(\n                                                                    record.path\n                                                                        ? `Create a folder under \"${record.path}\":`\n                                                                        : 'Create a new folder:',\n                                                                    ''\n                                                                )\n                                                                if (folder) {\n                                                                    addFolder(\n                                                                        record.path\n                                                                            ? record.path + '/' + folder\n                                                                            : folder\n                                                                    )\n                                                                }\n                                                            }}\n                                                            fullWidth\n                                                        >\n                                                            New Folder\n                                                        </LemonButton>\n                                                    ) : null}\n                                                    {record.path ? (\n                                                        <LemonButton\n                                                            onClick={() => {\n                                                                const oldPath = record.path\n                                                                const folder = prompt('New name?', oldPath)\n                                                                if (folder) {\n                                                                    moveItem(oldPath, folder)\n                                                                }\n                                                            }}\n                                                            fullWidth\n                                                        >\n                                                            Rename\n                                                        </LemonButton>\n                                                    ) : null}\n                                                    {record.path ? (\n                                                        <LemonButton\n                                                            onClick={() => {\n                                                                void navigator.clipboard.writeText(record.path)\n                                                            }}\n                                                            fullWidth\n                                                        >\n                                                            Copy Path\n                                                        </LemonButton>\n                                                    ) : null}\n                                                    {record?.created_at ? (\n                                                        <LemonButton\n                                                            onClick={() => deleteItem(record as FileSystemEntry)}\n                                                            fullWidth\n                                                        >\n                                                            Delete\n                                                        </LemonButton>\n                                                    ) : null}\n                                                </>\n                                            }\n                                        />\n                                    ) : undefined\n                                }\n                            />\n                        </ScrollableShadows>\n                    </DndContext>\n                    <NavbarBottom />\n                </div>\n                {!mobileLayout && (\n                    <Resizer\n                        logicKey=\"navbar\"\n                        placement=\"right\"\n                        containerRef={containerRef}\n                        closeThreshold={100}\n                        onToggleClosed={(shouldBeClosed) => toggleNavCollapsed(shouldBeClosed)}\n                        onDoubleClick={() => toggleNavCollapsed()}\n                    />\n                )}\n            </nav>\n            {mobileLayout && (\n                <div\n                    className={clsx('Navbar3000__overlay', !isNavShown && 'Navbar3000--hidden')}\n                    onClick={() => hideNavOnMobile()}\n                />\n            )}\n        </>\n    )\n}\n", "import { IconChevronRight } from '@posthog/icons'\nimport * as AccordionPrimitive from '@radix-ui/react-accordion'\nimport { cn } from 'lib/utils/css-classes'\nimport { forwardRef, HTMLAttributes, useCallback, useRef, useState } from 'react'\n\nimport { LemonButton } from '../LemonButton'\n\nexport type TreeDataItem = {\n    /** The ID of the item. */\n    id: string\n    /** The name of the item. */\n    name: string\n    /** Passthrough metadata */\n    record?: Record<string, any>\n    /** Content to display to the right of the item. */\n    right?: React.ReactNode\n    /** The icon to use for the item. */\n    icon?: React.ReactNode\n    /** The children of the item. */\n    children?: TreeDataItem[]\n    /** Disabled: The reason the item is disabled. */\n    disabledReason?: string\n    /**\n     * Handle a click on the item.\n     * @param open - boolean to indicate if it's a folder and it's open state\n     */\n    onClick?: (open?: boolean) => void\n}\n\nexport type LemonTreeNodeProps = LemonTreeProps & {\n    /** The ID of the item. */\n    selectedId?: string\n    /** The ID of the focused item. */\n    focusedId?: string\n    /** Handle a click on the item. */\n    handleClick: (item: TreeDataItem | undefined) => void\n    /** The render function for the item. */\n    renderItem?: (item: TreeDataItem, children: React.ReactNode) => React.ReactNode\n    /** The IDs of the expanded items. */\n    expandedItemIds: string[]\n    /** Set the IDs of the expanded items. */\n    setExpandedItemIds: (ids: string[]) => void\n}\n\nconst LemonTreeNode = forwardRef<HTMLDivElement, LemonTreeNodeProps>(\n    (\n        {\n            className,\n            data,\n            selectedId,\n            focusedId,\n            handleClick,\n            renderItem,\n            expandedItemIds,\n            setExpandedItemIds,\n            defaultNodeIcon,\n            showFolderActiveState,\n            right,\n        },\n        ref\n    ): JSX.Element => {\n        const ICON_CLASSES = 'size-6 aspect-square flex place-items-center'\n\n        if (!(data instanceof Array)) {\n            data = [data]\n        }\n\n        // Get the node or folder icon\n        // If no icon is provided, use a defaultNodeIcon icon\n        // If no defaultNodeIcon icon is provided, use empty div\n        function getIcon(item: TreeDataItem, expandedItemIds: string[]): JSX.Element {\n            if (item.children) {\n                return (\n                    <span className={ICON_CLASSES}>\n                        <IconChevronRight\n                            className={cn(\n                                'transition-transform scale-75 stroke-2',\n                                expandedItemIds.includes(item.id) ? 'rotate-90' : ''\n                            )}\n                        />\n                    </span>\n                )\n            }\n\n            return (\n                <span\n                    className={cn(ICON_CLASSES, {\n                        'text-secondary': item.disabledReason,\n                    })}\n                >\n                    {item.icon || defaultNodeIcon || <div className={ICON_CLASSES} />}\n                </span>\n            )\n        }\n\n        return (\n            <ul className={cn('list-none m-0 p-0', className)} role=\"group\">\n                {data.map((item) => (\n                    <AccordionPrimitive.Root\n                        type=\"multiple\"\n                        value={expandedItemIds}\n                        onValueChange={(s) => setExpandedItemIds(s)}\n                        ref={ref}\n                        key={item.id}\n                        disabled={!!item.disabledReason}\n                    >\n                        <AccordionPrimitive.Item value={item.id} className=\"flex flex-col w-full\">\n                            <AccordionPrimitive.Trigger className=\"flex items-center gap-2 w-full h-8\" asChild>\n                                <LemonButton\n                                    className={cn('flex-1 flex items-center gap-2 cursor-pointer pl-0 font-normal')}\n                                    onClick={() => handleClick(item)}\n                                    type={selectedId === item.id ? 'secondary' : 'tertiary'}\n                                    role=\"treeitem\"\n                                    tabIndex={-1}\n                                    size=\"small\"\n                                    fullWidth\n                                    active={\n                                        focusedId === item.id ||\n                                        selectedId === item.id ||\n                                        (showFolderActiveState && item.children && expandedItemIds.includes(item.id))\n                                    }\n                                    icon={getIcon(item, expandedItemIds)}\n                                    disabledReason={item.disabledReason}\n                                    tooltipPlacement=\"right\"\n                                >\n                                    <span\n                                        className={cn('', {\n                                            'font-semibold': selectedId === item.id,\n                                            'text-secondary': item.disabledReason,\n                                        })}\n                                    >\n                                        {renderItem ? renderItem(item, item.name) : item.name}\n                                    </span>\n                                    {item.right || right ? (\n                                        <span className=\"ml-auto pl-1\">{item.right || right?.(item)}</span>\n                                    ) : null}\n                                </LemonButton>\n                            </AccordionPrimitive.Trigger>\n\n                            {item.children && (\n                                <AccordionPrimitive.Content>\n                                    <LemonTreeNode\n                                        data={item.children}\n                                        selectedId={selectedId}\n                                        focusedId={focusedId}\n                                        handleClick={handleClick}\n                                        expandedItemIds={expandedItemIds}\n                                        setExpandedItemIds={setExpandedItemIds}\n                                        defaultNodeIcon={defaultNodeIcon}\n                                        showFolderActiveState={showFolderActiveState}\n                                        right={right}\n                                        renderItem={renderItem}\n                                        className=\"ml-4 space-y-px\"\n                                    />\n                                </AccordionPrimitive.Content>\n                            )}\n                        </AccordionPrimitive.Item>\n                    </AccordionPrimitive.Root>\n                ))}\n            </ul>\n        )\n    }\n)\nLemonTreeNode.displayName = 'LemonTreeNode'\n\nexport type LemonTreeProps = HTMLAttributes<HTMLDivElement> & {\n    /** The data to render in the tree. */\n    data: TreeDataItem[] | TreeDataItem\n    /** The ID of the folder/node to select by default. Will expand the node if it has children. */\n    defaultSelectedFolderOrNodeId?: string\n    /** Whether to expand all folders by default. Defaults to false. Disabled folders will not be expanded. */\n    expandAllFolders?: boolean\n    /** The icon to use for node items. Defaults to <IconChevronRight />. */\n    defaultNodeIcon?: React.ReactNode\n    /** Whether to show an active state on folder nodes when selected. Defaults to false. */\n    showFolderActiveState?: boolean\n    /** The render function for the item. */\n    renderItem?: (item: TreeDataItem, children: React.ReactNode) => React.ReactNode\n    /** handler for folder clicks.\n     * @param folder - the folder that was clicked\n     */\n    onFolderClick?: (folder: TreeDataItem | undefined) => void\n    /** handler for node clicks.\n     * @param node - the node that was clicked\n     */\n    onNodeClick?: (node: TreeDataItem | undefined) => void\n    right?: (item: TreeDataItem) => React.ReactNode\n\n    /** The ref of the content to focus when the tree is clicked. TODO: make non-optional. */\n    contentRef?: React.RefObject<HTMLDivElement>\n}\n\nconst LemonTree = forwardRef<HTMLDivElement, LemonTreeProps>(\n    (\n        {\n            data,\n            defaultSelectedFolderOrNodeId,\n            onFolderClick,\n            onNodeClick,\n            expandAllFolders = false,\n            defaultNodeIcon,\n            className,\n            showFolderActiveState = false,\n            contentRef,\n            right,\n            ...props\n        },\n        ref\n    ): JSX.Element => {\n        const TYPE_AHEAD_TIMEOUT = 500\n\n        const [selectedId, setSelectedId] = useState<string | undefined>(defaultSelectedFolderOrNodeId)\n        const [focusedId, setFocusedId] = useState<string | undefined>(defaultSelectedFolderOrNodeId)\n        // Add new state for type-ahead\n        const [typeAheadBuffer, setTypeAheadBuffer] = useState<string>('')\n        const typeAheadTimeoutRef = useRef<NodeJS.Timeout>()\n\n        function collectAllIds(items: TreeDataItem[] | TreeDataItem, allIds: string[]): void {\n            if (items instanceof Array) {\n                items.forEach((item) => {\n                    if (!item.disabledReason) {\n                        allIds.push(item.id)\n                    }\n                    if (item.children) {\n                        collectAllIds(item.children, allIds)\n                    }\n                })\n            } else {\n                if (!items.disabledReason) {\n                    allIds.push(items.id)\n                }\n                if (items.children) {\n                    collectAllIds(items.children, allIds)\n                }\n            }\n        }\n\n        const [expandedItemIds, setExpandedItemIds] = useState<string[]>((): string[] => {\n            if (expandAllFolders) {\n                // If expandAll is true, collect all item IDs\n                const allIds: string[] = []\n                collectAllIds(data, allIds)\n                return allIds\n            }\n\n            if (!defaultSelectedFolderOrNodeId) {\n                return []\n            }\n\n            // If not expandAll, only expand path to selected item\n            const ids: string[] = []\n            function walkTreeItems(items: TreeDataItem[] | TreeDataItem, targetId: string): boolean {\n                if (items instanceof Array) {\n                    for (const item of items) {\n                        ids.push(item.id)\n                        if (walkTreeItems(item, targetId)) {\n                            return true\n                        }\n                        ids.pop()\n                    }\n                } else if (items.id === targetId) {\n                    return true\n                } else if (items.children) {\n                    return walkTreeItems(items.children, targetId)\n                }\n                return false\n            }\n            walkTreeItems(data, defaultSelectedFolderOrNodeId)\n            return ids\n        })\n\n        // Flatten visible tree items for keyboard navigation\n        const getVisibleItems = useCallback((): TreeDataItem[] => {\n            const items: TreeDataItem[] = []\n\n            const traverse = (nodes: TreeDataItem[] | TreeDataItem): void => {\n                const nodeArray = nodes instanceof Array ? nodes : [nodes]\n\n                nodeArray.forEach((node) => {\n                    items.push(node)\n                    if (node.children && expandedItemIds.includes(node.id)) {\n                        traverse(node.children)\n                    }\n                })\n            }\n\n            traverse(data)\n            return items\n        }, [data, expandedItemIds])\n\n        // Focus on provided content ref\n        const focusContent = useCallback(() => {\n            if (contentRef?.current) {\n                contentRef.current.focus()\n                setFocusedId(undefined) // Remove focus from tree when moving to content\n            }\n        }, [contentRef])\n\n        // Add helper function to find path to an item\n        const findPathToItem = (items: TreeDataItem[], targetId: string, path: string[] = []): string[] => {\n            for (const item of items) {\n                if (item.id === targetId) {\n                    return path\n                }\n                if (item.children) {\n                    const newPath = findPathToItem(item.children, targetId, [...path, item.id])\n                    if (newPath.length > 0) {\n                        return newPath\n                    }\n                }\n            }\n            return []\n        }\n\n        // Add function to handle type-ahead search\n        const handleTypeAhead = useCallback(\n            (char: string) => {\n                // Clear existing timeout\n                if (typeAheadTimeoutRef.current) {\n                    clearTimeout(typeAheadTimeoutRef.current)\n                }\n\n                // Update buffer with new character\n                const newBuffer = typeAheadBuffer + char.toLowerCase()\n                setTypeAheadBuffer(newBuffer)\n\n                // Set timeout to clear buffer after 1.5 seconds\n                typeAheadTimeoutRef.current = setTimeout(() => {\n                    setTypeAheadBuffer('')\n                }, TYPE_AHEAD_TIMEOUT)\n\n                // Find matching item\n                const visibleItems = getVisibleItems()\n                const currentIndex = visibleItems.findIndex((item) => item.id === focusedId)\n\n                // Start search from item after current focus, wrapping to start if needed\n                const searchItems = [\n                    ...visibleItems.slice(currentIndex + 1),\n                    ...visibleItems.slice(0, currentIndex + 1),\n                ]\n\n                const match = searchItems.find((item) => item.name.toLowerCase().startsWith(newBuffer))\n\n                if (match) {\n                    setFocusedId(match.id)\n                    // If item is in a collapsed folder, expand the path to it\n                    const path = findPathToItem(Array.isArray(data) ? data : [data], match.id)\n                    if (path.length > 0) {\n                        setExpandedItemIds([...new Set([...expandedItemIds, ...path])])\n                    }\n                }\n            },\n            [typeAheadBuffer, focusedId, getVisibleItems, data, expandedItemIds, findPathToItem]\n        )\n\n        const handleClick = useCallback(\n            (item: TreeDataItem | undefined): void => {\n                // Update focusedId when clicking\n                setFocusedId(item?.id)\n\n                // Handle click on a node\n                if (!item?.children) {\n                    if (onNodeClick) {\n                        setSelectedId(item?.id)\n                        onNodeClick(item)\n                        focusContent() // Add focus content here as well\n                    }\n                } else if (onFolderClick) {\n                    // Handle click on a folder\n                    onFolderClick(item)\n                }\n                if (item?.onClick) {\n                    // Handle custom click handler for a folder/ node, pass true if it's a folder and it's not open (yet)\n                    const willBeOpen = item?.children ? !expandedItemIds.includes(item.id) : undefined\n                    item.onClick(willBeOpen)\n                }\n            },\n            [expandedItemIds, onFolderClick, onNodeClick, focusContent]\n        )\n\n        // Update handleKeyDown to include type-ahead\n        const handleKeyDown = useCallback(\n            (e: React.KeyboardEvent) => {\n                // Handle single printable characters for type-ahead\n                if (e.key.length === 1 && !e.ctrlKey && !e.altKey && !e.metaKey) {\n                    handleTypeAhead(e.key)\n                    return\n                }\n\n                const visibleItems = getVisibleItems()\n                const currentIndex = visibleItems.findIndex((item) => item.id === focusedId)\n\n                // Handle keyboard navigation\n                // Following https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\n                switch (e.key) {\n                    // Right arrow:\n                    // When focus is on a closed node, opens the node; focus does not move.\n                    // When focus is on a open node, moves focus to the first child node.\n                    // When focus is on an end node, does nothing.\n                    case 'ArrowRight': {\n                        e.preventDefault()\n                        const currentItem = visibleItems[currentIndex]\n                        // Expand folder if current item is an unexpanded, non-disabled folder\n                        if (currentItem?.children && !currentItem.disabledReason) {\n                            // If folder is not expanded, expand it\n                            if (!expandedItemIds.includes(currentItem.id)) {\n                                setExpandedItemIds([...expandedItemIds, currentItem.id])\n                            } else {\n                                // If folder is already expanded, focus first child\n                                const nextItem = visibleItems[currentIndex + 1]\n                                if (nextItem) {\n                                    setFocusedId(nextItem.id)\n                                    setSelectedId(undefined)\n                                }\n                            }\n                        }\n                        break\n                    }\n\n                    // Left arrow:\n                    // When focus is on an open node, closes the node.\n                    // When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.\n                    // When focus is on a root node that is also either an end node or a closed node, does nothing.\n                    case 'ArrowLeft': {\n                        e.preventDefault()\n                        const currentItem = visibleItems[currentIndex]\n\n                        if (currentItem?.children && expandedItemIds.includes(currentItem.id)) {\n                            // If current item is an expanded folder, collapse it\n                            setExpandedItemIds(expandedItemIds.filter((id) => id !== currentItem.id))\n                            setFocusedId(currentItem.id)\n                        } else {\n                            // Otherwise find and focus parent folder\n                            const findParent = (items: TreeDataItem[], targetId: string): TreeDataItem | null => {\n                                for (const item of items) {\n                                    if (item.children?.some((child) => child.id === targetId)) {\n                                        return item\n                                    }\n                                    if (item.children) {\n                                        const found = findParent(item.children, targetId)\n                                        if (found) {\n                                            return found\n                                        }\n                                    }\n                                }\n                                return null\n                            }\n                            const parentItem = findParent(Array.isArray(data) ? data : [data], currentItem.id)\n                            if (parentItem) {\n                                setFocusedId(parentItem.id)\n                            }\n                        }\n                        break\n                    }\n\n                    // Down Arrow:\n                    // Moves focus to the next node that is focusable without opening or closing a node.\n                    case 'ArrowDown': {\n                        e.preventDefault()\n                        if (currentIndex === -1) {\n                            // If no item is focused, focus the first item\n                            if (visibleItems.length > 0) {\n                                setFocusedId(visibleItems[0].id)\n                                setSelectedId(undefined)\n                            }\n                        } else if (currentIndex < visibleItems.length - 1) {\n                            setFocusedId(visibleItems[currentIndex + 1].id)\n                            setSelectedId(undefined)\n                        }\n                        break\n                    }\n\n                    // Up Arrow:\n                    // Moves focus to the previous node that is focusable without opening or closing a node.\n                    case 'ArrowUp': {\n                        e.preventDefault()\n                        if (currentIndex === -1) {\n                            // If no item is focused, focus the first item\n                            if (visibleItems.length > 0) {\n                                setFocusedId(visibleItems[0].id)\n                                setSelectedId(undefined)\n                            }\n                        } else if (currentIndex > 0) {\n                            // Otherwise move focus to previous item\n                            setFocusedId(visibleItems[currentIndex - 1].id)\n                            setSelectedId(undefined)\n                        }\n                        break\n                    }\n\n                    // Home:\n                    // Moves focus to the first node in the tree that is focusable without opening a node.\n                    case 'Home': {\n                        e.preventDefault()\n                        const visibleItems = getVisibleItems()\n                        if (visibleItems.length > 0) {\n                            setFocusedId(visibleItems[0].id)\n                        }\n                        break\n                    }\n\n                    // End:\n                    // Moves focus to the last node in the tree that is focusable without opening a node.\n                    case 'End': {\n                        e.preventDefault()\n                        const visibleItems = getVisibleItems()\n                        if (visibleItems.length > 0) {\n                            setFocusedId(visibleItems[visibleItems.length - 1].id)\n                        }\n                        break\n                    }\n\n                    // Enter:\n                    // Activates the current item.\n                    case 'Enter': {\n                        e.preventDefault()\n                        const currentItem = visibleItems[currentIndex]\n\n                        // Skip if item is disabled\n                        if (!currentItem.disabledReason) {\n                            if (currentItem.children) {\n                                // Handle folder click\n                                handleClick(currentItem)\n\n                                // Toggle folder expanded state\n                                if (expandedItemIds.includes(currentItem.id)) {\n                                    // Close folder by removing from expanded IDs\n                                    setExpandedItemIds(expandedItemIds.filter((id) => id !== currentItem.id))\n                                } else {\n                                    // Open folder by adding to expanded IDs\n                                    setExpandedItemIds([...expandedItemIds, currentItem.id])\n                                }\n                            } else {\n                                if (onNodeClick) {\n                                    // Otherwise use default node click handler\n                                    onNodeClick(currentItem)\n\n                                    // Set selectedId to currentItem.id\n                                    setSelectedId(currentItem.id)\n\n                                    if (currentItem.onClick) {\n                                        // Use item's custom click handler if provided\n                                        currentItem.onClick()\n                                    }\n\n                                    focusContent() // Use the new focusContent function\n                                }\n                            }\n                        }\n                        break\n                    }\n                }\n            },\n            [\n                focusedId,\n                expandedItemIds,\n                getVisibleItems,\n                handleTypeAhead,\n                data,\n                focusContent,\n                handleClick,\n                onNodeClick,\n                onFolderClick,\n            ]\n        )\n\n        return (\n            <div\n                className={cn('overflow-hidden relative p-2', className)}\n                tabIndex={0}\n                role=\"tree\"\n                aria-label=\"Tree navigation\"\n                onKeyDown={handleKeyDown}\n                onBlur={() => setFocusedId(undefined)}\n            >\n                <LemonTreeNode\n                    data={data}\n                    ref={ref}\n                    selectedId={selectedId}\n                    focusedId={focusedId}\n                    handleClick={handleClick}\n                    expandedItemIds={expandedItemIds}\n                    setExpandedItemIds={setExpandedItemIds}\n                    defaultNodeIcon={defaultNodeIcon}\n                    showFolderActiveState={showFolderActiveState}\n                    right={right}\n                    className=\"space-y-px\"\n                    {...props}\n                />\n            </div>\n        )\n    }\n)\nLemonTree.displayName = 'LemonTree'\n\nexport { LemonTree }\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as CollapsiblePrimitive from '@radix-ui/react-collapsible';\nimport { createCollapsibleScope } from '@radix-ui/react-collapsible';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACCORDION_NAME = 'Accordion';\nconst ACCORDION_KEYS = ['Home', 'End', 'ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'];\n\nconst [Collection, useCollection, createCollectionScope] =\n  createCollection<AccordionTriggerElement>(ACCORDION_NAME);\n\ntype ScopedProps<P> = P & { __scopeAccordion?: Scope };\nconst [createAccordionContext, createAccordionScope] = createContextScope(ACCORDION_NAME, [\n  createCollectionScope,\n  createCollapsibleScope,\n]);\nconst useCollapsibleScope = createCollapsibleScope();\n\ntype AccordionElement = AccordionImplMultipleElement | AccordionImplSingleElement;\ninterface AccordionSingleProps extends AccordionImplSingleProps {\n  type: 'single';\n}\ninterface AccordionMultipleProps extends AccordionImplMultipleProps {\n  type: 'multiple';\n}\n\nconst Accordion = React.forwardRef<AccordionElement, AccordionSingleProps | AccordionMultipleProps>(\n  (props: ScopedProps<AccordionSingleProps | AccordionMultipleProps>, forwardedRef) => {\n    const { type, ...accordionProps } = props;\n    const singleProps = accordionProps as AccordionImplSingleProps;\n    const multipleProps = accordionProps as AccordionImplMultipleProps;\n    return (\n      <Collection.Provider scope={props.__scopeAccordion}>\n        {type === 'multiple' ? (\n          <AccordionImplMultiple {...multipleProps} ref={forwardedRef} />\n        ) : (\n          <AccordionImplSingle {...singleProps} ref={forwardedRef} />\n        )}\n      </Collection.Provider>\n    );\n  }\n);\n\nAccordion.displayName = ACCORDION_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionValueContextValue = {\n  value: string[];\n  onItemOpen(value: string): void;\n  onItemClose(value: string): void;\n};\n\nconst [AccordionValueProvider, useAccordionValueContext] =\n  createAccordionContext<AccordionValueContextValue>(ACCORDION_NAME);\n\nconst [AccordionCollapsibleProvider, useAccordionCollapsibleContext] = createAccordionContext(\n  ACCORDION_NAME,\n  { collapsible: false }\n);\n\ntype AccordionImplSingleElement = AccordionImplElement;\ninterface AccordionImplSingleProps extends AccordionImplProps {\n  /**\n   * The controlled stateful value of the accordion item whose content is expanded.\n   */\n  value?: string;\n  /**\n   * The value of the item whose content is expanded when the accordion is initially rendered. Use\n   * `defaultValue` if you do not need to control the state of an accordion.\n   */\n  defaultValue?: string;\n  /**\n   * The callback that fires when the state of the accordion changes.\n   */\n  onValueChange?(value: string): void;\n  /**\n   * Whether an accordion item can be collapsed after it has been opened.\n   * @default false\n   */\n  collapsible?: boolean;\n}\n\nconst AccordionImplSingle = React.forwardRef<AccordionImplSingleElement, AccordionImplSingleProps>(\n  (props: ScopedProps<AccordionImplSingleProps>, forwardedRef) => {\n    const {\n      value: valueProp,\n      defaultValue,\n      onValueChange = () => {},\n      collapsible = false,\n      ...accordionSingleProps\n    } = props;\n\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue,\n      onChange: onValueChange,\n    });\n\n    return (\n      <AccordionValueProvider\n        scope={props.__scopeAccordion}\n        value={value ? [value] : []}\n        onItemOpen={setValue}\n        onItemClose={React.useCallback(() => collapsible && setValue(''), [collapsible, setValue])}\n      >\n        <AccordionCollapsibleProvider scope={props.__scopeAccordion} collapsible={collapsible}>\n          <AccordionImpl {...accordionSingleProps} ref={forwardedRef} />\n        </AccordionCollapsibleProvider>\n      </AccordionValueProvider>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionImplMultipleElement = AccordionImplElement;\ninterface AccordionImplMultipleProps extends AccordionImplProps {\n  /**\n   * The controlled stateful value of the accordion items whose contents are expanded.\n   */\n  value?: string[];\n  /**\n   * The value of the items whose contents are expanded when the accordion is initially rendered. Use\n   * `defaultValue` if you do not need to control the state of an accordion.\n   */\n  defaultValue?: string[];\n  /**\n   * The callback that fires when the state of the accordion changes.\n   */\n  onValueChange?(value: string[]): void;\n}\n\nconst AccordionImplMultiple = React.forwardRef<\n  AccordionImplMultipleElement,\n  AccordionImplMultipleProps\n>((props: ScopedProps<AccordionImplMultipleProps>, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {},\n    ...accordionMultipleProps\n  } = props;\n\n  const [value = [], setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n  });\n\n  const handleItemOpen = React.useCallback(\n    (itemValue: string) => setValue((prevValue = []) => [...prevValue, itemValue]),\n    [setValue]\n  );\n\n  const handleItemClose = React.useCallback(\n    (itemValue: string) =>\n      setValue((prevValue = []) => prevValue.filter((value) => value !== itemValue)),\n    [setValue]\n  );\n\n  return (\n    <AccordionValueProvider\n      scope={props.__scopeAccordion}\n      value={value}\n      onItemOpen={handleItemOpen}\n      onItemClose={handleItemClose}\n    >\n      <AccordionCollapsibleProvider scope={props.__scopeAccordion} collapsible={true}>\n        <AccordionImpl {...accordionMultipleProps} ref={forwardedRef} />\n      </AccordionCollapsibleProvider>\n    </AccordionValueProvider>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionImplContextValue = {\n  disabled?: boolean;\n  direction: AccordionImplProps['dir'];\n  orientation: AccordionImplProps['orientation'];\n};\n\nconst [AccordionImplProvider, useAccordionContext] =\n  createAccordionContext<AccordionImplContextValue>(ACCORDION_NAME);\n\ntype AccordionImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface AccordionImplProps extends PrimitiveDivProps {\n  /**\n   * Whether or not an accordion is disabled from user interaction.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean;\n  /**\n   * The layout in which the Accordion operates.\n   * @default vertical\n   */\n  orientation?: React.AriaAttributes['aria-orientation'];\n  /**\n   * The language read direction.\n   */\n  dir?: Direction;\n}\n\nconst AccordionImpl = React.forwardRef<AccordionImplElement, AccordionImplProps>(\n  (props: ScopedProps<AccordionImplProps>, forwardedRef) => {\n    const { __scopeAccordion, disabled, dir, orientation = 'vertical', ...accordionProps } = props;\n    const accordionRef = React.useRef<AccordionImplElement>(null);\n    const composedRefs = useComposedRefs(accordionRef, forwardedRef);\n    const getItems = useCollection(__scopeAccordion);\n    const direction = useDirection(dir);\n    const isDirectionLTR = direction === 'ltr';\n\n    const handleKeyDown = composeEventHandlers(props.onKeyDown, (event) => {\n      if (!ACCORDION_KEYS.includes(event.key)) return;\n      const target = event.target as HTMLElement;\n      const triggerCollection = getItems().filter((item) => !item.ref.current?.disabled);\n      const triggerIndex = triggerCollection.findIndex((item) => item.ref.current === target);\n      const triggerCount = triggerCollection.length;\n\n      if (triggerIndex === -1) return;\n\n      // Prevents page scroll while user is navigating\n      event.preventDefault();\n\n      let nextIndex = triggerIndex;\n      const homeIndex = 0;\n      const endIndex = triggerCount - 1;\n\n      const moveNext = () => {\n        nextIndex = triggerIndex + 1;\n        if (nextIndex > endIndex) {\n          nextIndex = homeIndex;\n        }\n      };\n\n      const movePrev = () => {\n        nextIndex = triggerIndex - 1;\n        if (nextIndex < homeIndex) {\n          nextIndex = endIndex;\n        }\n      };\n\n      switch (event.key) {\n        case 'Home':\n          nextIndex = homeIndex;\n          break;\n        case 'End':\n          nextIndex = endIndex;\n          break;\n        case 'ArrowRight':\n          if (orientation === 'horizontal') {\n            if (isDirectionLTR) {\n              moveNext();\n            } else {\n              movePrev();\n            }\n          }\n          break;\n        case 'ArrowDown':\n          if (orientation === 'vertical') {\n            moveNext();\n          }\n          break;\n        case 'ArrowLeft':\n          if (orientation === 'horizontal') {\n            if (isDirectionLTR) {\n              movePrev();\n            } else {\n              moveNext();\n            }\n          }\n          break;\n        case 'ArrowUp':\n          if (orientation === 'vertical') {\n            movePrev();\n          }\n          break;\n      }\n\n      const clampedIndex = nextIndex % triggerCount;\n      triggerCollection[clampedIndex].ref.current?.focus();\n    });\n\n    return (\n      <AccordionImplProvider\n        scope={__scopeAccordion}\n        disabled={disabled}\n        direction={dir}\n        orientation={orientation}\n      >\n        <Collection.Slot scope={__scopeAccordion}>\n          <Primitive.div\n            {...accordionProps}\n            data-orientation={orientation}\n            ref={composedRefs}\n            onKeyDown={disabled ? undefined : handleKeyDown}\n          />\n        </Collection.Slot>\n      </AccordionImplProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'AccordionItem';\n\ntype AccordionItemContextValue = { open?: boolean; disabled?: boolean; triggerId: string };\nconst [AccordionItemProvider, useAccordionItemContext] =\n  createAccordionContext<AccordionItemContextValue>(ITEM_NAME);\n\ntype AccordionItemElement = React.ElementRef<typeof CollapsiblePrimitive.Root>;\ntype CollapsibleProps = React.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Root>;\ninterface AccordionItemProps\n  extends Omit<CollapsibleProps, 'open' | 'defaultOpen' | 'onOpenChange'> {\n  /**\n   * Whether or not an accordion item is disabled from user interaction.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean;\n  /**\n   * A string value for the accordion item. All items within an accordion should use a unique value.\n   */\n  value: string;\n}\n\n/**\n * `AccordionItem` contains all of the parts of a collapsible section inside of an `Accordion`.\n */\nconst AccordionItem = React.forwardRef<AccordionItemElement, AccordionItemProps>(\n  (props: ScopedProps<AccordionItemProps>, forwardedRef) => {\n    const { __scopeAccordion, value, ...accordionItemProps } = props;\n    const accordionContext = useAccordionContext(ITEM_NAME, __scopeAccordion);\n    const valueContext = useAccordionValueContext(ITEM_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    const triggerId = useId();\n    const open = (value && valueContext.value.includes(value)) || false;\n    const disabled = accordionContext.disabled || props.disabled;\n\n    return (\n      <AccordionItemProvider\n        scope={__scopeAccordion}\n        open={open}\n        disabled={disabled}\n        triggerId={triggerId}\n      >\n        <CollapsiblePrimitive.Root\n          data-orientation={accordionContext.orientation}\n          data-state={getState(open)}\n          {...collapsibleScope}\n          {...accordionItemProps}\n          ref={forwardedRef}\n          disabled={disabled}\n          open={open}\n          onOpenChange={(open) => {\n            if (open) {\n              valueContext.onItemOpen(value);\n            } else {\n              valueContext.onItemClose(value);\n            }\n          }}\n        />\n      </AccordionItemProvider>\n    );\n  }\n);\n\nAccordionItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionHeader\n * -----------------------------------------------------------------------------------------------*/\n\nconst HEADER_NAME = 'AccordionHeader';\n\ntype AccordionHeaderElement = React.ElementRef<typeof Primitive.h3>;\ntype PrimitiveHeading3Props = React.ComponentPropsWithoutRef<typeof Primitive.h3>;\ninterface AccordionHeaderProps extends PrimitiveHeading3Props {}\n\n/**\n * `AccordionHeader` contains the content for the parts of an `AccordionItem` that will be visible\n * whether or not its content is collapsed.\n */\nconst AccordionHeader = React.forwardRef<AccordionHeaderElement, AccordionHeaderProps>(\n  (props: ScopedProps<AccordionHeaderProps>, forwardedRef) => {\n    const { __scopeAccordion, ...headerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(HEADER_NAME, __scopeAccordion);\n    return (\n      <Primitive.h3\n        data-orientation={accordionContext.orientation}\n        data-state={getState(itemContext.open)}\n        data-disabled={itemContext.disabled ? '' : undefined}\n        {...headerProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nAccordionHeader.displayName = HEADER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'AccordionTrigger';\n\ntype AccordionTriggerElement = React.ElementRef<typeof CollapsiblePrimitive.Trigger>;\ntype CollapsibleTriggerProps = React.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Trigger>;\ninterface AccordionTriggerProps extends CollapsibleTriggerProps {}\n\n/**\n * `AccordionTrigger` is the trigger that toggles the collapsed state of an `AccordionItem`. It\n * should always be nested inside of an `AccordionHeader`.\n */\nconst AccordionTrigger = React.forwardRef<AccordionTriggerElement, AccordionTriggerProps>(\n  (props: ScopedProps<AccordionTriggerProps>, forwardedRef) => {\n    const { __scopeAccordion, ...triggerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleContext = useAccordionCollapsibleContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return (\n      <Collection.ItemSlot scope={__scopeAccordion}>\n        <CollapsiblePrimitive.Trigger\n          aria-disabled={(itemContext.open && !collapsibleContext.collapsible) || undefined}\n          data-orientation={accordionContext.orientation}\n          id={itemContext.triggerId}\n          {...collapsibleScope}\n          {...triggerProps}\n          ref={forwardedRef}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nAccordionTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'AccordionContent';\n\ntype AccordionContentElement = React.ElementRef<typeof CollapsiblePrimitive.Content>;\ntype CollapsibleContentProps = React.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Content>;\ninterface AccordionContentProps extends CollapsibleContentProps {}\n\n/**\n * `AccordionContent` contains the collapsible content for an `AccordionItem`.\n */\nconst AccordionContent = React.forwardRef<AccordionContentElement, AccordionContentProps>(\n  (props: ScopedProps<AccordionContentProps>, forwardedRef) => {\n    const { __scopeAccordion, ...contentProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(CONTENT_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return (\n      <CollapsiblePrimitive.Content\n        role=\"region\"\n        aria-labelledby={itemContext.triggerId}\n        data-orientation={accordionContext.orientation}\n        {...collapsibleScope}\n        {...contentProps}\n        ref={forwardedRef}\n        style={{\n          ['--radix-accordion-content-height' as any]: 'var(--radix-collapsible-content-height)',\n          ['--radix-accordion-content-width' as any]: 'var(--radix-collapsible-content-width)',\n          ...props.style,\n        }}\n      />\n    );\n  }\n);\n\nAccordionContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Accordion;\nconst Item = AccordionItem;\nconst Header = AccordionHeader;\nconst Trigger = AccordionTrigger;\nconst Content = AccordionContent;\n\nexport {\n  createAccordionScope,\n  //\n  Accordion,\n  AccordionItem,\n  AccordionHeader,\n  AccordionTrigger,\n  AccordionContent,\n  //\n  Root,\n  Item,\n  Header,\n  Trigger,\n  Content,\n};\nexport type {\n  AccordionSingleProps,\n  AccordionMultipleProps,\n  AccordionItemProps,\n  AccordionHeaderProps,\n  AccordionTriggerProps,\n  AccordionContentProps,\n};\n", "import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  const Provider: React.FC<ContextValueType & { children: React.ReactNode }> = (props) => {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  };\n\n  Provider.displayName = rootComponentName + 'Provider';\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    const Provider: React.FC<\n      ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    > = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    };\n\n    Provider.displayName = rootComponentName + 'Provider';\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Slot } from '@radix-ui/react-slot';\n\ntype SlotProps = React.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>\u2026</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement | null>;\n    itemMap: Map<\n      React.RefObject<ItemElement | null>,\n      { ref: React.RefObject<ItemElement | null> } & ItemData\n    >;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <Slot ref={composedRefs}>{children}</Slot>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </Slot>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n", "import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    return ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    ref.current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == 'function') {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n\n    // React <19 will log an error to the console if a callback ref returns a\n    // value. We don't use ref cleanups internally so this will only happen if a\n    // user's ref callback returns a value, which we only expect if they are\n    // using the cleanup functionality added in React 19.\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == 'function') {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n", "import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props as { children: React.ReactNode }).children\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props as AnyProps),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef,\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(\n  child: React.ReactNode\n): child is React.ReactElement<React.ComponentProps<typeof Slottable>, typeof Slottable> {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element.props as { ref?: React.Ref<unknown> }).ref;\n  }\n\n  // Not DEV\n  return (element.props as { ref?: React.Ref<unknown> }).ref || (element as any).ref;\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n", "function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !(event as unknown as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n", "import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\ntype Primitives = { [E in (typeof NODES)[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    if (typeof window !== 'undefined') {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not necessary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click \uD83D\uDC4E\n * target.dispatchEvent(new Event(\u2018click\u2019))\n *\n * dispatching a custom type within a non-discrete event \uD83D\uDC4E\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(\u2018customType\u2019))}\n *\n * dispatching a custom type within a `discrete` event \uD83D\uDC4D\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(\u2018customType\u2019))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { PrimitivePropsWithRef };\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Collapsible\n * -----------------------------------------------------------------------------------------------*/\n\nconst COLLAPSIBLE_NAME = 'Collapsible';\n\ntype ScopedProps<P> = P & { __scopeCollapsible?: Scope };\nconst [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\n\ntype CollapsibleContextValue = {\n  contentId: string;\n  disabled?: boolean;\n  open: boolean;\n  onOpenToggle(): void;\n};\n\nconst [CollapsibleProvider, useCollapsibleContext] =\n  createCollapsibleContext<CollapsibleContextValue>(COLLAPSIBLE_NAME);\n\ntype CollapsibleElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface CollapsibleProps extends PrimitiveDivProps {\n  defaultOpen?: boolean;\n  open?: boolean;\n  disabled?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst Collapsible = React.forwardRef<CollapsibleElement, CollapsibleProps>(\n  (props: ScopedProps<CollapsibleProps>, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n\n    const [open = false, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange,\n    });\n\n    return (\n      <CollapsibleProvider\n        scope={__scopeCollapsible}\n        disabled={disabled}\n        contentId={useId()}\n        open={open}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      >\n        <Primitive.div\n          data-state={getState(open)}\n          data-disabled={disabled ? '' : undefined}\n          {...collapsibleProps}\n          ref={forwardedRef}\n        />\n      </CollapsibleProvider>\n    );\n  }\n);\n\nCollapsible.displayName = COLLAPSIBLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'CollapsibleTrigger';\n\ntype CollapsibleTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface CollapsibleTriggerProps extends PrimitiveButtonProps {}\n\nconst CollapsibleTrigger = React.forwardRef<CollapsibleTriggerElement, CollapsibleTriggerProps>(\n  (props: ScopedProps<CollapsibleTriggerProps>, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-controls={context.contentId}\n        aria-expanded={context.open || false}\n        data-state={getState(context.open)}\n        data-disabled={context.disabled ? '' : undefined}\n        disabled={context.disabled}\n        {...triggerProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nCollapsibleTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'CollapsibleContent';\n\ntype CollapsibleContentElement = CollapsibleContentImplElement;\ninterface CollapsibleContentProps extends Omit<CollapsibleContentImplProps, 'present'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst CollapsibleContent = React.forwardRef<CollapsibleContentElement, CollapsibleContentProps>(\n  (props: ScopedProps<CollapsibleContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return (\n      <Presence present={forceMount || context.open}>\n        {({ present }) => (\n          <CollapsibleContentImpl {...contentProps} ref={forwardedRef} present={present} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nCollapsibleContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype CollapsibleContentImplElement = React.ElementRef<typeof Primitive.div>;\ninterface CollapsibleContentImplProps extends PrimitiveDivProps {\n  present: boolean;\n}\n\nconst CollapsibleContentImpl = React.forwardRef<\n  CollapsibleContentImplElement,\n  CollapsibleContentImplProps\n>((props: ScopedProps<CollapsibleContentImplProps>, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef<CollapsibleContentImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef<number | undefined>(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef<number | undefined>(0);\n  const width = widthRef.current;\n  // when opening we want it to immediately open to retrieve dimensions\n  // when closing we delay `present` to retrieve dimensions before closing\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef<Record<string, string>>(undefined);\n\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName,\n      };\n      // block any animations/transitions so the element renders at its full dimensions\n      node.style.transitionDuration = '0s';\n      node.style.animationName = 'none';\n\n      // get width and height from full dimensions\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n\n      // kick off any animations/transitions that were originally set up if it isn't the initial mount\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationName = originalStylesRef.current.animationName;\n      }\n\n      setIsPresent(present);\n    }\n    /**\n     * depends on `context.open` because it will change to `false`\n     * when a close is triggered but `present` will be `false` on\n     * animation end (so when close finishes). This allows us to\n     * retrieve the dimensions *before* closing.\n     */\n  }, [context.open, present]);\n\n  return (\n    <Primitive.div\n      data-state={getState(context.open)}\n      data-disabled={context.disabled ? '' : undefined}\n      id={context.contentId}\n      hidden={!isOpen}\n      {...contentProps}\n      ref={composedRefs}\n      style={{\n        [`--radix-collapsible-content-height` as any]: height ? `${height}px` : undefined,\n        [`--radix-collapsible-content-width` as any]: width ? `${width}px` : undefined,\n        ...props.style,\n      }}\n    >\n      {isOpen && children}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Collapsible;\nconst Trigger = CollapsibleTrigger;\nconst Content = CollapsibleContent;\n\nexport {\n  createCollapsibleScope,\n  //\n  Collapsible,\n  CollapsibleTrigger,\n  CollapsibleContent,\n  //\n  Root,\n  Trigger,\n  Content,\n};\nexport type { CollapsibleProps, CollapsibleTriggerProps, CollapsibleContentProps };\n", "import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement<{ ref?: React.Ref<HTMLElement> }>;\n\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      let timeoutId: number;\n      const ownerWindow = node.ownerDocument.defaultView ?? window;\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied a frame after the\n          // animation ends, creating a flash of visible content. By setting the\n          // animation fill mode to \"forwards\", we force the node to keep the\n          // styles of the last keyframe, removing the flash.\n          //\n          // Previously we flushed the update via ReactDom.flushSync, but with\n          // exit animations this resulted in the node being removed from the\n          // DOM before the synthetic animationEnd event was dispatched, meaning\n          // user-provided event handlers would not be called.\n          // https://github.com/radix-ui/primitives/pull/1849\n          send('ANIMATION_END');\n          if (!prevPresentRef.current) {\n            const currentFillMode = node.style.animationFillMode;\n            node.style.animationFillMode = 'forwards';\n            // Reset the style after the node had time to unmount (for cases\n            // where the component chooses not to unmount). Doing this any\n            // sooner than `setTimeout` (e.g. with `requestAnimationFrame`)\n            // still causes a flash.\n            timeoutId = ownerWindow.setTimeout(() => {\n              if (node.style.animationFillMode === 'forwards') {\n                node.style.animationFillMode = currentFillMode;\n              }\n            });\n          }\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        ownerWindow.clearTimeout(timeoutId);\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement<{ ref?: React.Ref<unknown> }>) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n\n  // Not DEV\n  return element.props.ref || (element as any).ref;\n}\n\nexport { Presence };\nexport type { PresenceProps };\n", "import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// \uD83E\uDD2F https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n", "import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n", "import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n", "import { IconBook, IconUpload } from '@posthog/icons'\nimport { Spinner } from '@posthog/lemon-ui'\nimport { actions, afterMount, connect, kea, listeners, path, reducers, selectors } from 'kea'\nimport { loaders } from 'kea-loaders'\nimport { router } from 'kea-router'\nimport api from 'lib/api'\nimport { GroupsAccessStatus } from 'lib/introductions/groupsAccessLogic'\nimport { TreeDataItem } from 'lib/lemon-ui/LemonTree/LemonTree'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { capitalizeFirstLetter } from 'lib/utils'\nimport { urls } from 'scenes/urls'\n\nimport { groupsModel } from '~/models/groupsModel'\nimport { FileSystemEntry, FileSystemType } from '~/queries/schema/schema-general'\n\nimport { getDefaultTree } from './defaultTree'\nimport type { projectTreeLogicType } from './projectTreeLogicType'\nimport { FileSystemImport, ProjectTreeAction } from './types'\nimport { convertFileSystemEntryToTreeDataItem } from './utils'\n\nexport const projectTreeLogic = kea<projectTreeLogicType>([\n    path(['layout', 'navigation-3000', 'components', 'projectTreeLogic']),\n    connect({\n        values: [\n            groupsModel,\n            ['aggregationLabel', 'groupTypes', 'groupsAccessStatus'],\n            featureFlagLogic,\n            ['featureFlags'],\n        ],\n    }),\n    actions({\n        loadSavedItems: true,\n        loadUnfiledItems: (type?: FileSystemType) => ({ type }),\n        addFolder: (folder: string) => ({ folder }),\n        deleteItem: (item: FileSystemEntry) => ({ item }),\n        moveItem: (oldPath: string, newPath: string) => ({ oldPath, newPath }),\n        queueAction: (action: ProjectTreeAction) => ({ action }),\n        removeQueuedAction: (action: ProjectTreeAction) => ({ action }),\n        applyPendingActions: true,\n        createSavedItem: (savedItem: FileSystemEntry) => ({ savedItem }),\n        updateSavedItem: (savedItem: FileSystemEntry) => ({ savedItem }),\n        deleteSavedItem: (savedItem: FileSystemEntry) => ({ savedItem }),\n    }),\n    loaders(({ actions, values }) => ({\n        savedItems: [\n            [] as FileSystemEntry[],\n            {\n                loadSavedItems: async () => {\n                    const response = await api.fileSystem.list()\n                    return [...values.savedItems, ...response.results]\n                },\n            },\n        ],\n        allUnfiledItems: [\n            [] as FileSystemEntry[],\n            {\n                loadUnfiledItems: async ({ type }) => {\n                    const response = await api.fileSystem.unfiled(type)\n                    return [...values.allUnfiledItems, ...response.results]\n                },\n            },\n        ],\n        pendingLoader: [\n            false,\n            {\n                applyPendingActions: async () => {\n                    for (const action of values.pendingActions) {\n                        if (action.type === 'move' && action.newPath) {\n                            if (!action.item.id) {\n                                const response = await api.fileSystem.create({ ...action.item, path: action.newPath })\n                                actions.createSavedItem(response)\n                            } else {\n                                const response = await api.fileSystem.update(action.item.id, { path: action.newPath })\n                                actions.updateSavedItem(response)\n                            }\n                        } else if (action.type === 'create') {\n                            const response = await api.fileSystem.create(action.item)\n                            actions.createSavedItem(response)\n                        } else if (action.type === 'delete' && action.item.id) {\n                            await api.fileSystem.delete(action.item.id)\n                            actions.deleteSavedItem(action.item)\n                        }\n                        actions.removeQueuedAction(action)\n                    }\n                    return true\n                },\n            },\n        ],\n    })),\n    reducers({\n        unfiledLoadingCount: [\n            0,\n            {\n                loadUnfiledItems: (state) => state + 1,\n                loadUnfiledItemsSuccess: (state) => state - 1,\n                loadUnfiledItemsFailure: (state) => state - 1,\n            },\n        ],\n        pendingActions: [\n            [] as ProjectTreeAction[],\n            {\n                queueAction: (state, { action }) => [...state, action],\n                removeQueuedAction: (state, { action }) => state.filter((a) => a !== action),\n            },\n        ],\n        savedItems: [\n            [] as FileSystemEntry[],\n            {\n                createSavedItem: (state, { savedItem }) => [...state, savedItem],\n                updateSavedItem: (state, { savedItem }) =>\n                    state.map((item) => (item.id === savedItem.id ? savedItem : item)),\n                deleteSavedItem: (state, { savedItem }) => state.filter((item) => item.id !== savedItem.id),\n            },\n        ],\n    }),\n    selectors({\n        unfiledLoading: [(s) => [s.unfiledLoadingCount], (unfiledLoadingCount) => unfiledLoadingCount > 0],\n        unfiledItems: [\n            // Remove from unfiledItems the ones that are in \"savedItems\"\n            (s) => [s.savedItems, s.allUnfiledItems],\n            (savedItems, allUnfiledItems): FileSystemEntry[] => {\n                const urls = new Set<string>()\n                for (const item of [...savedItems]) {\n                    const key = `${item.type}/${item.ref}`\n                    if (!urls.has(key)) {\n                        urls.add(key)\n                    }\n                }\n                return allUnfiledItems.filter((item) => !urls.has(`${item.type}/${item.ref}`))\n            },\n        ],\n        viableItems: [\n            // Combine unfiledItems with savedItems and apply pendingActions\n            (s) => [s.unfiledItems, s.savedItems, s.pendingActions],\n            (unfiledItems, savedItems, pendingActions): FileSystemEntry[] => {\n                const items = [...unfiledItems, ...savedItems]\n                const itemsByPath = Object.fromEntries(items.map((item) => [item.path, item]))\n                for (const action of pendingActions) {\n                    if (action.type === 'move' && action.newPath) {\n                        const item = itemsByPath[action.path]\n                        if (item) {\n                            if (!itemsByPath[action.newPath]) {\n                                itemsByPath[action.newPath] = { ...item, path: action.newPath }\n                                delete itemsByPath[action.path]\n                            } else {\n                                console.error(\"Item already exists, can't move\", action.newPath)\n                            }\n                        } else {\n                            console.error(\"Item not found, can't move\", action.path)\n                        }\n                    } else if (action.type === 'create' && action.newPath) {\n                        if (!itemsByPath[action.newPath]) {\n                            itemsByPath[action.newPath] = { ...action.item, path: action.newPath }\n                        } else {\n                            console.error(\"Item already exists, can't create\", action.item)\n                        }\n                    } else if (action.type === 'delete' && action.path) {\n                        delete itemsByPath[action.path]\n                    }\n                }\n                return Object.values(itemsByPath)\n            },\n        ],\n        unappliedPaths: [\n            // Paths that are currently being loaded\n            (s) => [s.pendingActions],\n            (pendingActions) => {\n                const unappliedPaths: Record<string, boolean> = {}\n                for (const action of pendingActions) {\n                    if (action.type === 'move-create' || action.type === 'move' || action.type === 'create') {\n                        if (action.newPath) {\n                            unappliedPaths[action.newPath] = true\n                            const split = action.newPath.split('/')\n                            for (let i = 1; i < split.length; i++) {\n                                unappliedPaths[split.slice(0, i).join('/')] = true\n                            }\n                        }\n                    }\n                }\n                return unappliedPaths\n            },\n        ],\n        loadingPaths: [\n            // Paths that are currently being loaded\n            (s) => [s.unfiledLoading, s.savedItemsLoading, s.pendingLoaderLoading, s.pendingActions],\n            (unfiledLoading, savedItemsLoading, pendingLoaderLoading, pendingActions) => {\n                const loadingPaths: Record<string, boolean> = {}\n                if (unfiledLoading) {\n                    loadingPaths['Unfiled'] = true\n                    loadingPaths[''] = true\n                }\n                if (savedItemsLoading) {\n                    loadingPaths[''] = true\n                }\n                if (pendingLoaderLoading && pendingActions.length > 0) {\n                    loadingPaths[pendingActions[0].newPath || pendingActions[0].path] = true\n                }\n                return loadingPaths\n            },\n        ],\n        pendingActionsCount: [(s) => [s.pendingActions], (pendingActions): number => pendingActions.length],\n        projectTree: [\n            (s) => [s.viableItems],\n            (viableItems): TreeDataItem[] => convertFileSystemEntryToTreeDataItem(viableItems),\n        ],\n        groupNodes: [\n            (s) => [s.groupTypes, s.groupsAccessStatus, s.aggregationLabel],\n            (groupTypes, groupsAccessStatus, aggregationLabel): FileSystemImport[] => {\n                const showGroupsIntroductionPage = [\n                    GroupsAccessStatus.HasAccess,\n                    GroupsAccessStatus.HasGroupTypes,\n                    GroupsAccessStatus.NoAccess,\n                ].includes(groupsAccessStatus)\n\n                const groupNodes: FileSystemImport[] = [\n                    ...(showGroupsIntroductionPage\n                        ? [\n                              {\n                                  path: 'Groups',\n                                  href: urls.groups(0),\n                              },\n                          ]\n                        : Array.from(groupTypes.values()).map((groupType) => ({\n                              path: capitalizeFirstLetter(aggregationLabel(groupType.group_type_index).plural),\n                              href: urls.groups(groupType.group_type_index),\n                          }))),\n                ]\n\n                return groupNodes\n            },\n        ],\n        defaultTreeNodes: [\n            (s) => [s.featureFlags, s.groupNodes],\n            (_featureFlags, groupNodes: FileSystemImport[]) =>\n                // .filter(f => !f.flag || featureFlags[f.flag])\n                convertFileSystemEntryToTreeDataItem(getDefaultTree(groupNodes)),\n        ],\n        projectRow: [\n            (s) => [s.pendingActionsCount, s.pendingLoaderLoading],\n            (pendingActionsCount, pendingLoaderLoading): TreeDataItem[] => [\n                ...(pendingActionsCount > 0\n                    ? [\n                          {\n                              id: 'applyPendingActions',\n                              name: `--- Apply${\n                                  pendingLoaderLoading ? 'ing' : ''\n                              } ${pendingActionsCount} unsaved change${pendingActionsCount > 1 ? 's' : ''} ---`,\n                              icon: pendingLoaderLoading ? <Spinner /> : <IconUpload className=\"text-warning\" />,\n                              onClick: !pendingLoaderLoading\n                                  ? () => projectTreeLogic.actions.applyPendingActions()\n                                  : undefined,\n                          },\n                      ]\n                    : [\n                          {\n                              id: '--',\n                              name: '----------------------',\n                          },\n                      ]),\n                {\n                    id: 'project',\n                    name: 'Default Project',\n                    icon: <IconBook />,\n                    record: { type: 'project', id: 'project' },\n                    onClick: () => router.actions.push(urls.projectHomepage()),\n                },\n            ],\n        ],\n        treeData: [\n            (s) => [s.defaultTreeNodes, s.projectTree, s.projectRow],\n            (defaultTreeNodes, projectTree, projectRow): TreeDataItem[] => {\n                return [...defaultTreeNodes, ...projectRow, ...projectTree]\n            },\n        ],\n    }),\n    listeners(({ actions, values }) => ({\n        moveItem: async ({ oldPath, newPath }) => {\n            for (const item of values.viableItems) {\n                if (item.path === oldPath || item.path.startsWith(oldPath + '/')) {\n                    actions.queueAction({\n                        type: 'move',\n                        item,\n                        path: item.path,\n                        newPath: newPath + item.path.slice(oldPath.length),\n                    })\n                }\n            }\n        },\n        deleteItem: async ({ item }) => {\n            actions.queueAction({ type: 'delete', item, path: item.path })\n        },\n        addFolder: ({ folder }) => {\n            if (values.viableItems.find((item) => item.path === folder)) {\n                return\n            }\n            actions.queueAction({\n                type: 'create',\n                item: { id: `project/${folder}`, path: folder, type: 'folder' },\n                path: folder,\n                newPath: folder,\n            })\n        },\n    })),\n    afterMount(({ actions }) => {\n        actions.loadSavedItems()\n        actions.loadUnfiledItems('feature_flag')\n        actions.loadUnfiledItems('experiment')\n        actions.loadUnfiledItems('insight')\n        actions.loadUnfiledItems('dashboard')\n        actions.loadUnfiledItems('notebook')\n    }),\n])\n", "import {\n    IconAI,\n    IconBook,\n    IconChevronRight,\n    IconCursorClick,\n    IconDashboard,\n    IconDatabase,\n    IconFeatures,\n    IconGraph,\n    IconHandMoney,\n    IconLive,\n    IconMegaphone,\n    IconMessage,\n    IconNotebook,\n    IconNotification,\n    IconPeople,\n    IconPerson,\n    IconPieChart,\n    IconPlug,\n    IconRewindPlay,\n    IconRocket,\n    IconServer,\n    IconSparkles,\n    IconTarget,\n    IconTestTube,\n    IconToggle,\n    IconWarning,\n} from '@posthog/icons'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { urls } from 'scenes/urls'\n\nimport { FileSystemType } from '~/queries/schema/schema-general'\nimport { ActivityTab, InsightType, PipelineStage, ReplayTabs } from '~/types'\n\nimport { FileSystemImport } from './types'\n\nexport function iconForType(type?: FileSystemType): JSX.Element {\n    switch (type) {\n        case 'aichat':\n            return <IconSparkles />\n        case 'broadcast':\n            return <IconMegaphone />\n        case 'feature_flag':\n            return <IconToggle />\n        case 'feature':\n            return <IconFeatures />\n        case 'experiment':\n            return <IconTestTube />\n        case 'insight':\n            return <IconGraph />\n        case 'notebook':\n            return <IconNotebook />\n        case 'dashboard':\n            return <IconDashboard />\n        case 'repl':\n            return <IconTarget />\n        case 'survey':\n            return <IconMessage />\n        case 'sql':\n            return <IconServer />\n        case 'site_app':\n            return <IconPlug />\n        case 'destination':\n            return <IconPlug />\n        case 'transformation':\n            return <IconPlug />\n        case 'source':\n            return <IconPlug />\n        case 'folder':\n            return <IconChevronRight />\n        default:\n            return <IconBook />\n    }\n}\n\n// {\n//     identifier: Scene.Products,\n//     label: 'Welcome to PostHog',\n//     icon: <IconLogomark />,\n//     to: urls.products(),\n// },\n\nexport const getDefaultTree = (groupNodes: FileSystemImport[]): FileSystemImport[] =>\n    [\n        {\n            path: `Create new/AI chat`,\n            type: 'aichat' as const,\n            href: urls.max(),\n            flag: FEATURE_FLAGS.ARTIFICIAL_HOG,\n        },\n        {\n            path: `Create new/Dashboard`,\n            type: 'dashboard' as const,\n            href: urls.dashboards() + '#newDashboard=modal',\n        },\n        {\n            path: `Create new/Experiment`,\n            type: 'experiment' as const,\n            href: urls.experiment('new'),\n        },\n        {\n            path: `Create new/Feature flag`,\n            type: 'feature_flag' as const,\n            href: urls.featureFlag('new'),\n        },\n        {\n            path: `Create new/Feature`,\n            type: 'feature' as const,\n            href: urls.featureManagement('new'),\n        },\n        {\n            path: `Create new/Insight/Trends`,\n            type: 'insight' as const,\n            href: urls.insightNew({ type: InsightType.TRENDS }),\n        },\n        {\n            path: `Create new/Insight/Funnels`,\n            type: 'insight' as const,\n            href: urls.insightNew({ type: InsightType.FUNNELS }),\n        },\n        {\n            path: `Create new/Insight/Retention`,\n            type: 'insight' as const,\n            href: urls.insightNew({ type: InsightType.RETENTION }),\n        },\n        {\n            path: `Create new/Insight/User paths`,\n            type: 'insight' as const,\n            href: urls.insightNew({ type: InsightType.PATHS }),\n        },\n        {\n            path: `Create new/Insight/Stickiness`,\n            type: 'insight' as const,\n            href: urls.insightNew({ type: InsightType.STICKINESS }),\n        },\n        {\n            path: `Create new/Insight/Lifecycle`,\n            type: 'insight' as const,\n            href: urls.insightNew({ type: InsightType.LIFECYCLE }),\n        },\n        {\n            path: `Create new/Notebook`,\n            type: 'notebook' as const,\n            href: urls.notebook('new'),\n        },\n        {\n            path: `Create new/Broadcast`,\n            type: 'broadcast' as const,\n            href: urls.messagingBroadcasts(),\n        },\n        {\n            path: `Create new/Repl`,\n            type: 'repl' as const,\n            href: urls.debugHog() + '#repl=[]&code=',\n        },\n        {\n            path: `Create new/Survey`,\n            type: 'survey' as const,\n            href: urls.survey('new'),\n        },\n        {\n            path: `Create new/SQL query`,\n            type: 'sql' as const,\n            href: urls.sqlEditor(),\n        },\n        {\n            path: `Create new/Data pipeline/Source`,\n            type: 'source' as const,\n            href: urls.pipelineNodeNew(PipelineStage.Source),\n        },\n        {\n            path: `Create new/Data pipeline/Destination`,\n            type: 'destination' as const,\n            href: urls.pipelineNodeNew(PipelineStage.Destination),\n        },\n        {\n            path: `Create new/Data pipeline/Transformation`,\n            type: 'transformation' as const,\n            href: urls.pipelineNodeNew(PipelineStage.Transformation),\n        },\n        {\n            path: `Create new/Data pipeline/Site app`,\n            type: 'site_app' as const,\n            href: urls.pipelineNodeNew(PipelineStage.SiteApp),\n        },\n        {\n            path: 'Explore/Data management/Event Definitions',\n            icon: <IconDatabase />,\n            href: urls.eventDefinitions(),\n        },\n        {\n            path: 'Explore/Data management/Actions',\n            icon: <IconRocket />,\n            href: urls.actions(),\n        },\n\n        {\n            path: 'Explore/Data management/Property Definitions',\n            icon: <IconDatabase />,\n            href: urls.propertyDefinitions(),\n        },\n\n        {\n            path: 'Explore/Data management/Annotations',\n            icon: <IconNotification />,\n            href: urls.annotations(),\n        },\n\n        {\n            path: 'Explore/Data management/History',\n            icon: <IconDatabase />,\n            href: urls.dataManagementHistory(),\n        },\n\n        {\n            path: 'Explore/Data management/Revenue',\n            icon: <IconHandMoney />,\n            href: urls.revenue(),\n            flag: FEATURE_FLAGS.WEB_REVENUE_TRACKING,\n        },\n        {\n            path: 'Explore/Data management/Ingestion Warnings',\n            icon: <IconWarning />,\n            href: urls.ingestionWarnings(),\n            flag: FEATURE_FLAGS.INGESTION_WARNINGS_ENABLED,\n        },\n\n        {\n            path: 'Explore/Data warehouse',\n            icon: <IconDatabase />,\n            href: urls.dataWarehouse(),\n        },\n        {\n            path: 'Explore/People and groups/People',\n            icon: <IconPerson />,\n            href: urls.persons(),\n        },\n        {\n            path: 'Explore/People and groups/Cohorts',\n            icon: <IconPeople />,\n            href: urls.cohorts(),\n        },\n        ...groupNodes.map((groupNode) => ({ ...groupNode, path: `Explore/People and groups/${groupNode.path}` })),\n        {\n            path: 'Explore/Activity',\n            icon: <IconLive />,\n            href: urls.activity(ActivityTab.ExploreEvents),\n        },\n        {\n            path: 'Explore/Live',\n            icon: <IconLive />,\n            href: urls.activity(ActivityTab.LiveEvents),\n        },\n        {\n            path: 'Explore/LLM ovservability',\n            icon: <IconAI />,\n            href: urls.llmObservabilityDashboard(),\n            flag: FEATURE_FLAGS.LLM_OBSERVABILITY,\n        },\n        {\n            path: 'Explore/Web Analytics',\n            icon: <IconPieChart />,\n            href: urls.webAnalytics(),\n        },\n        {\n            path: 'Explore/Recordings/Recordings',\n            href: urls.replay(ReplayTabs.Home),\n            icon: <IconRewindPlay />,\n        },\n        {\n            path: 'Explore/Recordings/What to watch',\n            href: urls.replay(ReplayTabs.Templates),\n            icon: <IconRewindPlay />,\n        },\n        {\n            path: 'Explore/Recordings/Playlists',\n            href: urls.replay(ReplayTabs.Playlists),\n            icon: <IconRewindPlay />,\n        },\n        {\n            path: 'Explore/Error tracking',\n            icon: <IconWarning />,\n            href: urls.errorTracking(),\n            flag: FEATURE_FLAGS.ERROR_TRACKING,\n        },\n        {\n            path: 'Explore/Early access features',\n            icon: <IconRocket />,\n            href: urls.earlyAccessFeatures(),\n        },\n        {\n            path: 'Explore/Heatmaps',\n            icon: <IconCursorClick />,\n            href: urls.heatmaps(),\n            flag: FEATURE_FLAGS.HEATMAPS_UI,\n        },\n    ].sort((a, b) => a.path.localeCompare(b.path))\n", "import { router } from 'kea-router'\nimport { TreeDataItem } from 'lib/lemon-ui/LemonTree/LemonTree'\n\nimport { iconForType } from './defaultTree'\nimport { FileSystemImport } from './types'\n\nexport function convertFileSystemEntryToTreeDataItem(imports: FileSystemImport[]): TreeDataItem[] {\n    // The top-level nodes for our project tree\n    const rootNodes: TreeDataItem[] = []\n\n    // Helper to find an existing folder node or create one if it doesn't exist.\n    const findOrCreateFolder = (nodes: TreeDataItem[], folderName: string, fullPath: string): TreeDataItem => {\n        let folderNode: TreeDataItem | undefined = nodes.find((node) => node.record?.path === fullPath)\n        if (!folderNode) {\n            folderNode = {\n                id: 'project/' + fullPath,\n                name: folderName,\n                record: { type: 'folder', id: 'project/' + fullPath, path: fullPath },\n                children: [],\n            }\n            nodes.push(folderNode)\n        }\n        if (!folderNode.children) {\n            folderNode.children = []\n        }\n        return folderNode\n    }\n\n    // Iterate over each raw project item.\n    for (const item of imports) {\n        const pathSplit = item.path.split('/').filter(Boolean)\n        const itemName = pathSplit.pop()!\n        const folderPath = pathSplit.join('/')\n\n        // Split the folder path by \"/\" (ignoring empty parts).\n        const folderParts = folderPath ? folderPath.split('/').filter(Boolean) : []\n\n        // Start at the root level.\n        let currentLevel = rootNodes\n        let accumulatedPath = ''\n\n        // Create (or find) nested folders as needed.\n        for (const part of folderParts) {\n            accumulatedPath = accumulatedPath ? accumulatedPath + '/' + part : part\n            const folderNode = findOrCreateFolder(currentLevel, part, accumulatedPath)\n            currentLevel = folderNode.children!\n        }\n\n        if (item.type === 'folder' && currentLevel.find((node) => node.record?.path === item.path)) {\n            continue\n        }\n\n        // Create the actual item node.\n        const node: TreeDataItem = {\n            id: 'project/' + (item.id || item.path),\n            name: itemName,\n            icon: item.icon || iconForType(item.type),\n            record: item,\n            onClick: () => {\n                if (item.href) {\n                    router.actions.push(item.href)\n                }\n            },\n        }\n        // Place the item in the current (deepest) folder.\n        currentLevel.push(node)\n    }\n\n    // Helper function to sort nodes (and their children) alphabetically by name.\n    const sortNodes = (nodes: TreeDataItem[]): void => {\n        nodes.sort((a, b) => a.name.localeCompare(b.name))\n        for (const node of nodes) {\n            if (node.children) {\n                sortNodes(node.children)\n            }\n        }\n    }\n    sortNodes(rootNodes)\n    return rootNodes\n}\n", "import './TopBar.scss'\n\nimport { IconChevronDown } from '@posthog/icons'\nimport { LemonButton, LemonSkeleton, LemonTag } from '@posthog/lemon-ui'\nimport clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { router } from 'kea-router'\nimport { EditableField } from 'lib/components/EditableField/EditableField'\nimport { FlaggedFeature } from 'lib/components/FlaggedFeature'\nimport { MetalyticsSummary } from 'lib/components/Metalytics/MetalyticsSummary'\nimport { IconMenu } from 'lib/lemon-ui/icons'\nimport { Link } from 'lib/lemon-ui/Link'\nimport { Popover } from 'lib/lemon-ui/Popover/Popover'\nimport React, { useLayoutEffect, useState } from 'react'\n\nimport { breadcrumbsLogic } from '~/layout/navigation/Breadcrumbs/breadcrumbsLogic'\nimport { navigationLogic } from '~/layout/navigation/navigationLogic'\nimport { Breadcrumb as IBreadcrumb } from '~/types'\n\nimport { navigation3000Logic } from '../navigationLogic'\n\n/** Sync with --breadcrumbs-height-compact. */\nexport const BREADCRUMBS_HEIGHT_COMPACT = 44\n\nexport function TopBar(): JSX.Element | null {\n    const { mobileLayout } = useValues(navigationLogic)\n    const { showNavOnMobile } = useActions(navigation3000Logic)\n    const { breadcrumbs, renameState } = useValues(breadcrumbsLogic)\n    const { setActionsContainer } = useActions(breadcrumbsLogic)\n\n    const [compactionRate, setCompactionRate] = useState(0)\n\n    // Always show in full on mobile, as there we are very constrained in width, but not so much height\n    const effectiveCompactionRate = mobileLayout ? 0 : compactionRate\n    const isOnboarding = router.values.location.pathname.includes('/onboarding/')\n\n    useLayoutEffect(() => {\n        function handleScroll(): void {\n            const mainElement = document.getElementsByTagName('main')[0]\n            const mainScrollTop = mainElement.scrollTop\n            const compactionDistance = Math.min(\n                // This ensures that scrolling to the bottom of the scene will always result in the compact top bar state\n                // even if there's just a few pixels of scroll room. Otherwise, the top bar would be halfway-compact then\n                mainElement.scrollHeight - mainElement.clientHeight,\n                BREADCRUMBS_HEIGHT_COMPACT\n            )\n            const newCompactionRate = compactionDistance > 0 ? Math.min(mainScrollTop / compactionDistance, 1) : 0\n            setCompactionRate(newCompactionRate)\n            if (\n                renameState &&\n                ((newCompactionRate > 0.5 && compactionRate <= 0.5) ||\n                    (newCompactionRate <= 0.5 && compactionRate > 0.5))\n            ) {\n                // Transfer selection from the outgoing input to the incoming one\n                const [source, target] = newCompactionRate > 0.5 ? ['large', 'small'] : ['small', 'large']\n                const sourceEl = document.querySelector<HTMLInputElement>(`input[name=\"item-name-${source}\"]`)\n                const targetEl = document.querySelector<HTMLInputElement>(`input[name=\"item-name-${target}\"]`)\n                if (sourceEl && targetEl) {\n                    targetEl.focus()\n                    targetEl.setSelectionRange(sourceEl.selectionStart || 0, sourceEl.selectionEnd || 0)\n                }\n            }\n        }\n        const main = document.getElementsByTagName('main')[0]\n        main.addEventListener('scroll', handleScroll)\n        return () => main.removeEventListener('scroll', handleScroll)\n    }, [compactionRate])\n\n    return breadcrumbs.length ? (\n        <div\n            className={clsx(\n                'TopBar3000',\n                effectiveCompactionRate === 0 && 'TopBar3000--full',\n                effectiveCompactionRate === 1 && 'TopBar3000--compact'\n            )}\n            // eslint-disable-next-line react/forbid-dom-props\n            style={{ '--breadcrumbs-compaction-rate': effectiveCompactionRate } as React.CSSProperties}\n        >\n            <div className=\"TopBar3000__content\">\n                {mobileLayout && (\n                    <LemonButton\n                        size=\"small\"\n                        onClick={() => showNavOnMobile()}\n                        icon={<IconMenu />}\n                        className=\"TopBar3000__hamburger\"\n                    />\n                )}\n                <div className=\"TopBar3000__breadcrumbs\">\n                    {breadcrumbs.length > 1 && (\n                        <div className=\"TopBar3000__trail\">\n                            {breadcrumbs.slice(0, -1).map((breadcrumb) => (\n                                <React.Fragment key={joinBreadcrumbKey(breadcrumb.key)}>\n                                    <Breadcrumb breadcrumb={breadcrumb} />\n                                    <div className=\"TopBar3000__separator\" />\n                                </React.Fragment>\n                            ))}\n                            <Breadcrumb\n                                breadcrumb={breadcrumbs[breadcrumbs.length - 1]}\n                                here\n                                isOnboarding={isOnboarding}\n                            />\n                        </div>\n                    )}\n                    <Here breadcrumb={breadcrumbs[breadcrumbs.length - 1]} isOnboarding={isOnboarding} />\n                </div>\n                <FlaggedFeature flag=\"metalytics\">\n                    <div className=\"shrink-1\">\n                        <MetalyticsSummary />\n                    </div>\n                </FlaggedFeature>\n                <div className=\"TopBar3000__actions border-danger\" ref={setActionsContainer} />\n            </div>\n        </div>\n    ) : null\n}\n\ninterface BreadcrumbProps {\n    breadcrumb: IBreadcrumb\n    here?: boolean\n    isOnboarding?: boolean\n}\n\nfunction Breadcrumb({ breadcrumb, here, isOnboarding }: BreadcrumbProps): JSX.Element {\n    const { renameState } = useValues(breadcrumbsLogic)\n    const { tentativelyRename, finishRenaming } = useActions(breadcrumbsLogic)\n    const [popoverShown, setPopoverShown] = useState(false)\n\n    const joinedKey = joinBreadcrumbKey(breadcrumb.key)\n\n    const breadcrumbName = isOnboarding && here ? 'Onboarding' : (breadcrumb.name as string)\n\n    let nameElement: JSX.Element\n    if (breadcrumb.symbol) {\n        nameElement = breadcrumb.symbol\n    } else if (breadcrumb.name != null && breadcrumb.onRename) {\n        nameElement = (\n            <EditableField\n                name=\"item-name-small\"\n                value={renameState && renameState[0] === joinedKey ? renameState[1] : breadcrumbName}\n                onChange={(newName) => tentativelyRename(joinedKey, newName)}\n                onSave={(newName) => {\n                    void breadcrumb.onRename?.(newName)\n                }}\n                mode={renameState && renameState[0] === joinedKey ? 'edit' : 'view'}\n                onModeToggle={(newMode) => {\n                    if (newMode === 'edit') {\n                        tentativelyRename(joinedKey, breadcrumbName)\n                    } else {\n                        finishRenaming()\n                    }\n                    setPopoverShown(false)\n                }}\n                placeholder=\"Unnamed\"\n                compactButtons=\"xsmall\"\n                editingIndication=\"underlined\"\n            />\n        )\n    } else {\n        nameElement = (\n            <span className=\"flex items-center gap-1.5\">\n                {breadcrumbName || <i>Unnamed</i>}\n                {'tag' in breadcrumb && breadcrumb.tag && <LemonTag size=\"small\">{breadcrumb.tag}</LemonTag>}\n            </span>\n        )\n    }\n\n    const Component = breadcrumb.path ? Link : 'div'\n    const breadcrumbContent = (\n        <Component\n            className={clsx(\n                'TopBar3000__breadcrumb',\n                popoverShown && 'TopBar3000__breadcrumb--open',\n                (breadcrumb.path || breadcrumb.popover) && 'TopBar3000__breadcrumb--actionable',\n                here && 'TopBar3000__breadcrumb--here'\n            )}\n            onClick={() => {\n                breadcrumb.popover && setPopoverShown(!popoverShown)\n            }}\n            data-attr={`breadcrumb-${joinedKey}`}\n            to={breadcrumb.path}\n        >\n            {nameElement}\n            {breadcrumb.popover && !breadcrumb.symbol && <IconChevronDown />}\n        </Component>\n    )\n\n    if (breadcrumb.popover) {\n        return (\n            <Popover\n                {...breadcrumb.popover}\n                visible={popoverShown}\n                onClickOutside={() => {\n                    if (popoverShown) {\n                        setPopoverShown(false)\n                    }\n                }}\n                onClickInside={() => {\n                    if (popoverShown) {\n                        setPopoverShown(false)\n                    }\n                }}\n            >\n                {breadcrumbContent}\n            </Popover>\n        )\n    }\n\n    return breadcrumbContent\n}\n\ninterface HereProps {\n    breadcrumb: IBreadcrumb\n    isOnboarding?: boolean\n}\n\nfunction Here({ breadcrumb, isOnboarding }: HereProps): JSX.Element {\n    const { renameState } = useValues(breadcrumbsLogic)\n    const { tentativelyRename, finishRenaming } = useActions(breadcrumbsLogic)\n\n    const joinedKey = joinBreadcrumbKey(breadcrumb.key)\n    const hereName = isOnboarding ? 'Onboarding' : (breadcrumb.name as string)\n\n    return (\n        <h1 className=\"TopBar3000__here\" data-attr=\"top-bar-name\">\n            {breadcrumb.name == null ? (\n                <LemonSkeleton className=\"w-40 h-4\" />\n            ) : breadcrumb.onRename ? (\n                <EditableField\n                    name=\"item-name-large\"\n                    value={renameState && renameState[0] === joinedKey ? renameState[1] : hereName}\n                    onChange={(newName) => {\n                        tentativelyRename(joinedKey, newName)\n                        if (breadcrumb.forceEditMode) {\n                            // In this case there's no \"Save\" button, we update on input\n                            void breadcrumb.onRename?.(newName)\n                        }\n                    }}\n                    onSave={(newName) => {\n                        void breadcrumb.onRename?.(newName)\n                    }}\n                    mode={breadcrumb.forceEditMode || (renameState && renameState[0] === joinedKey) ? 'edit' : 'view'}\n                    onModeToggle={\n                        !breadcrumb.forceEditMode\n                            ? (newMode) => {\n                                  if (newMode === 'edit') {\n                                      tentativelyRename(joinedKey, hereName)\n                                  } else {\n                                      finishRenaming()\n                                  }\n                              }\n                            : undefined\n                    }\n                    placeholder=\"Unnamed\"\n                    compactButtons=\"xsmall\"\n                    editingIndication=\"underlined\"\n                    autoFocus\n                />\n            ) : (\n                <span>{hereName}</span>\n            )}\n        </h1>\n    )\n}\n\nfunction joinBreadcrumbKey(key: IBreadcrumb['key']): string {\n    return Array.isArray(key) ? key.map(String).join(':') : String(key)\n}\n", "import { IconPulse } from '@posthog/icons'\nimport { LemonBadge, LemonButton } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\n\nimport { sidePanelStateLogic } from '~/layout/navigation-3000/sidepanel/sidePanelStateLogic'\nimport { SidePanelTab } from '~/types'\n\nimport { metalyticsLogic } from './metalyticsLogic'\n\nexport function MetalyticsSummary(): JSX.Element | null {\n    const { instanceId, viewCount, viewCountLoading } = useValues(metalyticsLogic)\n    const safeViewCount = viewCount?.views ?? 0\n    const safeUniqueUsers = viewCount?.users ?? 0\n    const { openSidePanel } = useActions(sidePanelStateLogic)\n\n    if (!instanceId || viewCountLoading) {\n        return null\n    }\n\n    return (\n        <span className=\"relative inline-flex\">\n            <LemonButton\n                loading={viewCountLoading}\n                icon={<IconPulse />}\n                size=\"small\"\n                onClick={() => openSidePanel(SidePanelTab.Activity, 'metalytics')}\n                tooltip={`${safeUniqueUsers} PostHog members have viewed this a total of ${safeViewCount} times. Click to see more.`}\n            />\n            <LemonBadge.Number\n                count={safeViewCount}\n                size=\"small\"\n                position=\"top-right\"\n                showZero={false}\n                status=\"primary\"\n                maxDigits={3}\n            />\n        </span>\n    )\n}\n", "import { KeaPlugin, resetContext } from 'kea'\nimport { formsPlugin } from 'kea-forms'\nimport { loadersPlugin } from 'kea-loaders'\nimport { localStoragePlugin } from 'kea-localstorage'\nimport { routerPlugin } from 'kea-router'\nimport { subscriptionsPlugin } from 'kea-subscriptions'\nimport { waitForPlugin } from 'kea-waitfor'\nimport { windowValuesPlugin } from 'kea-window-values'\nimport { lemonToast } from 'lib/lemon-ui/LemonToast/LemonToast'\nimport { identifierToHuman } from 'lib/utils'\nimport { addProjectIdIfMissing, removeProjectIdIfPresent } from 'lib/utils/router-utils'\n\n/*\nActions for which we don't want to show error alerts,\nmostly to avoid user confusion.\n*/\nconst ERROR_FILTER_ALLOW_LIST = [\n    'loadPreflight', // Gracefully handled if it fails\n    'loadUser', // App won't load (unless loading from shared dashboards)\n    'loadFunnels', // Special error handling on insights\n    'authenticate', // Special error handling on login\n    'signup', // Special error handling on login\n    'loadLatestVersion',\n    'loadBilling', // Gracefully handled if it fails\n    'loadData', // Gracefully handled in the data table\n    'loadRecordingMeta', // Gracefully handled in the recording player\n]\n\ninterface InitKeaProps {\n    state?: Record<string, any>\n    routerHistory?: any\n    routerLocation?: any\n    beforePlugins?: KeaPlugin[]\n}\n\n// Used in some tests to make life easier\nlet errorsSilenced = false\n\nexport function silenceKeaLoadersErrors(): void {\n    errorsSilenced = true\n}\n\nexport function resumeKeaLoadersErrors(): void {\n    errorsSilenced = false\n}\n\nexport const loggerPlugin: () => KeaPlugin = () => ({\n    name: 'verbose-kea-logger',\n    events: {\n        beforeReduxStore(options) {\n            options.middleware.push((store) => (next) => (action) => {\n                const response = next(action)\n                /* eslint-disable no-console */\n                console.groupCollapsed('KEA LOGGER', action)\n                console.log(store.getState())\n                console.groupEnd()\n                /* eslint-enable no-console */\n                return response\n            })\n        },\n    },\n})\n\nexport function initKea({ routerHistory, routerLocation, beforePlugins }: InitKeaProps = {}): void {\n    const plugins = [\n        ...(beforePlugins || []),\n        localStoragePlugin(),\n        windowValuesPlugin({ window: window }),\n        routerPlugin({\n            history: routerHistory,\n            location: routerLocation,\n            urlPatternOptions: {\n                // :TRICKY: What chars to allow in named segment values i.e. \":key\"\n                // in \"/url/:key\". Default: \"a-zA-Z0-9-_~ %\".\n                segmentValueCharset: \"a-zA-Z0-9-_~ %.@()!'|\",\n            },\n            pathFromRoutesToWindow: (path) => {\n                return addProjectIdIfMissing(path)\n            },\n            transformPathInActions: (path) => {\n                return addProjectIdIfMissing(path)\n            },\n            pathFromWindowToRoutes: (path) => {\n                return removeProjectIdIfPresent(path)\n            },\n        }),\n        formsPlugin,\n        loadersPlugin({\n            onFailure({ error, reducerKey, actionKey }: { error: any; reducerKey: string; actionKey: string }) {\n                // Toast if it's a fetch error or a specific API update error\n                if (\n                    !ERROR_FILTER_ALLOW_LIST.includes(actionKey) &&\n                    error?.status !== undefined &&\n                    ![200, 201, 204, 401].includes(error.status)\n                    // 401 is handled by api.ts and the userLogic\n                ) {\n                    let errorMessage = error.detail || error.statusText\n\n                    if (!errorMessage && error.status === 404) {\n                        errorMessage = 'URL not found'\n                    }\n                    if (errorMessage) {\n                        lemonToast.error(`${identifierToHuman(actionKey)} failed: ${errorMessage}`)\n                    }\n                }\n                if (!errorsSilenced) {\n                    console.error({ error, reducerKey, actionKey })\n                }\n                ;(window as any).Sentry?.captureException(error)\n            },\n        }),\n        subscriptionsPlugin,\n        waitForPlugin,\n    ]\n\n    // To enable logging, run localStorage.setItem(\"ph-kea-debug\", true) in the console\n    if (window.JS_KEA_VERBOSE_LOGGING || ('localStorage' in window && window.localStorage.getItem('ph-kea-debug'))) {\n        plugins.push(loggerPlugin)\n    }\n\n    if ((window as any).__REDUX_DEVTOOLS_EXTENSION__) {\n        // eslint-disable-next-line no-console\n        console.log('NB Redux Dev Tools are disabled on PostHog. See: https://github.com/PostHog/posthog/issues/17482')\n    }\n\n    resetContext({\n        plugins: plugins,\n        createStore: {\n            // Disable redux dev-tools's compose by passing `compose` from redux directly\n            compose: ((...funcs: any[]) => {\n                if (funcs.length === 0) {\n                    return <T>(arg: T) => arg\n                }\n                if (funcs.length === 1) {\n                    return funcs[0]\n                }\n                return funcs.reduce(\n                    (a, b) =>\n                        (...args: any) =>\n                            a(b(...args))\n                )\n            }) as any,\n        },\n    })\n}\n", "import * as Sentry from '@sentry/react'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport posthog, { CaptureResult, PostHogConfig } from 'posthog-js'\n\ninterface WindowWithCypressCaptures extends Window {\n    // our Cypress tests will use this to check what events were sent to PostHog\n    _cypress_posthog_captures?: CaptureResult[]\n    // cypress puts this on the window, so we can check for it to see if Cypress is running\n    Cypress?: any\n}\n\nconst configWithSentry = (config: Partial<PostHogConfig>): Partial<PostHogConfig> => {\n    if ((window as any).SENTRY_DSN) {\n        config.on_xhr_error = (failedRequest: XMLHttpRequest) => {\n            const status = failedRequest.status\n            const statusText = failedRequest.statusText || 'no status text in error'\n            Sentry.captureException(\n                new Error(`Failed with status ${status} while sending to PostHog. Message: ${statusText}`),\n                { tags: { status, statusText } }\n            )\n        }\n    }\n    return config\n}\n\nexport function loadPostHogJS(): void {\n    if (window.JS_POSTHOG_API_KEY) {\n        posthog.init(\n            window.JS_POSTHOG_API_KEY,\n            configWithSentry({\n                opt_out_useragent_filter: window.location.hostname === 'localhost', // we ARE a bot when running in localhost, so we need to enable this opt-out\n                api_host: window.JS_POSTHOG_HOST,\n                ui_host: window.JS_POSTHOG_UI_HOST,\n                rageclick: true,\n                persistence: 'localStorage+cookie',\n                bootstrap: window.POSTHOG_USER_IDENTITY_WITH_FLAGS ? window.POSTHOG_USER_IDENTITY_WITH_FLAGS : {},\n                opt_in_site_apps: true,\n                api_transport: 'fetch',\n                before_send: (payload) => {\n                    const win = window as WindowWithCypressCaptures\n                    if (win.Cypress && payload) {\n                        win._cypress_posthog_captures = win._cypress_posthog_captures || []\n                        win._cypress_posthog_captures.push(payload)\n                    }\n                    return payload\n                },\n                loaded: (loadedInstance) => {\n                    if (loadedInstance.sessionRecording) {\n                        loadedInstance.sessionRecording._forceAllowLocalhostNetworkCapture = true\n                    }\n\n                    if (window.IMPERSONATED_SESSION) {\n                        loadedInstance.sessionManager?.resetSessionId()\n                        loadedInstance.opt_out_capturing()\n                    } else {\n                        loadedInstance.opt_in_capturing()\n                    }\n\n                    const Cypress = (window as WindowWithCypressCaptures).Cypress\n\n                    if (Cypress) {\n                        Object.entries(Cypress.env()).forEach(([key, value]) => {\n                            if (key.startsWith('POSTHOG_PROPERTY_')) {\n                                loadedInstance.register_for_session({\n                                    [key.replace('POSTHOG_PROPERTY_', 'E2E_TESTING_').toLowerCase()]: value,\n                                })\n                            }\n                        })\n                    }\n\n                    // This is a helpful flag to set to automatically reset the recording session on load for testing multiple recordings\n                    const shouldResetSessionOnLoad = loadedInstance.getFeatureFlag(FEATURE_FLAGS.SESSION_RESET_ON_LOAD)\n                    if (shouldResetSessionOnLoad) {\n                        loadedInstance.sessionManager?.resetSessionId()\n                    }\n\n                    // Make sure we have access to the object in window for debugging\n                    window.posthog = loadedInstance\n                },\n                scroll_root_selector: ['main', 'html'],\n                autocapture: {\n                    capture_copied_text: true,\n                },\n                capture_performance: { web_vitals: true },\n                person_profiles: 'always',\n                __preview_remote_config: true,\n            })\n        )\n    } else {\n        posthog.init('fake token', {\n            autocapture: false,\n            loaded: function (ph) {\n                ph.opt_out_capturing()\n            },\n        })\n    }\n\n    if (window.SENTRY_DSN) {\n        Sentry.init({\n            dsn: window.SENTRY_DSN,\n            environment: window.SENTRY_ENVIRONMENT,\n            ...(location.host.includes('posthog.com') && {\n                integrations: [new posthog.SentryIntegration(posthog, 'posthog', 1899813, undefined, '*')],\n            }),\n        })\n    }\n}\n"],
  "mappings": "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",
  "names": ["kea_1", "localStorageEngine", "x", "localStoragePlugin", "pluginOptions", "prefix", "_a", "separator", "_b", "storageEngine", "_c", "logic", "input", "_i", "key", "reducerOptions", "persistentReducers", "exports", "persistReducer", "key_", "_m", "storageCache", "__prefix", "__separator", "storageKey", "__spreadArray", "path", "_d", "_j", "_e", "_k", "_f", "_l", "_g", "_h", "reducer", "state", "action", "result", "reducersInput", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_kea", "import_client", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "useThemedHtml", "overflowHidden", "isDarkModeOn", "customCss", "themeLogic", "sceneConfig", "sceneLogic", "CUSTOM_THEME_STYLES_ID", "oldStyle", "newStyle", "root", "style", "backgroundColor", "e", "captureException", "init_dirname", "init_buffer", "init_process", "appScenes", "preloadedScenes", "productScenes", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_kea_router", "import_react", "import_jsx_runtime", "BillingAlertsV2", "billingAlert", "billingLogic", "reportBillingAlertShown", "reportBillingAlertActionClicked", "currentLocation", "sceneConfig", "sceneLogic", "alertHidden", "setAlertHidden", "showButton", "urls", "requiresHorizontalMargin", "buttonProps", "clsx", "LemonBanner", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_subscriptions", "actionBarLogic", "commandBarLogic", "commandPaletteLogic", "eventUsageLogic", "actions", "input", "result", "values", "value", "oldvalue", "cache", "event", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "PrefixIcon", "activeFlow", "IconPencil", "IconChevronRight", "ActionInput", "input", "actionBarLogic", "setInput", "LemonInput", "KeyboardShortcut", "isMac", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "actionScopeToName", "groupToName", "Tab", "clickhouseTabs", "tabToName", "getNameFromActionScope", "scope", "actionScopeToName", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_react", "import_jsx_runtime", "ActionResult", "result", "focused", "executeResult", "actionBarLogic", "ref", "isExecutable", "clsx", "import_jsx_runtime", "ResultsGroup", "scope", "results", "activeResultIndex", "getNameFromActionScope", "result", "ActionResult", "ActionResults", "commandSearchResultsGrouped", "actionBarLogic", "import_jsx_runtime", "ActionBar", "activeFlow", "actionBarLogic", "ActionInput", "ActionResults", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_loaders", "import_kea_router", "import_kea_subscriptions", "DEBOUNCE_MS", "calculateRank", "query", "rankPersons", "persons", "rank", "person", "rankGroups", "groups", "group", "searchBarLogic", "commandBarLogic", "groupsModel", "eventUsageLogic", "tab", "activeIndex", "maxIndex", "index", "values", "actions", "_", "breakpoint", "response", "clickhouseTabs", "api_default", "s", "searchResponse", "personsResponse", "group0Response", "group1Response", "group2Response", "group3Response", "group4Response", "a", "b", "searchLoading", "personsLoading", "group0Loading", "group1Loading", "group2Loading", "group3Loading", "group4Loading", "groupTypes", "group_type_index", "tabsForGroups", "tabsGrouped", "acc", "val", "tabsCountMemoized", "searchQuery", "counts", "Tab", "results", "prev", "next", "prevCounts", "prevQuery", "nextCounts", "nextQuery", "prevNulls", "v", "activeTab", "tabs", "combinedResults", "result", "urlForResult", "value", "oldvalue", "cache", "event", "selectionStart", "selectionEnd", "currentIndex", "prevIndex", "nextIndex", "urls", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "import_jsx_runtime", "SearchInput", "_", "ref", "currentTeam", "teamLogic", "searchQuery", "searchBarLogic", "setSearchQuery", "placeholder", "LemonInput", "KeyboardShortcut", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_react", "import_jsx_runtime", "SearchResult", "result", "resultIndex", "focused", "aggregationLabel", "searchBarLogic", "setActiveResultIndex", "openResult", "mobileLayout", "navigation3000Logic", "hideNavOnMobile", "ref", "clsx", "tabToName", "capitalizeFirstLetter", "ResultName", "SearchResultSkeleton", "LemonSkeleton", "summarizeInsight", "useSummarizeInsight", "type", "extra_fields", "query", "getQueryFromInsightLike", "groupDisplayId", "ResultDescription", "result_id", "Notebook", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "SearchResultPreview", "activeResultIndex", "combinedSearchResults", "searchBarLogic", "openResult", "result", "tabToName", "ResultName", "urlForResult", "ResultDescription", "LemonButton", "KeyboardShortcut", "import_jsx_runtime", "SearchResults", "combinedSearchResults", "combinedSearchLoading", "activeResultIndex", "searchBarLogic", "DetectiveHog", "SearchResultSkeleton", "result", "index", "SearchResult", "SearchResultPreview", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "SearchBarTab", "tab", "inputRef", "activeTab", "aggregationLabel", "searchBarLogic", "setActiveTab", "tabToName", "capitalizeFirstLetter", "Count", "tabsCount", "tabsLoading", "isLoading", "Spinner", "import_jsx_runtime", "SearchTabs", "inputRef", "tabsGrouped", "searchBarLogic", "group", "tabs", "groupToName", "tab", "SearchBarTab", "import_jsx_runtime", "SearchBar", "searchBarLogic", "inputRef", "SearchTabs", "SearchInput", "SearchResults", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "shortcutsLogic", "commandBarLogic", "actions", "cache", "event", "import_jsx_runtime", "Shortcuts", "shortcutsLogic", "KeyboardShortcut", "import_jsx_runtime", "CommandBarOverlay", "barStatus", "children", "ref", "CommandBar", "containerRef", "commandBarLogic", "hideCommandBar", "useOutsideClickHandler", "SearchBar", "ActionBar", "Shortcuts", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_react", "import_jsx_runtime", "CountDown", "datetime", "callback", "now", "setNow", "dayjs", "duration", "pastCountdown", "countdown", "interval", "ProjectNotice", "projectNoticeVariant", "navigationLogic", "currentOrganization", "organizationLogic", "logout", "loadUser", "userLogic", "user", "userLoading", "closeProjectNotice", "showInviteModal", "inviteLogic", "requestVerificationLink", "verifyEmailLogic", "sceneConfig", "sceneLogic", "altTeamForIngestion", "team", "relevantNotice", "Link", "urls", "IconGear", "IconPlus", "Spinner", "requiresHorizontalMargin", "LemonBanner", "clsx", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "MinimalNavigation", "user", "userLogic", "currentTeam", "teamLogic", "currentOrganization", "organizationLogic", "isAccountPopoverOpen", "isProjectSwitcherShown", "navigationLogic", "closeAccountPopover", "toggleAccountPopover", "toggleProjectSwitcher", "hideProjectSwitcher", "LemonButton", "IconLogomark", "urls", "Popover", "ProjectSwitcherOverlay", "Lettermark", "AccountPopoverOverlay", "ProfilePicture", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "import_jsx_runtime", "NOTICES", "SidebarChangeNoticeContent", "notices", "onAcknowledged", "notice", "i", "LemonDivider", "LemonButton", "IconX", "useSidebarChangeNotices", "identifier", "featureFlags", "featureFlagLogic", "noticeAcknowledged", "setNoticeAcknowledged", "change", "Co", "import_jsx_runtime", "NavbarButton", "React", "identifier", "shortTitle", "title", "forceTooltipOnHover", "tag", "onClick", "sideAction", "rest", "ref", "activeScene", "sceneLogic", "sceneBreadcrumbKeys", "breadcrumbsLogic", "hideNavOnMobile", "navigation3000Logic", "isNavCollapsed", "isUsingNewNav", "useFeatureFlag", "hasBeenClicked", "setHasBeenClicked", "here", "isNavCollapsedActually", "buttonProps", "content", "LemonTag", "buttonContent", "LemonButton", "e", "clsx", "notices", "onAcknowledged", "useSidebarChangeNotices", "Tooltip", "SidebarChangeNoticeContent", "import_jsx_runtime", "DebugNotice", "debugInfo", "setDebugInfo", "noticeHidden", "setNoticeHidden", "isNavCollapsed", "navigation3000Logic", "bottomNotice", "bottomNoticeRevision", "bottomNoticeBranch", "NavbarButton", "IconBranch", "LemonButton", "IconX", "Tooltip", "IconCode", "IconWarning", "Link", "import_jsx_runtime", "NavbarBottom", "user", "userLogic", "isAccountPopoverOpen", "systemStatusHealthy", "navigationLogic", "closeAccountPopover", "toggleAccountPopover", "toggleSearchBar", "commandBarLogic", "openSidePanel", "sidePanelStateLogic", "visibleTabs", "sidePanelLogic", "DebugNotice", "NavbarButton", "SidePanelActivationIcon", "IconSearch", "KeyboardShortcut", "IconToolbar", "urls", "IconGear", "IconWarning", "Popover", "AccountPopoverOverlay", "ProfilePicture", "import_jsx_runtime", "Navbar", "theme", "themeLogic", "isNavShown", "isSidebarShown", "activeNavbarItemId", "navbarItems", "mobileLayout", "navigation3000Logic", "toggleNavCollapsed", "hideNavOnMobile", "showSidebar", "hideSidebar", "featureFlags", "featureFlagLogic", "containerRef", "clsx", "ScrollableShadows", "section", "index", "item", "NavbarButton", "NavbarBottom", "Resizer", "shouldBeClosed", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_kea_router", "init_dirname", "init_buffer", "init_process", "import_react", "React", "import_jsx_runtime", "createContextScope", "scopeName", "createContextScopeDeps", "defaultContexts", "createContext", "rootComponentName", "defaultContext", "BaseContext", "index", "Provider", "props", "scope", "children", "context", "Context", "value", "useContext", "consumerName", "createScope", "scopeContexts", "contexts", "composeContextScopes", "scopes", "baseScope", "scopeHooks", "overrideScopes", "nextScopes", "useScope", "currentScope", "import_react", "React", "setRef", "ref", "value", "composeRefs", "refs", "node", "hasCleanup", "cleanups", "cleanup", "i", "useComposedRefs", "React", "import_jsx_runtime", "Slot", "props", "forwardedRef", "children", "slotProps", "childrenArray", "slottable", "isSlottable", "newElement", "newChildren", "child", "SlotClone", "childrenRef", "getElementRef", "mergeProps", "composeRefs", "Slottable", "childProps", "overrideProps", "propName", "slotPropValue", "childPropValue", "args", "element", "getter", "mayWarn", "import_jsx_runtime", "createCollection", "name", "PROVIDER_NAME", "createCollectionContext", "createCollectionScope", "createContextScope", "CollectionProviderImpl", "useCollectionContext", "CollectionProvider", "props", "scope", "children", "ref", "React", "itemMap", "COLLECTION_SLOT_NAME", "CollectionSlot", "forwardedRef", "context", "composedRefs", "useComposedRefs", "Slot", "ITEM_SLOT_NAME", "ITEM_DATA_ATTR", "CollectionItemSlot", "itemData", "useCollection", "collectionNode", "orderedNodes", "a", "b", "composeEventHandlers", "originalEventHandler", "ourEventHandler", "checkForDefaultPrevented", "event", "React", "React", "useCallbackRef", "callback", "callbackRef", "args", "useControllableState", "prop", "defaultProp", "onChange", "uncontrolledProp", "setUncontrolledProp", "useUncontrolledState", "isControlled", "value", "handleChange", "useCallbackRef", "setValue", "nextValue", "uncontrolledState", "prevValueRef", "React", "ReactDOM", "import_jsx_runtime", "NODES", "Primitive", "primitive", "node", "Node", "props", "forwardedRef", "asChild", "primitiveProps", "Comp", "Slot", "React", "React", "useLayoutEffect", "React2", "React", "useStateMachine", "initialState", "machine", "state", "event", "Presence", "props", "present", "children", "presence", "usePresence", "child", "ref", "useComposedRefs", "getElementRef", "node", "setNode", "stylesRef", "prevPresentRef", "prevAnimationNameRef", "send", "currentAnimationName", "getAnimationName", "useLayoutEffect2", "styles", "wasPresent", "prevAnimationName", "timeoutId", "ownerWindow", "handleAnimationEnd", "isCurrentAnimation", "currentFillMode", "handleAnimationStart", "element", "getter", "mayWarn", "React", "useReactId", "count", "useId", "deterministicId", "id", "setId", "useLayoutEffect2", "reactId", "import_jsx_runtime", "COLLAPSIBLE_NAME", "createCollapsibleContext", "createCollapsibleScope", "createContextScope", "CollapsibleProvider", "useCollapsibleContext", "Collapsible", "props", "forwardedRef", "__scopeCollapsible", "openProp", "defaultOpen", "disabled", "onOpenChange", "collapsibleProps", "open", "setOpen", "useControllableState", "useId", "prevOpen", "Primitive", "getState", "TRIGGER_NAME", "CollapsibleTrigger", "triggerProps", "context", "composeEventHandlers", "CONTENT_NAME", "CollapsibleContent", "forceMount", "contentProps", "Presence", "present", "CollapsibleContentImpl", "children", "isPresent", "setIsPresent", "ref", "composedRefs", "useComposedRefs", "heightRef", "height", "widthRef", "width", "isOpen", "isMountAnimationPreventedRef", "originalStylesRef", "rAF", "useLayoutEffect2", "node", "rect", "Root", "Trigger", "Content", "React", "import_jsx_runtime", "DirectionContext", "useDirection", "localDir", "globalDir", "DirectionContext", "import_jsx_runtime", "ACCORDION_NAME", "ACCORDION_KEYS", "Collection", "useCollection", "createCollectionScope", "createCollection", "createAccordionContext", "createAccordionScope", "createContextScope", "createCollapsibleScope", "useCollapsibleScope", "Accordion", "React", "props", "forwardedRef", "type", "accordionProps", "singleProps", "multipleProps", "AccordionImplMultiple", "AccordionImplSingle", "AccordionValueProvider", "useAccordionValueContext", "AccordionCollapsibleProvider", "useAccordionCollapsibleContext", "valueProp", "defaultValue", "onValueChange", "collapsible", "accordionSingleProps", "value", "setValue", "useControllableState", "AccordionImpl", "accordionMultipleProps", "handleItemOpen", "itemValue", "prevValue", "handleItemClose", "AccordionImplProvider", "useAccordionContext", "__scopeAccordion", "disabled", "dir", "orientation", "accordionRef", "composedRefs", "useComposedRefs", "getItems", "isDirectionLTR", "useDirection", "handleKeyDown", "composeEventHandlers", "event", "target", "triggerCollection", "item", "triggerIndex", "triggerCount", "nextIndex", "homeIndex", "endIndex", "moveNext", "movePrev", "clampedIndex", "Primitive", "ITEM_NAME", "AccordionItemProvider", "useAccordionItemContext", "AccordionItem", "accordionItemProps", "accordionContext", "valueContext", "collapsibleScope", "triggerId", "useId", "open", "Root", "getState", "HEADER_NAME", "AccordionHeader", "headerProps", "itemContext", "TRIGGER_NAME", "AccordionTrigger", "triggerProps", "collapsibleContext", "Trigger", "CONTENT_NAME", "AccordionContent", "contentProps", "Content", "Item", "Trigger", "AccordionTrigger", "Content", "AccordionContent", "import_react", "import_jsx_runtime", "LemonTreeNode", "className", "data", "selectedId", "focusedId", "handleClick", "renderItem", "expandedItemIds", "setExpandedItemIds", "defaultNodeIcon", "showFolderActiveState", "right", "ref", "ICON_CLASSES", "getIcon", "item", "IconChevronRight", "cn", "Root2", "s", "Item", "Trigger2", "LemonButton", "Content2", "LemonTree", "defaultSelectedFolderOrNodeId", "onFolderClick", "onNodeClick", "expandAllFolders", "contentRef", "props", "setSelectedId", "setFocusedId", "typeAheadBuffer", "setTypeAheadBuffer", "typeAheadTimeoutRef", "collectAllIds", "items", "allIds", "ids", "walkTreeItems", "targetId", "getVisibleItems", "traverse", "nodes", "node", "focusContent", "findPathToItem", "path", "newPath", "handleTypeAhead", "char", "newBuffer", "visibleItems", "currentIndex", "match", "willBeOpen", "handleKeyDown", "e", "currentItem", "nextItem", "id", "findParent", "child", "found", "parentItem", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_loaders", "import_kea_router", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "iconForType", "type", "IconSparkles", "IconMegaphone", "IconToggle", "IconFeatures", "IconTestTube", "IconGraph", "IconNotebook", "IconDashboard", "IconTarget", "IconMessage", "IconServer", "IconPlug", "IconChevronRight", "IconBook", "getDefaultTree", "groupNodes", "urls", "FEATURE_FLAGS", "IconDatabase", "IconRocket", "IconNotification", "IconHandMoney", "IconWarning", "IconPerson", "IconPeople", "groupNode", "IconLive", "IconAI", "IconPieChart", "IconRewindPlay", "IconCursorClick", "a", "b", "init_dirname", "init_buffer", "init_process", "import_kea_router", "convertFileSystemEntryToTreeDataItem", "imports", "rootNodes", "findOrCreateFolder", "nodes", "folderName", "fullPath", "folderNode", "node", "item", "pathSplit", "itemName", "folderPath", "folderParts", "currentLevel", "accumulatedPath", "part", "iconForType", "sortNodes", "a", "b", "import_jsx_runtime", "projectTreeLogic", "groupsModel", "featureFlagLogic", "type", "folder", "item", "oldPath", "newPath", "action", "savedItem", "actions", "values", "response", "api_default", "state", "a", "s", "unfiledLoadingCount", "savedItems", "allUnfiledItems", "urls", "key", "unfiledItems", "pendingActions", "items", "itemsByPath", "unappliedPaths", "split", "i", "unfiledLoading", "savedItemsLoading", "pendingLoaderLoading", "loadingPaths", "viableItems", "convertFileSystemEntryToTreeDataItem", "groupTypes", "groupsAccessStatus", "aggregationLabel", "groupType", "capitalizeFirstLetter", "_featureFlags", "groupNodes", "getDefaultTree", "pendingActionsCount", "Spinner", "IconUpload", "IconBook", "defaultTreeNodes", "projectTree", "projectRow", "import_jsx_runtime", "Draggable", "props", "attributes", "listeners", "setNodeRef", "transform", "useDraggable", "style", "CSS", "Droppable", "useDroppable", "ProjectTree", "theme", "themeLogic", "isNavShown", "mobileLayout", "navigation3000Logic", "toggleNavCollapsed", "hideNavOnMobile", "treeData", "viableItems", "loadingPaths", "unappliedPaths", "projectTreeLogic", "addFolder", "deleteItem", "moveItem", "containerRef", "clsx", "DndContext", "active", "over", "oldPath", "folder", "item", "i", "oldSplit", "oldFile", "newFile", "ScrollableShadows", "LemonTree", "children", "path", "loading", "Spinner", "IconUpload", "record", "More", "e", "LemonButton", "NavbarBottom", "Resizer", "shouldBeClosed", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_kea_router", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "MetalyticsSummary", "instanceId", "viewCount", "viewCountLoading", "metalyticsLogic", "safeViewCount", "safeUniqueUsers", "openSidePanel", "sidePanelStateLogic", "LemonButton", "IconPulse", "LemonBadge", "import_react", "import_jsx_runtime", "BREADCRUMBS_HEIGHT_COMPACT", "TopBar", "mobileLayout", "navigationLogic", "showNavOnMobile", "navigation3000Logic", "breadcrumbs", "renameState", "breadcrumbsLogic", "setActionsContainer", "compactionRate", "setCompactionRate", "effectiveCompactionRate", "isOnboarding", "handleScroll", "mainElement", "mainScrollTop", "compactionDistance", "newCompactionRate", "source", "target", "sourceEl", "targetEl", "main", "clsx", "LemonButton", "IconMenu", "breadcrumb", "React", "Breadcrumb", "joinBreadcrumbKey", "Here", "FlaggedFeature", "MetalyticsSummary", "here", "tentativelyRename", "finishRenaming", "popoverShown", "setPopoverShown", "joinedKey", "breadcrumbName", "nameElement", "EditableField", "newName", "newMode", "LemonTag", "Component", "Link", "breadcrumbContent", "IconChevronDown", "Popover", "hereName", "LemonSkeleton", "key", "import_jsx_runtime", "Navigation", "children", "sceneConfig", "theme", "themeLogic", "mobileLayout", "navigationLogic", "activeNavbarItem", "mode", "navigation3000Logic", "MinimalNavigation", "clsx", "FlaggedFeature", "FEATURE_FLAGS", "Navbar", "ProjectTree", "Sidebar", "TopBar", "BillingAlertsV2", "ProjectNotice", "SidePanel", "CommandBar", "import_jsx_runtime", "MOCK_NODE_PROCESS", "appLogic", "teamLogic", "organizationLogic", "s", "userLogic", "featureFlagLogic", "preflightLogic", "userLoading", "user", "receivedFeatureFlags", "featureFlagsTimedOut", "preflightLoading", "preflight", "actions", "cache", "App", "showApp", "showingDelayedSpinner", "sceneLogic", "appScenes", "apiStatusLogic", "useThemedHtml", "LoadedSceneLogics", "AppScene", "SpinnerOverlay", "LoadedSceneLogic", "scene", "loadedScenes", "logic", "key", "loadedScene", "breadcrumbsLogic", "activeScene", "activeLoadedScene", "sceneParams", "params", "sceneConfig", "isDarkModeOn", "themeLogic", "toastContainer", "ToastContainer", "Slide", "ToastCloseButton", "sceneElement", "SceneComponent", "wrappedSceneElement", "ErrorBoundary", "Navigation", "GlobalModals", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_forms", "import_kea_loaders", "import_kea_localstorage", "import_kea_router", "import_kea_subscriptions", "import_kea_waitfor", "import_kea_window_values", "ERROR_FILTER_ALLOW_LIST", "errorsSilenced", "loggerPlugin", "options", "store", "next", "action", "response", "initKea", "routerHistory", "routerLocation", "beforePlugins", "plugins", "path", "addProjectIdIfMissing", "removeProjectIdIfPresent", "error", "reducerKey", "actionKey", "ERROR_FILTER_ALLOW_LIST", "errorMessage", "lemonToast", "identifierToHuman", "errorsSilenced", "funcs", "arg", "a", "b", "args", "init_dirname", "init_buffer", "init_process", "configWithSentry", "config", "failedRequest", "status", "statusText", "captureException", "loadPostHogJS", "Co", "payload", "win", "loadedInstance", "Cypress", "key", "value", "FEATURE_FLAGS", "ph", "init", "import_jsx_runtime", "loadPostHogJS", "initKea", "renderApp", "root", "ErrorBoundary", "PostHogProvider", "Co", "App"]
}
