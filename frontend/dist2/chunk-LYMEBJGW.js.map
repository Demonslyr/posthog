{
  "version": 3,
  "sources": ["../src/scenes/pipeline/hogfunctions/list/hogFunctionTemplateListLogic.tsx"],
  "sourcesContent": ["import FuseClass from 'fuse.js'\nimport { actions, connect, kea, key, path, props, reducers, selectors } from 'kea'\nimport { loaders } from 'kea-loaders'\nimport { actionToUrl, combineUrl, router, urlToAction } from 'kea-router'\nimport api from 'lib/api'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { objectsEqual } from 'lib/utils'\nimport { hogFunctionNewUrl } from 'scenes/pipeline/hogfunctions/urls'\nimport { pipelineAccessLogic } from 'scenes/pipeline/pipelineAccessLogic'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { HogFunctionSubTemplateIdType, HogFunctionTemplateType, HogFunctionTypeType, UserType } from '~/types'\n\nimport type { hogFunctionTemplateListLogicType } from './hogFunctionTemplateListLogicType'\n\n// Helping kea-typegen navigate the exported default class for Fuse\nexport interface Fuse extends FuseClass<HogFunctionTemplateType> {}\n\nexport type HogFunctionTemplateListFilters = {\n    search?: string\n    filters?: Record<string, any>\n}\n\nexport type HogFunctionTemplateListLogicProps = {\n    type: HogFunctionTypeType\n    subTemplateId?: HogFunctionSubTemplateIdType\n    defaultFilters?: HogFunctionTemplateListFilters\n    forceFilters?: HogFunctionTemplateListFilters\n    syncFiltersWithUrl?: boolean\n}\n\nexport const shouldShowHogFunctionTemplate = (\n    hogFunctionTemplate: HogFunctionTemplateType,\n    user?: UserType | null\n): boolean => {\n    if (!user) {\n        return false\n    }\n    if (hogFunctionTemplate.status === 'alpha' && !user.is_staff) {\n        return false\n    }\n    return true\n}\n\nexport const hogFunctionTemplateListLogic = kea<hogFunctionTemplateListLogicType>([\n    props({} as HogFunctionTemplateListLogicProps),\n    key(\n        (props) =>\n            `${props.syncFiltersWithUrl ? 'scene' : 'default'}/${props.type ?? 'destination'}/${\n                props.subTemplateId ?? ''\n            }`\n    ),\n    path((id) => ['scenes', 'pipeline', 'destinationsLogic', id]),\n    connect({\n        values: [\n            pipelineAccessLogic,\n            ['canEnableNewDestinations'],\n            featureFlagLogic,\n            ['featureFlags'],\n            userLogic,\n            ['user'],\n        ],\n    }),\n    actions({\n        setFilters: (filters: Partial<HogFunctionTemplateListFilters>) => ({ filters }),\n        resetFilters: true,\n    }),\n    reducers(({ props }) => ({\n        filters: [\n            { ...(props.defaultFilters || {}), ...(props.forceFilters || {}) } as HogFunctionTemplateListFilters,\n            {\n                setFilters: (state, { filters }) => ({\n                    ...state,\n                    ...filters,\n                    ...(props.forceFilters || {}),\n                }),\n                resetFilters: () => ({\n                    ...(props.forceFilters || {}),\n                }),\n            },\n        ],\n    })),\n    loaders(({ props }) => ({\n        templates: [\n            [] as HogFunctionTemplateType[],\n            {\n                loadHogFunctionTemplates: async () => {\n                    return (\n                        await api.hogFunctions.listTemplates({\n                            types: [props.type],\n                            sub_template_id: props.subTemplateId,\n                        })\n                    ).results\n                },\n            },\n        ],\n    })),\n    selectors({\n        loading: [(s) => [s.templatesLoading], (x) => x],\n        templatesFuse: [\n            (s) => [s.templates],\n            (hogFunctionTemplates): Fuse => {\n                return new FuseClass(hogFunctionTemplates || [], {\n                    keys: ['name', 'description'],\n                    threshold: 0.3,\n                })\n            },\n        ],\n\n        filteredTemplates: [\n            (s) => [s.filters, s.templates, s.templatesFuse, s.user],\n            (filters, templates, templatesFuse, user): HogFunctionTemplateType[] => {\n                const { search } = filters\n                return (search ? templatesFuse.search(search).map((x) => x.item) : templates).filter((x) =>\n                    shouldShowHogFunctionTemplate(x, user)\n                )\n            },\n        ],\n\n        canEnableHogFunction: [\n            (s) => [s.canEnableNewDestinations],\n            (canEnableNewDestinations): ((template: HogFunctionTemplateType) => boolean) => {\n                return (template: HogFunctionTemplateType) => {\n                    return template?.free || canEnableNewDestinations\n                }\n            },\n        ],\n\n        urlForTemplate: [\n            (s) => [s.filters],\n            (filters): ((template: HogFunctionTemplateType) => string) => {\n                return (template: HogFunctionTemplateType) => {\n                    // Add the filters to the url and the template id\n                    return combineUrl(\n                        hogFunctionNewUrl(template.type, template.id),\n                        {},\n                        {\n                            configuration: {\n                                filters: filters.filters,\n                            },\n                        }\n                    ).url\n                }\n            },\n        ],\n    }),\n\n    actionToUrl(({ props, values }) => {\n        if (!props.syncFiltersWithUrl) {\n            return {}\n        }\n        const urlFromFilters = (): [\n            string,\n            Record<string, any>,\n            Record<string, any>,\n            {\n                replace: boolean\n            }\n        ] => [\n            router.values.location.pathname,\n\n            values.filters,\n            router.values.hashParams,\n            {\n                replace: true,\n            },\n        ]\n\n        return {\n            setFilters: () => urlFromFilters(),\n            resetFilters: () => urlFromFilters(),\n        }\n    }),\n\n    urlToAction(({ props, actions, values }) => ({\n        '*': (_, searchParams) => {\n            if (!props.syncFiltersWithUrl) {\n                return\n            }\n\n            if (!objectsEqual(values.filters, searchParams)) {\n                actions.setFilters(searchParams)\n            }\n        },\n    })),\n])\n"],
  "mappings": "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",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_loaders", "import_kea_router", "shouldShowHogFunctionTemplate", "hogFunctionTemplate", "user", "hogFunctionTemplateListLogic", "props", "id", "pipelineAccessLogic", "featureFlagLogic", "userLogic", "filters", "state", "api_default", "s", "x", "hogFunctionTemplates", "Fuse", "templates", "templatesFuse", "search", "canEnableNewDestinations", "template", "hogFunctionNewUrl", "values", "urlFromFilters", "actions", "_", "searchParams", "objectsEqual"]
}
