{
  "version": 3,
  "sources": ["../src/scenes/feature-flags/FeatureManagement.tsx", "../src/scenes/feature-flags/FeatureManagementDetail.tsx", "../src/scenes/feature-flags/featureManagementDetailLogic.ts", "../src/scenes/feature-flags/featureManagementLogic.ts"],
  "sourcesContent": ["import { useActions, useValues } from 'kea'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { SceneExport } from 'scenes/sceneTypes'\n\nimport { FeatureManagementDetail } from './FeatureManagementDetail'\nimport { featureManagementLogic } from './featureManagementLogic'\n\nexport const scene: SceneExport = {\n    component: FeatureManagement,\n    logic: featureManagementLogic,\n}\n\nexport function FeatureManagement(): JSX.Element {\n    const { activeFeatureId, features } = useValues(featureManagementLogic)\n    const { setActiveFeatureId } = useActions(featureManagementLogic)\n\n    return (\n        <div className=\"flex gap-4\">\n            <ul className=\"w-1/6 space-y-px\">\n                {features.results.map((feature) => (\n                    <li key={feature.id}>\n                        <LemonButton\n                            onClick={() => setActiveFeatureId(feature.id)}\n                            size=\"small\"\n                            fullWidth\n                            active={activeFeatureId === feature.id}\n                        >\n                            <span className=\"truncate\">{feature.name}</span>\n                        </LemonButton>\n                    </li>\n                ))}\n            </ul>\n            <div className=\"w-5/6\">\n                <FeatureManagementDetail />\n            </div>\n        </div>\n    )\n}\n", "import { LemonSkeleton } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\n\nimport { featureManagementDetailLogic } from './featureManagementDetailLogic'\n\nfunction Metadata(): JSX.Element {\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <h2 className=\"font-semibold text-lg\">Metadata</h2>\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n        </div>\n    )\n}\n\nfunction Rollout(): JSX.Element {\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <h2 className=\"font-semibold text-lg\">Rollout</h2>\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n        </div>\n    )\n}\n\nfunction Usage(): JSX.Element {\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <h2 className=\"font-semibold text-lg\">Usage</h2>\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n        </div>\n    )\n}\n\nfunction Activity(): JSX.Element {\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <h2 className=\"font-semibold text-lg\">Activity</h2>\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n        </div>\n    )\n}\n\nfunction History(): JSX.Element {\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <h2 className=\"font-semibold text-lg\">History</h2>\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n        </div>\n    )\n}\n\nfunction Permissions(): JSX.Element {\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <h2 className=\"font-semibold text-lg\">Permissions</h2>\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n            <LemonSkeleton className=\"w-full h-4\" active />\n        </div>\n    )\n}\n\nexport function FeatureManagementDetail(): JSX.Element {\n    const { activeFeature } = useValues(featureManagementDetailLogic)\n\n    return (\n        <div className=\"flex flex-col gap-16\">\n            <div className=\"text-xl font-bold\">{activeFeature?.name}</div>\n            <Metadata />\n            <Rollout />\n            <Usage />\n            <Activity />\n            <History />\n            <Permissions />\n        </div>\n    )\n}\n", "import { connect, kea, path, props } from 'kea'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport type { featureManagementDetailLogicType } from './featureManagementDetailLogicType'\nimport { featureManagementLogic } from './featureManagementLogic'\n\nexport const featureManagementDetailLogic = kea<featureManagementDetailLogicType>([\n    props({}),\n    path(['scenes', 'features', 'featureManagementDetailLogic']),\n    connect({\n        values: [teamLogic, ['currentTeamId'], featureManagementLogic, ['activeFeatureId', 'activeFeature']],\n    }),\n])\n", "import { actions, afterMount, connect, kea, listeners, path, props, reducers, selectors } from 'kea'\nimport { loaders } from 'kea-loaders'\nimport { actionToUrl, urlToAction } from 'kea-router'\nimport api from 'lib/api'\nimport { Scene } from 'scenes/sceneTypes'\nimport { teamLogic } from 'scenes/teamLogic'\nimport { urls } from 'scenes/urls'\n\nimport { Breadcrumb, Feature } from '~/types'\n\nimport type { featureManagementLogicType } from './featureManagementLogicType'\n\nexport interface FeatureManagementLogicProps {\n    id?: Feature['id']\n}\nexport interface FeaturesResult {\n    results: Feature[]\n    count: number\n    next?: string | null\n    previous?: string | null\n}\n\nexport const featureManagementLogic = kea<featureManagementLogicType>([\n    props({} as FeatureManagementLogicProps),\n    path(['scenes', 'features', 'featureManagementLogic']),\n    connect({\n        values: [teamLogic, ['currentTeamId']],\n    }),\n    actions({\n        setActiveFeatureId: (activeFeatureId: Feature['id']) => ({ activeFeatureId }),\n    }),\n    reducers({\n        activeFeatureId: [\n            null as Feature['id'] | null,\n            {\n                setActiveFeatureId: (_, { activeFeatureId }) => activeFeatureId,\n            },\n        ],\n    }),\n    loaders(({ values }) => ({\n        features: [\n            { results: [], count: 0, offset: 0 } as FeaturesResult,\n            {\n                loadFeatures: async () => {\n                    const response = await api.get(`api/projects/${values.currentTeamId}/features`)\n                    return response.data as FeaturesResult\n                },\n            },\n        ],\n    })),\n    selectors({\n        activeFeature: [\n            (s) => [s.activeFeatureId, s.features],\n            (activeFeatureId, features) => features.results.find((feature) => feature.id === activeFeatureId) || null,\n        ],\n        breadcrumbs: [\n            (s) => [s.activeFeatureId, s.activeFeature],\n            (activeFeatureId, activeFeature): Breadcrumb[] => {\n                const breadcrumbs: Breadcrumb[] = [\n                    {\n                        key: Scene.FeatureManagement,\n                        name: 'Features',\n                        path: urls.featureManagement(),\n                    },\n                ]\n\n                if (activeFeatureId) {\n                    breadcrumbs.push({\n                        key: [Scene.FeatureManagement, activeFeatureId],\n                        name: activeFeature?.name ?? 'Feature',\n                        path: urls.featureManagement(String(activeFeatureId)),\n                    })\n                }\n\n                return breadcrumbs\n            },\n        ],\n    }),\n    listeners(({ actions, values }) => ({\n        loadFeaturesSuccess: ({ features }) => {\n            if (values.activeFeatureId === null && features.results.length > 0) {\n                actions.setActiveFeatureId(features.results[0].id)\n            }\n        },\n    })),\n    actionToUrl({\n        setActiveFeatureId: ({ activeFeatureId }) => {\n            return urls.featureManagement(activeFeatureId)\n        },\n    }),\n    urlToAction(({ actions, values }) => ({\n        '/features/:id': ({ id }) => {\n            if (id && String(values.activeFeatureId) !== id) {\n                actions.setActiveFeatureId(Number(id))\n            }\n        },\n    })),\n    afterMount(({ actions }) => {\n        actions.loadFeatures()\n    }),\n])\n"],
  "mappings": "igCAAAA,IAAAC,IAAAC,IAAA,IAAAC,EAAsC,OCAtCC,IAAAC,IAAAC,IACA,IAAAC,EAA0B,OCD1BC,IAAAC,IAAAC,IAAA,IAAAC,EAA0C,OCA1CC,IAAAC,IAAAC,IAAA,IAAAC,EAA+F,OAC/FC,EAAwB,OACxBC,EAAyC,OAoBlC,IAAMC,KAAyB,OAAgC,IAClE,SAAM,CAAC,CAAgC,KACvC,QAAK,CAAC,SAAU,WAAY,wBAAwB,CAAC,KACrD,WAAQ,CACJ,OAAQ,CAACC,EAAW,CAAC,eAAe,CAAC,CACzC,CAAC,KACD,WAAQ,CACJ,mBAAqBC,IAAoC,CAAE,gBAAAA,CAAgB,EAC/E,CAAC,KACD,YAAS,CACL,gBAAiB,CACb,KACA,CACI,mBAAoB,CAACC,EAAG,CAAE,gBAAAD,CAAgB,IAAMA,CACpD,CACJ,CACJ,CAAC,KACD,WAAQ,CAAC,CAAE,OAAAE,CAAO,KAAO,CACrB,SAAU,CACN,CAAE,QAAS,CAAC,EAAG,MAAO,EAAG,OAAQ,CAAE,EACnC,CACI,aAAc,UACO,MAAMC,EAAI,IAAI,gBAAgBD,EAAO,aAAa,WAAW,GAC9D,IAExB,CACJ,CACJ,EAAE,KACF,aAAU,CACN,cAAe,CACVE,GAAM,CAACA,EAAE,gBAAiBA,EAAE,QAAQ,EACrC,CAACJ,EAAiBK,IAAaA,EAAS,QAAQ,KAAMC,GAAYA,EAAQ,KAAON,CAAe,GAAK,IACzG,EACA,YAAa,CACRI,GAAM,CAACA,EAAE,gBAAiBA,EAAE,aAAa,EAC1C,CAACJ,EAAiBO,IAAgC,CAC9C,IAAMC,EAA4B,CAC9B,CACI,wBACA,KAAM,WACN,KAAMC,EAAK,kBAAkB,CACjC,CACJ,EAEA,OAAIT,GACAQ,EAAY,KAAK,CACb,IAAK,qBAA0BR,CAAe,EAC9C,KAAMO,GAAe,MAAQ,UAC7B,KAAME,EAAK,kBAAkB,OAAOT,CAAe,CAAC,CACxD,CAAC,EAGEQ,CACX,CACJ,CACJ,CAAC,KACD,aAAU,CAAC,CAAE,QAAAE,EAAS,OAAAR,CAAO,KAAO,CAChC,oBAAqB,CAAC,CAAE,SAAAG,CAAS,IAAM,CAC/BH,EAAO,kBAAoB,MAAQG,EAAS,QAAQ,OAAS,GAC7DK,EAAQ,mBAAmBL,EAAS,QAAQ,CAAC,EAAE,EAAE,CAEzD,CACJ,EAAE,KACF,eAAY,CACR,mBAAoB,CAAC,CAAE,gBAAAL,CAAgB,IAC5BS,EAAK,kBAAkBT,CAAe,CAErD,CAAC,KACD,eAAY,CAAC,CAAE,QAAAU,EAAS,OAAAR,CAAO,KAAO,CAClC,gBAAiB,CAAC,CAAE,GAAAS,CAAG,IAAM,CACrBA,GAAM,OAAOT,EAAO,eAAe,IAAMS,GACzCD,EAAQ,mBAAmB,OAAOC,CAAE,CAAC,CAE7C,CACJ,EAAE,KACF,cAAW,CAAC,CAAE,QAAAD,CAAQ,IAAM,CACxBA,EAAQ,aAAa,CACzB,CAAC,CACL,CAAC,ED9FM,IAAME,KAA+B,OAAsC,IAC9E,SAAM,CAAC,CAAC,KACR,QAAK,CAAC,SAAU,WAAY,8BAA8B,CAAC,KAC3D,WAAQ,CACJ,OAAQ,CAACC,EAAW,CAAC,eAAe,EAAGC,EAAwB,CAAC,kBAAmB,eAAe,CAAC,CACvG,CAAC,CACL,CAAC,EDLO,IAAAC,EAAA,OAFR,SAASC,GAAwB,CAC7B,SACI,QAAC,OAAI,UAAU,sBACX,oBAAC,MAAG,UAAU,wBAAwB,oBAAQ,KAC9C,OAACC,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,GACjD,CAER,CAEA,SAASC,GAAuB,CAC5B,SACI,QAAC,OAAI,UAAU,sBACX,oBAAC,MAAG,UAAU,wBAAwB,mBAAO,KAC7C,OAACD,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,GACjD,CAER,CAEA,SAASE,GAAqB,CAC1B,SACI,QAAC,OAAI,UAAU,sBACX,oBAAC,MAAG,UAAU,wBAAwB,iBAAK,KAC3C,OAACF,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,GACjD,CAER,CAEA,SAASG,GAAwB,CAC7B,SACI,QAAC,OAAI,UAAU,sBACX,oBAAC,MAAG,UAAU,wBAAwB,oBAAQ,KAC9C,OAACH,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,GACjD,CAER,CAEA,SAASI,GAAuB,CAC5B,SACI,QAAC,OAAI,UAAU,sBACX,oBAAC,MAAG,UAAU,wBAAwB,mBAAO,KAC7C,OAACJ,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,GACjD,CAER,CAEA,SAASK,GAA2B,CAChC,SACI,QAAC,OAAI,UAAU,sBACX,oBAAC,MAAG,UAAU,wBAAwB,uBAAW,KACjD,OAACL,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,KAC7C,OAACA,EAAA,CAAc,UAAU,aAAa,OAAM,GAAC,GACjD,CAER,CAEO,SAASM,GAAuC,CACnD,GAAM,CAAE,cAAAC,CAAc,KAAI,aAAUC,CAA4B,EAEhE,SACI,QAAC,OAAI,UAAU,uBACX,oBAAC,OAAI,UAAU,oBAAqB,SAAAD,GAAe,KAAK,KACxD,OAACR,EAAA,EAAS,KACV,OAACE,EAAA,EAAQ,KACT,OAACC,EAAA,EAAM,KACP,OAACC,EAAA,EAAS,KACV,OAACC,EAAA,EAAQ,KACT,OAACC,EAAA,EAAY,GACjB,CAER,CDpEQ,IAAAI,EAAA,OAVKC,GAAqB,CAC9B,UAAWC,EACX,MAAOC,CACX,EAEO,SAASD,GAAiC,CAC7C,GAAM,CAAE,gBAAAE,EAAiB,SAAAC,CAAS,KAAI,aAAUF,CAAsB,EAChE,CAAE,mBAAAG,CAAmB,KAAI,cAAWH,CAAsB,EAEhE,SACI,QAAC,OAAI,UAAU,aACX,oBAAC,MAAG,UAAU,mBACT,SAAAE,EAAS,QAAQ,IAAKE,MACnB,OAAC,MACG,mBAACC,EAAA,CACG,QAAS,IAAMF,EAAmBC,EAAQ,EAAE,EAC5C,KAAK,QACL,UAAS,GACT,OAAQH,IAAoBG,EAAQ,GAEpC,mBAAC,QAAK,UAAU,WAAY,SAAAA,EAAQ,KAAK,EAC7C,GARKA,EAAQ,EASjB,CACH,EACL,KACA,OAAC,OAAI,UAAU,QACX,mBAACE,EAAA,EAAwB,EAC7B,GACJ,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_loaders", "import_kea_router", "featureManagementLogic", "teamLogic", "activeFeatureId", "_", "values", "api_default", "s", "features", "feature", "activeFeature", "breadcrumbs", "urls", "actions", "id", "featureManagementDetailLogic", "teamLogic", "featureManagementLogic", "import_jsx_runtime", "Metadata", "LemonSkeleton", "Rollout", "Usage", "Activity", "History", "Permissions", "FeatureManagementDetail", "activeFeature", "featureManagementDetailLogic", "import_jsx_runtime", "scene", "FeatureManagement", "featureManagementLogic", "activeFeatureId", "features", "setActiveFeatureId", "feature", "LemonButton", "FeatureManagementDetail"]
}
