{
  "version": 3,
  "sources": ["../src/scenes/data-warehouse/DataWarehouseInitialBillingLimitNotice.tsx", "../src/scenes/billing/InitialBillingLimitNotice.tsx"],
  "sourcesContent": ["import { useValues } from 'kea'\nimport { InitialBillingLimitNotice } from 'scenes/billing/InitialBillingLimitNotice'\n\nimport { ProductKey } from '~/types'\n\nimport { dataWarehouseSettingsLogic } from './settings/dataWarehouseSettingsLogic'\n\nexport const DataWarehouseInitialBillingLimitNotice = (): JSX.Element | null => {\n    const { dataWarehouseSources, selfManagedTables } = useValues(dataWarehouseSettingsLogic)\n\n    const hasSources =\n        (dataWarehouseSources?.results && dataWarehouseSources?.results.length > 0) || selfManagedTables?.length > 0\n\n    return hasSources ? <InitialBillingLimitNotice product_key={ProductKey.DATA_WAREHOUSE} /> : null\n}\n", "import { useValues } from 'kea'\nimport { LemonBanner } from 'lib/lemon-ui/LemonBanner'\nimport { urls } from 'scenes/urls'\n\nimport { BillingProductV2Type, ProductKey } from '~/types'\n\nimport { billingLogic } from './billingLogic'\nimport { billingProductLogic } from './billingProductLogic'\n\nconst InitialBillingLimitNoticeContents = ({ product }: { product: BillingProductV2Type }): JSX.Element | null => {\n    const { currentAndUpgradePlans, hasCustomLimitSet, customLimitUsd } = useValues(billingProductLogic({ product }))\n    const initialBillingLimit = currentAndUpgradePlans?.currentPlan?.initial_billing_limit\n    const isUsingInitialBillingLimit =\n        hasCustomLimitSet && currentAndUpgradePlans?.currentPlan?.initial_billing_limit == customLimitUsd\n\n    return isUsingInitialBillingLimit ? (\n        <LemonBanner\n            type=\"info\"\n            className=\"my-4\"\n            action={{\n                type: 'primary',\n                children: 'Change limit',\n                to: urls.organizationBilling([product.type as ProductKey]),\n            }}\n            dismissKey={`initial-billing-limit-notice-${product.type}`}\n        >\n            <p className=\"flex-1 min-w-full sm:min-w-0\">\n                Default initial billing limit of <b className=\"text-accent-primary\">${initialBillingLimit}</b> active.\n            </p>\n            <p className=\"font-normal\">\n                This protects you from accidentally incurring large unexpected charges. Some features may stop working\n                and data may be dropped if your usage exceeds your limit.\n            </p>\n        </LemonBanner>\n    ) : null\n}\n\nexport const InitialBillingLimitNotice = ({ product_key }: { product_key: ProductKey }): JSX.Element | null => {\n    const { billing } = useValues(billingLogic)\n    const product = billing?.products.find((p) => p.type === product_key)\n    return product ? <InitialBillingLimitNoticeContents product={product} /> : null\n}\n"],
  "mappings": "gKAAAA,IAAAC,IAAAC,IAAA,IAAAC,EAA0B,OCA1BC,IAAAC,IAAAC,IAAA,IAAAC,EAA0B,OA2BuB,IAAAC,EAAA,OAlB3CC,EAAoC,CAAC,CAAE,QAAAC,CAAQ,IAA6D,CAC9G,GAAM,CAAE,uBAAAC,EAAwB,kBAAAC,EAAmB,eAAAC,CAAe,KAAI,aAAUC,EAAoB,CAAE,QAAAJ,CAAQ,CAAC,CAAC,EAC1GK,EAAsBJ,GAAwB,aAAa,sBAIjE,OAFIC,GAAqBD,GAAwB,aAAa,uBAAyBE,KAGnF,QAACG,EAAA,CACG,KAAK,OACL,UAAU,OACV,OAAQ,CACJ,KAAM,UACN,SAAU,eACV,GAAIC,EAAK,oBAAoB,CAACP,EAAQ,IAAkB,CAAC,CAC7D,EACA,WAAY,gCAAgCA,EAAQ,IAAI,GAExD,qBAAC,KAAE,UAAU,+BAA+B,iDACP,QAAC,KAAE,UAAU,sBAAsB,cAAEK,GAAoB,EAAI,YAClG,KACA,OAAC,KAAE,UAAU,cAAc,4KAG3B,GACJ,EACA,IACR,EAEaG,EAA4B,CAAC,CAAE,YAAAC,CAAY,IAAuD,CAC3G,GAAM,CAAE,QAAAC,CAAQ,KAAI,aAAUC,CAAY,EACpCX,EAAUU,GAAS,SAAS,KAAME,GAAMA,EAAE,OAASH,CAAW,EACpE,OAAOT,KAAU,OAACD,EAAA,CAAkC,QAASC,EAAS,EAAK,IAC/E,ED5BwB,IAAAa,EAAA,OANXC,EAAyC,IAA0B,CAC5E,GAAM,CAAE,qBAAAC,EAAsB,kBAAAC,CAAkB,KAAI,aAAUC,CAA0B,EAKxF,OAFKF,GAAsB,SAAWA,GAAsB,QAAQ,OAAS,GAAMC,GAAmB,OAAS,KAE3F,OAACE,EAAA,CAA0B,6BAAwC,EAAK,IAChG",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "InitialBillingLimitNoticeContents", "product", "currentAndUpgradePlans", "hasCustomLimitSet", "customLimitUsd", "billingProductLogic", "initialBillingLimit", "LemonBanner", "urls", "InitialBillingLimitNotice", "product_key", "billing", "billingLogic", "p", "import_jsx_runtime", "DataWarehouseInitialBillingLimitNotice", "dataWarehouseSources", "selfManagedTables", "dataWarehouseSettingsLogic", "InitialBillingLimitNotice"]
}
