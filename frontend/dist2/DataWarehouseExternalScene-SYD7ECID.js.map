{
  "version": 3,
  "sources": ["../src/scenes/data-warehouse/external/DataWarehouseExternalScene.tsx"],
  "sourcesContent": ["import { LemonButton, Link, Spinner } from '@posthog/lemon-ui'\nimport { BindLogic, useActions, useValues } from 'kea'\nimport { PageHeader } from 'lib/components/PageHeader'\nimport { insightLogic } from 'scenes/insights/insightLogic'\nimport { insightSceneLogic } from 'scenes/insights/insightSceneLogic'\nimport { SceneExport } from 'scenes/sceneTypes'\nimport { urls } from 'scenes/urls'\n\nimport { PipelineTab } from '~/types'\n\nimport { DataWarehouseInitialBillingLimitNotice } from '../DataWarehouseInitialBillingLimitNotice'\nimport { DATAWAREHOUSE_EDITOR_ITEM_ID, dataWarehouseExternalSceneLogic } from './dataWarehouseExternalSceneLogic'\nimport { DataWarehouseTables } from './DataWarehouseTables'\n\nexport const scene: SceneExport = {\n    component: DataWarehouseExternalScene,\n    logic: dataWarehouseExternalSceneLogic,\n}\n\nexport function DataWarehouseExternalScene(): JSX.Element {\n    const { viewLoading } = useValues(dataWarehouseExternalSceneLogic)\n\n    const logic = insightLogic({\n        dashboardItemId: DATAWAREHOUSE_EDITOR_ITEM_ID,\n        cachedInsight: null,\n    })\n    const { insightSaving, insightProps } = useValues(logic)\n    const { saveAs } = useActions(logic)\n\n    const insightDataLogicProps = {\n        ...insightProps,\n    }\n\n    return (\n        <div>\n            <PageHeader\n                buttons={\n                    <>\n                        <LemonButton\n                            type=\"primary\"\n                            data-attr=\"save-exploration\"\n                            onClick={() => saveAs(true, false)}\n                            loading={insightSaving}\n                        >\n                            Save as insight\n                        </LemonButton>\n                        <LemonButton type=\"secondary\" to={urls.pipeline(PipelineTab.Sources)}>\n                            Manage sources\n                        </LemonButton>\n                    </>\n                }\n                caption={\n                    <div>\n                        Explore all your data in PostHog with{' '}\n                        <Link to=\"https://posthog.com/docs/hogql\" target=\"_blank\">\n                            HogQL\n                        </Link>\n                        . Connect your own tables from S3 to query data from outside PostHog.{' '}\n                        <Link to=\"https://posthog.com/docs/data/data-warehouse\">Learn more</Link>\n                    </div>\n                }\n            />\n            <DataWarehouseInitialBillingLimitNotice />\n            {viewLoading ? (\n                <Spinner />\n            ) : (\n                <BindLogic logic={insightSceneLogic} props={{}}>\n                    <DataWarehouseTables insightProps={insightDataLogicProps} />\n                </BindLogic>\n            )}\n        </div>\n    )\n}\n"],
  "mappings": "83CAAAA,IAAAC,IAAAC,IACA,IAAAC,EAAiD,OAoC7B,IAAAC,EAAA,OAvBPC,EAAqB,CAC9B,UAAWC,EACX,MAAOC,CACX,EAEO,SAASD,GAA0C,CACtD,GAAM,CAAE,YAAAE,CAAY,KAAI,aAAUD,CAA+B,EAE3DE,EAAQC,EAAa,CACvB,gBAAiBC,EACjB,cAAe,IACnB,CAAC,EACK,CAAE,cAAAC,EAAe,aAAAC,CAAa,KAAI,aAAUJ,CAAK,EACjD,CAAE,OAAAK,CAAO,KAAI,cAAWL,CAAK,EAE7BM,EAAwB,CAC1B,GAAGF,CACP,EAEA,SACI,QAAC,OACG,oBAACG,EAAA,CACG,WACI,oBACI,oBAACC,EAAA,CACG,KAAK,UACL,YAAU,mBACV,QAAS,IAAMH,EAAO,GAAM,EAAK,EACjC,QAASF,EACZ,2BAED,KACA,OAACK,EAAA,CAAY,KAAK,YAAY,GAAIC,EAAK,kBAA4B,EAAG,0BAEtE,GACJ,EAEJ,WACI,QAAC,OAAI,kDACqC,OACtC,OAACC,EAAA,CAAK,GAAG,iCAAiC,OAAO,SAAS,iBAE1D,EAAO,wEAC+D,OACtE,OAACA,EAAA,CAAK,GAAG,+CAA+C,sBAAU,GACtE,EAER,KACA,OAACC,EAAA,EAAuC,EACvCZ,KACG,OAACa,EAAA,EAAQ,KAET,OAAC,aAAU,MAAOC,EAAmB,MAAO,CAAC,EACzC,mBAACC,EAAA,CAAoB,aAAcR,EAAuB,EAC9D,GAER,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "scene", "DataWarehouseExternalScene", "dataWarehouseExternalSceneLogic", "viewLoading", "logic", "insightLogic", "DATAWAREHOUSE_EDITOR_ITEM_ID", "insightSaving", "insightProps", "saveAs", "insightDataLogicProps", "PageHeader", "LemonButton", "urls", "Link", "DataWarehouseInitialBillingLimitNotice", "Spinner", "insightSceneLogic", "DataWarehouseTables"]
}
