{
  "version": 3,
  "sources": ["../../products/early_access_features/frontend/EarlyAccessFeature.tsx", "../../products/early_access_features/frontend/InstructionsModal.tsx"],
  "sourcesContent": ["import { IconFlag, IconQuestion, IconX } from '@posthog/icons'\nimport { LemonButton, LemonDivider, LemonInput, LemonSkeleton, LemonTag, LemonTextArea, Link } from '@posthog/lemon-ui'\nimport clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { Form } from 'kea-forms'\nimport { router } from 'kea-router'\nimport { FlagSelector } from 'lib/components/FlagSelector'\nimport { NotFound } from 'lib/components/NotFound'\nimport { PageHeader } from 'lib/components/PageHeader'\nimport { useFeatureFlag } from 'lib/hooks/useFeatureFlag'\nimport { LemonDialog } from 'lib/lemon-ui/LemonDialog'\nimport { LemonField } from 'lib/lemon-ui/LemonField'\nimport { LemonTabs } from 'lib/lemon-ui/LemonTabs'\nimport { useState } from 'react'\nimport { LinkedHogFunctions } from 'scenes/pipeline/hogfunctions/list/LinkedHogFunctions'\nimport { SceneExport } from 'scenes/sceneTypes'\nimport { urls } from 'scenes/urls'\n\nimport { Query } from '~/queries/Query/Query'\nimport { Node, NodeKind, QuerySchema } from '~/queries/schema/schema-general'\nimport {\n    EarlyAccessFeatureStage,\n    EarlyAccessFeatureTabs,\n    EarlyAccessFeatureType,\n    FilterLogicalOperator,\n    HogFunctionFiltersType,\n    PersonPropertyFilter,\n    PropertyFilterType,\n    PropertyOperator,\n    RecordingUniversalFilters,\n    ReplayTabs,\n} from '~/types'\n\nimport { earlyAccessFeatureLogic } from './earlyAccessFeatureLogic'\nimport { InstructionsModal } from './InstructionsModal'\n\nexport const scene: SceneExport = {\n    component: EarlyAccessFeature,\n    logic: earlyAccessFeatureLogic,\n    paramsToProps: ({ params: { id } }): (typeof earlyAccessFeatureLogic)['props'] => ({\n        id: id && id !== 'new' ? id : 'new',\n    }),\n}\n\nexport function EarlyAccessFeature({ id }: { id?: string } = {}): JSX.Element {\n    const {\n        earlyAccessFeature,\n        earlyAccessFeatureLoading,\n        isEarlyAccessFeatureSubmitting,\n        isEditingFeature,\n        earlyAccessFeatureMissing,\n        implementOptInInstructionsModal,\n    } = useValues(earlyAccessFeatureLogic)\n    const {\n        submitEarlyAccessFeatureRequest,\n        loadEarlyAccessFeature,\n        editFeature,\n        updateStage,\n        deleteEarlyAccessFeature,\n        toggleImplementOptInInstructionsModal,\n    } = useActions(earlyAccessFeatureLogic)\n\n    const isNewEarlyAccessFeature = id === 'new' || id === undefined\n    const showLinkedHogFunctions = useFeatureFlag('HOG_FUNCTIONS_LINKED')\n\n    if (earlyAccessFeatureMissing) {\n        return <NotFound object=\"early access feature\" />\n    }\n\n    if (earlyAccessFeatureLoading) {\n        return <LemonSkeleton active />\n    }\n\n    const destinationFilters: HogFunctionFiltersType | null =\n        !isEditingFeature && !isNewEarlyAccessFeature && 'id' in earlyAccessFeature && showLinkedHogFunctions\n            ? {\n                  events: [\n                      {\n                          id: '$feature_enrollment_update',\n                          type: 'events',\n                          properties: [\n                              {\n                                  key: '$feature_flag',\n                                  value: [earlyAccessFeature.feature_flag.key],\n                                  operator: PropertyOperator.Exact,\n                                  type: PropertyFilterType.Event,\n                              },\n                          ],\n                      },\n                  ],\n              }\n            : null\n\n    return (\n        <Form id=\"early-access-feature\" formKey=\"earlyAccessFeature\" logic={earlyAccessFeatureLogic}>\n            <PageHeader\n                buttons={\n                    !earlyAccessFeatureLoading ? (\n                        earlyAccessFeature.stage != EarlyAccessFeatureStage.GeneralAvailability &&\n                        (isNewEarlyAccessFeature || isEditingFeature) ? (\n                            <>\n                                <LemonButton\n                                    type=\"secondary\"\n                                    data-attr=\"cancel-feature\"\n                                    onClick={() => {\n                                        if (isEditingFeature) {\n                                            editFeature(false)\n                                            loadEarlyAccessFeature()\n                                        } else {\n                                            router.actions.push(urls.earlyAccessFeatures())\n                                        }\n                                    }}\n                                    disabledReason={isEarlyAccessFeatureSubmitting ? 'Saving\u2026' : undefined}\n                                >\n                                    Cancel\n                                </LemonButton>\n                                <LemonButton\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    data-attr=\"save-feature\"\n                                    onClick={() => {\n                                        submitEarlyAccessFeatureRequest(earlyAccessFeature)\n                                    }}\n                                    loading={isEarlyAccessFeatureSubmitting}\n                                    form=\"early-access-feature\"\n                                >\n                                    {isNewEarlyAccessFeature ? 'Save as draft' : 'Save'}\n                                </LemonButton>\n                            </>\n                        ) : (\n                            <>\n                                <LemonButton\n                                    data-attr=\"delete-feature\"\n                                    status=\"danger\"\n                                    type=\"secondary\"\n                                    onClick={() => {\n                                        LemonDialog.open({\n                                            title: 'Permanently delete feature?',\n                                            description:\n                                                'Doing so will remove any opt in conditions from the feature flag.',\n                                            primaryButton: {\n                                                children: 'Delete',\n                                                type: 'primary',\n                                                status: 'danger',\n                                                'data-attr': 'confirm-delete-feature',\n                                                onClick: () => {\n                                                    // conditional above ensures earlyAccessFeature is not NewEarlyAccessFeature\n                                                    deleteEarlyAccessFeature(\n                                                        (earlyAccessFeature as EarlyAccessFeatureType)?.id\n                                                    )\n                                                },\n                                            },\n                                            secondaryButton: {\n                                                children: 'Close',\n                                                type: 'secondary',\n                                            },\n                                        })\n                                    }}\n                                >\n                                    Delete\n                                </LemonButton>\n                                {earlyAccessFeature.stage == EarlyAccessFeatureStage.Beta && (\n                                    <LemonButton\n                                        data-attr=\"archive-feature\"\n                                        type=\"secondary\"\n                                        onClick={() => updateStage(EarlyAccessFeatureStage.Archived)}\n                                    >\n                                        Archive\n                                    </LemonButton>\n                                )}\n                                {earlyAccessFeature.stage == EarlyAccessFeatureStage.Archived && (\n                                    <LemonButton\n                                        data-attr=\"reactive-feature\"\n                                        type=\"secondary\"\n                                        onClick={() => updateStage(EarlyAccessFeatureStage.Beta)}\n                                    >\n                                        Reactivate beta\n                                    </LemonButton>\n                                )}\n                                {earlyAccessFeature.stage == EarlyAccessFeatureStage.Draft && (\n                                    <LemonButton\n                                        onClick={() => updateStage(EarlyAccessFeatureStage.Beta)}\n                                        tooltip=\"Make beta feature available\"\n                                        type=\"primary\"\n                                    >\n                                        Release beta\n                                    </LemonButton>\n                                )}\n                                <LemonDivider vertical />\n                                {earlyAccessFeature.stage != EarlyAccessFeatureStage.GeneralAvailability && (\n                                    <LemonButton\n                                        type=\"secondary\"\n                                        onClick={() => editFeature(true)}\n                                        loading={false}\n                                        data-attr=\"edit-feature\"\n                                    >\n                                        Edit\n                                    </LemonButton>\n                                )}\n                            </>\n                        )\n                    ) : undefined\n                }\n                delimited\n            />\n            <div className={clsx(isEditingFeature || isNewEarlyAccessFeature ? 'max-w-160' : null)}>\n                <div className=\"flex flex-col gap-4 flex-2 min-w-[15rem]\">\n                    {isNewEarlyAccessFeature && (\n                        <LemonField name=\"name\" label=\"Name\">\n                            <LemonInput data-attr=\"feature-name\" />\n                        </LemonField>\n                    )}\n\n                    <div className=\"flex flex-wrap items-start gap-4\">\n                        <div className=\"flex-1 min-w-[20rem]\">\n                            {'feature_flag' in earlyAccessFeature ? (\n                                <LemonField.Pure label=\"Connected Feature flag\">\n                                    <div>\n                                        <LemonButton\n                                            type=\"secondary\"\n                                            onClick={() =>\n                                                earlyAccessFeature.feature_flag &&\n                                                router.actions.push(\n                                                    urls.featureFlag(earlyAccessFeature.feature_flag.id)\n                                                )\n                                            }\n                                            icon={<IconFlag />}\n                                        >\n                                            {earlyAccessFeature.feature_flag.key}\n                                        </LemonButton>\n                                    </div>\n                                </LemonField.Pure>\n                            ) : (\n                                <LemonField\n                                    name=\"feature_flag_id\"\n                                    label=\"Link feature flag (optional)\"\n                                    info={<>A feature flag will be generated from feature name if not provided</>}\n                                >\n                                    {({ value, onChange }) => (\n                                        <div className=\"flex\">\n                                            <FlagSelector value={value} onChange={onChange} />\n                                            {value && (\n                                                <LemonButton\n                                                    className=\"ml-2\"\n                                                    icon={<IconX />}\n                                                    size=\"small\"\n                                                    onClick={() => onChange(undefined)}\n                                                    aria-label=\"close\"\n                                                />\n                                            )}\n                                        </div>\n                                    )}\n                                </LemonField>\n                            )}\n                        </div>\n                        {isEditingFeature || isNewEarlyAccessFeature ? (\n                            <></>\n                        ) : (\n                            <div className=\"flex-1 min-w-[20rem]\">\n                                <b>Stage</b>\n                                <div>\n                                    <LemonTag\n                                        type={\n                                            earlyAccessFeature.stage === EarlyAccessFeatureStage.Beta\n                                                ? 'warning'\n                                                : earlyAccessFeature.stage ===\n                                                  EarlyAccessFeatureStage.GeneralAvailability\n                                                ? 'success'\n                                                : 'default'\n                                        }\n                                        className=\"mt-2 uppercase\"\n                                    >\n                                        {earlyAccessFeature.stage}\n                                    </LemonTag>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"flex flex-wrap items-start gap-4\">\n                        <div className=\"flex-1 min-w-[20rem]\">\n                            {isEditingFeature || isNewEarlyAccessFeature ? (\n                                <LemonField name=\"description\" label=\"Description\" showOptional>\n                                    <LemonTextArea\n                                        className=\"ph-ignore-input\"\n                                        placeholder=\"Help your users understand the feature\"\n                                    />\n                                </LemonField>\n                            ) : (\n                                <div className=\"mb-2\">\n                                    <b>Description</b>\n                                    <div>\n                                        {earlyAccessFeature.description ? (\n                                            earlyAccessFeature.description\n                                        ) : (\n                                            <span className=\"text-secondary\">No description</span>\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"flex-1 min-w-[20rem]\">\n                            {isEditingFeature || isNewEarlyAccessFeature ? (\n                                <LemonField name=\"documentation_url\" label=\"Documentation URL\" showOptional>\n                                    <LemonInput\n                                        autoComplete=\"off\"\n                                        autoCapitalize=\"off\"\n                                        autoCorrect=\"off\"\n                                        spellCheck={false}\n                                    />\n                                </LemonField>\n                            ) : (\n                                <div className=\"mb-2\">\n                                    <b>Documentation URL</b>\n                                    <div>\n                                        {earlyAccessFeature.documentation_url ? (\n                                            <Link to={earlyAccessFeature.documentation_url} target=\"_blank\">\n                                                {earlyAccessFeature.documentation_url}\n                                            </Link>\n                                        ) : (\n                                            <span className=\"text-secondary\">No documentation URL</span>\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                {destinationFilters && (\n                    <>\n                        <LemonDivider className=\"my-8\" />\n                        <h3>Notifications</h3>\n                        <p>Get notified when people opt in or out of your feature.</p>\n                        <LinkedHogFunctions\n                            logicKey=\"early-access-feature\"\n                            type=\"destination\"\n                            filters={destinationFilters}\n                            subTemplateId=\"early-access-feature-enrollment\"\n                        />\n                    </>\n                )}\n                {!isEditingFeature && !isNewEarlyAccessFeature && 'id' in earlyAccessFeature && (\n                    <>\n                        <LemonDivider className=\"my-8\" />\n                        <div className=\"flex items-start justify-between gap-4\">\n                            <div>\n                                <h3>Users</h3>\n                                <p>\n                                    When a user opts in or out of the feature they will be listed here. You can choose\n                                    to{' '}\n                                    <Link onClick={toggleImplementOptInInstructionsModal}>\n                                        implement your own opt-in interface or use our provided app.\n                                    </Link>\n                                </p>\n                            </div>\n                            <LemonButton\n                                key=\"help-button\"\n                                onClick={toggleImplementOptInInstructionsModal}\n                                sideIcon={<IconQuestion />}\n                                type=\"secondary\"\n                            >\n                                Implement public opt-in\n                            </LemonButton>\n                        </div>\n                        <PersonList earlyAccessFeature={earlyAccessFeature} />\n                    </>\n                )}\n            </div>\n\n            {'id' in earlyAccessFeature ? (\n                <InstructionsModal\n                    flag={earlyAccessFeature.feature_flag.key}\n                    visible={implementOptInInstructionsModal}\n                    onClose={toggleImplementOptInInstructionsModal}\n                />\n            ) : null}\n        </Form>\n    )\n}\n\ninterface PersonListProps {\n    earlyAccessFeature: EarlyAccessFeatureType\n}\n\nfunction featureFlagEnrolmentFilter(\n    earlyAccessFeature: EarlyAccessFeatureType,\n    optedIn: boolean\n): Partial<RecordingUniversalFilters> {\n    return {\n        filter_group: {\n            type: FilterLogicalOperator.And,\n            values: [\n                {\n                    type: FilterLogicalOperator.And,\n                    values: [\n                        {\n                            type: 'events',\n                            order: 0,\n                            id: '$feature_enrollment_update',\n                            name: '$feature_enrollment_update',\n                            properties: [\n                                {\n                                    key: '$feature_enrollment',\n                                    value: [optedIn ? 'true' : 'false'],\n                                    operator: PropertyOperator.Exact,\n                                    type: PropertyFilterType.Event,\n                                },\n                                {\n                                    key: '$feature_flag',\n                                    value: [earlyAccessFeature.feature_flag.key],\n                                    operator: PropertyOperator.Exact,\n                                    type: PropertyFilterType.Event,\n                                },\n                            ],\n                        },\n                    ],\n                },\n            ],\n        },\n    }\n}\n\nexport function PersonList({ earlyAccessFeature }: PersonListProps): JSX.Element {\n    const { activeTab } = useValues(earlyAccessFeatureLogic)\n    const { setActiveTab } = useActions(earlyAccessFeatureLogic)\n\n    const key = '$feature_enrollment/' + earlyAccessFeature.feature_flag.key\n\n    return (\n        <>\n            <LemonTabs\n                activeKey={activeTab}\n                onChange={(newKey) => setActiveTab(newKey)}\n                tabs={[\n                    {\n                        key: EarlyAccessFeatureTabs.OptedIn,\n                        label: 'Opted-In Users',\n                        content: (\n                            <>\n                                <PersonsTableByFilter\n                                    recordingsFilters={featureFlagEnrolmentFilter(earlyAccessFeature, true)}\n                                    properties={[\n                                        {\n                                            key: key,\n                                            type: PropertyFilterType.Person,\n                                            operator: PropertyOperator.Exact,\n                                            value: ['true'],\n                                        },\n                                    ]}\n                                />\n                            </>\n                        ),\n                    },\n                    {\n                        key: EarlyAccessFeatureTabs.OptedOut,\n                        label: 'Opted-Out Users',\n                        content: (\n                            <PersonsTableByFilter\n                                recordingsFilters={featureFlagEnrolmentFilter(earlyAccessFeature, false)}\n                                properties={[\n                                    {\n                                        key: key,\n                                        type: PropertyFilterType.Person,\n                                        operator: PropertyOperator.Exact,\n                                        value: ['false'],\n                                    },\n                                ]}\n                            />\n                        ),\n                    },\n                ]}\n            />\n        </>\n    )\n}\n\ninterface PersonsTableByFilterProps {\n    properties: PersonPropertyFilter[]\n    recordingsFilters: Partial<RecordingUniversalFilters>\n}\n\nfunction PersonsTableByFilter({ recordingsFilters, properties }: PersonsTableByFilterProps): JSX.Element {\n    const [query, setQuery] = useState<Node | QuerySchema>({\n        kind: NodeKind.DataTableNode,\n        source: {\n            kind: NodeKind.ActorsQuery,\n            fixedProperties: properties,\n        },\n        full: true,\n        propertiesViaUrl: false,\n    })\n\n    return (\n        <div className=\"relative\">\n            {/* NOTE: This is a bit of a placement hack - ideally we would be able to add it to the Query */}\n            <div className=\"absolute top-0 right-0 z-10\">\n                <LemonButton\n                    key=\"view-opt-in-session-recordings\"\n                    to={urls.replay(ReplayTabs.Home, recordingsFilters)}\n                    type=\"secondary\"\n                >\n                    View recordings\n                </LemonButton>\n            </div>\n            <Query query={query} setQuery={setQuery} />\n        </div>\n    )\n}\n", "import { LemonCollapse, LemonModal, Link } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport EarlyAccessFeatureImage from 'public/early-access-feature-demo.png'\nimport { preflightLogic } from 'scenes/PreflightCheck/preflightLogic'\nimport { urls } from 'scenes/urls'\n\nimport { FeatureFlagType, PipelineStage, Region } from '~/types'\n\ninterface InstructionsModalProps {\n    flag: FeatureFlagType['key']\n    visible: boolean\n    onClose: () => void\n}\n\nexport function InstructionsModal({ onClose, visible, flag }: InstructionsModalProps): JSX.Element {\n    const { preflight } = useValues(preflightLogic)\n\n    const getCloudPanels = (): JSX.Element => (\n        <LemonCollapse\n            className=\"mt-2 bg-surface-primary\"\n            defaultActiveKey=\"1\"\n            panels={[\n                {\n                    key: '1',\n                    header: 'Option 1: Widget Site App',\n                    content: (\n                        <div>\n                            Give your users a{' '}\n                            <Link\n                                to={urls.pipelineNodeNew(\n                                    PipelineStage.SiteApp,\n                                    preflight?.region === Region.EU ? 332 : 574\n                                )}\n                            >\n                                prebuilt widget\n                            </Link>{' '}\n                            to opt-in to features\n                            <img className=\"max-h-full max-w-full mt-2.5\" src={EarlyAccessFeatureImage} />\n                        </div>\n                    ),\n                },\n                {\n                    key: '2',\n                    header: 'Option 2: Custom implementation',\n                    content: (\n                        <div>\n                            <b>Opt user in</b>\n                            <div>\n                                <FeatureEnrollInstructions flag={flag} />\n                            </div>\n\n                            <b>Opt user out</b>\n                            <div>\n                                <FeatureUnenrollInstructions flag={flag} />\n                            </div>\n\n                            <b>Retrieve Previews</b>\n                            <div>\n                                <RetrievePreviewsInstructions />\n                            </div>\n                        </div>\n                    ),\n                },\n            ]}\n        />\n    )\n\n    const getSelfHostedPanels = (): JSX.Element => (\n        <div>\n            <b>Opt user in</b>\n            <div>\n                <FeatureEnrollInstructions flag={flag} />\n            </div>\n\n            <b>Opt user out</b>\n            <div>\n                <FeatureUnenrollInstructions flag={flag} />\n            </div>\n\n            <b>Retrieve Previews</b>\n            <div>\n                <RetrievePreviewsInstructions />\n            </div>\n        </div>\n    )\n\n    const panels: JSX.Element = preflight?.cloud ? getCloudPanels() : getSelfHostedPanels()\n\n    return (\n        <LemonModal title=\"How to implement opt-in feature flags\" isOpen={visible} onClose={onClose} width={640}>\n            <div>\n                <div className=\"mb-2\">\n                    Implement manual release condition toggles to give your users the ability choose which features they\n                    want to try\n                </div>\n                {panels}\n            </div>\n        </LemonModal>\n    )\n}\n\nfunction FeatureEnrollInstructions({ flag }: { flag: string }): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JavaScript} wrap>\n            {`posthog.updateEarlyAccessFeatureEnrollment(\"${flag}\", true)\n`}\n        </CodeSnippet>\n    )\n}\n\nfunction FeatureUnenrollInstructions({ flag }: { flag: string }): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JavaScript} wrap>\n            {`posthog.updateEarlyAccessFeatureEnrollment(\"${flag}\", false)\n`}\n        </CodeSnippet>\n    )\n}\n\nfunction RetrievePreviewsInstructions(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JavaScript} wrap>\n            {`posthog.getEarlyAccessFeatures((previewItemData) => {\n    // do something with early access feature\n})\n`}\n        </CodeSnippet>\n    )\n}\n"],
  "mappings": "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",
  "names": ["init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_kea_forms", "import_kea_router", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "InstructionsModal", "onClose", "visible", "flag", "preflight", "preflightLogic", "getCloudPanels", "LemonCollapse", "Link", "urls", "early_access_feature_demo_default", "FeatureEnrollInstructions", "FeatureUnenrollInstructions", "RetrievePreviewsInstructions", "getSelfHostedPanels", "panels", "LemonModal", "CodeSnippet", "import_jsx_runtime", "scene", "EarlyAccessFeature", "earlyAccessFeatureLogic", "id", "earlyAccessFeature", "earlyAccessFeatureLoading", "isEarlyAccessFeatureSubmitting", "isEditingFeature", "earlyAccessFeatureMissing", "implementOptInInstructionsModal", "submitEarlyAccessFeatureRequest", "loadEarlyAccessFeature", "editFeature", "updateStage", "deleteEarlyAccessFeature", "toggleImplementOptInInstructionsModal", "isNewEarlyAccessFeature", "showLinkedHogFunctions", "useFeatureFlag", "NotFound", "LemonSkeleton", "destinationFilters", "PageHeader", "LemonButton", "urls", "LemonDialog", "LemonDivider", "clsx", "LemonField", "LemonInput", "IconFlag", "value", "onChange", "FlagSelector", "IconX", "LemonTag", "LemonTextArea", "Link", "LinkedHogFunctions", "IconQuestion", "PersonList", "InstructionsModal", "featureFlagEnrolmentFilter", "optedIn", "activeTab", "setActiveTab", "key", "LemonTabs", "newKey", "PersonsTableByFilter", "recordingsFilters", "properties", "query", "setQuery", "Query"]
}
