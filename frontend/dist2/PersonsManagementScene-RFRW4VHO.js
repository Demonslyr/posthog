import{a as H}from"/static/chunk-FGATK7EO.js";import{a as me}from"/static/chunk-GH3IWF3M.js";import{j as ue}from"/static/chunk-CBJ7RAUW.js";import"/static/chunk-XSEDUXPL.js";import{b as ce,d as le}from"/static/chunk-OKGJSIGC.js";import"/static/chunk-NKVVAJQ7.js";import"/static/chunk-2HTNY362.js";import"/static/chunk-S27Q4QO6.js";import"/static/chunk-JUFFFVO5.js";import"/static/chunk-JZCOVRBI.js";import"/static/chunk-EIJECEWK.js";import{$g as te,Ae as ee,Ci as se,Do as s,Ni as ie,Oe as oe,Oh as z,Pg as B,Qd as _,Sd as f,Ta as P,Wd as q,a as Z,ch as ne,ee as M,f as O,gg as re,ie as X,ig as w,r as h,uh as ae,up as de,ve as $,vo as pe,ze as U}from"/static/chunk-RFJTZKD6.js";import"/static/chunk-XPJ4MQJV.js";import"/static/chunk-KQJ3FYBQ.js";import{Ha as x,a as Te,na as K}from"/static/chunk-3UDJFOQH.js";import"/static/chunk-HHT4SG7V.js";import"/static/chunk-K7LQKAJG.js";import"/static/chunk-QQTK3LZH.js";import"/static/chunk-IJQNM355.js";import"/static/chunk-4CN6THWS.js";import"/static/chunk-272RTCFX.js";import"/static/chunk-2ROB4QWU.js";import"/static/chunk-ALT2ZZSO.js";import"/static/chunk-UE6SLBBN.js";import"/static/chunk-GINZUAUY.js";import"/static/chunk-SQELCOUW.js";import"/static/chunk-IGYUTZ65.js";import"/static/chunk-YM6UBNGD.js";import"/static/chunk-C6TQ5FFZ.js";import"/static/chunk-GXGA523B.js";import"/static/chunk-N4MMWRNK.js";import"/static/chunk-NRLAI7OY.js";import"/static/chunk-LVVHNICT.js";import"/static/chunk-2AXSSSSX.js";import"/static/chunk-DGXQI7RB.js";import"/static/chunk-HUCRWDLX.js";import"/static/chunk-RFEQG3YN.js";import"/static/chunk-PUISI233.js";import{d as t,e as l,g as u,j as d}from"/static/chunk-SJXEOBQC.js";l();d();u();var F=t(Z());l();d();u();var g=t(Z()),V=t(O());l();d();u();var J=t(Z()),G=t(O());var ge=t(Te());var r=t(h());function ye(){let{cohorts:e,cohortsLoading:o,pagination:i,cohortFilters:c}=(0,J.useValues)(z),{deleteCohort:C,exportCohortPersons:y,setCohortFilters:b}=(0,J.useActions)(z),{searchParams:E}=(0,J.useValues)(G.router),[S,v]=(0,ge.useState)(c.search||""),N=[{title:"Name",dataIndex:"name",className:"ph-no-capture",width:"30%",sorter:(p,a)=>(p.name||"").localeCompare(a.name||""),render:function(a,{id:m,description:fe}){return(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(B,{to:(0,G.combineUrl)(s.cohort(m),E).url,title:a?(0,r.jsx)(r.Fragment,{children:a}):"Untitled",description:fe})})}},{title:"Users in cohort",align:"right",render:function(a,m){return m.count?.toLocaleString()},dataIndex:"count",sorter:(p,a)=>(p.count||0)-(a.count||0)},le(),ce(),{title:"Last calculated",tooltip:"PostHog calculates what users belong to each cohort. This is then used when filtering on cohorts in the Trends page etc. Calculating happens every 24 hours, or whenever a cohort is updated",render:function(a,m){return m.is_static?(0,r.jsx)(r.Fragment,{children:"N/A"}):m.is_calculating?(0,r.jsxs)("span",{className:"flex items-center",children:["in progress ",(0,r.jsx)(_,{className:"ml-2"})]}):(0,K.default)(m.last_calculation).fromNow()}},{width:0,render:function(a,m){return(0,r.jsx)($,{overlay:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(f,{to:s.cohort(m.id),fullWidth:!0,children:"Edit"}),(0,r.jsx)(f,{to:(0,G.combineUrl)(s.replay(),{filters:{properties:[{key:"id",label:m.name,type:"cohort",value:m.id}]}}).url,fullWidth:!0,children:"View session recordings"}),(0,r.jsx)(f,{onClick:()=>y(m.id,["distinct_ids.0","id","name","properties.email"]),tooltip:"Export specific columns for users belonging to this cohort in CSV format. Includes distinct id, internal id, email, and name",fullWidth:!0,children:"Export important columns for users"}),(0,r.jsx)(f,{onClick:()=>y(m.id),tooltip:"Export all users belonging to this cohort in CSV format.",fullWidth:!0,children:"Export all columns for users"}),(0,r.jsx)(M,{}),(0,r.jsx)(f,{status:"danger",onClick:()=>C(m),fullWidth:!0,children:"Delete cohort"})]})})}}];return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(me,{productName:"Cohorts",productKey:"cohorts",thingName:"cohort",description:"Use cohorts to group people together, such as users who used your app in the last week, or people who viewed the signup page but didn\u2019t convert.",isEmpty:e.count==0&&!o&&!S,docsURL:"https://posthog.com/docs/data/cohorts",action:()=>G.router.actions.push(s.cohort("new")),customHog:ae}),(0,r.jsx)("div",{className:"flex justify-between items-center mb-4 gap-2",children:(0,r.jsx)(X,{type:"search",placeholder:"Search for cohorts",onChange:p=>{v(p),b({search:p||void 0,page:1})},value:S})}),(0,r.jsx)(U,{columns:N,loading:o,rowKey:"id",pagination:i,dataSource:e.results,nouns:["cohort","cohorts"],"data-attr":"cohorts-table"})]})}l();d();u();var R=t(Z());var n=t(h());function j({groupTypeIndex:e}){let{groupTypeName:{singular:o,plural:i},groups:c,groupsLoading:C,search:y}=(0,R.useValues)(H({groupTypeIndex:e})),{loadGroups:b,setSearch:E}=(0,R.useActions)(H({groupTypeIndex:e})),{groupsAccessStatus:S}=(0,R.useValues)(re);if(e===void 0)throw new Error("groupTypeIndex is undefined");if(S==1||S==2||S==3)return(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(se,{})});let v=[{title:x(i),key:"group_key",render:function(p,a){return(0,n.jsx)(B,{to:s.group(a.group_type_index.toString(),a.group_key),title:te(a.group_key,a.group_properties)})}},{title:"First seen",key:"created_at",render:function(p,a){return(0,n.jsx)(ne,{time:a.created_at})}}];return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(X,{type:"search",placeholder:`Search for ${i}`,onChange:E,value:y,"data-attr":"group-search",className:"mb-4"}),(0,n.jsx)(M,{className:"mb-4"}),(0,n.jsx)(U,{columns:v,rowKey:"group_key",loading:C,dataSource:c.results,expandable:{expandedRowRender:function({group_properties:p}){return(0,n.jsx)(ie,{type:"group",properties:p})},rowExpandable:({group_properties:N})=>!!N&&Object.keys(N).length>0},pagination:{controlled:!0,onBackward:c.previous?()=>{b(c.previous),window.scrollTo(0,0)}:void 0,onForward:c.next?()=>{b(c.next),window.scrollTo(0,0)}:void 0},emptyState:(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(q,{type:"info",children:["No ",i," found. Make sure to send properties with your ",o," for them to show up in the list."," ",(0,n.jsx)(P,{to:"https://posthog.com/docs/user-guides/group-analytics",target:"_blank",children:"Read more here."})]}),(0,n.jsx)(oe,{language:"javascript",wrap:!0,children:`posthog.group('${o}', your_${o}_id, {
    name: 'Awesome ${o}',
    value: 11
});`})]})})]})}l();d();u();var Q=t(Z());l();d();u();var T=t(Z());var D=(0,T.kea)([(0,T.path)(["scenes","persons","personsSceneLogic"]),(0,T.actions)({setQuery:e=>({query:e})}),(0,T.reducers)({query:[{kind:"DataTableNode",source:{kind:"ActorsQuery",select:de("ActorsQuery")},full:!0,propertiesViaUrl:!0},{setQuery:(e,{query:o})=>o}]})]);var he=t(h());function be(){let{query:e}=(0,Q.useValues)(D),{setQuery:o}=(0,Q.useActions)(D);return(0,he.jsx)(ue,{query:e,setQuery:o,context:{alwaysRefresh:!0}})}var k=t(h()),A=(0,g.kea)([(0,g.path)(["scenes","persons-management","personsManagementSceneLogic"]),(0,g.connect)({values:[w,["aggregationLabel","groupTypes","groupsAccessStatus"]]}),(0,g.actions)({setTabKey:e=>({tabKey:e})}),(0,g.reducers)({tabKey:["persons",{setTabKey:(e,{tabKey:o})=>o}]}),(0,g.selectors)({tabs:[e=>[e.groupTabs],e=>[{key:"persons",url:s.persons(),label:"Persons",content:(0,k.jsx)(be,{})},{key:"cohorts",url:s.cohorts(),label:"Cohorts",content:(0,k.jsx)(ye,{}),buttons:(0,k.jsx)(f,{type:"primary","data-attr":"new-cohort",onClick:()=>V.router.actions.push(s.cohort("new")),children:"New cohort"})},...e]],activeTab:[e=>[e.tabs,e.tabKey],(e,o)=>e.find(i=>i.key===o)??null],groupTabs:[e=>[e.groupTypes,e.groupsAccessStatus,e.aggregationLabel],(e,o,i)=>[...[1,2,3].includes(o)?[{key:"groups-0",label:"Groups",url:s.groups(0),content:(0,k.jsx)(j,{groupTypeIndex:0})}]:Array.from(e.values()).map(y=>({key:`groups-${y.group_type_index}`,label:x(i(y.group_type_index).plural),url:s.groups(y.group_type_index),content:(0,k.jsx)(j,{groupTypeIndex:y.group_type_index})}))]],breadcrumbs:[e=>[e.tabs,e.activeTab],(e,o)=>[{key:"PersonsManagement",name:"People",path:e[0].url},o?{key:o.key,name:o.label,path:o.url}:{key:"loading",name:"Loading..."}]]}),(0,V.actionToUrl)(({values:e})=>({setTabKey:({tabKey:o})=>{let i=e.tabs.find(c=>c.key===o);return i?[i.url,V.router.values.searchParams,V.router.values.hashParams,{replace:!0}]:e.tabs[0].url}})),(0,V.urlToAction)(({actions:e})=>({[s.persons()]:()=>{e.setTabKey("persons")},[s.cohorts()]:()=>{e.setTabKey("cohorts")},[s.groups(":key")]:({key:o})=>{e.setTabKey(`groups-${o}`)}}))]);var L=t(h());function Le(){let{tabs:e,activeTab:o,tabKey:i}=(0,F.useValues)(A),{setTabKey:c}=(0,F.useActions)(A),{showGroupsOptions:C}=(0,F.useValues)(w),y=e.map(b=>({key:b.key,label:(0,L.jsx)("span",{"data-attr":`persons-management-${b.key}-tab`,children:b.label}),content:b.content}));return(0,L.jsxs)(L.Fragment,{children:[(0,L.jsx)(pe,{caption:C?"A catalog of identified persons, groups, and your created cohorts.":"A catalog of identified persons and your created cohorts.",buttons:o?.buttons}),(0,L.jsx)(ee,{activeKey:i,onChange:b=>c(b),tabs:y})]})}var Po={component:Le,logic:A};export{Le as PersonsManagementScene,Po as scene};
//# sourceMappingURL=/static/PersonsManagementScene-RFRW4VHO.js.map
