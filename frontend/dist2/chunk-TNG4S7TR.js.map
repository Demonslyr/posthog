{
  "version": 3,
  "sources": ["../src/scenes/pipeline/hogfunctions/list/HogFunctionTemplateList.tsx"],
  "sourcesContent": ["import { IconPlusSmall } from '@posthog/icons'\nimport { LemonButton, LemonInput, LemonTable, Link } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { PayGateButton } from 'lib/components/PayGateMini/PayGateButton'\nimport { LemonTableLink } from 'lib/lemon-ui/LemonTable/LemonTableLink'\nimport { useEffect } from 'react'\nimport { DestinationTag } from 'scenes/pipeline/destinations/DestinationTag'\n\nimport { AvailableFeature, PipelineStage } from '~/types'\n\nimport { HogFunctionIcon } from '../HogFunctionIcon'\nimport { hogFunctionTemplateListLogic, HogFunctionTemplateListLogicProps } from './hogFunctionTemplateListLogic'\n\nexport function HogFunctionTemplateList({\n    extraControls,\n    ...props\n}: HogFunctionTemplateListLogicProps & { extraControls?: JSX.Element }): JSX.Element {\n    const { loading, filteredTemplates, filters, templates, canEnableHogFunction, urlForTemplate } = useValues(\n        hogFunctionTemplateListLogic(props)\n    )\n    const { loadHogFunctionTemplates, setFilters, resetFilters } = useActions(hogFunctionTemplateListLogic(props))\n\n    useEffect(() => loadHogFunctionTemplates(), [props.type, props.subTemplateId])\n\n    return (\n        <>\n            <div className=\"flex items-center gap-2 mb-2\">\n                {!props.forceFilters?.search && (\n                    <LemonInput\n                        type=\"search\"\n                        placeholder=\"Search...\"\n                        value={filters.search ?? ''}\n                        onChange={(e) => setFilters({ search: e })}\n                    />\n                )}\n                <div className=\"flex-1\" />\n                {extraControls}\n            </div>\n\n            <LemonTable\n                dataSource={filteredTemplates}\n                size=\"small\"\n                loading={loading}\n                columns={[\n                    {\n                        title: '',\n                        width: 0,\n                        render: function RenderIcon(_, template) {\n                            return <HogFunctionIcon src={template.icon_url} size=\"small\" />\n                        },\n                    },\n                    {\n                        title: 'Name',\n                        sticky: true,\n                        sorter: true,\n                        key: 'name',\n                        dataIndex: 'name',\n                        render: (_, template) => {\n                            return (\n                                <LemonTableLink\n                                    to={urlForTemplate(template)}\n                                    title={\n                                        <>\n                                            {template.name}\n                                            {template.status && <DestinationTag status={template.status} />}\n                                        </>\n                                    }\n                                    description={template.description}\n                                />\n                            )\n                        },\n                    },\n\n                    {\n                        width: 0,\n                        render: function Render(_, template) {\n                            return canEnableHogFunction(template) ? (\n                                <LemonButton\n                                    type=\"primary\"\n                                    data-attr={`new-${PipelineStage.Destination}`}\n                                    icon={<IconPlusSmall />}\n                                    to={urlForTemplate(template)}\n                                    fullWidth\n                                >\n                                    Create\n                                </LemonButton>\n                            ) : (\n                                <span className=\"whitespace-nowrap\">\n                                    <PayGateButton feature={AvailableFeature.DATA_PIPELINES} type=\"secondary\" />\n                                </span>\n                            )\n                        },\n                    },\n                ]}\n                emptyState={\n                    templates.length === 0 && !loading ? (\n                        'No results found'\n                    ) : (\n                        <>\n                            Nothing found matching filters. <Link onClick={() => resetFilters()}>Clear filters</Link>{' '}\n                        </>\n                    )\n                }\n            />\n        </>\n    )\n}\n"],
  "mappings": "kUAAAA,IAAAC,IAAAC,IAEA,IAAAC,EAAsC,OAGtC,IAAAC,EAA0B,OAqBd,IAAAC,EAAA,OAbL,SAASC,EAAwB,CACpC,cAAAC,EACA,GAAGC,CACP,EAAqF,CACjF,GAAM,CAAE,QAAAC,EAAS,kBAAAC,EAAmB,QAAAC,EAAS,UAAAC,EAAW,qBAAAC,EAAsB,eAAAC,CAAe,KAAI,aAC7FC,EAA6BP,CAAK,CACtC,EACM,CAAE,yBAAAQ,EAA0B,WAAAC,EAAY,aAAAC,CAAa,KAAI,cAAWH,EAA6BP,CAAK,CAAC,EAE7G,sBAAU,IAAMQ,EAAyB,EAAG,CAACR,EAAM,KAAMA,EAAM,aAAa,CAAC,KAGzE,oBACI,qBAAC,OAAI,UAAU,+BACV,WAACA,EAAM,cAAc,WAClB,OAACW,EAAA,CACG,KAAK,SACL,YAAY,YACZ,MAAOR,EAAQ,QAAU,GACzB,SAAWS,GAAMH,EAAW,CAAE,OAAQG,CAAE,CAAC,EAC7C,KAEJ,OAAC,OAAI,UAAU,SAAS,EACvBb,GACL,KAEA,OAACc,EAAA,CACG,WAAYX,EACZ,KAAK,QACL,QAASD,EACT,QAAS,CACL,CACI,MAAO,GACP,MAAO,EACP,OAAQ,SAAoBa,EAAGC,EAAU,CACrC,SAAO,OAACC,EAAA,CAAgB,IAAKD,EAAS,SAAU,KAAK,QAAQ,CACjE,CACJ,EACA,CACI,MAAO,OACP,OAAQ,GACR,OAAQ,GACR,IAAK,OACL,UAAW,OACX,OAAQ,CAACD,EAAGC,OAEJ,OAACE,EAAA,CACG,GAAIX,EAAeS,CAAQ,EAC3B,SACI,oBACK,UAAAA,EAAS,KACTA,EAAS,WAAU,OAACG,EAAA,CAAe,OAAQH,EAAS,OAAQ,GACjE,EAEJ,YAAaA,EAAS,YAC1B,CAGZ,EAEA,CACI,MAAO,EACP,OAAQ,SAAgBD,EAAGC,EAAU,CACjC,OAAOV,EAAqBU,CAAQ,KAChC,OAACI,EAAA,CACG,KAAK,UACL,8BACA,QAAM,OAACC,EAAA,EAAc,EACrB,GAAId,EAAeS,CAAQ,EAC3B,UAAS,GACZ,kBAED,KAEA,OAAC,QAAK,UAAU,oBACZ,mBAACM,EAAA,CAAc,yBAA0C,KAAK,YAAY,EAC9E,CAER,CACJ,CACJ,EACA,WACIjB,EAAU,SAAW,GAAK,CAACH,EACvB,sBAEA,oBAAE,gDACkC,OAACqB,EAAA,CAAK,QAAS,IAAMZ,EAAa,EAAG,yBAAa,EAAQ,KAC9F,EAGZ,GACJ,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "import_jsx_runtime", "HogFunctionTemplateList", "extraControls", "props", "loading", "filteredTemplates", "filters", "templates", "canEnableHogFunction", "urlForTemplate", "hogFunctionTemplateListLogic", "loadHogFunctionTemplates", "setFilters", "resetFilters", "LemonInput", "e", "LemonTable", "_", "template", "HogFunctionIcon", "LemonTableLink", "DestinationTag", "LemonButton", "IconPlusSmall", "PayGateButton", "Link"]
}
