{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/parse-entities@2.0.0/node_modules/parse-entities/decode-entity.browser.js", "../../node_modules/.pnpm/xtend@4.0.2/node_modules/xtend/immutable.js"],
  "sourcesContent": ["'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `\u00ACit;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n", "module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n"],
  "mappings": "mEAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAAAC,IAAAC,IAAAC,IAIA,IAAIC,EAEAC,EAAY,GAEhBL,EAAO,QAAUM,EAEjB,SAASA,EAAaC,EAAY,CAChC,IAAIC,EAAS,IAAMD,EAAa,IAC5BE,EAWJ,OATAL,EAAKA,GAAM,SAAS,cAAc,GAAG,EACrCA,EAAG,UAAYI,EACfC,EAAOL,EAAG,YAONK,EAAK,WAAWA,EAAK,OAAS,CAAC,IAAMJ,GAAaE,IAAe,QAK9DE,IAASD,EAJP,GAIwBC,CACnC,IC7BA,IAAAC,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAAAC,IAAAC,IAAAC,IAAAH,EAAO,QAAUI,EAEjB,IAAIC,EAAiB,OAAO,UAAU,eAEtC,SAASD,GAAS,CAGd,QAFIE,EAAS,CAAC,EAELC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACvC,IAAIC,EAAS,UAAUD,CAAC,EAExB,QAASE,KAAOD,EACRH,EAAe,KAAKG,EAAQC,CAAG,IAC/BH,EAAOG,CAAG,EAAID,EAAOC,CAAG,EAGpC,CAEA,OAAOH,CACX",
  "names": ["require_decode_entity_browser", "__commonJSMin", "exports", "module", "init_dirname", "init_buffer", "init_process", "el", "semicolon", "decodeEntity", "characters", "entity", "char", "require_immutable", "__commonJSMin", "exports", "module", "init_dirname", "init_buffer", "init_process", "extend", "hasOwnProperty", "target", "i", "source", "key"]
}
