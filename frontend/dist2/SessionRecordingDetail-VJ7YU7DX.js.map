{
  "version": 3,
  "sources": ["../src/scenes/session-recordings/detail/SessionRecordingDetail.tsx", "../src/scenes/session-recordings/detail/sessionRecordingDetailLogic.ts"],
  "sourcesContent": ["import './SessionRecordingScene.scss'\n\nimport { useValues } from 'kea'\nimport { PageHeader } from 'lib/components/PageHeader'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { LemonBanner } from 'lib/lemon-ui/LemonBanner'\nimport { Link } from 'lib/lemon-ui/Link'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { SceneExport } from 'scenes/sceneTypes'\nimport {\n    sessionRecordingDetailLogic,\n    SessionRecordingDetailLogicProps,\n} from 'scenes/session-recordings/detail/sessionRecordingDetailLogic'\nimport { RecordingNotFound } from 'scenes/session-recordings/player/RecordingNotFound'\nimport { SessionRecordingPlayer } from 'scenes/session-recordings/player/SessionRecordingPlayer'\nimport { teamLogic } from 'scenes/teamLogic'\nimport { urls } from 'scenes/urls'\n\nexport const scene: SceneExport = {\n    logic: sessionRecordingDetailLogic,\n    component: SessionRecordingDetail,\n    paramsToProps: ({ params: { id } }): (typeof sessionRecordingDetailLogic)['props'] => ({\n        id,\n    }),\n}\n\nexport function SessionRecordingDetail({ id }: SessionRecordingDetailLogicProps = {}): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n    const { featureFlags } = useValues(featureFlagLogic)\n\n    const settingLevel = featureFlags[FEATURE_FLAGS.ENVIRONMENTS] ? 'environment' : 'project'\n\n    return (\n        <div className=\"SessionRecordingScene\">\n            <PageHeader />\n            {currentTeam && !currentTeam?.session_recording_opt_in ? (\n                <div className=\"mb-4\">\n                    <LemonBanner type=\"info\">\n                        Session recordings are currently disabled for this {settingLevel}. To use this feature, please\n                        go to your <Link to={`${urls.settings('project')}#recordings`}>project settings</Link> and\n                        enable it.\n                    </LemonBanner>\n                </div>\n            ) : null}\n            <div className=\"mt-4 flex-1\">\n                {id ? (\n                    <SessionRecordingPlayer sessionRecordingId={id} playerKey={`${id}-detail`} />\n                ) : (\n                    <RecordingNotFound />\n                )}\n            </div>\n        </div>\n    )\n}\n", "import { kea, path, props, selectors } from 'kea'\nimport { Scene } from 'scenes/sceneTypes'\nimport { urls } from 'scenes/urls'\n\nimport { Breadcrumb, SessionRecordingType } from '~/types'\n\nimport type { sessionRecordingDetailLogicType } from './sessionRecordingDetailLogicType'\n\nexport interface SessionRecordingDetailLogicProps {\n    id?: SessionRecordingType['id']\n}\n\nexport const sessionRecordingDetailLogic = kea<sessionRecordingDetailLogicType>([\n    path(['scenes', 'session-recordings', 'detail', 'sessionRecordingDetailLogic']),\n    props({} as SessionRecordingDetailLogicProps),\n    selectors({\n        breadcrumbs: [\n            () => [(_, props) => props.id as SessionRecordingType['id']],\n            (sessionRecordingId): Breadcrumb[] => [\n                {\n                    key: Scene.Replay,\n                    name: `Replay`,\n                    path: urls.replay(),\n                },\n                {\n                    key: [Scene.ReplaySingle, sessionRecordingId],\n                    name: sessionRecordingId ?? 'Not Found',\n                    path: sessionRecordingId ? urls.replaySingle(sessionRecordingId) : undefined,\n                },\n            ],\n        ],\n    }),\n])\n"],
  "mappings": "ghCAAAA,IAAAC,IAAAC,IAEA,IAAAC,EAA0B,OCF1BC,IAAAC,IAAAC,IAAA,IAAAC,EAA4C,OAYrC,IAAMC,KAA8B,OAAqC,IAC5E,QAAK,CAAC,SAAU,qBAAsB,SAAU,6BAA6B,CAAC,KAC9E,SAAM,CAAC,CAAqC,KAC5C,aAAU,CACN,YAAa,CACT,IAAM,CAAC,CAACC,EAAGC,IAAUA,EAAM,EAAgC,EAC1DC,GAAqC,CAClC,CACI,aACA,KAAM,SACN,KAAMC,EAAK,OAAO,CACtB,EACA,CACI,IAAK,gBAAqBD,CAAkB,EAC5C,KAAMA,GAAsB,YAC5B,KAAMA,EAAqBC,EAAK,aAAaD,CAAkB,EAAI,MACvE,CACJ,CACJ,CACJ,CAAC,CACL,CAAC,EDEW,IAAAE,EAAA,OAhBCC,EAAqB,CAC9B,MAAOC,EACP,UAAWC,EACX,cAAe,CAAC,CAAE,OAAQ,CAAE,GAAAC,CAAG,CAAE,KAAsD,CACnF,GAAAA,CACJ,EACJ,EAEO,SAASD,EAAuB,CAAE,GAAAC,CAAG,EAAsC,CAAC,EAAgB,CAC/F,GAAM,CAAE,YAAAC,CAAY,KAAI,aAAUC,CAAS,EACrC,CAAE,aAAAC,CAAa,KAAI,aAAUC,CAAgB,EAE7CC,EAAeF,EAAaG,EAAc,YAAY,EAAI,cAAgB,UAEhF,SACI,QAAC,OAAI,UAAU,wBACX,oBAACC,EAAA,EAAW,EACXN,GAAe,CAACA,GAAa,4BAC1B,OAAC,OAAI,UAAU,OACX,oBAACO,EAAA,CAAY,KAAK,OAAO,gEAC+BH,EAAa,+CACtD,OAACI,EAAA,CAAK,GAAI,GAAGC,EAAK,SAAS,SAAS,CAAC,cAAe,4BAAgB,EAAO,mBAE1F,EACJ,EACA,QACJ,OAAC,OAAI,UAAU,cACV,SAAAV,KACG,OAACW,EAAA,CAAuB,mBAAoBX,EAAI,UAAW,GAAGA,CAAE,UAAW,KAE3E,OAACY,EAAA,EAAkB,EAE3B,GACJ,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "sessionRecordingDetailLogic", "_", "props", "sessionRecordingId", "urls", "import_jsx_runtime", "scene", "sessionRecordingDetailLogic", "SessionRecordingDetail", "id", "currentTeam", "teamLogic", "featureFlags", "featureFlagLogic", "settingLevel", "FEATURE_FLAGS", "PageHeader", "LemonBanner", "Link", "urls", "SessionRecordingPlayer", "RecordingNotFound"]
}
