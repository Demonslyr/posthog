{
  "version": 3,
  "sources": ["../src/scenes/settings/user/ThemeSwitcher.tsx", "../src/lib/components/JSSnippet.tsx", "../src/scenes/settings/environment/proxyLogic.ts"],
  "sourcesContent": ["import { IconDay, IconLaptop, IconNight, IconPalette } from '@posthog/icons'\nimport { LemonSelect, LemonSelectOptions, LemonSelectProps } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { router } from 'kea-router'\nimport { urls } from 'scenes/urls'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { themeLogic } from '~/layout/navigation-3000/themeLogic'\n\nexport function ThemeSwitcher({\n    onlyLabel,\n    ...props\n}: Partial<LemonSelectProps<any>> & { onlyLabel?: boolean }): JSX.Element {\n    const { themeMode } = useValues(userLogic)\n    const { updateUser } = useActions(userLogic)\n    const { customCssEnabled } = useValues(themeLogic)\n\n    const themeOptions: LemonSelectOptions<string> = [\n        {\n            options: [\n                { icon: <IconDay />, value: 'light', label: 'Light mode' },\n                { icon: <IconNight />, value: 'dark', label: 'Dark mode' },\n                { icon: <IconLaptop />, value: 'system', label: `Sync with system` },\n            ],\n        },\n    ]\n\n    if (customCssEnabled) {\n        themeOptions.push({\n            options: [{ icon: <IconPalette />, value: 'custom', label: 'Edit custom CSS' }],\n        })\n    }\n\n    return (\n        <LemonSelect\n            options={themeOptions}\n            value={themeMode}\n            renderButtonContent={(leaf) => {\n                const labelText = leaf ? leaf.label : 'Sync with system'\n                return onlyLabel ? (\n                    labelText\n                ) : (\n                    <>\n                        <span className=\"flex-1 flex justify-between items-baseline gap-4\">\n                            <span>Color theme</span>\n                            <span className=\"font-normal text-xs\">{leaf ? leaf.label : 'Sync with system'}</span>\n                        </span>\n                    </>\n                )\n            }}\n            onChange={(value) => {\n                if (value === 'custom') {\n                    router.actions.push(urls.customCss())\n                } else {\n                    updateUser({ theme_mode: value })\n                }\n            }}\n            dropdownPlacement=\"right-start\"\n            dropdownMatchSelectWidth={false}\n            {...props}\n        />\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport posthog from 'posthog-js'\nimport { proxyLogic, ProxyRecord } from 'scenes/settings/environment/proxyLogic'\nimport { teamLogic } from 'scenes/teamLogic'\n\nfunction snippetFunctions(arrayJs = '/static/array.js'): string {\n    const methods: string[] = []\n    const posthogPrototype = Object.getPrototypeOf(posthog)\n    for (const key of Object.getOwnPropertyNames(posthogPrototype)) {\n        if (\n            typeof posthogPrototype[key] === 'function' &&\n            !key.startsWith('_') &&\n            !['constructor', 'toString', 'push'].includes(key)\n        ) {\n            methods.push(key)\n        }\n    }\n    const snippetMethods = methods.join(' ')\n\n    return `!function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(\".\");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement(\"script\")).type=\"text/javascript\",p.crossOrigin=\"anonymous\",p.async=!0,p.src=s.api_host.replace(\".i.posthog.com\",\"-assets.i.posthog.com\")+\"${arrayJs}\",(r=t.getElementsByTagName(\"script\")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a=\"posthog\",u.people=u.people||[],u.toString=function(t){var e=\"posthog\";return\"posthog\"!==a&&(e+=\".\"+a),t||(e+=\" (stub)\"),e},u.people.toString=function(){return u.toString(1)+\".people (stub)\"},o=\"${snippetMethods}\".split(\" \"),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);`\n}\n\ntype SnippetOption = {\n    content: string\n    enabled: boolean\n    comment?: string\n}\n\nfunction domainFor(proxyRecord: ProxyRecord | undefined): string {\n    if (!proxyRecord) {\n        return apiHostOrigin()\n    }\n\n    let domain = proxyRecord.domain\n    if (!domain.startsWith('https://')) {\n        domain = `https://${domain}`\n    }\n\n    return domain\n}\n\nexport function useJsSnippet(indent = 0, arrayJs?: string): string {\n    const { currentTeam } = useValues(teamLogic)\n    const { featureFlags } = useValues(featureFlagLogic)\n\n    const { proxyRecords } = useValues(proxyLogic)\n    const proxyRecord = proxyRecords[0]\n\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n\n    const options: Record<string, SnippetOption> = {\n        api_host: {\n            content: domainFor(proxyRecord),\n            comment: proxyRecord ? 'your managed reverse proxy domain' : undefined,\n            enabled: true,\n        },\n        ui_host: {\n            content: apiHostOrigin(),\n            comment: \"neccessary because you're using a proxy, this way links will point back to PostHog properly\",\n            enabled: !!proxyRecord,\n        },\n        person_profiles: {\n            content: 'identified_only',\n            comment: \"or 'always' to create profiles for anonymous users as well\",\n            enabled: !isPersonProfilesDisabled,\n        },\n    }\n\n    return [\n        '<script>',\n        `    ${snippetFunctions(arrayJs)}`,\n        `    posthog.init('${currentTeam?.api_token}', {`,\n        ...Object.entries(options)\n            .map(([key, value]) => {\n                if (value.enabled) {\n                    return `        ${key}: '${value.content}',${value.comment ? ` // ${value.comment}` : ''}`\n                }\n            })\n            .filter(Boolean),\n        `    })`,\n        '</script>',\n    ]\n        .map((x) => ' '.repeat(indent) + x)\n        .join('\\n')\n}\n\nexport function JSSnippet(): JSX.Element {\n    const snippet = useJsSnippet()\n\n    return <CodeSnippet language={Language.HTML}>{snippet}</CodeSnippet>\n}\n\nexport function JSSnippetV2(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    const snippet = useJsSnippet(0, `/array/${currentTeam?.api_token}/array.js`)\n\n    return <CodeSnippet language={Language.HTML}>{snippet}</CodeSnippet>\n}\n", "import { actions, afterMount, beforeUnmount, connect, kea, listeners, path, reducers, selectors } from 'kea'\nimport { forms } from 'kea-forms'\nimport { loaders } from 'kea-loaders'\nimport api from 'lib/api'\nimport { lemonToast } from 'lib/lemon-ui/LemonToast/LemonToast'\nimport { isDomain } from 'lib/utils'\nimport { organizationLogic } from 'scenes/organizationLogic'\n\nimport type { proxyLogicType } from './proxyLogicType'\n\nexport type ProxyRecord = {\n    id: string\n    domain: string\n    status: 'waiting' | 'issuing' | 'valid' | 'erroring' | 'deleting'\n    message?: string\n    target_cname: string\n}\n\nexport type FormState = 'collapsed' | 'active' | 'complete'\n\nexport const proxyLogic = kea<proxyLogicType>([\n    path(['scenes', 'project', 'Settings', 'proxyLogic']),\n    connect({\n        values: [organizationLogic, ['currentOrganization']],\n    }),\n    actions(() => ({\n        collapseForm: true,\n        showForm: true,\n        completeForm: true,\n        maybeRefreshRecords: true,\n    })),\n    reducers(() => ({\n        formState: [\n            'collapsed' as FormState,\n            { showForm: () => 'active', collapseForm: () => 'collapsed', completeForm: () => 'complete' },\n        ],\n    })),\n    loaders(({ values, actions }) => ({\n        proxyRecords: {\n            __default: [] as ProxyRecord[],\n            loadRecords: async () => {\n                return await api.get(`api/organizations/${values.currentOrganization?.id}/proxy_records`)\n            },\n            createRecord: async ({ domain }: { domain: string }) => {\n                const response = await api.create(`api/organizations/${values.currentOrganization?.id}/proxy_records`, {\n                    domain,\n                })\n                lemonToast.success('Record created')\n                actions.completeForm()\n                return [response, ...values.proxyRecords]\n            },\n            deleteRecord: async (id: ProxyRecord['id']) => {\n                void api.delete(`api/organizations/${values.currentOrganization?.id}/proxy_records/${id}`)\n                const newRecords = [...values.proxyRecords].map((r) => ({\n                    ...r,\n                    status: r.id === id ? 'deleting' : r.status,\n                }))\n                return newRecords\n            },\n        },\n    })),\n    selectors(() => ({\n        shouldRefreshRecords: [\n            (s) => [s.proxyRecords],\n            (proxyRecords) => {\n                return proxyRecords.some((r) => ['waiting', 'issuing', 'deleting'].includes(r.status))\n            },\n        ],\n    })),\n    listeners(({ actions, values }) => ({\n        collapseForm: () => actions.loadRecords(),\n        deleteRecordFailure: () => actions.loadRecords(),\n        createRecordSuccess: () => actions.loadRecords(),\n        maybeRefreshRecords: () => {\n            if (values.shouldRefreshRecords) {\n                actions.loadRecords()\n            }\n        },\n    })),\n    forms(({ actions }) => ({\n        createRecord: {\n            defaults: { domain: '' },\n            errors: ({ domain }: { domain: string }) => ({\n                domain: domain.includes('*')\n                    ? 'Domains cannot include wildcards'\n                    : !isDomain('http://' + domain)\n                    ? 'Do not include the protocol e.g. https://'\n                    : !domain.match(/^[a-z0-9](?:[a-z0-9.-]*[a-z0-9])?$/)\n                    ? \"Invalid domain. Please provide a lowercase RFC 1123 subdomain. It must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character\"\n                    : undefined,\n            }),\n            submit: ({ domain }) => {\n                actions.createRecord({ domain })\n            },\n        },\n    })),\n    afterMount(({ actions, cache }) => {\n        actions.loadRecords()\n        cache.refreshTimeout = setInterval(() => actions.maybeRefreshRecords(), 5000)\n    }),\n    beforeUnmount(({ cache }) => {\n        if (cache.refreshTimeout) {\n            clearTimeout(cache.refreshTimeout)\n        }\n    }),\n])\n"],
  "mappings": "mUAAAA,IAAAC,IAAAC,IAEA,IAAAC,EAAsC,OACtCC,EAAuB,OAiBC,IAAAC,EAAA,OAXjB,SAASC,GAAc,CAC1B,UAAAC,EACA,GAAGC,CACP,EAA0E,CACtE,GAAM,CAAE,UAAAC,CAAU,KAAI,aAAUC,CAAS,EACnC,CAAE,WAAAC,CAAW,KAAI,cAAWD,CAAS,EACrC,CAAE,iBAAAE,CAAiB,KAAI,aAAUC,CAAU,EAE3CC,EAA2C,CAC7C,CACI,QAAS,CACL,CAAE,QAAM,OAACC,EAAA,EAAQ,EAAI,MAAO,QAAS,MAAO,YAAa,EACzD,CAAE,QAAM,OAACC,EAAA,EAAU,EAAI,MAAO,OAAQ,MAAO,WAAY,EACzD,CAAE,QAAM,OAACC,EAAA,EAAW,EAAI,MAAO,SAAU,MAAO,kBAAmB,CACvE,CACJ,CACJ,EAEA,OAAIL,GACAE,EAAa,KAAK,CACd,QAAS,CAAC,CAAE,QAAM,OAACI,EAAA,EAAY,EAAI,MAAO,SAAU,MAAO,iBAAkB,CAAC,CAClF,CAAC,KAID,OAACC,EAAA,CACG,QAASL,EACT,MAAOL,EACP,oBAAsBW,GAAS,CAC3B,IAAMC,EAAYD,EAAOA,EAAK,MAAQ,mBACtC,OAAOb,EACHc,KAEA,mBACI,oBAAC,QAAK,UAAU,mDACZ,oBAAC,QAAK,uBAAW,KACjB,OAAC,QAAK,UAAU,sBAAuB,SAAAD,EAAOA,EAAK,MAAQ,mBAAmB,GAClF,EACJ,CAER,EACA,SAAWE,GAAU,CACbA,IAAU,SACV,SAAO,QAAQ,KAAKC,EAAK,UAAU,CAAC,EAEpCZ,EAAW,CAAE,WAAYW,CAAM,CAAC,CAExC,EACA,kBAAkB,cAClB,yBAA0B,GACzB,GAAGd,EACR,CAER,CC9DAgB,IAAAC,IAAAC,IAAA,IAAAC,EAA0B,OCA1BC,IAAAC,IAAAC,IAAA,IAAAC,EAAuG,OACvGC,EAAsB,OACtBC,EAAwB,OAkBjB,IAAMC,KAAa,OAAoB,IAC1C,QAAK,CAAC,SAAU,UAAW,WAAY,YAAY,CAAC,KACpD,WAAQ,CACJ,OAAQ,CAACC,EAAmB,CAAC,qBAAqB,CAAC,CACvD,CAAC,KACD,WAAQ,KAAO,CACX,aAAc,GACd,SAAU,GACV,aAAc,GACd,oBAAqB,EACzB,EAAE,KACF,YAAS,KAAO,CACZ,UAAW,CACP,YACA,CAAE,SAAU,IAAM,SAAU,aAAc,IAAM,YAAa,aAAc,IAAM,UAAW,CAChG,CACJ,EAAE,KACF,WAAQ,CAAC,CAAE,OAAAC,EAAQ,QAAAC,CAAQ,KAAO,CAC9B,aAAc,CACV,UAAW,CAAC,EACZ,YAAa,SACF,MAAMC,EAAI,IAAI,qBAAqBF,EAAO,qBAAqB,EAAE,gBAAgB,EAE5F,aAAc,MAAO,CAAE,OAAAG,CAAO,IAA0B,CACpD,IAAMC,EAAW,MAAMF,EAAI,OAAO,qBAAqBF,EAAO,qBAAqB,EAAE,iBAAkB,CACnG,OAAAG,CACJ,CAAC,EACD,OAAAE,EAAW,QAAQ,gBAAgB,EACnCJ,EAAQ,aAAa,EACd,CAACG,EAAU,GAAGJ,EAAO,YAAY,CAC5C,EACA,aAAc,MAAOM,IACZJ,EAAI,OAAO,qBAAqBF,EAAO,qBAAqB,EAAE,kBAAkBM,CAAE,EAAE,EACtE,CAAC,GAAGN,EAAO,YAAY,EAAE,IAAKO,IAAO,CACpD,GAAGA,EACH,OAAQA,EAAE,KAAOD,EAAK,WAAaC,EAAE,MACzC,EAAE,EAGV,CACJ,EAAE,KACF,aAAU,KAAO,CACb,qBAAsB,CACjBC,GAAM,CAACA,EAAE,YAAY,EACrBC,GACUA,EAAa,KAAMF,GAAM,CAAC,UAAW,UAAW,UAAU,EAAE,SAASA,EAAE,MAAM,CAAC,CAE7F,CACJ,EAAE,KACF,aAAU,CAAC,CAAE,QAAAN,EAAS,OAAAD,CAAO,KAAO,CAChC,aAAc,IAAMC,EAAQ,YAAY,EACxC,oBAAqB,IAAMA,EAAQ,YAAY,EAC/C,oBAAqB,IAAMA,EAAQ,YAAY,EAC/C,oBAAqB,IAAM,CACnBD,EAAO,sBACPC,EAAQ,YAAY,CAE5B,CACJ,EAAE,KACF,SAAM,CAAC,CAAE,QAAAA,CAAQ,KAAO,CACpB,aAAc,CACV,SAAU,CAAE,OAAQ,EAAG,EACvB,OAAQ,CAAC,CAAE,OAAAE,CAAO,KAA2B,CACzC,OAAQA,EAAO,SAAS,GAAG,EACrB,mCACCO,EAAS,UAAYP,CAAM,EAE3BA,EAAO,MAAM,oCAAoC,EAElD,OADA,0LAFA,2CAIV,GACA,OAAQ,CAAC,CAAE,OAAAA,CAAO,IAAM,CACpBF,EAAQ,aAAa,CAAE,OAAAE,CAAO,CAAC,CACnC,CACJ,CACJ,EAAE,KACF,cAAW,CAAC,CAAE,QAAAF,EAAS,MAAAU,CAAM,IAAM,CAC/BV,EAAQ,YAAY,EACpBU,EAAM,eAAiB,YAAY,IAAMV,EAAQ,oBAAoB,EAAG,GAAI,CAChF,CAAC,KACD,iBAAc,CAAC,CAAE,MAAAU,CAAM,IAAM,CACrBA,EAAM,gBACN,aAAaA,EAAM,cAAc,CAEzC,CAAC,CACL,CAAC,EDZU,IAAAC,EAAA,OApFX,SAASC,EAAiBC,EAAU,mBAA4B,CAC5D,IAAMC,EAAoB,CAAC,EACrBC,EAAmB,OAAO,eAAeC,CAAO,EACtD,QAAWC,KAAO,OAAO,oBAAoBF,CAAgB,EAErD,OAAOA,EAAiBE,CAAG,GAAM,YACjC,CAACA,EAAI,WAAW,GAAG,GACnB,CAAC,CAAC,cAAe,WAAY,MAAM,EAAE,SAASA,CAAG,GAEjDH,EAAQ,KAAKG,CAAG,EAGxB,IAAMC,EAAiBJ,EAAQ,KAAK,GAAG,EAEvC,MAAO,qYAAqYD,CAAO,gTAAgTK,CAAc,wGACrtB,CAQA,SAASC,EAAUC,EAA8C,CAC7D,GAAI,CAACA,EACD,OAAOC,EAAc,EAGzB,IAAIC,EAASF,EAAY,OACzB,OAAKE,EAAO,WAAW,UAAU,IAC7BA,EAAS,WAAWA,CAAM,IAGvBA,CACX,CAEO,SAASC,EAAaC,EAAS,EAAGX,EAA0B,CAC/D,GAAM,CAAE,YAAAY,CAAY,KAAI,aAAUC,CAAS,EACrC,CAAE,aAAAC,CAAa,KAAI,aAAUC,CAAgB,EAE7C,CAAE,aAAAC,CAAa,KAAI,aAAUC,CAAU,EACvCV,EAAcS,EAAa,CAAC,EAE5BE,EAA2BJ,EAAaK,EAAc,+BAA+B,EAErFC,EAAyC,CAC3C,SAAU,CACN,QAASd,EAAUC,CAAW,EAC9B,QAASA,EAAc,oCAAsC,OAC7D,QAAS,EACb,EACA,QAAS,CACL,QAASC,EAAc,EACvB,QAAS,8FACT,QAAS,CAAC,CAACD,CACf,EACA,gBAAiB,CACb,QAAS,kBACT,QAAS,6DACT,QAAS,CAACW,CACd,CACJ,EAEA,MAAO,CACH,WACA,OAAOnB,EAAiBC,CAAO,CAAC,GAChC,qBAAqBY,GAAa,SAAS,OAC3C,GAAG,OAAO,QAAQQ,CAAO,EACpB,IAAI,CAAC,CAAChB,EAAKiB,CAAK,IAAM,CACnB,GAAIA,EAAM,QACN,MAAO,WAAWjB,CAAG,MAAMiB,EAAM,OAAO,KAAKA,EAAM,QAAU,OAAOA,EAAM,OAAO,GAAK,EAAE,EAEhG,CAAC,EACA,OAAO,OAAO,EACnB,SACA,YACJ,EACK,IAAKC,GAAM,IAAI,OAAOX,CAAM,EAAIW,CAAC,EACjC,KAAK;AAAA,CAAI,CAClB,CAEO,SAASC,IAAyB,CACrC,IAAMC,EAAUd,EAAa,EAE7B,SAAO,OAACe,EAAA,CAAY,gBAA0B,SAAAD,EAAQ,CAC1D,CAEO,SAASE,IAA2B,CACvC,GAAM,CAAE,YAAAd,CAAY,KAAI,aAAUC,CAAS,EAErCW,EAAUd,EAAa,EAAG,UAAUE,GAAa,SAAS,WAAW,EAE3E,SAAO,OAACa,EAAA,CAAY,gBAA0B,SAAAD,EAAQ,CAC1D",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_router", "import_jsx_runtime", "ThemeSwitcher", "onlyLabel", "props", "themeMode", "userLogic", "updateUser", "customCssEnabled", "themeLogic", "themeOptions", "IconDay", "IconNight", "IconLaptop", "IconPalette", "LemonSelect", "leaf", "labelText", "value", "urls", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_forms", "import_kea_loaders", "proxyLogic", "organizationLogic", "values", "actions", "api_default", "domain", "response", "lemonToast", "id", "r", "s", "proxyRecords", "isDomain", "cache", "import_jsx_runtime", "snippetFunctions", "arrayJs", "methods", "posthogPrototype", "Co", "key", "snippetMethods", "domainFor", "proxyRecord", "apiHostOrigin", "domain", "useJsSnippet", "indent", "currentTeam", "teamLogic", "featureFlags", "featureFlagLogic", "proxyRecords", "proxyLogic", "isPersonProfilesDisabled", "FEATURE_FLAGS", "options", "value", "x", "JSSnippet", "snippet", "CodeSnippet", "JSSnippetV2"]
}
