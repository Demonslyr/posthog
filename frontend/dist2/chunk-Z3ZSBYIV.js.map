{
  "version": 3,
  "sources": ["../src/lib/components/FlagSelector.tsx"],
  "sourcesContent": ["import { useValues } from 'kea'\nimport { TaxonomicFilter } from 'lib/components/TaxonomicFilter/TaxonomicFilter'\nimport { TaxonomicFilterGroupType, TaxonomicFilterLogicProps } from 'lib/components/TaxonomicFilter/types'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { Popover } from 'lib/lemon-ui/Popover'\nimport { useState } from 'react'\nimport { featureFlagLogic } from 'scenes/feature-flags/featureFlagLogic'\n\nimport { FeatureFlagBasicType } from '~/types'\n\ninterface FlagSelectorProps {\n    value: number | undefined\n    onChange: (id: number, key: string, flag: FeatureFlagBasicType) => void\n    readOnly?: boolean\n    disabledReason?: string\n}\n\nexport function FlagSelector({ value, onChange, readOnly, disabledReason }: FlagSelectorProps): JSX.Element {\n    const [visible, setVisible] = useState(false)\n\n    const { featureFlag } = useValues(featureFlagLogic({ id: value || 'link' }))\n\n    const taxonomicFilterLogicProps: TaxonomicFilterLogicProps = {\n        groupType: TaxonomicFilterGroupType.FeatureFlags,\n        value: value,\n        onChange: (_, __, item) => {\n            'id' in item && item.id && onChange(item.id, item.key, item)\n            setVisible(false)\n        },\n        taxonomicGroupTypes: [TaxonomicFilterGroupType.FeatureFlags],\n        optionsFromProp: undefined,\n        popoverEnabled: true,\n        selectFirstItem: true,\n        taxonomicFilterLogicKey: 'flag-selectorz',\n    }\n\n    return (\n        <Popover\n            overlay={<TaxonomicFilter {...taxonomicFilterLogicProps} />}\n            visible={visible}\n            placement=\"right-start\"\n            fallbackPlacements={['left-end', 'bottom']}\n            onClickOutside={() => setVisible(false)}\n        >\n            <LemonButton\n                type=\"secondary\"\n                onClick={() => setVisible(!visible)}\n                disabledReason={readOnly && (disabledReason || \"I'm read-only\")}\n            >\n                {featureFlag.key ? featureFlag.key : 'Select flag'}\n            </LemonButton>\n        </Popover>\n    )\n}\n"],
  "mappings": "4OAAAA,IAAAC,IAAAC,IAAA,IAAAC,EAA0B,OAK1B,IAAAC,EAAyB,OAiCJ,IAAAC,EAAA,OArBd,SAASC,EAAa,CAAE,MAAAC,EAAO,SAAAC,EAAU,SAAAC,EAAU,eAAAC,CAAe,EAAmC,CACxG,GAAM,CAACC,EAASC,CAAU,KAAI,YAAS,EAAK,EAEtC,CAAE,YAAAC,CAAY,KAAI,aAAUC,EAAiB,CAAE,GAAIP,GAAS,MAAO,CAAC,CAAC,EAErEQ,EAAuD,CACzD,0BACA,MAAOR,EACP,SAAU,CAACS,EAAGC,EAAIC,IAAS,CACvB,OAAQA,GAAQA,EAAK,IAAMV,EAASU,EAAK,GAAIA,EAAK,IAAKA,CAAI,EAC3DN,EAAW,EAAK,CACpB,EACA,oBAAqB,gBAAsC,EAC3D,gBAAiB,OACjB,eAAgB,GAChB,gBAAiB,GACjB,wBAAyB,gBAC7B,EAEA,SACI,OAACO,EAAA,CACG,WAAS,OAACC,EAAA,CAAiB,GAAGL,EAA2B,EACzD,QAASJ,EACT,UAAU,cACV,mBAAoB,CAAC,WAAY,QAAQ,EACzC,eAAgB,IAAMC,EAAW,EAAK,EAEtC,mBAACS,EAAA,CACG,KAAK,YACL,QAAS,IAAMT,EAAW,CAACD,CAAO,EAClC,eAAgBF,IAAaC,GAAkB,iBAE9C,SAAAG,EAAY,IAAMA,EAAY,IAAM,cACzC,EACJ,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "import_jsx_runtime", "FlagSelector", "value", "onChange", "readOnly", "disabledReason", "visible", "setVisible", "featureFlag", "featureFlagLogic", "taxonomicFilterLogicProps", "_", "__", "item", "Popover", "TaxonomicFilter", "LemonButton"]
}
