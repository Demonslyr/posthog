{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/puppet.js"],
  "sourcesContent": ["'use strict'\n\nmodule.exports = puppet\npuppet.displayName = 'puppet'\npuppet.aliases = []\nfunction puppet(Prism) {\n  ;(function (Prism) {\n    Prism.languages.puppet = {\n      heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern:\n            /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/ // See interpolation below\n          }\n        }, // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern:\n            /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        }, // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }\n      ],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern:\n          /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern:\n          /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {\n              // See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n      function: [\n        {\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n      ],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:false|true)\\b/,\n      // Includes words reserved for future use\n      keyword:\n        /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern:\n          /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator:\n        /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    }\n    var interpolation = [\n      {\n        // Allow for one nested level of braces inside interpolation\n        pattern:\n          /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      },\n      {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }\n    ]\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\n    Prism.languages.puppet['string'].inside[\n      'double-quoted'\n    ].inside.interpolation = interpolation\n  })(Prism)\n}\n"],
  "mappings": "mEAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAC,IAAAC,IAAAC,IAEAH,EAAO,QAAUI,EACjBA,EAAO,YAAc,SACrBA,EAAO,QAAU,CAAC,EAClB,SAASA,EAAOC,EAAO,EACnB,SAAUA,EAAO,CACjBA,EAAM,UAAU,OAAS,CACvB,QAAS,CAEP,CACE,QACE,qHACF,WAAY,GACZ,MAAO,SACP,OAAQ,CAEN,YAAa,mBACf,CACF,EACA,CACE,QACE,mHACF,WAAY,GACZ,OAAQ,GACR,MAAO,SACP,OAAQ,CAEN,YAAa,mBACf,CACF,EACA,CACE,QAAS,8CACT,MAAO,SACP,OAAQ,CACN,YAAa,CACX,QAAS,gBACT,WAAY,EACd,CACF,CACF,CACF,EACA,oBAAqB,CACnB,QAAS,4BACT,WAAY,GACZ,OAAQ,GACR,MAAO,SACT,EACA,MAAO,CAEL,QACE,uFACF,WAAY,GACZ,OAAQ,GACR,OAAQ,CAEN,iBAAkB,CAChB,QAAS,yCACT,OAAQ,CACN,QAAS,KACX,CACF,CACF,CACF,EACA,QAAS,CACP,QAAS,eACT,WAAY,GACZ,OAAQ,EACV,EACA,OAAQ,CAEN,QACE,kGACF,OAAQ,GACR,OAAQ,CACN,gBAAiB,CACf,QAAS,cACT,OAAQ,CAER,CACF,CACF,CACF,EACA,SAAU,CACR,QAAS,yBACT,OAAQ,CACN,YAAa,IACf,CACF,EACA,YAAa,wBACb,SAAU,CACR,CACE,QAAS,gBACT,WAAY,EACd,EACA,kGACF,EACA,OAAQ,+CACR,QAAS,qBAET,QACE,6IACF,SAAU,CACR,QACE,gNACF,MAAO,QACT,EACA,SACE,mFACF,YAAa,kBACf,EACA,IAAIC,EAAgB,CAClB,CAEE,QACE,0EACF,WAAY,GACZ,OAAQ,CACN,iBAAkB,CAEhB,QAAS,uCACT,WAAY,GACZ,MAAO,WACP,OAAQ,CACN,YAAa,IACf,CACF,EACA,UAAW,CACT,QAAS,MACT,MAAO,UACT,EACA,KAAMD,EAAM,UAAU,MACxB,CACF,EACA,CACE,QAAS,kCACT,WAAY,GACZ,MAAO,WACP,OAAQ,CACN,YAAa,IACf,CACF,CACF,EACAA,EAAM,UAAU,OAAO,QAAW,CAAC,EAAE,OAAO,cAAgBC,EAC5DD,EAAM,UAAU,OAAO,OAAU,OAC/B,eACF,EAAE,OAAO,cAAgBC,CAC3B,GAAGD,CAAK,CACV",
  "names": ["require_puppet", "__commonJSMin", "exports", "module", "init_dirname", "init_buffer", "init_process", "puppet", "Prism", "interpolation"]
}
