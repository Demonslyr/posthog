{
  "version": 3,
  "sources": ["../src/lib/integrations/IntegrationView.tsx", "../src/lib/integrations/IntegrationScopesWarning.tsx"],
  "sourcesContent": ["import { LemonBanner } from '@posthog/lemon-ui'\nimport api from 'lib/api'\nimport { UserActivityIndicator } from 'lib/components/UserActivityIndicator/UserActivityIndicator'\nimport { IntegrationScopesWarning } from 'lib/integrations/IntegrationScopesWarning'\n\nimport { HogFunctionInputSchemaType, IntegrationType } from '~/types'\n\nexport function IntegrationView({\n    integration,\n    suffix,\n    schema,\n}: {\n    integration: IntegrationType\n    suffix?: JSX.Element\n    schema?: HogFunctionInputSchemaType\n}): JSX.Element {\n    const errors = (integration.errors && integration.errors?.split(',')) || []\n\n    return (\n        <div className=\"rounded border bg-surface-primary\">\n            <div className=\"flex justify-between items-center p-2\">\n                <div className=\"flex items-center gap-4 ml-2\">\n                    <img src={integration.icon_url} className=\"h-10 w-10 rounded\" />\n                    <div>\n                        <div>\n                            Connected to <strong>{integration.display_name}</strong>\n                        </div>\n                        {integration.created_by ? (\n                            <UserActivityIndicator\n                                at={integration.created_at}\n                                by={integration.created_by}\n                                prefix=\"Updated\"\n                                className=\"text-secondary\"\n                            />\n                        ) : null}\n                    </div>\n                </div>\n\n                {suffix}\n            </div>\n\n            {errors.length > 0 ? (\n                <div className=\"p-2\">\n                    <LemonBanner\n                        type=\"error\"\n                        action={{\n                            children: 'Reconnect',\n                            disableClientSideRouting: true,\n                            to: api.integrations.authorizeUrl({\n                                kind: integration.kind,\n                                next: window.location.pathname,\n                            }),\n                        }}\n                    >\n                        {errors[0] === 'TOKEN_REFRESH_FAILED'\n                            ? 'Authentication token could not be refreshed. Please reconnect.'\n                            : `There was an error with this integration: ${errors[0]}`}\n                    </LemonBanner>\n                </div>\n            ) : (\n                <IntegrationScopesWarning integration={integration} schema={schema} />\n            )}\n        </div>\n    )\n}\n", "import api from 'lib/api'\nimport { LemonBanner } from 'lib/lemon-ui/LemonBanner'\nimport { Link } from 'lib/lemon-ui/Link'\nimport { useMemo } from 'react'\n\nimport { HogFunctionInputSchemaType, IntegrationType } from '~/types'\n\nexport function IntegrationScopesWarning({\n    integration,\n    schema,\n}: {\n    integration: IntegrationType\n    schema?: HogFunctionInputSchemaType\n}): JSX.Element {\n    const getScopes = useMemo((): string[] => {\n        const scopes: any[] = []\n        const possibleScopeLocation = [integration.config.scope, integration.config.scopes]\n\n        possibleScopeLocation.map((scope) => {\n            if (typeof scope === 'string') {\n                scopes.push(scope.split(' '))\n                scopes.push(scope.split(','))\n            }\n            if (typeof scope === 'object') {\n                scopes.push(scope)\n            }\n        })\n        return scopes\n            .filter((scope: any) => typeof scope === 'object')\n            .reduce((a, b) => (a.length > b.length ? a : b), [])\n    }, [integration.config])\n\n    const requiredScopes = schema?.requiredScopes?.split(' ') || []\n    const missingScopes = requiredScopes.filter((scope: string) => !getScopes.includes(scope))\n\n    if (missingScopes.length === 0 || getScopes.length === 0) {\n        return <></>\n    }\n    return (\n        <div className=\"p-2\">\n            <LemonBanner\n                type=\"error\"\n                action={{\n                    children: 'Reconnect',\n                    disableClientSideRouting: true,\n                    to: api.integrations.authorizeUrl({\n                        kind: integration.kind,\n                        next: window.location.pathname,\n                    }),\n                }}\n            >\n                <span>Required scopes are missing: [{missingScopes.join(', ')}].</span>\n                {integration.kind === 'hubspot' ? (\n                    <span>\n                        Note that some features may not be available on your current HubSpot plan. Check out{' '}\n                        <Link to=\"https://developers.hubspot.com/beta-docs/guides/apps/authentication/scopes\">\n                            this page\n                        </Link>{' '}\n                        for more details.\n                    </span>\n                ) : null}\n            </LemonBanner>\n        </div>\n    )\n}\n"],
  "mappings": "qOAAAA,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,IAGA,IAAAC,EAAwB,OAiCTC,EAAA,OA7BR,SAASC,EAAyB,CACrC,YAAAC,EACA,OAAAC,CACJ,EAGgB,CACZ,IAAMC,KAAY,WAAQ,IAAgB,CACtC,IAAMC,EAAgB,CAAC,EAGvB,MAF8B,CAACH,EAAY,OAAO,MAAOA,EAAY,OAAO,MAAM,EAE5D,IAAKI,GAAU,CAC7B,OAAOA,GAAU,WACjBD,EAAO,KAAKC,EAAM,MAAM,GAAG,CAAC,EAC5BD,EAAO,KAAKC,EAAM,MAAM,GAAG,CAAC,GAE5B,OAAOA,GAAU,UACjBD,EAAO,KAAKC,CAAK,CAEzB,CAAC,EACMD,EACF,OAAQC,GAAe,OAAOA,GAAU,QAAQ,EAChD,OAAO,CAACC,EAAGC,IAAOD,EAAE,OAASC,EAAE,OAASD,EAAIC,EAAI,CAAC,CAAC,CAC3D,EAAG,CAACN,EAAY,MAAM,CAAC,EAGjBO,GADiBN,GAAQ,gBAAgB,MAAM,GAAG,GAAK,CAAC,GACzB,OAAQG,GAAkB,CAACF,EAAU,SAASE,CAAK,CAAC,EAEzF,OAAIG,EAAc,SAAW,GAAKL,EAAU,SAAW,KAC5C,oBAAE,KAGT,OAAC,OAAI,UAAU,MACX,oBAACM,EAAA,CACG,KAAK,QACL,OAAQ,CACJ,SAAU,YACV,yBAA0B,GAC1B,GAAIC,EAAI,aAAa,aAAa,CAC9B,KAAMT,EAAY,KAClB,KAAM,OAAO,SAAS,QAC1B,CAAC,CACL,EAEA,qBAAC,QAAK,2CAA+BO,EAAc,KAAK,IAAI,EAAE,MAAE,EAC/DP,EAAY,OAAS,aAClB,QAAC,QAAK,iGACmF,OACrF,OAACU,EAAA,CAAK,GAAG,6EAA6E,qBAEtF,EAAQ,IAAI,qBAEhB,EACA,MACR,EACJ,CAER,CD1CoB,IAAAC,EAAA,OAfb,SAASC,EAAgB,CAC5B,YAAAC,EACA,OAAAC,EACA,OAAAC,CACJ,EAIgB,CACZ,IAAMC,EAAUH,EAAY,QAAUA,EAAY,QAAQ,MAAM,GAAG,GAAM,CAAC,EAE1E,SACI,QAAC,OAAI,UAAU,oCACX,qBAAC,OAAI,UAAU,wCACX,qBAAC,OAAI,UAAU,+BACX,oBAAC,OAAI,IAAKA,EAAY,SAAU,UAAU,oBAAoB,KAC9D,QAAC,OACG,qBAAC,OAAI,6BACY,OAAC,UAAQ,SAAAA,EAAY,aAAa,GACnD,EACCA,EAAY,cACT,OAACI,EAAA,CACG,GAAIJ,EAAY,WAChB,GAAIA,EAAY,WAChB,OAAO,UACP,UAAU,iBACd,EACA,MACR,GACJ,EAECC,GACL,EAECE,EAAO,OAAS,KACb,OAAC,OAAI,UAAU,MACX,mBAACE,EAAA,CACG,KAAK,QACL,OAAQ,CACJ,SAAU,YACV,yBAA0B,GAC1B,GAAIC,EAAI,aAAa,aAAa,CAC9B,KAAMN,EAAY,KAClB,KAAM,OAAO,SAAS,QAC1B,CAAC,CACL,EAEC,SAAAG,EAAO,CAAC,IAAM,uBACT,iEACA,6CAA6CA,EAAO,CAAC,CAAC,GAChE,EACJ,KAEA,OAACI,EAAA,CAAyB,YAAaP,EAAa,OAAQE,EAAQ,GAE5E,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_react", "import_jsx_runtime", "IntegrationScopesWarning", "integration", "schema", "getScopes", "scopes", "scope", "a", "b", "missingScopes", "LemonBanner", "api_default", "Link", "import_jsx_runtime", "IntegrationView", "integration", "suffix", "schema", "errors", "UserActivityIndicator", "LemonBanner", "api_default", "IntegrationScopesWarning"]
}
