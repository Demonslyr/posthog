import{a as we}from"/static/chunk-GVAK35JD.js";import{a as Ce}from"/static/chunk-HOCRDURT.js";import{a as Pe}from"/static/chunk-KHKNIVWH.js";import{a as ie}from"/static/chunk-34UVU7UN.js";import{f as ve}from"/static/chunk-HRNZBUVG.js";import{$a as ee,Ck as be,Do as g,Eo as ke,Io as d,Ip as h,Jn as Ie,Ko as C,Np as Le,Og as w,Oh as Ee,Qk as Me,Sh as xe,Tl as ne,Uf as ge,Vd as p,Yf as he,Za as V,Zg as Fe,_e as ye,_f as re,a as L,df as N,f as X,gi as _e,hg as B,hm as Ae,ig as q,j as Z,kl as ae,ll as Te,m as z,ml as Re,ng as te,ol as Se,p as fe}from"/static/chunk-RFJTZKD6.js";import{B as W,Da as O,F as ce,Fc as me,i as de,ic as pe,j as ue,na as _}from"/static/chunk-3UDJFOQH.js";import{d as F,e as R,g as S,j as A}from"/static/chunk-SJXEOBQC.js";R();A();S();var m=F(L()),Ve=F(ee()),De=F(V()),D=F(X());var G={name:"",description:"",stage:"draft",documentation_url:"",feature_flag_id:void 0},Fr=(0,m.kea)([(0,m.path)(["products","earlyAccessFeatures","frontend","earlyAccessFeatureLogic"]),(0,m.props)({}),(0,m.key)(({id:e})=>e),(0,m.connect)(()=>({values:[C,["currentTeamId"],ie,["earlyAccessFeatures"]],actions:[ie,["loadEarlyAccessFeatures","loadEarlyAccessFeaturesSuccess"]]})),(0,m.actions)({setEarlyAccessFeatureMissing:!0,toggleImplementOptInInstructionsModal:!0,editFeature:e=>({editing:e}),updateStage:e=>({stage:e}),deleteEarlyAccessFeature:e=>({earlyAccessFeatureId:e}),setActiveTab:e=>({activeTab:e})}),(0,De.loaders)(({props:e,actions:r})=>({earlyAccessFeature:{loadEarlyAccessFeature:async()=>{if(e.id&&e.id!=="new")try{return await d.earlyAccessFeatures.get(e.id)}catch(a){throw r.setEarlyAccessFeatureMissing(),a}return G},saveEarlyAccessFeature:async a=>{let t;return e.id==="new"?(t=await d.earlyAccessFeatures.create(a),D.router.actions.replace(g.earlyAccessFeature(t.id))):t=await d.earlyAccessFeatures.update(e.id,a),t}}})),(0,Ve.forms)(({actions:e})=>({earlyAccessFeature:{defaults:{...G},errors:r=>({name:r.name?void 0:"Feature name must be set"}),submit:async r=>{e.saveEarlyAccessFeature(r)}}})),(0,m.reducers)({earlyAccessFeatureMissing:[!1,{setEarlyAccessFeatureMissing:()=>!0}],isEditingFeature:[!1,{editFeature:(e,{editing:r})=>r}],implementOptInInstructionsModal:[!1,{toggleImplementOptInInstructionsModal:e=>!e}],activeTab:["opted-in",{setActiveTab:(e,{activeTab:r})=>r}]}),(0,m.selectors)({mode:[(e,r)=>[r.id],e=>e==="new"?"edit":"view"],breadcrumbs:[e=>[e.earlyAccessFeature],e=>[{key:"EarlyAccessFeatures",name:"Early Access Management",path:g.earlyAccessFeatures()},{key:["EarlyAccessFeature",e.id||"new"],name:e.name}]]}),(0,m.listeners)(({actions:e,values:r,props:a})=>({updateStage:async({stage:t})=>{"id"in r.earlyAccessFeature&&await d.earlyAccessFeatures.update(a.id,{...r.earlyAccessFeature,stage:t}),e.loadEarlyAccessFeature(),e.loadEarlyAccessFeatures()},saveEarlyAccessFeatureSuccess:({earlyAccessFeature:t})=>{p.success("Early Access Feature saved"),e.loadEarlyAccessFeatures(),t.id&&D.router.actions.replace(g.earlyAccessFeature(t.id)),e.editFeature(!1)},deleteEarlyAccessFeature:async({earlyAccessFeatureId:t})=>{try{await d.earlyAccessFeatures.delete(t),p.info("Early access feature deleted. Remember to delete corresponding feature flag if necessary"),e.loadEarlyAccessFeaturesSuccess(r.earlyAccessFeatures.filter(n=>n.id!==t)),D.router.actions.push(g.earlyAccessFeatures())}catch(n){p.error(`Error deleting Early Access Feature: ${n}`)}}})),(0,D.urlToAction)(({actions:e,props:r})=>({[g.earlyAccessFeature(r.id??"new")]:(a,t,n,{method:i})=>{i==="PUSH"&&r.id&&e.loadEarlyAccessFeature()}})),(0,m.afterMount)(({props:e,actions:r})=>{e.id!=="new"&&r.loadEarlyAccessFeature()})]);R();A();S();var y=F(L()),ze=F(ee()),Be=F(V()),k=F(X());R();A();S();var f=F(L()),Ne=F(ee()),$e=F(V()),v=F(X());R();A();S();var E=F(L()),Oe=F(V());R();A();S();var x=F(L()),Qe=F(V());var je=(0,x.kea)([(0,x.path)(["scenes","organization","rolesLogic"]),(0,x.connect)({values:[Ie,["allMembers"]]}),(0,x.actions)({setCreateRoleModalShown:e=>({shown:e}),setRoleInFocus:e=>({role:e}),setRoleMembersInFocus:e=>({roleMembers:e}),setRoleMembersToAdd:e=>({uuids:e}),openCreateRoleModal:!0,setPermission:(e,r)=>({resource:e,access:r}),clearPermission:!0,updateRole:e=>({role:e})}),(0,x.reducers)({createRoleModalShown:[!1,{setCreateRoleModalShown:(e,{shown:r})=>r}],roleInFocus:[null,{setRoleInFocus:(e,{role:r})=>r}],roleMembersInFocus:[[],{setRoleMembersInFocus:(e,{roleMembers:r})=>r}],roleMembersToAdd:[[],{setRoleMembersToAdd:(e,{uuids:r})=>r}],roles:[[],{updateRole:(e,{role:r})=>e.map(a=>a.id==r.id?r:a)}]}),(0,Qe.loaders)(({values:e,actions:r,asyncActions:a})=>({roles:{loadRoles:async()=>(await d.roles.list())?.results||[],createRole:async t=>{let{roles:n,roleMembersToAdd:i}=e,s=await d.roles.create(t);return await a.addRoleMembers({role:s,membersToAdd:i}),h.actions.reportRoleCreated(t),r.setRoleMembersInFocus([]),r.setRoleMembersToAdd([]),r.clearPermission(),r.setCreateRoleModalShown(!1),[s,...n]},deleteRole:async t=>(await d.roles.delete(t.id),e.roles.filter(n=>n.id!==t.id))},roleMembersInFocus:[[],{loadRoleMembers:async({roleId:t})=>(await d.roles.members.list(t))?.results||[],addRoleMembers:async({role:t,membersToAdd:n})=>{let i=await Promise.all(n.map(async s=>await d.roles.members.create(t.id,s)));return r.setRoleMembersToAdd([]),[...e.roleMembersInFocus,...i]},deleteRoleMember:async({roleMemberUuid:t})=>(e.roleInFocus&&await d.roles.members.delete(e.roleInFocus.id,t),e.roleMembersInFocus.filter(n=>n.id!==t))}]})),(0,x.listeners)(({actions:e,values:r})=>({setRoleInFocus:({role:a})=>{a&&e.loadRoleMembers({roleId:a.id}),e.setCreateRoleModalShown(!0)},openCreateRoleModal:()=>{e.setRoleInFocus(null),e.setRoleMembersInFocus([]),e.setCreateRoleModalShown(!0)},setCreateRoleModalShown:()=>{r.roleInFocus?e.setPermission("feature flags",r.roleInFocus.feature_flags_access_level):e.setPermission("feature flags",37)},deleteRoleSuccess:()=>{e.setCreateRoleModalShown(!1)}})),(0,x.selectors)({addableMembers:[e=>[e.allMembers,e.roleMembersInFocus],(e,r)=>{let a=[];for(let t of e)r.some(n=>n.user.uuid===t.user.uuid)||a.push(t.user);return a.sort((t,n)=>t.first_name.localeCompare(n.first_name)),a}]}),(0,x.afterMount)(({actions:e})=>{e.loadRoles()})]);var se=(0,E.kea)([(0,E.path)(["scenes","feature-flags","featureFlagPermissionsLogic"]),(0,E.props)({}),(0,E.key)(e=>`${e.flagId}`),(0,E.connect)({values:[je,["roles"]]}),(0,E.actions)({setModalOpen:e=>({visible:e}),setRolesToAdd:e=>({roleIds:e})}),(0,E.reducers)({permissionModalVisible:[!1,{setModalOpen:(e,{visible:r})=>r}],rolesToAdd:[[],{setRolesToAdd:(e,{roleIds:r})=>r}]}),(0,Oe.loaders)(({props:e,values:r,actions:a})=>({unfilteredAddableRoles:[[],{loadPossibleRolesToAdd:async()=>(await d.roles.list({feature_flags_access_level:21})).results||[]}],associatedRoles:[[],{loadAssociatedRoles:async()=>e.flagId?(await d.resourceAccessPermissions.featureFlags.list(e.flagId)).results||[]:[],addAssociatedRoles:async t=>{let{rolesToAdd:n}=r,i=e.flagId||t;if(i){let o=await Promise.all(n.map(async l=>await d.resourceAccessPermissions.featureFlags.create(i,l)));return a.setRolesToAdd([]),[...r.associatedRoles,...o]}let s=[];for(let o of n){let l=r.roles.find(u=>o===u.id);l?.id&&s.push(l)}return h.actions.reportRoleCustomAddedToAResource("feature flags",n.length),s.map(o=>({id:o.id,role:o,feature_flag:null,updated_at:"",added_at:""}))},deleteAssociatedRole:async({roleId:t})=>{let n=r.associatedRoles.find(s=>s.role.id===t)?.id,i=r.associatedRoles.filter(s=>s.id!==n);return e.flagId?n&&await d.resourceAccessPermissions.featureFlags.delete(e.flagId,n):a.setRolesToAdd(i.map(s=>s.id)),i}}]})),(0,E.selectors)({derivedRoles:[e=>[e.associatedRoles],e=>e.map(r=>r.role)],addableRoles:[e=>[e.unfilteredAddableRoles,e.associatedRoles],(e,r)=>{let a=[];for(let t of e)r.some(n=>n.role.id===t.id)||a.push(t);return a}]}),(0,E.afterMount)(({actions:e})=>{e.loadPossibleRolesToAdd(),e.loadAssociatedRoles()})]);var er=()=>({operator:"gt",threshold_type:"sentry",threshold:50,threshold_metric:{...be({insight:"TRENDS",date_from:(0,_.default)().subtract(7,"day").format("YYYY-MM-DDTHH:mm"),date_to:(0,_.default)().endOf("d").format("YYYY-MM-DDTHH:mm")})}}),I={id:null,created_at:null,key:"",name:"",filters:{groups:[{properties:[],rollout_percentage:void 0,variant:null}],multivariate:null,payloads:{}},deleted:!1,active:!0,created_by:null,is_simple_flag:!1,rollout_percentage:null,ensure_experience_continuity:!1,experiment_set:null,features:[],rollback_conditions:[],surveys:null,performed_rollback:!1,can_edit:!0,user_access_level:"editor",tags:[],is_remote_configuration:!1,has_encrypted_payloads:!1,status:"ACTIVE"},rr={key:"",name:"",rollout_percentage:0},tr={variants:[{key:"",name:"",rollout_percentage:100}]};function K(e){return e?e.match?.(/^([A-z]|[a-z]|[0-9]|-|_)+$/)?void 0:"Only letters, numbers, hyphens (-) & underscores (_) are allowed.":"Please set a key"}function ar(e,r){if(e)return r===void 0?"Payload is required for remote configuration flags.":void 0}var Q=e=>{if(!e.filters.multivariate)return e;let r={};return e.filters.multivariate?.variants.forEach((a,t)=>{e.filters.payloads?.[a.key]!==void 0&&(r[t]=e.filters.payloads[a.key])}),{...e,filters:{...e.filters,payloads:r}}},Y=e=>{if(e.filters?.multivariate){let r={};return e.filters.multivariate.variants.forEach(({key:a},t)=>{e.filters?.payloads?.[t]!==void 0&&(r[a]=e.filters.payloads[t])}),{...e,filters:{...e.filters,payloads:r}}}if(e.filters&&!e.filters.multivariate){let r={};return e.filters.payloads?.true&&(r={true:e.filters.payloads.true}),{...e,filters:{...e.filters,payloads:r}}}return e},nr=(e,r,a)=>({filter_group:{type:"AND",values:[{type:"AND",values:[a?{id:"$feature_interaction",type:"events",order:0,name:"$feature_interaction",properties:[{key:"feature_flag",value:[e],operator:"exact",type:"event"}]}:{type:"event",key:`$feature/${e}`,operator:"exact",value:[r||"true"]}]}]}}),Xt=(0,f.kea)([(0,f.path)(["scenes","feature-flags","featureFlagLogic"]),(0,f.props)({}),(0,f.key)(({id:e})=>e??"unknown"),(0,f.connect)(e=>({values:[C,["currentTeam","currentTeamId"],B,["currentProjectId"],q,["aggregationLabel"],ke,["hasAvailableFeature"],Ce,["dashboards"],ye,["currentOrganization"],z,["featureFlags as enabledFeatures"]],actions:[Pe({featureFlagId:typeof e.id=="number"?e.id:void 0}),["submitNewDashboardSuccessWithResult"],w,["updateFlag","deleteFlag"],fe,["closeSidePanel"],C,["addProductIntent"]]})),(0,f.actions)({setFeatureFlag:e=>({featureFlag:e}),setFeatureFlagFilters:(e,r)=>({filters:e,errors:r}),setActiveTab:e=>({tab:e}),setFeatureFlagMissing:!0,addRollbackCondition:!0,removeRollbackCondition:e=>({index:e}),deleteFeatureFlag:e=>({featureFlag:e}),restoreFeatureFlag:e=>({featureFlag:e}),setRemoteConfigEnabled:e=>({enabled:e}),resetEncryptedPayload:()=>({}),setMultivariateEnabled:e=>({enabled:e}),setMultivariateOptions:e=>({multivariateOptions:e}),addVariant:!0,duplicateVariant:e=>({index:e}),removeVariant:e=>({index:e}),editFeatureFlag:e=>({editing:e}),distributeVariantsEqually:!0,loadInsightAtIndex:(e,r)=>({index:e,filters:r}),setInsightResultAtIndex:(e,r)=>({index:e,average:r}),loadAllInsightsForFlag:!0,generateUsageDashboard:!0,enrichUsageDashboard:!0,setCopyDestinationProject:e=>({id:e}),setScheduleDateMarker:e=>({dateMarker:e}),setSchedulePayload:(e,r,a)=>({filters:e,active:r,errors:a}),setScheduledChangeOperation:e=>({changeType:e}),setAccessDeniedToFeatureFlag:!0}),(0,Ne.forms)(({actions:e,values:r})=>({featureFlag:{defaults:{...I,ensure_experience_continuity:r.currentTeam?.flags_persistence_default||!1},errors:({key:a,filters:t,is_remote_configuration:n})=>({key:K(a),filters:{multivariate:{variants:t?.multivariate?.variants?.map(({key:i})=>({key:K(i)}))},groups:r.propertySelectErrors,payloads:{true:ar(n,t?.payloads?.true)}}}),submit:a=>{e.saveFeatureFlag(a)}}})),(0,f.reducers)({featureFlag:[{...I},{setFeatureFlag:(e,{featureFlag:r})=>r,setFeatureFlagFilters:(e,{filters:r})=>({...e,filters:r}),addRollbackCondition:e=>e&&{...e,rollback_conditions:[...e.rollback_conditions,er()]},removeRollbackCondition:(e,{index:r})=>{if(!e)return e;let a=[...e.rollback_conditions];return a.splice(r,1),{...e,rollback_conditions:a}},setMultivariateOptions:(e,{multivariateOptions:r})=>e&&{...e,filters:{...e.filters,multivariate:r}},setRemoteConfigEnabled:(e,{enabled:r})=>e&&{...e,is_remote_configuration:r},resetEncryptedPayload:e=>e&&{...e,filters:{...e.filters,payloads:{true:""}},has_encrypted_payloads:!1},addVariant:e=>{if(!e)return e;let r=[...e.filters.multivariate?.variants||[]];return{...e,filters:{...e.filters,multivariate:{...e.filters.multivariate||{},variants:[...r,rr]}}}},removeVariant:(e,{index:r})=>{if(!e)return e;let a=[...e.filters.multivariate?.variants||[]];a.splice(r,1);let t={...e.filters.payloads},n={};return Object.keys(t).forEach(i=>{let s=parseInt(i);s>r?n[s-1]=t[s]:s<r&&(n[s]=t[s])}),{...e,filters:{...e.filters,multivariate:{...e.filters.multivariate,variants:a},payloads:n}}},distributeVariantsEqually:e=>{if(!e)return e;let r=[...e.filters.multivariate?.variants||[]],a=r.length;if(a>0&&a<=100){let t=Math.round(100/a),i=t*a-100;r.forEach((s,o)=>{r[o]={...s,rollout_percentage:t}}),r[a-1]={...r[a-1],rollout_percentage:t-i}}return{...e,filters:{...e.filters,multivariate:{...e.filters.multivariate,variants:r}}}},createEarlyAccessFeatureSuccess:(e,{newEarlyAccessFeature:r})=>e&&{...e,features:[...e.features||[],r]},createSurveySuccess:(e,{newSurvey:r})=>e&&{...e,surveys:[...e.surveys||[],r]}}],accessDeniedToFeatureFlag:[!1,{setAccessDeniedToFeatureFlag:()=>!0}],propertySelectErrors:[null,{setFeatureFlagFilters:(e,{errors:r})=>r}],activeTab:["overview",{setActiveTab:(e,{tab:r})=>r}],featureFlagMissing:[!1,{setFeatureFlagMissing:()=>!0}],isEditingFlag:[!1,{editFeatureFlag:(e,{editing:r})=>r}],insightRollingAverages:[{},{setInsightResultAtIndex:(e,{index:r,average:a})=>({...e,[`${r}`]:a})}],copyDestinationProject:[null,{setCopyDestinationProject:(e,{id:r})=>r}],scheduleDateMarker:[null,{setScheduleDateMarker:(e,{dateMarker:r})=>r}],schedulePayload:[{filters:{...I.filters},active:I.active},{setSchedulePayload:(e,{filters:r,active:a})=>({filters:r===null?e.filters:r,active:a===null?e.active:a})}],schedulePayloadErrors:[null,{setSchedulePayload:(e,{errors:r})=>r??e}],scheduledChangeOperation:["add_release_condition",{setScheduledChangeOperation:(e,{changeType:r})=>r}]}),(0,$e.loaders)(({values:e,props:r,actions:a})=>({featureFlag:{loadFeatureFlag:async()=>{if(r.id&&r.id!=="new"&&r.id!=="link")try{let t=await d.featureFlags.get(r.id);return Q(t)}catch(t){throw t.status===403&&t.code==="permission_denied"?a.setAccessDeniedToFeatureFlag():a.setFeatureFlagMissing(),t}return{...I,ensure_experience_continuity:e.currentTeam?.flags_persistence_default??!1}},saveFeatureFlag:async t=>{let{created_at:n,id:i,...s}=t,o=Y(s);try{let l;if(!t.id)l=await d.create(`api/projects/${e.currentProjectId}/feature_flags`,o),e.roleBasedAccessEnabled&&l.id&&se({flagId:null})?.actions.addAssociatedRoles(l.id),a.addProductIntent({product_type:"feature_flags",intent_context:"feature flag created"});else{let u=w.findMounted()?.values.featureFlags.results.find(c=>c.id===r.id);u&&JSON.stringify(u?.filters)!==JSON.stringify(e.featureFlag.filters)&&N.findMounted()?.actions.markTaskAsCompleted("update_feature_flag_release_conditions"),l=await d.update(`api/projects/${e.currentProjectId}/feature_flags/${t.id}`,o)}return Q(l)}catch(l){throw(l.code==="behavioral_cohort_found"||l.code==="cohort_does_not_exist")&&h.actions.reportFailedToCreateFeatureFlagWithCohort(l.code,l.detail),l}},saveSidebarExperimentFeatureFlag:async t=>{let{created_at:n,id:i,...s}=t,o=Y(s);try{let l;return t.id?l=await d.update(`api/projects/${e.currentProjectId}/feature_flags/${t.id}`,o):(l=await d.create(`api/projects/${e.currentProjectId}/feature_flags`,o),e.roleBasedAccessEnabled&&l.id&&se({flagId:null})?.actions.addAssociatedRoles(l.id)),Q(l)}catch(l){throw(l.code==="behavioral_cohort_found"||l.code==="cohort_does_not_exist")&&h.actions.reportFailedToCreateFeatureFlagWithCohort(l.code,l.detail),l}}},relatedInsights:[[],{loadRelatedInsights:async()=>r.id&&r.id!=="new"&&e.featureFlag.key?(await d.get(`api/environments/${e.currentProjectId}/insights/?feature_flag=${e.featureFlag.key}&order=-created_at`)).results.map(n=>Ae(n)):[]}],sentryStats:[{},{loadSentryStats:async()=>await d.get("api/sentry_stats/")}],newEarlyAccessFeature:[null,{createEarlyAccessFeature:async()=>{let t={...G,name:`Early access: ${e.featureFlag.key}`,feature_flag_id:e.featureFlag.id};return await d.earlyAccessFeatures.create(t)}}],newSurvey:[null,{createSurvey:async()=>{let t={...ve,name:`Survey: ${e.featureFlag.key}`,linked_flag_id:e.featureFlag.id,questions:[{type:"open",question:`What do you think of ${e.featureFlag.key}?`}]};return await d.surveys.create(t)}}],newCohort:[null,{createStaticCohort:async()=>r.id&&r.id!=="new"&&r.id!=="link"?(await d.featureFlags.createStaticCohort(r.id)).cohort:null}],projectsWithCurrentFlag:{__default:[],loadProjectsWithCurrentFlag:async()=>{let t=e.currentOrganization?.id,n=e.featureFlag.key,i=await d.organizationFeatureFlags.get(t,n),s=i.findIndex(o=>o.team_id===e.currentTeamId);if(s){let[o]=i.splice(s,1);return[o,...i]}return i}},featureFlagCopy:{copyFlag:async()=>{let t=e.currentOrganization?.id,n=e.featureFlag.key,{copyDestinationProject:i,currentProjectId:s}=e;if(s&&i)return await d.organizationFeatureFlags.copy(t,{feature_flag_key:n,from_project:s,target_project_ids:[i]})}},scheduledChanges:{__default:[],loadScheduledChanges:async()=>{let{currentProjectId:t}=e;if(t)return(await d.featureFlags.getScheduledChanges(t,e.featureFlag.id)).results||[]}},scheduledChange:{__default:{},createScheduledChange:async()=>{let{scheduledChangeOperation:t,scheduleDateMarker:n,currentProjectId:i,schedulePayload:s}=e,o={update_status:"active",add_release_condition:"filters"};if(i&&t){let l={record_id:e.featureFlag.id,model_name:"FeatureFlag",payload:{operation:t,value:s[o[t]]},scheduled_at:n.toISOString()};return await d.featureFlags.createScheduledChange(i,l)}},deleteScheduledChange:async t=>{let{currentProjectId:n}=e;if(n)return await d.featureFlags.deleteScheduledChange(n,t)}},flagStatus:[null,{loadFeatureFlagStatus:()=>{let{currentProjectId:t}=e;return t&&r.id&&r.id!=="new"&&r.id!=="link"?d.featureFlags.getStatus(t,r.id):null}}],experiment:{loadExperiment:async()=>{if(e.featureFlag.experiment_set)return await d.experiments.get(e.featureFlag.experiment_set[0])}}})),(0,f.listeners)(({actions:e,values:r,props:a})=>({submitNewDashboardSuccessWithResult:async({result:t})=>{await d.update(`api/projects/${r.currentProjectId}/feature_flags/${r.featureFlag.id}`,{analytics_dashboards:[t.id]})},generateUsageDashboard:async()=>{a.id&&(await d.create(`api/projects/${r.currentProjectId}/feature_flags/${a.id}/dashboard`),e.loadFeatureFlag())},enrichUsageDashboard:async(t,n)=>{a.id&&(await n(1e3),await d.create(`api/projects/${r.currentProjectId}/feature_flags/${a.id}/enrich_usage_dashboard`))},submitFeatureFlagFailure:async()=>{setTimeout(()=>document.querySelector(".Field--error")?.scrollIntoView({block:"center",behavior:"smooth"}),1)},saveFeatureFlagSuccess:({featureFlag:t})=>{p.success("Feature flag saved"),e.updateFlag(t),t.id&&v.router.actions.replace(g.featureFlag(t.id)),e.editFeatureFlag(!1),N.findMounted()?.actions.markTaskAsCompleted("create_feature_flag")},saveSidebarExperimentFeatureFlagSuccess:({featureFlag:t})=>{p.success("Release conditions updated"),e.updateFlag(t),e.editFeatureFlag(!1),e.closeSidePanel();let i=v.router.values.currentLocation.pathname.split("/").pop();i&&(h.actions.reportExperimentReleaseConditionsUpdated(parseInt(i)),oe({experimentId:parseInt(i)}).actions.loadExperiment())},deleteFeatureFlag:async({featureFlag:t})=>{await te({endpoint:`projects/${r.currentProjectId}/feature_flags`,object:{name:t.key,id:t.id},callback:()=>{t.id&&e.deleteFlag(t.id),e.loadFeatureFlag(),v.router.actions.push(g.featureFlags())}})},restoreFeatureFlag:async({featureFlag:t})=>{await te({endpoint:`projects/${r.currentProjectId}/feature_flags`,object:{name:t.key,id:t.id},undo:!0,callback:()=>{e.loadFeatureFlag()}})},setMultivariateEnabled:async({enabled:t})=>{t?e.setMultivariateOptions(tr):e.setMultivariateOptions(null)},loadFeatureFlagSuccess:async()=>{e.loadRelatedInsights(),e.loadAllInsightsForFlag(),e.loadExperiment()},loadInsightAtIndex:async({index:t,filters:n})=>{if(n){let s=(await d.get(`api/environments/${r.currentProjectId}/insights/trend/?${O(xe(n))}`)).result?.[0]?.data,o=Math.round(pe(s)/7);e.setInsightResultAtIndex(t,o)}},loadAllInsightsForFlag:()=>{r.featureFlag.rollback_conditions?.forEach((t,n)=>{t.threshold_metric&&e.loadInsightAtIndex(n,t.threshold_metric)})},addRollbackCondition:()=>{let t=r.featureFlag.rollback_conditions.length-1;e.loadInsightAtIndex(t,r.featureFlag.rollback_conditions[t].threshold_metric)},copyFlagSuccess:({featureFlagCopy:t})=>{if(t?.success.length){let n=r.projectsWithCurrentFlag.find(i=>Number(i.team_id)===r.copyDestinationProject)?"updated":"copied";p.success(`Feature flag ${n} successfully!`),h.actions.reportFeatureFlagCopySuccess()}else{let n=JSON.stringify(t?.failed)||t;p.error(`Error while saving feature flag: ${n}`),h.actions.reportFeatureFlagCopyFailure(n)}e.loadProjectsWithCurrentFlag(),e.setCopyDestinationProject(null)},createStaticCohortSuccess:({newCohort:t})=>{t&&p.success("Static cohort created successfully",{button:{label:"View cohort",action:()=>v.router.actions.push(g.cohort(t.id))}})},createScheduledChangeSuccess:({scheduledChange:t})=>{t&&(p.success("Change scheduled successfully"),e.setSchedulePayload(I.filters,I.active,{}),e.loadScheduledChanges(),h.actions.reportFeatureFlagScheduleSuccess())},setScheduledChangeOperation:()=>{e.setSchedulePayload(I.filters,I.active,{})},setActiveTab:({tab:t})=>{t==="schedule"&&(e.setSchedulePayload(I.filters,I.active,{}),e.loadScheduledChanges())},createScheduledChangeFailure:({error:t})=>{h.actions.reportFeatureFlagScheduleFailure({error:t})},deleteScheduledChangeSuccess:({scheduledChange:t})=>{t&&(p.success("Change has been deleted"),e.loadScheduledChanges())},setRemoteConfigEnabled:({enabled:t})=>{t&&e.setFeatureFlagFilters({...r.featureFlag.filters,groups:[{variant:null,properties:[],rollout_percentage:100}]},{})}})),(0,f.selectors)({sentryErrorCount:[e=>[e.sentryStats],e=>e.total_count],sentryIntegrationEnabled:[e=>[e.sentryStats],e=>!!e.sentry_integration_enabled],props:[()=>[(e,r)=>r],e=>e],multivariateEnabled:[e=>[e.featureFlag],e=>!!e?.filters.multivariate],flagType:[e=>[e.featureFlag],e=>e?.is_remote_configuration?"remote_config":e?.filters.multivariate?"multivariate":"boolean"],flagTypeString:[e=>[e.featureFlag],e=>e?.is_remote_configuration?"Remote configuration (single payload)":e?.filters.multivariate?"Multiple variants with rollout percentages (A/B/n test)":"Release toggle (boolean)"],roleBasedAccessEnabled:[e=>[e.hasAvailableFeature],e=>e("role_based_access")],variants:[e=>[e.featureFlag],e=>e?.filters.multivariate?.variants||[]],nonEmptyVariants:[e=>[e.variants],e=>e.filter(({key:r})=>!!r)],variantRolloutSum:[e=>[e.variants],e=>e.reduce((r,{rollout_percentage:a})=>r+a,0)],areVariantRolloutsValid:[e=>[e.variants,e.variantRolloutSum],(e,r)=>e.every(({rollout_percentage:a})=>a>=0&&a<=100)&&r===100],aggregationTargetName:[e=>[e.featureFlag,e.aggregationLabel],(e,r)=>e&&e.filters.aggregation_group_type_index!=null?r(e.filters.aggregation_group_type_index).plural:"users"],breadcrumbs:[e=>[e.featureFlag],e=>[{key:"FeatureFlags",name:"Feature Flags",path:g.featureFlags()},{key:["FeatureFlag",e.id||"unknown"],name:e.key||"Unnamed"}]],[ge]:[e=>[e.featureFlag,e.currentTeam],(e,r)=>e?.id&&r?.access_control_version==="v2"?{activity_scope:"FeatureFlag",activity_item_id:`${e.id}`,access_control_resource:"feature_flag",access_control_resource_id:`${e.id}`}:null],filteredDashboards:[e=>[e.dashboards,e.featureFlag],(e,r)=>r?e.filter(a=>r.analytics_dashboards?.includes(a.id)):e],recordingFilterForFlag:[e=>[e.featureFlag],e=>{let r=e?.key;return r?nr(r,null,e.has_enriched_analytics):{}}],hasEarlyAccessFeatures:[e=>[e.featureFlag],e=>(e?.features?.length||0)>0],earlyAccessFeaturesList:[e=>[e.featureFlag],e=>e?.features||[]],featureFlagKey:[e=>[e.featureFlag],e=>e.key],canCreateEarlyAccessFeature:[e=>[e.featureFlag,e.variants],(e,r)=>e&&e.filters.aggregation_group_type_index==null&&r.length===0],hasSurveys:[e=>[e.featureFlag],e=>e?.surveys&&e.surveys.length>0],hasEncryptedPayloadBeenSaved:[e=>[e.featureFlag,e.props],(e,r)=>e.has_encrypted_payloads?w.findMounted()?.values.featureFlags.results.find(t=>t.id===r.id)?.has_encrypted_payloads:!1],hasExperiment:[e=>[e.featureFlag],e=>e?.experiment_set&&e.experiment_set.length>0],isDraftExperiment:[e=>[e.experiment],e=>e?!e?.start_date:!1]}),(0,v.urlToAction)(({actions:e,props:r})=>({[g.featureFlag(r.id??"new")]:(a,t,n,{method:i})=>{i==="PUSH"&&(r.id?e.loadFeatureFlag():e.resetFeatureFlag())}})),(0,f.afterMount)(({props:e,actions:r})=>{let a=w.findMounted()?.values.featureFlags.results.find(t=>t.id===e.id);if(a){let t=Q(a);r.setFeatureFlag(t),r.loadRelatedInsights(),r.loadAllInsightsForFlag(),r.loadFeatureFlagStatus()}else e.id!=="new"&&(r.loadFeatureFlag(),r.loadFeatureFlagStatus())})]);R();A();S();var M=F(L()),Ue=F(V());var ir={id:null,name:"",description:null,filters:[{properties:[],rollout_percentage:10,variant:"holdout"}],created_by:null,created_at:null,updated_at:null},He=(0,M.kea)([(0,M.path)(["scenes","experiments","holdoutsLogic"]),(0,M.actions)({setHoldout:e=>({holdout:e}),createHoldout:!0,updateHoldout:(e,r)=>({id:e,holdout:r}),deleteHoldout:e=>({id:e}),loadHoldout:e=>({id:e})}),(0,M.connect)({actions:[h,["reportExperimentHoldoutCreated"]]}),(0,M.reducers)({holdout:[ir,{setHoldout:(e,{holdout:r})=>({...e,...r})}]}),(0,Ue.loaders)(({actions:e,values:r})=>({holdouts:[[],{loadHoldouts:async()=>(await d.get("api/projects/@current/experiment_holdouts/")).results,createHoldout:async()=>{let a=await d.create("api/projects/@current/experiment_holdouts/",r.holdout);return e.reportExperimentHoldoutCreated(a),[...r.holdouts,a]},updateHoldout:async({id:a,holdout:t})=>{let n=await d.update(`api/projects/@current/experiment_holdouts/${a}/`,t);return r.holdouts.map(i=>i.id===a?n:i)},deleteHoldout:async({id:a})=>(await d.delete(`api/projects/@current/experiment_holdouts/${a}/`),r.holdouts.filter(t=>t.id!==a))}]})),(0,M.listeners)(({actions:e})=>({createHoldoutSuccess:()=>{p.success("Holdout created"),e.loadHoldouts()},updateHoldoutSuccess:()=>{p.success("Holdout updated"),e.loadHoldouts()},deleteHoldoutSuccess:()=>{p.success("Holdout deleted"),e.loadHoldouts()}})),(0,M.events)(({actions:e})=>({afterMount:()=>{e.loadHoldouts()}}))]);var J={id:"new",name:"",type:"product",feature_flag_key:"",filters:{},metrics:[],metrics_secondary:[],saved_metrics_ids:[],saved_metrics:[],parameters:{feature_flag_variants:[{key:"control",rollout_percentage:50},{key:"test",rollout_percentage:50}]},secondary_metrics:[],created_at:null,created_by:null,updated_at:null,holdout_id:null},We=async({metrics:e,experimentId:r,refresh:a,onSetResults:t,onSetErrors:n,onTimeout:i})=>{let s=[],o=new Array(e.length).fill(null);return await Promise.all(e.map(async(l,u)=>{try{let c;l.kind==="ExperimentMetric"?c={kind:"ExperimentQuery",metric:l,experiment_id:r}:c={...l,experiment_id:r};let b=await re(c,void 0,a);s[u]={...b,fakeInsightId:Math.random().toString(36).substring(2,15)},t([...s])}catch(c){let b=c.detail?.match(/\{.*\}/),T=b?JSON.parse(b[0]):c.detail||c.message;o[u]={detail:T,statusCode:c.status,hasDiagnostics:!!b},n(o),T===he&&i(r,l),s[u]=null,t([...s])}}))},oe=(0,y.kea)([(0,y.props)({}),(0,y.key)(e=>e.experimentId||"new"),(0,y.path)(e=>["scenes","experiment","experimentLogic",e]),(0,y.connect)(()=>({values:[B,["currentProjectId"],q,["aggregationLabel","groupTypes","showGroupsOptions"],Le,["activeScene"],z,["featureFlags"],He,["holdouts"],_e({dashboardItemId:"new-experiment-funnels-metric"}),["results as funnelResults","conversionMetrics"],Me({dashboardItemId:"new-experiment-trends-metric"}),["results as trendResults"],ne({dashboardItemId:"new-experiment-trends-metric"}),["insightDataLoading as trendMetricInsightLoading"],ne({dashboardItemId:"new-experiment-funnels-metric"}),["insightDataLoading as funnelMetricInsightLoading"],we,["sharedMetrics"]],actions:[Fe,["updateExperiments","addToExperiments"],h,["reportExperimentCreated","reportExperimentViewed","reportExperimentLaunched","reportExperimentCompleted","reportExperimentArchived","reportExperimentReset","reportExperimentExposureCohortCreated","reportExperimentVariantShipped","reportExperimentVariantScreenshotUploaded","reportExperimentResultsLoadingTimeout","reportExperimentReleaseConditionsViewed","reportExperimentHoldoutAssigned","reportExperimentSharedMetricAssigned","reportExperimentDashboardCreated","reportExperimentMetricTimeout"],C,["addProductIntent"],w,["updateFlag"]]})),(0,y.actions)({setExperimentMissing:!0,setExperiment:e=>({experiment:e}),createExperiment:e=>({draft:e}),setExperimentType:e=>({type:e}),removeExperimentGroup:e=>({idx:e}),setEditExperiment:e=>({editing:e}),setFlagImplementationWarning:e=>({warning:e}),setExposureAndSampleSize:(e,r)=>({exposure:e,sampleSize:r}),refreshExperimentResults:e=>({forceRefresh:e}),updateExperimentGoal:!0,updateExperimentCollectionGoal:!0,changeExperimentStartDate:e=>({startDate:e}),setExperimentStatsVersion:e=>({version:e}),launchExperiment:!0,endExperiment:!0,addVariant:!0,archiveExperiment:!0,resetRunningExperiment:!0,checkFlagImplementationWarning:!0,openExperimentCollectionGoalModal:!0,closeExperimentCollectionGoalModal:!0,openShipVariantModal:!0,closeShipVariantModal:!0,openDistributionModal:!0,closeDistributionModal:!0,openReleaseConditionsModal:!0,closeReleaseConditionsModal:!0,updateExperimentVariantImages:e=>({variantPreviewMediaIds:e}),setMetric:({metricIdx:e,name:r,metric:a,isSecondary:t=!1})=>({metricIdx:e,name:r,metric:a,isSecondary:t}),setTrendsMetric:({metricIdx:e,name:r,series:a,filterTestAccounts:t,isSecondary:n=!1})=>({metricIdx:e,name:r,series:a,filterTestAccounts:t,isSecondary:n}),setTrendsExposureMetric:({metricIdx:e,name:r,series:a,filterTestAccounts:t,isSecondary:n=!1})=>({metricIdx:e,name:r,series:a,filterTestAccounts:t,isSecondary:n}),setFunnelsMetric:({metricIdx:e,name:r,series:a,filterTestAccounts:t,breakdownAttributionType:n,breakdownAttributionValue:i,funnelWindowInterval:s,funnelWindowIntervalUnit:o,aggregation_group_type_index:l,funnelAggregateByHogQL:u,isSecondary:c})=>({metricIdx:e,name:r,series:a,filterTestAccounts:t,breakdownAttributionType:n,breakdownAttributionValue:i,funnelWindowInterval:s,funnelWindowIntervalUnit:o,aggregation_group_type_index:l,funnelAggregateByHogQL:u,isSecondary:c}),setTabKey:e=>({tabKey:e}),openPrimaryMetricModal:e=>({index:e}),closePrimaryMetricModal:!0,setMetricResultsLoading:e=>({loading:e}),setMetricResults:e=>({results:e}),loadMetricResults:e=>({refresh:e}),setPrimaryMetricsResultErrors:e=>({errors:e}),setEditingPrimaryMetricIndex:e=>({index:e}),updateDistributionModal:e=>({featureFlag:e}),openSecondaryMetricModal:e=>({index:e}),closeSecondaryMetricModal:!0,setSecondaryMetricResultsLoading:e=>({loading:e}),setSecondaryMetricResults:e=>({results:e}),loadSecondaryMetricResults:e=>({refresh:e}),setSecondaryMetricsResultErrors:e=>({errors:e}),openPrimaryMetricSourceModal:!0,closePrimaryMetricSourceModal:!0,openSecondaryMetricSourceModal:!0,closeSecondaryMetricSourceModal:!0,openPrimarySharedMetricModal:e=>({sharedMetricId:e}),closePrimarySharedMetricModal:!0,openSecondarySharedMetricModal:e=>({sharedMetricId:e}),closeSecondarySharedMetricModal:!0,openVariantDeltaTimeseriesModal:!0,closeVariantDeltaTimeseriesModal:!0,addSharedMetricsToExperiment:(e,r)=>({sharedMetricIds:e,metadata:r}),removeSharedMetricFromExperiment:e=>({sharedMetricId:e}),createExperimentDashboard:!0,setIsCreatingExperimentDashboard:e=>({isCreating:e}),setUnmodifiedExperiment:e=>({experiment:e}),restoreUnmodifiedExperiment:!0,setValidExistingFeatureFlag:e=>({featureFlag:e}),setFeatureFlagValidationError:e=>({error:e}),validateFeatureFlag:e=>({featureFlagKey:e})}),(0,y.reducers)({experiment:[{...J},{setExperiment:(e,{experiment:r})=>({...e,...r}),addVariant:e=>{if(e?.parameters?.feature_flag_variants){let r=ae(e.parameters.feature_flag_variants.length+1),a=e.parameters.feature_flag_variants.map((t,n)=>({...t,rollout_percentage:r[n]}));return{...e,parameters:{...e.parameters,feature_flag_variants:[...a,{key:`test_group_${e.parameters.feature_flag_variants.length}`,rollout_percentage:r[r.length-1]}]}}}return e},removeExperimentGroup:(e,{idx:r})=>{if(!e)return e;let a=[...e.parameters?.feature_flag_variants||[]];a.splice(r,1);let t=ae((e?.parameters?.feature_flag_variants||[]).length-1),n=a.map((i,s)=>({...i,rollout_percentage:t[s]}));return{...e,parameters:{...e.parameters,feature_flag_variants:n}}},setMetric:(e,{metricIdx:r,metric:a,isSecondary:t})=>{let n=t?"metrics_secondary":"metrics",i=[...e?.[n]||[]];return i[r]=a,{...e,[n]:i}},setTrendsMetric:(e,{metricIdx:r,name:a,series:t,filterTestAccounts:n,isSecondary:i})=>{let s=i?"metrics_secondary":"metrics",o=[...e?.[s]||[]],l=o[r];return o[r]={...l,...a!==void 0&&{name:a},count_query:{...l.count_query,...t&&{series:t},...n!==void 0&&{filterTestAccounts:n}}},{...e,[s]:o}},setTrendsExposureMetric:(e,{metricIdx:r,name:a,series:t,filterTestAccounts:n,isSecondary:i})=>{let s=i?"metrics_secondary":"metrics",o=[...e?.[s]||[]],l=o[r];return o[r]={...l,...a!==void 0&&{name:a},exposure_query:{...l.exposure_query,...t&&{series:t},...n!==void 0&&{filterTestAccounts:n}}},{...e,[s]:o}},setFunnelsMetric:(e,{metricIdx:r,name:a,series:t,filterTestAccounts:n,breakdownAttributionType:i,breakdownAttributionValue:s,funnelWindowInterval:o,funnelWindowIntervalUnit:l,aggregation_group_type_index:u,funnelAggregateByHogQL:c,isSecondary:b})=>{let T=b?"metrics_secondary":"metrics",P=[...e?.[T]||[]],j=P[r];return P[r]={...j,...a!==void 0&&{name:a},funnels_query:{...j.funnels_query,...t&&{series:t},...n!==void 0&&{filterTestAccounts:n},...u!==void 0&&{aggregation_group_type_index:u},funnelsFilter:{...j.funnels_query.funnelsFilter,...i&&{breakdownAttributionType:i},...s!==void 0&&{breakdownAttributionValue:s},...o!==void 0&&{funnelWindowInterval:o},...l&&{funnelWindowIntervalUnit:l},...c!==void 0&&{funnelAggregateByHogQL:c}}}},{...e,[T]:P}}}],experimentMissing:[!1,{setExperimentMissing:()=>!0}],editingExistingExperiment:[!1,{setEditExperiment:(e,{editing:r})=>r}],flagImplementationWarning:[!1,{setFlagImplementationWarning:(e,{warning:r})=>r}],isExperimentCollectionGoalModalOpen:[!1,{openExperimentCollectionGoalModal:()=>!0,closeExperimentCollectionGoalModal:()=>!1}],isShipVariantModalOpen:[!1,{openShipVariantModal:()=>!0,closeShipVariantModal:()=>!1}],isDistributionModalOpen:[!1,{openDistributionModal:()=>!0,closeDistributionModal:()=>!1}],isReleaseConditionsModalOpen:[!1,{openReleaseConditionsModal:()=>!0,closeReleaseConditionsModal:()=>!1}],experimentValuesChangedLocally:[!1,{setExperiment:()=>!0,loadExperiment:()=>!1,updateExperiment:()=>!1}],unmodifiedExperiment:[null,{setUnmodifiedExperiment:(e,{experiment:r})=>r}],tabKey:["results",{setTabKey:(e,{tabKey:r})=>r}],isPrimaryMetricModalOpen:[!1,{openPrimaryMetricModal:()=>!0,closePrimaryMetricModal:()=>!1}],metricResultsLoading:[!1,{setMetricResultsLoading:(e,{loading:r})=>r}],metricResults:[[],{setMetricResults:(e,{results:r})=>r}],secondaryMetricResultsLoading:[!1,{setSecondaryMetricResultsLoading:(e,{loading:r})=>r}],secondaryMetricResults:[[],{setSecondaryMetricResults:(e,{results:r})=>r}],editingPrimaryMetricIndex:[null,{openPrimaryMetricModal:(e,{index:r})=>r,closePrimaryMetricModal:()=>null,updateExperimentGoal:()=>null,setEditingPrimaryMetricIndex:(e,{index:r})=>r}],primaryMetricsResultErrors:[[],{setPrimaryMetricsResultErrors:(e,{errors:r})=>r,loadMetricResults:()=>[],loadExperiment:()=>[]}],isSecondaryMetricModalOpen:[!1,{openSecondaryMetricModal:()=>!0,closeSecondaryMetricModal:()=>!1}],editingSecondaryMetricIndex:[null,{openSecondaryMetricModal:(e,{index:r})=>r,closeSecondaryMetricModal:()=>null,updateExperimentGoal:()=>null}],editingSharedMetricId:[null,{openPrimarySharedMetricModal:(e,{sharedMetricId:r})=>r,openSecondarySharedMetricModal:(e,{sharedMetricId:r})=>r,updateExperimentGoal:()=>null}],secondaryMetricsResultErrors:[[],{setSecondaryMetricsResultErrors:(e,{errors:r})=>r,loadSecondaryMetricResults:()=>[],loadExperiment:()=>[]}],isPrimaryMetricSourceModalOpen:[!1,{openPrimaryMetricSourceModal:()=>!0,closePrimaryMetricSourceModal:()=>!1}],isSecondaryMetricSourceModalOpen:[!1,{openSecondaryMetricSourceModal:()=>!0,closeSecondaryMetricSourceModal:()=>!1}],isPrimarySharedMetricModalOpen:[!1,{openPrimarySharedMetricModal:()=>!0,closePrimarySharedMetricModal:()=>!1}],isSecondarySharedMetricModalOpen:[!1,{openSecondarySharedMetricModal:()=>!0,closeSecondarySharedMetricModal:()=>!1}],isVariantDeltaTimeseriesModalOpen:[!1,{openVariantDeltaTimeseriesModal:()=>!0,closeVariantDeltaTimeseriesModal:()=>!1}],isCreatingExperimentDashboard:[!1,{setIsCreatingExperimentDashboard:(e,{isCreating:r})=>r}],validExistingFeatureFlag:[null,{setValidExistingFeatureFlag:(e,{featureFlag:r})=>r}],featureFlagValidationError:[null,{setFeatureFlagValidationError:(e,{error:r})=>r}]}),(0,y.listeners)(({values:e,actions:r})=>({createExperiment:async({draft:a})=>{let{recommendedRunningTime:t,recommendedSampleSize:n,minimumDetectableEffect:i}=e;if(r.touchExperimentField("name"),r.touchExperimentField("feature_flag_key"),e.experiment.parameters.feature_flag_variants.forEach((l,u)=>r.touchExperimentField(`parameters.feature_flag_variants.${u}.key`)),me(e.experimentErrors))return;if(!i)return h.actions.reportExperimentInsightLoadFailed(),p.error("Failed to load insight. Experiment cannot be saved without this value. Try changing the experiment goal.");let s=null,o=!!e.experimentId&&e.experimentId!=="new";try{if(o){if(s=await d.update(`api/projects/${e.currentProjectId}/experiments/${e.experimentId}`,{...e.experiment,parameters:{...e.experiment?.parameters,recommended_running_time:t,recommended_sample_size:n,minimum_detectable_effect:i},...!a&&{start_date:(0,_.default)()},filters:{events:[],actions:[],...e.experiment.filters,properties:[]}}),s?.id){r.updateExperiments(s),r.setEditExperiment(!1),r.loadExperimentSuccess(s);return}}else s=await d.create(`api/projects/${e.currentProjectId}/experiments`,{...e.experiment,parameters:{...e.experiment?.parameters,recommended_running_time:t,recommended_sample_size:n,minimum_detectable_effect:i},...!a&&{start_date:(0,_.default)()}}),s&&(r.reportExperimentCreated(s),r.addProductIntent({product_type:"experiments",intent_context:"experiment created"}))}catch(l){p.error(l.detail||"Failed to create experiment");return}if(s?.id){let l=s.id;k.router.actions.push(g.experiment(l)),r.addToExperiments(s),p.success(`Experiment ${o?"updated":"created"}`,{button:{label:"View it",action:()=>{k.router.actions.push(g.experiment(l))}}})}},setExperimentType:async({type:a})=>{r.setExperiment({type:a})},loadExperimentSuccess:async({experiment:a})=>{let t=a?.start_date?(0,_.default)().diff(a.start_date,"second"):null;a&&r.reportExperimentViewed(a,t),a?.start_date&&r.refreshExperimentResults()},launchExperiment:async()=>{let a=(0,_.default)();r.updateExperiment({start_date:a.toISOString()}),e.experiment&&h.actions.reportExperimentLaunched(e.experiment,a),N.findMounted()?.actions.markTaskAsCompleted("launch_experiment")},changeExperimentStartDate:async({startDate:a})=>{r.updateExperiment({start_date:a}),e.experiment&&h.actions.reportExperimentStartDateChange(e.experiment,a)},setExperimentStatsVersion:async({version:a},t)=>{r.updateExperiment({stats_config:{version:a}}),await t(100),e.experiment?.start_date&&r.refreshExperimentResults(!0)},endExperiment:async()=>{let a=(0,_.default)();r.updateExperiment({end_date:a.toISOString()});let t=a.diff(e.experiment?.start_date,"second");e.experiment&&r.reportExperimentCompleted(e.experiment,a,t,e.isPrimaryMetricSignificant(0))},archiveExperiment:async()=>{r.updateExperiment({archived:!0}),e.experiment&&r.reportExperimentArchived(e.experiment)},refreshExperimentResults:async({forceRefresh:a})=>{r.loadMetricResults(a),r.loadSecondaryMetricResults(a),r.loadExposures(a)},updateExperimentGoal:async()=>{r.setExperiment({parameters:{...e.experiment.parameters,minimum_detectable_effect:void 0}});let{recommendedRunningTime:a,recommendedSampleSize:t,minimumDetectableEffect:n}=e;r.updateExperiment({metrics:e.experiment.metrics,metrics_secondary:e.experiment.metrics_secondary,parameters:{...e.experiment?.parameters,recommended_running_time:a,recommended_sample_size:t,minimum_detectable_effect:n}})},updateExperimentCollectionGoal:async()=>{let{recommendedRunningTime:a,recommendedSampleSize:t,minimumDetectableEffect:n}=e;r.updateExperiment({parameters:{...e.experiment?.parameters,recommended_running_time:a,recommended_sample_size:t,minimum_detectable_effect:n||0}})},resetRunningExperiment:async()=>{r.updateExperiment({start_date:null,end_date:null,archived:!1}),e.experiment&&r.reportExperimentReset(e.experiment),r.setMetricResults([]),r.setSecondaryMetricResults([])},updateExperimentSuccess:async({experiment:a,payload:t})=>{if(r.updateExperiments(a),a.start_date){let n=t?.start_date!==void 0;r.refreshExperimentResults(n)}},setExperiment:async({experiment:a})=>{let t=a.filters?.events&&a.filters.events.length>0||a.filters?.actions&&a.filters.actions.length>0||a.filters?.data_warehouse&&a.filters.data_warehouse.length>0;!a.filters||Object.keys(a.filters).length===0||t&&r.checkFlagImplementationWarning()},setExperimentValue:async({name:a,value:t},n)=>{if(Array.isArray(a)&&a[0]==="feature_flag_key"&&r.validateFeatureFlag(t),await n(100),a==="filters"){let i=t?.events&&t.events.length>0||t?.actions&&t.actions.length>0||t?.data_warehouse&&t.data_warehouse.length>0;if(!t||Object.keys(t).length===0)return;i&&r.checkFlagImplementationWarning()}},setExperimentValues:async({values:a},t)=>{await t(100);let n=a,i=n.filters?.events&&n.filters.events.length>0||n.filters?.actions&&n.filters.actions.length>0||n.filters?.data_warehouse&&n.filters.data_warehouse.length>0;!n.filters||Object.keys(n.filters).length===0||i&&r.checkFlagImplementationWarning()},checkFlagImplementationWarning:async(a,t)=>{let n=e.experiment,i=n.filters?.events&&n.filters.events.length>0||n.filters?.actions&&n.filters.actions.length>0||n.filters?.data_warehouse&&n.filters.data_warehouse.length>0;if(!(!n.filters||Object.keys(n.filters).length===0)&&i){let s=`/api/projects/${e.currentProjectId}/experiments/requires_flag_implementation?${O(n.filters||{})}`;await t(100);try{let o=await d.get(s);r.setFlagImplementationWarning(o.result)}catch{r.setFlagImplementationWarning(!1)}}},createExposureCohortSuccess:({exposureCohort:a})=>{a&&a.id!=="new"&&(Ee.actions.cohortCreated(a),r.reportExperimentExposureCohortCreated(e.experiment,a),r.setExperiment({exposure_cohort:a.id}),p.success("Exposure cohort created successfully",{button:{label:"View cohort",action:()=>k.router.actions.push(g.cohort(a.id))}}))},shipVariantSuccess:({payload:a})=>{p.success("The selected variant has been shipped"),r.closeShipVariantModal(),a.shouldStopExperiment&&!e.isExperimentStopped&&r.endExperiment(),r.loadExperiment(),r.reportExperimentVariantShipped(e.experiment)},shipVariantFailure:({error:a})=>{p.error(a),r.closeShipVariantModal()},updateExperimentVariantImages:async({variantPreviewMediaIds:a})=>{try{let t={...e.experiment.parameters,variant_screenshot_media_ids:a};await d.update(`api/projects/${e.currentProjectId}/experiments/${e.experimentId}`,{parameters:t}),r.setExperiment({parameters:t})}catch{p.error("Failed to update experiment variant images")}},updateDistributionModal:async({featureFlag:a})=>{let{created_at:t,id:n,...i}=a,s=Y(i),o=await d.update(`api/projects/${e.currentProjectId}/feature_flags/${n}`,s),l=Q(o);r.updateFlag(l),r.updateExperiment({holdout_id:e.experiment.holdout_id})},addSharedMetricsToExperiment:async({sharedMetricIds:a,metadata:t})=>{let n=e.experiment.saved_metrics.map(o=>({id:o.saved_metric,metadata:o.metadata})),i=a.map(o=>({id:o,metadata:t}));i.forEach(o=>{let l=e.sharedMetrics.find(u=>u.id===o.id);l&&r.reportExperimentSharedMetricAssigned(e.experimentId,l)});let s=[...n,...i];await d.update(`api/projects/${e.currentProjectId}/experiments/${e.experimentId}`,{saved_metrics_ids:s}),r.loadExperiment()},removeSharedMetricFromExperiment:async({sharedMetricId:a})=>{let t=e.experiment.saved_metrics.filter(n=>n.saved_metric!==a).map(n=>({id:n.saved_metric,metadata:n.metadata}));await d.update(`api/projects/${e.currentProjectId}/experiments/${e.experimentId}`,{saved_metrics_ids:t}),r.loadExperiment()},createExperimentDashboard:async()=>{r.setIsCreatingExperimentDashboard(!0);try{let a=window.location.origin+Z(g.experiment(e.experimentId)),t=await d.create(`api/environments/${C.values.currentTeamId}/dashboards/`,{name:"Experiment: "+e.experiment.name,description:`Dashboard for [${a}](${a})`,filters:{date_from:e.experiment.start_date,date_to:e.experiment.end_date,properties:[],breakdown_filter:{breakdown:"$feature/"+e.experiment.feature_flag_key,breakdown_type:"event"}}});for(let i of["secondary","primary"]){let s=i==="secondary"?e.experiment.metrics_secondary:e.experiment.metrics,o=e.experiment?.saved_metrics.filter(u=>u.metadata.type===i),l=[...s,...o.map(u=>({name:u.name,...u.query}))].reverse();for(let u of l){let c={kind:"InsightVizNode",source:u.kind==="ExperimentTrendsQuery"?u.count_query:u.funnels_query};await d.create(`api/projects/${C.values.currentTeamId}/insights`,{name:u.name||void 0,query:c,dashboards:[t.id]})}}r.reportExperimentDashboardCreated(e.experiment,t.id);let n=window.location.origin+Z(g.dashboard(t.id));r.updateExperiment({description:(e.experiment.description?e.experiment.description+`

`:"")+`Dashboard: [${n}](${n})`}),p.success("Dashboard created successfully",{button:{label:"View dashboard",action:()=>k.router.actions.push(`/dashboard/${t.id}`)}})}catch(a){if(!(0,y.isBreakpoint)(a)){let t=a.code&&a.detail?`${a.code}: ${a.detail}`:a;p.error(`Could not create dashboard: ${t}`)}}r.setIsCreatingExperimentDashboard(!1)},restoreUnmodifiedExperiment:()=>{e.unmodifiedExperiment&&r.setExperiment(structuredClone(e.unmodifiedExperiment))},validateFeatureFlag:async({featureFlagKey:a},t)=>{await t(200);let n=await d.get(`api/projects/${e.currentProjectId}/feature_flags/?${O({search:a})}`),i={name:void 0,...e.experimentErrors};if(n.results.length>0){let s=n.results.find(o=>o.key===a);if(s){let o;try{o=Se(s)}catch{o=!1}r.setValidExistingFeatureFlag(o?s:null),r.setFeatureFlagValidationError(o?"":"Existing feature flag is not eligible for experiments."),r.setExperimentManualErrors({...i,feature_flag_key:e.featureFlagValidationError||void 0});return}}r.setValidExistingFeatureFlag(null),r.setFeatureFlagValidationError(K(a)||""),r.setExperimentManualErrors({...i,feature_flag_key:e.featureFlagValidationError||void 0})},touchExperimentField:({key:a})=>{a==="feature_flag_key"&&r.setExperimentManualErrors({feature_flag_key:e.featureFlagValidationError||void 0})},loadMetricResults:async({refresh:a})=>{r.setMetricResultsLoading(!0),r.setMetricResults([]);let t=e.experiment?.metrics,n=e.experiment?.saved_metrics.filter(i=>i.metadata.type==="primary").map(i=>i.query);n&&(t=[...t,...n]),await We({metrics:t,experimentId:e.experimentId,refresh:a,onSetResults:r.setMetricResults,onSetErrors:r.setPrimaryMetricsResultErrors,onTimeout:r.reportExperimentMetricTimeout}),r.setMetricResultsLoading(!1)},loadSecondaryMetricResults:async({refresh:a})=>{r.setSecondaryMetricResultsLoading(!0),r.setSecondaryMetricResults([]);let t=e.experiment?.metrics_secondary,n=e.experiment?.saved_metrics.filter(i=>i.metadata.type==="secondary").map(i=>i.query);n&&(t=[...t,...n]),await We({metrics:t,experimentId:e.experimentId,refresh:a,onSetResults:r.setSecondaryMetricResults,onSetErrors:r.setSecondaryMetricsResultErrors,onTimeout:r.reportExperimentMetricTimeout}),r.setSecondaryMetricResultsLoading(!1)}})),(0,Be.loaders)(({actions:e,props:r,values:a})=>({experiment:{loadExperiment:async()=>{if(r.experimentId&&r.experimentId!=="new")try{let t=await d.get(`api/projects/${a.currentProjectId}/experiments/${r.experimentId}`);return e.setUnmodifiedExperiment(structuredClone(t)),t}catch(t){if(t.status===404)e.setExperimentMissing();else throw t}return J},updateExperiment:async t=>{let n=await d.update(`api/projects/${a.currentProjectId}/experiments/${a.experimentId}`,t);return e.setUnmodifiedExperiment(structuredClone(n)),n}},exposureCohort:[null,{createExposureCohort:async()=>r.experimentId&&r.experimentId!=="new"&&r.experimentId!=="web"?(await d.experiments.createExposureCohort(r.experimentId)).cohort:null}],featureFlag:[null,{shipVariant:async({selectedVariantKey:t,shouldStopExperiment:n})=>{if(!a.experiment.feature_flag)throw new Error("Experiment does not have a feature flag linked");let i=a.experiment.feature_flag?.filters,s=Re(i,t);return await d.update(`api/projects/${a.currentProjectId}/feature_flags/${a.experiment.feature_flag?.id}`,{filters:s}),n}}],exposures:[null,{loadExposures:async(t=!1)=>{let n={kind:"ExperimentExposureQuery",experiment_id:r.experimentId};return await re(n,void 0,t)}}]})),(0,y.selectors)({props:[()=>[(e,r)=>r],e=>e],experimentId:[()=>[(e,r)=>r.experimentId??"new"],e=>e],getMetricType:[()=>[],()=>e=>e&&(e?.kind==="ExperimentMetric"&&(e.metric_type==="count"||e.metric_type==="continuous")||e?.kind==="ExperimentTrendsQuery")?"TRENDS":"FUNNELS"],getExperimentMetricType:[()=>[],()=>e=>e?.metric_type||"count"],isExperimentRunning:[e=>[e.experiment],e=>!!e?.start_date],isExperimentStopped:[e=>[e.experiment],e=>!!e?.end_date&&(0,_.default)().isSameOrAfter((0,_.default)(e.end_date),"day")&&!e.archived],breadcrumbs:[e=>[e.experiment,e.experimentId],(e,r)=>[{key:"Experiments",name:"Experiments",path:g.experiments()},{key:["Experiment",r],name:e?.name||"",onRename:async a=>{await oe({experimentId:r}).asyncActions.updateExperiment({name:a})}}]],variants:[e=>[e.experiment],e=>e?.parameters?.feature_flag_variants||[]],experimentMathAggregationForTrends:[e=>[e.experiment],e=>()=>{let r=e?.metrics?.[0];if(!r)return;let a=r.count_query?.series||[],t=a.filter(s=>Object.values(ue).includes(s?.math))[0]?.math,n=Object.values(de).filter(s=>s!=="sum"),i=a.filter(s=>n.includes(s?.math))[0]?.math;return t??i}],minimumDetectableEffect:[e=>[e.experiment,e.getMetricType,e.conversionMetrics,e.trendResults,e.firstPrimaryMetric],(e,r,a,t,n)=>e?.parameters?.minimum_detectable_effect||Te(r(n),a,t)||0],minimumSampleSizePerVariant:[e=>[e.minimumDetectableEffect],e=>r=>e?Math.ceil(1600*r*(1-r/100)/(e*e)):0],isPrimaryMetricSignificant:[e=>[e.metricResults],e=>(r=0)=>e?.[r]?.significant||!1],isSecondaryMetricSignificant:[e=>[e.secondaryMetricResults],e=>(r=0)=>e?.[r]?.significant||!1],significanceDetails:[e=>[e.metricResults,e.experimentStatsVersion],(e,r)=>(a=0)=>{let t=e?.[a];return t?.significance_code==="high_loss"?`This is because the expected loss in conversion is greater than 1% (current value is ${(t?.expected_loss||0)?.toFixed(2)}%).`:t?.significance_code==="high_p_value"?`This is because the p value is greater than 0.05 (current value is ${t?.p_value?.toFixed(3)||1}).`:t?.significance_code==="low_win_probability"?r===2?"This is because no variant (control or test) has a win probability higher than 90%.":"This is because the win probability of all test variants combined is less than 90%.":t?.significance_code==="not_enough_exposure"?"This is because we need at least 100 people per variant to declare significance.":""}],recommendedSampleSize:[e=>[e.conversionMetrics,e.minimumSampleSizePerVariant,e.variants],(e,r,a)=>{let t=e.totalRate*100;return r(t)*a.length}],recommendedRunningTime:[e=>[e.experiment,e.variants,e.getMetricType,e.firstPrimaryMetric,e.funnelResults,e.conversionMetrics,e.expectedRunningTime,e.trendResults,e.minimumSampleSizePerVariant,e.recommendedExposureForCountData],(e,r,a,t,n,i,s,o,l,u)=>{if(a(t)==="FUNNELS"){let T=(0,_.default)().diff((0,_.default)(e?.start_date),"hour"),P=n?.[0]?.count,j=i.totalRate*100,le=l(j)*r.length;return e?.start_date?s(P||1,le||0,T):s(P||1,le||0)}let c=o[0]?.count;return u(c)}],recommendedExposureForCountData:[e=>[e.minimumDetectableEffect],e=>r=>{if(!e)return 0;let a=r*e/100,t=r,n=a+r;return parseFloat((4/Math.pow(Math.sqrt(t/W)-Math.sqrt(n/W),2)).toFixed(1))}],expectedRunningTime:[()=>[],()=>(e,r,a=W)=>parseFloat((r/(e/a)).toFixed(1))],conversionRateForVariant:[()=>[],()=>(e,r)=>{if(!e)return null;if(e.kind==="ExperimentQuery"&&e.metric.metric_type==="binomial"){let t=e.variants.find(n=>n.key===r);return t?t.success_count/(t.success_count+t.failure_count)*100:null}else if(e.kind==="ExperimentFunnelsQuery"&&e.insight){let a=e.insight.find(t=>{let n=t[0]?.breakdown_value;return Array.isArray(n)&&n[0]===r});return a?a[a.length-1].count/a[0].count*100:null}return null}],credibleIntervalForVariant:[()=>[],()=>(e,r,a)=>{let t=e?.credible_intervals?.[r];if(!t)return null;if(a==="FUNNELS"){let l=e.variants.find(({key:T})=>T==="control"),u=l.success_count/(l.success_count+l.failure_count);if(!u)return null;let c=(t[0]-u)/u*100,b=(t[1]-u)/u*100;return[c,b]}let n=e.variants.find(({key:l})=>l==="control"),i=n.count/n.absolute_exposure;if(!i)return null;let s=(t[0]-i)/i*100,o=(t[1]-i)/i*100;return[s,o]}],getIndexForVariant:[e=>[e.getMetricType,e.firstPrimaryMetric],(e,r)=>(a,t)=>{if(!a||!a.insight)return null;let n=-1;e(r)==="FUNNELS"?n=(Array.isArray(a.insight)?[...a.insight]:[]).sort((s,o)=>{let l=s&&Array.isArray(s)&&s[0]?.count||0;return(o&&Array.isArray(o)&&o[0]?.count||0)-l}).findIndex(s=>{if(!Array.isArray(s)||!s[0]?.breakdown_value)return!1;let o=s[0].breakdown_value;return Array.isArray(o)&&o[0]===t}):n=a.insight.findIndex(s=>s.breakdown_value===t);let i=n===-1?null:n;return i!==null&&e(r)==="FUNNELS"?i+1:i}],countDataForVariant:[e=>[e.experimentMathAggregationForTrends],e=>(r,a,t="primary")=>{if(!r)return null;if("kind"in r&&r.kind==="ExperimentQuery"){let o=r.variants.find(l=>l.key===a);return o&&"success_count"in o?o.success_count+o.failure_count:o&&"count"in o?o.count:null}let n=t==="primary"?e():!1;if(!r.insight)return null;let i=r.insight.find(o=>o.breakdown_value===a);if(!i)return null;let s=i.count;return n&&(["avg_count_per_actor","median_count_per_actor","avg","median"].includes(n)?s=i.count/i.data.length:["max_count_per_actor","max"].includes(n)?s=Math.max(...i.data):["min_count_per_actor","min"].includes(n)&&(s=Math.min(...i.data))),s}],exposureCountDataForVariant:[()=>[],()=>(e,r)=>{if(!e||!e.variants)return null;if("kind"in e&&e.kind==="ExperimentQuery")return e.variants.find(n=>n.key===r)?.exposure??null;let a=e.variants.find(t=>t.key===r);return!a||!a.absolute_exposure?null:a.absolute_exposure}],getHighestProbabilityVariant:[()=>[],()=>e=>{if(e&&e.probability){let r=Math.max(...Object.values(e.probability));return Object.keys(e.probability).find(a=>Math.abs(e.probability[a]-r)<Number.EPSILON)}}],tabularExperimentResults:[e=>[e.experiment,e.metricResults,e.secondaryMetricResults,e.getMetricType],(e,r,a,t)=>(n=0,i=!1)=>{let s=[],o=t(i?e.metrics_secondary[n]:e.metrics[n]),l=i?a[n]:r[n];if(l){for(let u of l.variants)if(o==="FUNNELS"){let{key:c,success_count:b,failure_count:T}=u;s.push({key:c,success_count:b,failure_count:T})}else if(o==="TRENDS"){let{key:c,count:b,exposure:T,absolute_exposure:P}=u;s.push({key:c,count:b,exposure:T,absolute_exposure:P})}}if(e.feature_flag?.filters.multivariate?.variants)for(let{key:u}of e.feature_flag.filters.multivariate.variants)s.find(c=>c.key===u)||(o==="FUNNELS"?s.push({key:u,success_count:null,failure_count:null}):o==="TRENDS"&&s.push({key:u,count:null,exposure:null,absolute_exposure:null}));return s}],sortedWinProbabilities:[e=>[e.metricResults,e.conversionRateForVariant],(e,r)=>(a=0)=>{let t=e?.[a];return!t||!t.probability?[]:Object.keys(t.probability).map(n=>({key:n,winProbability:t.probability[n],conversionRate:r(t,n)})).sort((n,i)=>i.winProbability-n.winProbability)}],funnelResultsPersonsTotal:[e=>[e.experiment,e.metricResults,e.getMetricType],(e,r,a)=>(t=0)=>{let n=r?.[t];if(a(e.metrics[t])!=="FUNNELS"||!n?.insight)return 0;let i=0;return n.insight.forEach(s=>{s[0]?.count&&(i+=s[0].count)}),i}],actualRunningTime:[e=>[e.experiment],e=>e.start_date?e.end_date?(0,_.default)(e.end_date).diff(e.start_date,"day"):(0,_.default)().diff(e.start_date,"day"):0],isSingleVariantShipped:[e=>[e.experiment],e=>{let r=e.feature_flag?.filters;return!!r&&Array.isArray(r.groups?.[0]?.properties)&&r.groups?.[0]?.properties?.length===0&&r.groups?.[0]?.rollout_percentage===100&&(r.multivariate?.variants?.some(({rollout_percentage:a})=>a===100)||!1)}],hasPrimaryMetricSet:[e=>[e.primaryMetricsLengthWithSharedMetrics],e=>e>0],firstPrimaryMetric:[e=>[e.experiment],e=>{if(e.metrics.length)return e.metrics[0];let r=e.saved_metrics.find(a=>a.metadata.type==="primary");if(r)return r.query}],experimentStatsVersion:[e=>[e.experiment],e=>e.stats_config?.version||1],primaryMetricsLengthWithSharedMetrics:[e=>[e.experiment],e=>e.metrics.length+e.saved_metrics.filter(r=>r.metadata.type==="primary").length],secondaryMetricsLengthWithSharedMetrics:[e=>[e.experiment],e=>e.metrics_secondary.length+e.saved_metrics.filter(r=>r.metadata.type==="secondary").length],compatibleSharedMetrics:[e=>[e.sharedMetrics,e.shouldUseExperimentMetrics],(e,r)=>e?r?e.filter(a=>a.query.kind==="ExperimentMetric"):e.filter(a=>a.query.kind!=="ExperimentMetric"):[]],shouldUseExperimentMetrics:[e=>[e.experiment,e.featureFlags],(e,r)=>{let a=[...e.metrics,...e.metrics_secondary,...e.saved_metrics],t=a.some(i=>i.kind==="ExperimentMetric"),n=a.some(i=>i.kind==="ExperimentTrendsQuery"||i.kind==="ExperimentFunnelsQuery");return t?!0:n?!1:r[ce.EXPERIMENTS_NEW_QUERY_RUNNER]}]}),(0,ze.forms)(({actions:e})=>({experiment:{options:{showErrorsOnTouch:!0},defaults:{...J},errors:({name:r,parameters:a})=>({name:!r&&"Please enter a name",parameters:{feature_flag_variants:a.feature_flag_variants?.map(({key:t})=>({key:t.match?.(/^([A-z]|[a-z]|[0-9]|-|_)+$/)?void 0:"Only letters, numbers, hyphens (-) & underscores (_) are allowed."}))}}),submit:()=>e.createExperiment(!0)}})),(0,k.urlToAction)(({actions:e,values:r})=>({"/experiments/:id":({id:a},t,n,i,s)=>{let o=i.initial||i.pathname!==s?.pathname;if(e.setEditExperiment(!1),a&&o){let l=a==="new"?"new":parseInt(a);l==="new"&&e.resetExperiment({...J,metrics:t.metric?[t.metric]:[],name:t.name??""}),l!=="new"&&l===r.experimentId&&(e.loadExperiment(),r.isExperimentRunning&&e.loadExposures())}}}))]);export{Fr as a,ir as b,He as c,oe as d,je as e,se as f,Q as g,nr as h,Xt as i};
//# sourceMappingURL=/static/chunk-VVSLW35Y.js.map
