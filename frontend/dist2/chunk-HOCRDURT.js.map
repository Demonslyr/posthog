{
  "version": 3,
  "sources": ["../src/scenes/dashboard/dashboards/dashboardsLogic.ts"],
  "sourcesContent": ["import Fuse from 'fuse.js'\nimport { actions, connect, kea, path, reducers, selectors } from 'kea'\nimport { actionToUrl, router, urlToAction } from 'kea-router'\nimport { Sorting } from 'lib/lemon-ui/LemonTable/sorting'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { objectClean } from 'lib/utils'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { dashboardsModel } from '~/models/dashboardsModel'\nimport { DashboardBasicType } from '~/types'\n\nimport type { dashboardsLogicType } from './dashboardsLogicType'\n\nexport enum DashboardsTab {\n    Dashboards = 'dashboards',\n    Templates = 'templates',\n}\n\nconst DEFAULT_SORTING: Sorting = { columnKey: 'name', order: 1 }\n\nexport interface DashboardsFilters {\n    search: string\n    createdBy: string\n    pinned: boolean\n    shared: boolean\n}\n\nexport const DEFAULT_FILTERS: DashboardsFilters = {\n    search: '',\n    createdBy: 'All users',\n    pinned: false,\n    shared: false,\n}\n\nexport type DashboardFuse = Fuse<DashboardBasicType> // This is exported for kea-typegen\n\nexport const dashboardsLogic = kea<dashboardsLogicType>([\n    path(['scenes', 'dashboard', 'dashboardsLogic']),\n    connect({ values: [userLogic, ['user'], featureFlagLogic, ['featureFlags']] }),\n    actions({\n        setCurrentTab: (tab: DashboardsTab) => ({ tab }),\n        setFilters: (filters: Partial<DashboardsFilters>) => ({\n            filters,\n        }),\n        tableSortingChanged: (sorting: Sorting | null) => ({\n            sorting,\n        }),\n    }),\n    reducers({\n        tableSorting: [\n            DEFAULT_SORTING,\n            { persist: true },\n            {\n                tableSortingChanged: (_, { sorting }) => sorting || DEFAULT_SORTING,\n            },\n        ],\n        currentTab: [\n            DashboardsTab.Dashboards as DashboardsTab,\n            {\n                setCurrentTab: (_, { tab }) => tab,\n            },\n        ],\n\n        filters: [\n            DEFAULT_FILTERS,\n            {\n                setFilters: (state, { filters }) =>\n                    objectClean({\n                        ...(state || {}),\n                        ...filters,\n                    }),\n            },\n        ],\n    }),\n\n    selectors({\n        isFiltering: [\n            (s) => [s.filters],\n            (filters) => {\n                return Object.keys(filters).some(\n                    (key) => filters[key as keyof DashboardsFilters] !== DEFAULT_FILTERS[key]\n                )\n            },\n        ],\n        dashboards: [\n            (s) => [dashboardsModel.selectors.nameSortedDashboards, s.filters, s.fuse],\n            (dashboards, filters, fuse) => {\n                let haystack = dashboards\n                if (filters.search) {\n                    haystack = fuse.search(filters.search).map((result) => result.item)\n                }\n\n                if (filters.pinned) {\n                    haystack = haystack.filter((d) => d.pinned)\n                }\n                if (filters.shared) {\n                    haystack = haystack.filter((d) => d.is_shared)\n                }\n                if (filters.createdBy !== 'All users') {\n                    haystack = haystack.filter((d) => d.created_by?.uuid === filters.createdBy)\n                }\n\n                return haystack\n            },\n        ],\n\n        fuse: [\n            () => [dashboardsModel.selectors.nameSortedDashboards],\n            (dashboards): DashboardFuse => {\n                return new Fuse<DashboardBasicType>(dashboards, {\n                    keys: ['key', 'name', 'description', 'tags'],\n                    threshold: 0.3,\n                })\n            },\n        ],\n    }),\n    actionToUrl(({ values }) => ({\n        setCurrentTab: () => {\n            const tab = values.currentTab === DashboardsTab.Dashboards ? undefined : values.currentTab\n            if (router.values.searchParams['tab'] === tab) {\n                return\n            }\n\n            router.actions.push(router.values.location.pathname, { ...router.values.searchParams, tab })\n        },\n    })),\n    urlToAction(({ actions }) => ({\n        '/dashboard': (_, searchParams) => {\n            const tab = searchParams['tab'] || DashboardsTab.Dashboards\n            actions.setCurrentTab(tab)\n        },\n    })),\n])\n"],
  "mappings": "sMAAAA,IAAAC,IAAAC,IACA,IAAAC,EAAiE,OACjEC,EAAiD,OAgBjD,IAAMC,EAA2B,CAAE,UAAW,OAAQ,MAAO,CAAE,EASlDC,EAAqC,CAC9C,OAAQ,GACR,UAAW,YACX,OAAQ,GACR,OAAQ,EACZ,EAIaC,KAAkB,OAAyB,IACpD,QAAK,CAAC,SAAU,YAAa,iBAAiB,CAAC,KAC/C,WAAQ,CAAE,OAAQ,CAACC,EAAW,CAAC,MAAM,EAAGC,EAAkB,CAAC,cAAc,CAAC,CAAE,CAAC,KAC7E,WAAQ,CACJ,cAAgBC,IAAwB,CAAE,IAAAA,CAAI,GAC9C,WAAaC,IAAyC,CAClD,QAAAA,CACJ,GACA,oBAAsBC,IAA6B,CAC/C,QAAAA,CACJ,EACJ,CAAC,KACD,YAAS,CACL,aAAc,CACVP,EACA,CAAE,QAAS,EAAK,EAChB,CACI,oBAAqB,CAACQ,EAAG,CAAE,QAAAD,CAAQ,IAAMA,GAAWP,CACxD,CACJ,EACA,WAAY,CACR,aACA,CACI,cAAe,CAACQ,EAAG,CAAE,IAAAH,CAAI,IAAMA,CACnC,CACJ,EAEA,QAAS,CACLJ,EACA,CACI,WAAY,CAACQ,EAAO,CAAE,QAAAH,CAAQ,IAC1BI,EAAY,CACR,GAAID,GAAS,CAAC,EACd,GAAGH,CACP,CAAC,CACT,CACJ,CACJ,CAAC,KAED,aAAU,CACN,YAAa,CACRK,GAAM,CAACA,EAAE,OAAO,EAChBL,GACU,OAAO,KAAKA,CAAO,EAAE,KACvBM,GAAQN,EAAQM,CAA8B,IAAMX,EAAgBW,CAAG,CAC5E,CAER,EACA,WAAY,CACPD,GAAM,CAACE,EAAgB,UAAU,qBAAsBF,EAAE,QAASA,EAAE,IAAI,EACzE,CAACG,EAAYR,EAASS,IAAS,CAC3B,IAAIC,EAAWF,EACf,OAAIR,EAAQ,SACRU,EAAWD,EAAK,OAAOT,EAAQ,MAAM,EAAE,IAAKW,GAAWA,EAAO,IAAI,GAGlEX,EAAQ,SACRU,EAAWA,EAAS,OAAQE,GAAMA,EAAE,MAAM,GAE1CZ,EAAQ,SACRU,EAAWA,EAAS,OAAQE,GAAMA,EAAE,SAAS,GAE7CZ,EAAQ,YAAc,cACtBU,EAAWA,EAAS,OAAQE,GAAMA,EAAE,YAAY,OAASZ,EAAQ,SAAS,GAGvEU,CACX,CACJ,EAEA,KAAM,CACF,IAAM,CAACH,EAAgB,UAAU,oBAAoB,EACpDC,GACU,IAAIK,EAAyBL,EAAY,CAC5C,KAAM,CAAC,MAAO,OAAQ,cAAe,MAAM,EAC3C,UAAW,EACf,CAAC,CAET,CACJ,CAAC,KACD,eAAY,CAAC,CAAE,OAAAM,CAAO,KAAO,CACzB,cAAe,IAAM,CACjB,IAAMf,EAAMe,EAAO,aAAe,aAA2B,OAAYA,EAAO,WAC5E,SAAO,OAAO,aAAa,MAAWf,GAI1C,SAAO,QAAQ,KAAK,SAAO,OAAO,SAAS,SAAU,CAAE,GAAG,SAAO,OAAO,aAAc,IAAAA,CAAI,CAAC,CAC/F,CACJ,EAAE,KACF,eAAY,CAAC,CAAE,QAAAgB,CAAQ,KAAO,CAC1B,aAAc,CAACb,EAAGc,IAAiB,CAC/B,IAAMjB,EAAMiB,EAAa,KAAU,aACnCD,EAAQ,cAAchB,CAAG,CAC7B,CACJ,EAAE,CACN,CAAC",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_router", "DEFAULT_SORTING", "DEFAULT_FILTERS", "dashboardsLogic", "userLogic", "featureFlagLogic", "tab", "filters", "sorting", "_", "state", "objectClean", "s", "key", "dashboardsModel", "dashboards", "fuse", "haystack", "result", "d", "Fuse", "values", "actions", "searchParams"]
}
