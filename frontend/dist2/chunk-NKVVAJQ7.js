import{b as Ui,c as xt,d as Tt,e as Ki,g as er}from"/static/chunk-2HTNY362.js";import{a as Yi,b as Xi}from"/static/chunk-JUFFFVO5.js";import{h as zi,j as Ji}from"/static/chunk-EIJECEWK.js";import{$ as zt,$d as Oe,Ac as ii,Ae as ui,Ak as pe,Bd as ri,Bh as Ri,Bk as Mi,Ca as Xt,Cd as ni,Da as Kt,Do as F,Eg as xi,Eh as ki,Fe as fi,Hg as Ti,If as hi,Ig as Pi,Ik as Ii,Io as ir,J as Ut,Jh as Si,Ko as te,Lh as Xe,Li,Mh as me,Ni as he,Nk as ji,No as V,Of as bi,Oh as Fi,Om as Hi,Pf as Qi,Pl as Wi,Qd as vt,Qo as ie,Rf as _i,Ro as Ke,Sa as Ae,Sd as f,Ta as ae,Td as si,Tf as vi,Ua as Ce,Ul as Ni,Vg as $t,Vh as wt,Wd as oi,Wg as Ye,Wh as Z,Xo as B,Za as dn,Zo as be,_f as $i,a as W,af as ci,am as Gi,ap as Qe,cc as ei,ce as Ze,de as ai,dj as Ei,ee as ce,eo as Vi,f as De,fg as wi,fj as qt,fo as Bi,go as Di,h as Ot,hi as Ai,ho as Oi,ie as ge,ig as Ue,ii as Ci,io as Zi,ip as rr,ka as Jt,kg as qi,le as pi,m as Zt,mp as nr,na as _t,nc as ti,np as sr,op as _e,pe as di,pg as ze,pp as et,qp as tt,r as y,ra as Yt,up as or,ve as li,vp as it,wg as Je,wo as tr,wp as Le,xf as gi,xp as z,yf as mi,ze as yi}from"/static/chunk-RFJTZKD6.js";import{a as ln}from"/static/chunk-KQJ3FYBQ.js";import{F as Vt,Tb as Dt,a as ee,da as pn,na as Bt,ya as Qt}from"/static/chunk-3UDJFOQH.js";import{d as n,e as a,g as p,j as d}from"/static/chunk-SJXEOBQC.js";a();d();p();var rt=n(W()),ar=n(ee());var L=n(y());function pr(){let{personDeleteModal:e}=(0,rt.useValues)(xt),[t,i]=(0,ar.useState)(!1),{deletePerson:r,showPersonDeleteModal:o}=(0,rt.useActions)(xt);return(0,L.jsx)(Ze,{isOpen:!!e,onClose:()=>o(null),title:`Are you sure you want to delete "${ki(e)}"?`,description:(0,L.jsxs)(L.Fragment,{children:[(0,L.jsx)("p",{children:"This action cannot be undone."}),(0,L.jsx)("p",{children:"If you want to re-use the distinct ids do NOT use delete person and instead use split IDs. Re-using deleted person's distinct ids is not supported and will result in bad data state."}),(0,L.jsxs)("p",{children:["If you opt to delete the person and its corresponding events, the events will not be immediately removed. Instead these events will be deleted on a set schedule during non-peak usage times."," ",(0,L.jsx)(ae,{to:"https://posthog.com/docs/privacy/data-deletion",target:"_blank",className:"font-bold",children:"Learn more"})]}),(0,L.jsx)(Oe,{onChange:l=>i(l),checked:t,className:"mt-3",label:"I understand that re-using the same distinct_id will result in a bad state."})]}),footer:(0,L.jsxs)(L.Fragment,{children:[(0,L.jsx)(f,{status:"danger",type:"tertiary",onClick:()=>r(e,!0),disabled:!t,"data-attr":"delete-person-with-events",children:"Delete person and all corresponding events"}),(0,L.jsx)(f,{type:"secondary",onClick:()=>o(null),"data-attr":"delete-person-cancel",children:"Cancel"}),(0,L.jsx)(f,{type:"secondary",status:"danger",onClick:()=>r(e,!1),disabled:!t,"data-attr":"delete-person-no-events",children:"Delete person"})]})})}a();d();p();var Or=n(Ot()),Pe=n(W());var Ie=n(ee());a();d();p();a();d();p();var re=n(y());function dr({eventProperties:e}){return(0,re.jsxs)(re.Fragment,{children:[(0,re.jsx)("header",{className:"mb-2",children:(0,re.jsx)(Ji,{inputTokens:e.$ai_input_tokens,outputTokens:e.$ai_output_tokens,totalCostUsd:e.$ai_total_cost_usd,model:e.$ai_model,latency:e.$ai_latency})}),(0,re.jsx)(zi,{input:e.$ai_input,output:e.$ai_output_choices??e.$ai_output??e.$ai_error,httpStatus:e.$ai_http_status,raisedError:e.$ai_is_error,bordered:!0})]})}var Pt=n(ee());var v=n(y());function Rt({event:e,tableProps:t}){let[i,r]=(0,Pt.useState)(!1),[o,l]=(0,Pt.useState)(e.event==="$ai_generation"?"conversation":e.event==="$exception"?"exception":"properties"),h={},g={},x={},q={},A={},k=0;for(let m of Object.keys(e.properties))Ce.events[m]&&Ce.events[m].system&&(k+=1,i&&(g[m]=e.properties[m])),(!Ce.events[m]||!Ce.events[m].system)&&(m.startsWith("$feature")||m==="$active_feature_flags"?x[m]=e.properties[m]:m==="$set"?q=e.properties[m]:m==="$set_once"?A=e.properties[m]:h[m]=e.properties[m]);let T=[{key:"properties",label:"Properties",content:(0,v.jsxs)("div",{className:"mx-3",children:[(0,v.jsx)(he,{type:"event",properties:{..."timestamp"in e?{$timestamp:(0,Bt.default)(e.timestamp).toISOString()}:{},...h,...g},useDetectedPropertyType:!0,tableProps:t,filterable:!0,searchable:!0,parent:e.event}),k>0&&(0,v.jsxs)(f,{className:"mb-2",onClick:()=>r(!i),size:"small",children:[i?"Hide":"Show"," ",Dt(k,"system property","system properties")]})]})},{key:"metadata",label:"Metadata",content:(0,v.jsx)("div",{className:"mx-3 -mt-4",children:(0,v.jsx)(he,{type:"meta",properties:{event:e.event,distinct_id:e.distinct_id,timestamp:e.timestamp},sortProperties:!0,tableProps:t})})},{key:"raw",label:"Raw",content:(0,v.jsx)("div",{className:"mx-3 -mt-3 py-2",children:(0,v.jsx)(Zi,{src:e,name:"event",collapsed:1,collapseStringsAfterLength:80,sortKeys:!0})})}];return e.elements&&e.elements.length>0&&T.push({key:"elements",label:"Elements",content:(0,v.jsx)(Bi,{elements:e.elements,selectedText:e.properties.$selected_content})}),e.elements&&Di(e.elements)&&T.push({key:"image",label:"Image",content:(0,v.jsx)(Oi,{elements:e.elements})}),e.event==="$exception"?T.splice(0,0,{key:"exception",label:"Exception",content:(0,v.jsx)("div",{className:"mx-3",children:(0,v.jsx)(Vi,{eventProperties:e.properties})})}):e.event==="$ai_generation"&&T.splice(0,0,{key:"conversation",label:"Conversation",content:(0,v.jsx)("div",{className:"mx-3 -mt-2 mb-2 space-y-2",children:(0,v.jsx)(dr,{eventProperties:e.properties})})}),Object.keys(x).length>0&&T.push({key:"feature_flags",label:"Feature flags",content:(0,v.jsx)("div",{className:"ml-10 mt-2",children:(0,v.jsx)(he,{type:"event",properties:{...x},useDetectedPropertyType:!0,tableProps:t,searchable:!0})})}),Object.keys(q).length>0&&T.push({key:"set",label:"Person properties",content:(0,v.jsxs)("div",{className:"ml-10 mt-2",children:[(0,v.jsxs)("p",{children:["Person properties sent with this event. Will replace any property value that may have been set on this person profile before now."," ",(0,v.jsx)(ae,{to:"https://posthog.com/docs/getting-started/person-properties",children:"Learn more"})]}),(0,v.jsx)(he,{type:"event",properties:{...q},useDetectedPropertyType:!0,tableProps:t,searchable:!0})]})}),Object.keys(A).length>0&&T.push({key:"set_once",content:(0,v.jsxs)("div",{className:"ml-10 mt-2",children:[(0,v.jsxs)("p",{children:['"Set once" person properties sent with this event. Will replace any property value that have never been set on this person profile before now.'," ",(0,v.jsx)(ae,{to:"https://posthog.com/docs/getting-started/person-properties",children:"Learn more"})]}),(0,v.jsx)(he,{type:"event",properties:{...A},useDetectedPropertyType:!0,tableProps:t,searchable:!0})]}),label:"Set once person properties"}),(0,v.jsx)(ui,{"data-attr":"event-details",tabs:T,activeKey:o,onChange:l})}a();d();p();var nt=n(y());function lr({query:e,setQuery:t}){return V(e)?(0,nt.jsx)(ze,{dateFrom:e.after??void 0,dateTo:e.before??void 0,onChange:(i,r)=>{let o={...e,after:i??void 0,before:r??void 0};t?.(o)}}):B(e)||Qe(e)?(0,nt.jsx)(ze,{size:"medium",dateFrom:e.filters?.dateRange?.date_from??void 0,dateTo:e.filters?.dateRange?.date_to??void 0,onChange:(i,r)=>{let o={...e,filters:{...e.filters??{},dateRange:{date_from:i??void 0,date_to:r??void 0}}};t?.(o)}}):be(e)?(0,nt.jsx)(ze,{dateFrom:e.dateRange?.date_from??void 0,dateTo:e.dateRange?.date_to??void 0,onChange:(i,r)=>{let o={...e,dateRange:{date_from:i??void 0,date_to:r??void 0}};t?.(o)}}):null}a();d();p();var ve=n(W());var de=n(y());function yr(){let{responseLoading:e}=(0,ve.useValues)(Z),{loadData:t,cancelQuery:i}=(0,ve.useActions)(Z);return(0,de.jsx)(f,{type:"secondary",onClick:()=>{e?i():t(!0)},icon:e?(0,de.jsx)(vt,{textColored:!0}):(0,de.jsx)(_t,{}),children:e?"Cancel":"Reload"})}function Qs(){let{areAnyLoading:e}=(0,ve.useValues)(wt),{reloadAll:t}=(0,ve.useActions)(wt);return(0,de.jsx)(f,{className:"w-full",type:"secondary",size:"small",onClick:t,icon:e?(0,de.jsx)(vt,{textColored:!0}):(0,de.jsx)(_t,{}),disabledReason:e?"Loading":void 0,children:"Reload"})}a();d();p();var st=n(W());var fr=n(y());function ur({query:e,setQuery:t}){let{currentTeam:i}=(0,st.useValues)(te),r=(i?.test_account_filters||[]).length>0,{setLocalDefault:o}=(0,st.useActions)(wi);if(!V(e)&&!B(e)&&!be(e))return null;let l=r?!!(B(e)?e.filters?.filterTestAccounts:(V(e)||be(e))&&e.filterTestAccounts):!1,h=B(e)?g=>{let x={...e,filters:{...e.filters,filterTestAccounts:g}};t?.(x)}:V(e)||be(e)?g=>{let x={...e,filterTestAccounts:g};t?.(x)}:void 0;return(0,fr.jsx)(ji,{checked:l,onChange:g=>{h?.(g),o(g)}})}a();d();p();var Ee=n(W()),cr=n(De());var mr=n(y());function gr(){let{aggregationLabel:e}=(0,Ee.useValues)(Ue),{cohortsById:t}=(0,Ee.useValues)(Fi),{mathDefinitions:i}=(0,Ee.useValues)(qi),{backToSourceQuery:r}=(0,Ee.useValues)(Z);if(!r)return null;let o=Ni(r.source,{aggregationLabel:e,cohortsById:t,mathDefinitions:i});return(0,mr.jsxs)(f,{tooltip:o,type:"secondary",onClick:()=>cr.router.actions.push(F.insightNew({query:r})),children:["\xAB Back to ",r.source.kind?.replace("Query","")??"Insight"]})}a();d();p();var ne=n(W());var br=n(ee());a();d();p();var E=n(W());a();d();p();var kt="--v2:hogql";function yn(e){return e.length>0&&e[0]===kt?e.slice(1):["*",...e.map(t=>t==="event"||t==="person"?t:t==="url"?"coalesce(properties.$current_url, properties.$screen_name) -- Url / Screen":t==="source"?"properties.$lib":`properties.${sr(String(t))}`),"timestamp"]}function un(e){let t=e?.live_events_columns?yn(e.live_events_columns):null;return t?{kind:"EventsQuery",select:t,after:"-24h",orderBy:t.includes("timestamp")?["timestamp DESC"]:[]}:null}function hr(e){let t=un(e);return{...t?{"Project default view":t}:{},"PostHog default view":tr().source,"Event counts view":{kind:"EventsQuery",select:["event","count()"],after:"-24h",orderBy:["count() DESC"]}}}var Me=(0,E.kea)([(0,E.props)({}),(0,E.path)(["queries","nodes","DataTable","columnConfiguratorLogic"]),(0,E.key)(e=>e.key),(0,E.actions)({showModal:!0,hideModal:!0,selectColumn:e=>({column:e}),unselectColumn:e=>({column:e}),setColumns:e=>({columns:e}),moveColumn:(e,t)=>({oldIndex:e,newIndex:t}),save:!0,toggleSaveAsDefault:!0}),(0,E.reducers)(({props:e})=>({saveAsDefault:[!1,{toggleSaveAsDefault:t=>!t,showModal:()=>!1}],modalVisible:[!1,{showModal:()=>!0,hideModal:()=>!1,save:()=>!1}],columns:[e.columns,{setColumns:(t,{columns:i})=>i,selectColumn:(t,{column:i})=>Array.from(new Set([...t,i])),unselectColumn:(t,{column:i})=>t.filter(r=>r!==i),moveColumn:(t,{oldIndex:i,newIndex:r})=>{let o=[...t],[l]=o.splice(i,1);return o.splice(r,0,l),o}}]})),(0,E.propsChanged)(({actions:e,props:t},i)=>{JSON.stringify(t.columns)!==JSON.stringify(i.columns)&&e.setColumns(t.columns)}),(0,E.listeners)(({values:e,props:t})=>({save:()=>{t.isPersistent&&e.saveAsDefault&&te.actions.updateCurrentTeam({live_events_columns:[kt,...e.columns]}),t.setColumns(e.columns)}}))]);var c=n(y()),fn=0;function Qr({query:e,setQuery:t}){let{columnsInQuery:i}=(0,ne.useValues)(pe),[r]=(0,br.useState)(()=>String(fn++)),o={key:r,isPersistent:!!e.showPersistentColumnConfigurator,columns:i,setColumns:h=>{if(V(e.source)){let g=e.source.orderBy;if(g&&g.length>0){let x=z(g[0].endsWith(" DESC")?g[0].replace(/ DESC$/,""):g[0]);h.some(q=>z(q)===x)||(g=void 0)}t?.({...e,source:{...e.source,orderBy:g,select:h}})}else t?.({...e,columns:h})}},{showModal:l}=(0,ne.useActions)(Me(o));return(0,c.jsxs)(ne.BindLogic,{logic:Me,props:o,children:[(0,c.jsx)(f,{type:"secondary","data-attr":"events-table-column-selector",icon:(0,c.jsx)(Yt,{}),onClick:l,children:"Configure columns"}),(0,c.jsx)(cn,{query:e,setQuery:t})]})}function cn({query:e}){let t=Hi({minimumAccessLevel:8,scope:"project"}),{modalVisible:i,columns:r,saveAsDefault:o}=(0,ne.useValues)(Me),{hideModal:l,moveColumn:h,setColumns:g,selectColumn:x,unselectColumn:q,save:A,toggleSaveAsDefault:k}=(0,ne.useActions)(Me),T=(m,M)=>{let Y=window.prompt("Edit column",m);Y&&g(r.map((U,X)=>X===M?Y:U))};return(0,c.jsx)(Ze,{isOpen:i,title:"Configure columns",onClose:l,footer:(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("div",{className:"flex-1",children:(0,c.jsx)(f,{type:"secondary",onClick:()=>g(or("EventsQuery")),children:"Reset to defaults"})}),(0,c.jsx)(f,{type:"secondary",onClick:l,children:"Close"}),(0,c.jsx)(f,{type:"primary",onClick:A,"data-attr":"items-selector-confirm",children:"Save"})]}),children:(0,c.jsxs)("div",{className:"ColumnConfiguratorModal",children:[(0,c.jsxs)("div",{className:"Columns",children:[(0,c.jsxs)("div",{className:"HalfColumn",children:[(0,c.jsxs)("h4",{className:"secondary uppercase text-secondary",children:["Visible columns (",r.length,") - Drag to reorder"]}),(0,c.jsx)(hi,{onDragEnd:({active:m,over:M})=>{M&&m.id!==M.id&&h(r.indexOf(m.id.toString()),r.indexOf(M.id.toString()))},modifiers:[Ci,Ai],children:(0,c.jsx)(Qi,{items:r,strategy:bi,children:r.map((m,M)=>(0,c.jsx)(gn,{column:m,dataIndex:M,onEdit:T,onRemove:q},m))})})]}),(0,c.jsxs)("div",{className:"HalfColumn",children:[(0,c.jsx)("h4",{className:"secondary uppercase text-secondary",children:"Available columns"}),(0,c.jsx)("div",{className:"h-[360px]",children:(0,c.jsx)(Pi,{children:({height:m,width:M})=>(0,c.jsx)(Ri,{height:m,width:M,taxonomicGroupTypes:["event_properties","event_feature_flags","person_properties",...V(e.source)?["hogql_expression"]:[]],value:void 0,onChange:(Y,U)=>{let X=_e(Y.type,U);X!==null&&x(X)},popoverEnabled:!1,selectFirstItem:!1})})})]})]}),V(e.source)&&e.showPersistentColumnConfigurator?(0,c.jsx)(Oe,{label:"Save as default for all project members",className:"mt-2","data-attr":"events-table-save-columns-as-default-toggle",bordered:!0,checked:o,onChange:k,disabledReason:t}):null]})})}var gn=({column:e,dataIndex:t,onEdit:i,onRemove:r})=>{let{setNodeRef:o,attributes:l,transform:h,transition:g,listeners:x}=_i({id:e}),q=null,A,k=e;return e.startsWith("person.properties.")&&(q="person",A="person_properties",k=e.substring(18)),e.startsWith("properties.")&&(q="event",k=e.substring(11)),k=nr(Le(k)),(0,c.jsx)("div",{ref:o,style:{transform:mi.Transform.toString(h),transition:g},...l,children:(0,c.jsxs)("div",{className:"SelectedColumn",children:[(0,c.jsx)("span",{...x,className:"drag-handle",children:(0,c.jsx)(Ut,{})}),q&&(0,c.jsx)(Si,{type:q}),(0,c.jsx)(Je,{className:"ml-1",value:k,type:A||"event_properties"}),(0,c.jsx)("div",{className:"flex-1"}),(0,c.jsx)(Ae,{title:"Edit",children:(0,c.jsx)(f,{onClick:()=>i(e,t),size:"small",children:(0,c.jsx)(ii,{"data-attr":"column-display-item-edit-icon"})})}),(0,c.jsx)(Ae,{title:"Remove",children:(0,c.jsx)(f,{onClick:()=>r(e),status:"danger",size:"small",children:(0,c.jsx)(ni,{"data-attr":"column-display-item-remove-icon"})})})]})})};a();d();p();var _r=n(De());var N=n(y());function vr({event:e}){let t=Gi(e);return(0,N.jsx)(li,{overlay:(0,N.jsxs)(N.Fragment,{children:[Qt()&&(0,N.jsx)(f,{onClick:()=>void gi(Qt(),e,0,te.findMounted()?.values.currentTeam?.data_attributes||[]),fullWidth:!0,"data-attr":"events-table-create-action",children:"Create action from event"}),e.uuid&&e.timestamp&&(0,N.jsx)(f,{fullWidth:!0,sideIcon:(0,N.jsx)(Xt,{}),"data-attr":"events-table-event-link",onClick:()=>void fi(F.absolute(F.currentProject(F.event(String(e.uuid),e.timestamp))),"link to event"),children:"Copy link to event"}),(0,N.jsx)(Yi,{fullWidth:!0,inModal:!0,sessionId:e.properties.$session_id,timestamp:e.timestamp,disabledReason:Xi(e.properties)?void 0:"Replay was not active when capturing this event","data-attr":"events-table-usage"}),e.event==="$exception"&&"$exception_issue_id"in e.properties?(0,N.jsx)(f,{fullWidth:!0,sideIcon:(0,N.jsx)(ri,{}),"data-attr":"events-table-exception-link",onClick:()=>_r.router.actions.push(F.errorTrackingIssue(e.properties.$exception_issue_id,e.properties.$exception_fingerprint)),children:"Visit issue"}):null,t&&(0,N.jsx)(f,{to:t,fullWidth:!0,"data-attr":"events-table-usage",children:"Try out in Insights"})]})})}a();d();p();var at=n(W());a();d();p();var D=n(W()),$r=n(dn());var wr=(0,D.kea)([(0,D.path)(["queries","nodes","DataTable","sourceQueryOptionsLogic"]),(0,D.props)({}),(0,D.actions)({load:!0}),(0,$r.loaders)(({values:e,props:t})=>({insightActorsQueryOptions:[null,{load:async()=>{if(!t.query||!Ke(t.query))return e.insightActorsQueryOptions||null;let i={kind:"InsightActorsQueryOptions",source:t.query};return await $i(i)}}]})),(0,D.afterMount)(({actions:e})=>{e.load()}),(0,D.propsChanged)(({actions:e,props:t},i)=>{JSON.stringify(t.query)!==JSON.stringify(i.query)&&e.load()})]);var we=n(y());function qr({setQuery:e,query:t}){let i=(0,at.useMountedLogic)(Z),{insightActorsQueryOptions:r}=(0,at.useValues)(wr({key:i.key,query:t}));return t&&r?(0,we.jsx)(we.Fragment,{children:Li(r,t).map(([o,l])=>(0,we.jsx)("div",{children:(0,we.jsx)(di,{fullWidth:!0,className:"min-w-32",placeholder:o,value:t?.[o]??null,onChange:h=>e?.({...t,[o]:h}),options:l})},o))}):null}a();d();p();var St=n(pn()),xr=n(W());var Ft=n(y());function Tr({query:e,setQuery:t}){let{currentTeam:i}=(0,xr.useValues)(te);if(!t||!i)return null;let r=hr(i),o=Object.keys(r).find(l=>(0,St.default)(r[l],e.source));return o||(o=Object.keys(r).find(l=>(0,St.default)({...r[l],before:"",after:""},{...e.source,before:"",after:""}))),o||(o="Custom query"),(0,Ft.jsx)(si,{dropdown:{matchWidth:!1,overlay:Object.entries(r).map(([l,h])=>(0,Ft.jsx)(f,{fullWidth:!0,active:l===o,onClick:()=>t?.({...e,source:h}),children:l},l))},type:"secondary",children:o})}a();d();p();a();d();p();var At=n(y());function Pr({value:e,onChange:t,disabled:i,placeholder:r="Select an event",allEventsOption:o}){return(0,At.jsx)(me,{groupType:"events",onChange:t,disabled:i,value:e,type:"secondary",placeholder:r,"data-attr":"event-name-box",renderValue:l=>l!==null?(0,At.jsx)(Je,{value:l,disablePopover:!0,type:"events"}):null,allowClear:o==="clear",excludedProperties:o!=="explicit"?{events:[null]}:void 0,size:"small"})}var kr=n(y());function Rr({query:e,setQuery:t}){return(0,kr.jsx)(Pr,{value:e.event??"",disabled:!t,onChange:i=>t?.({...e,event:i}),allEventsOption:"clear"})}a();d();p();var Sr=n(W());var Fr=n(ee());var Ct=n(y()),mn=0;function Ar({query:e,setQuery:t,taxonomicGroupTypes:i}){let[r]=(0,Fr.useState)(()=>mn++),o=B(e)||Qe(e)?e.filters?.properties:e.properties,l=B(e)||Qe(e)?[]:"event"in e&&e.event?[e.event]:[],{groupsTaxonomicTypes:h}=(0,Sr.useValues)(Ue);return!o||Array.isArray(o)?(0,Ct.jsx)(Xe,{propertyFilters:o||[],taxonomicGroupTypes:i||["event_properties","person_properties","event_feature_flags",...h,"cohorts","elements","hogql_expression"],onChange:g=>{B(e)||Qe(e)?t?.({...e,filters:{...e.filters??{},properties:g}}):t?.({...e,properties:g})},pageKey:`EventPropertyFilters.${r}`,eventNames:l}):(0,Ct.jsx)("div",{children:"Error: property groups are not supported."})}a();d();p();var Er=n(Ot()),xe=n(W()),qe=n(De());var J=n(ee());a();d();p();var R=n(W()),Cr=n(De());var Lt=n(y()),Lr=(0,R.kea)([(0,R.path)(["queries","nodes","HogQLQuery","hogQLQueryEditorLogic"]),(0,R.props)({}),(0,R.key)(e=>e.key),(0,R.propsChanged)(({actions:e,props:t},i)=>{let r=t.editor?.getSelection(),o=t.editor?.getModel(),l=r&&o?o.getValueInRange(r):null;l&&t.query.query===l||typeof t.query.query=="string"&&(t.query.query!==i.query.query||t.editor!==i.editor)&&e.setQueryInput(t.query.query)}),(0,R.connect)({values:[Zt,["featureFlags"]],actions:[$t,["createDataWarehouseSavedQuery"],Ye,["updateView"]]}),(0,R.actions)({saveQuery:e=>({queryOverride:e}),setQueryInput:e=>({queryInput:e}),setPrompt:e=>({prompt:e}),setPromptError:e=>({error:e}),draftFromPrompt:!0,draftFromPromptComplete:!0,saveAsView:!0,saveAsViewSuccess:e=>({name:e}),onUpdateView:!0}),(0,R.reducers)(({props:e})=>({queryInput:[typeof e.query.query=="string"?e.query.query:"",{setQueryInput:(t,{queryInput:i})=>i}],prompt:["",{setPrompt:(t,{prompt:i})=>i}],promptError:[null,{setPromptError:(t,{error:i})=>i,draftFromPrompt:()=>null,saveQuery:()=>null}],promptLoading:[!1,{draftFromPrompt:()=>!0,draftFromPromptComplete:()=>!1}]})),(0,R.selectors)({aiAvailable:[()=>[ci.selectors.preflight],e=>e?.openai_available]}),(0,R.listeners)(({actions:e,props:t,values:i})=>({saveQuery:({queryOverride:r})=>{let o=i.queryInput;e.setQueryInput(o),t.setQuery?.({...t.query,query:r??o})},setQueryInput:async({queryInput:r})=>{t.onChange?.(r)},draftFromPrompt:async()=>{if(!i.aiAvailable)throw new Error("To use AI features, configure environment variable OPENAI_API_KEY for this instance of PostHog");try{let r=await ir.get((0,Cr.combineUrl)("api/projects/@current/query/draft_sql/",{prompt:i.prompt,current_query:i.queryInput}).url),{sql:o}=r;e.setQueryInput(o)}catch(r){e.setPromptError(r.detail)}finally{e.draftFromPromptComplete()}},saveAsView:async()=>{ai.openForm({title:"Save as view",initialValues:{viewName:""},content:(0,Lt.jsx)(vi,{name:"viewName",children:(0,Lt.jsx)(ge,{placeholder:"Please enter the name of the view",autoFocus:!0})}),errors:{viewName:r=>r?void 0:"You must enter a name"},onSubmit:({viewName:r})=>e.saveAsViewSuccess(r)})},saveAsViewSuccess:async({name:r})=>{let o={kind:"HogQLQuery",query:i.queryInput},l=t.queryResponse?.types??[];await $t.asyncActions.createDataWarehouseSavedQuery({name:r,query:o,types:l})},onUpdateView:async()=>{let r=t.queryResponse?.types??[];e.updateView(i.queryInput,r)}}))]);var w=n(y()),hn=0,bn=222;function Mr(e){let t=(0,J.useRef)(null),[i,r]=(0,J.useState)(()=>qe.router.values.location.pathname.includes(F.dataWarehouse())?qe.router.values.location.pathname:hn++);(0,J.useEffect)(()=>{qe.router.values.location.pathname.includes(F.dataWarehouse())&&r(qe.router.values.location.pathname)},[qe.router.values.location.pathname]);let[o,l]=(0,J.useState)(null),[h,g]=o??[],x={query:e.query,setQuery:e.setQuery,onChange:e.onChange,key:i,editor:g,monaco:h,queryResponse:e.queryResponse},q=Lr(x),{queryInput:A,prompt:k,aiAvailable:T,promptError:m,promptLoading:M}=(0,xe.useValues)(q),{setQueryInput:Y,saveQuery:U,setPrompt:X,draftFromPrompt:je,saveAsView:We,onUpdateView:Ne}=(0,xe.useActions)(q),Re=`hogQLQueryEditor/${i}`,ye={key:Re,sourceQuery:e.query,query:A,language:"hogQL",metadataFilters:e.query.filters},{hasErrors:G,error:ue,isValidView:ke}=(0,xe.useValues)(xi(ye)),{editingView:P}=(0,xe.useValues)(Ye({monaco:h,editor:g})),Ge=(0,J.useRef)([]);return(0,J.useEffect)(()=>()=>{Ge.current.forEach(H=>H?.dispose())},[]),(0,w.jsx)("div",{className:"flex items-start gap-2",children:(0,w.jsxs)("div",{"data-attr":"hogql-query-editor",className:(0,Er.default)("flex flex-col rounded space-y-2 w-full overflow-hidden",!e.embedded&&"p-2 border"),children:[(0,w.jsx)(Ii,{flag:Vt.ARTIFICIAL_HOG,children:(0,w.jsxs)("div",{className:"flex gap-2",children:[(0,w.jsx)(ge,{className:"grow",prefix:(0,w.jsx)(ti,{}),value:k,onPressEnter:()=>je(),onChange:H=>X(H),placeholder:T?"What do you want to know? How would you like to tweak the query?":"To use AI features, set environment variable OPENAI_API_KEY for this instance of PostHog",disabled:!T,maxLength:400}),(0,w.jsx)(f,{type:"primary",onClick:()=>je(),disabledReason:T?k?null:"Provide a prompt first":"Environment variable OPENAI_API_KEY is unset for this instance of PostHog",tooltipPlacement:"left",loading:M,children:"Think"})]})}),m?(0,w.jsx)(oi,{type:"warning",children:m}):null,(0,w.jsx)("div",{className:"relative flex-1 overflow-hidden flex-col",children:(0,w.jsx)("div",{ref:t,className:"resize-y overflow-hidden",style:{height:bn},children:(0,w.jsx)(Ti,{queryKey:Re,sourceQuery:e.query,className:"border rounded-b overflow-hidden h-full",language:"hogQL",value:A,onChange:H=>{Y(H??"")},height:"100%",onMount:(H,Se)=>{l([Se,H])},onPressCmdEnter:(H,Se)=>{H&&Se==="selection"?U(H):U()},options:{minimap:{enabled:!1},wordWrap:"on",scrollBeyondLastLine:!1,automaticLayout:!0,fixedOverflowWidgets:!0,suggest:{showInlineDetails:!0},quickSuggestionsDelay:300}})})}),(0,w.jsx)("div",{className:"flex flex-row px-px",children:e.editorFooter?e.editorFooter(G,ue,ke):(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)("div",{className:"flex-1",children:(0,w.jsx)(f,{onClick:()=>U(),type:"primary",disabledReason:e.setQuery?G?ue??"Query has errors":void 0:"No permission to update",center:!0,fullWidth:!0,"data-attr":"hogql-query-editor-save",children:e.setQuery?"Update and run":"No permission to update"})}),P?(0,w.jsx)(f,{className:"ml-2",onClick:Ne,type:"primary",center:!0,disabledReason:G?ue??"Query has errors":ke?"":"Some fields may need an alias","data-attr":"hogql-query-editor-update-view",children:"Update view"}):(0,w.jsx)(f,{className:"ml-2",onClick:We,type:"primary",center:!0,disabledReason:G?ue??"Query has errors":ke?"":"Some fields may need an alias","data-attr":"hogql-query-editor-save-as-view",tooltip:(0,w.jsxs)("div",{children:["Save a query as a view that can be referenced in another query. This is useful for modeling data and organizing large queries into readable chunks."," ",(0,w.jsx)(ae,{to:"https://posthog.com/docs/data-warehouse",children:"More Info"})," "]}),children:"Save as view"})]})})]})})}a();d();p();var Et=n(y());function Ir({hogql:e,...t}){let i={kind:"DataTableNode",full:!0,source:{kind:"HogQLQuery",query:e}};return(0,Et.jsx)(f,{"data-attr":"open-json-editor-button",type:"secondary",to:F.insightNew({query:i}),icon:(0,Et.jsx)(Jt,{}),tooltip:"Edit SQL directly",...t})}a();d();p();var Mt=n(y());function jr({query:e,...t}){return(0,Mt.jsx)(f,{"data-attr":"open-json-editor-button",type:"secondary",to:e?F.insightNew({query:e}):void 0,icon:(0,Mt.jsx)(Kt,{}),tooltip:"Open as a new insight",...t})}a();d();p();var Wr=n(ee());var It=n(y()),Qn=0;function Nr({query:e,setQuery:t}){let[i]=(0,Wr.useState)(Qn++);return!e.properties||Array.isArray(e.properties)?(0,It.jsx)(Xe,{propertyFilters:e.properties||[],onChange:r=>{t?.({...e,properties:r})},pageKey:`PersonPropertyFilters.${i}`,taxonomicGroupTypes:ie(e)?["person_properties","cohorts","hogql_expression"]:["person_properties"],metadataSource:{kind:"ActorsQuery"}}):(0,It.jsx)("div",{children:"Error: property groups are not supported."})}a();d();p();a();d();p();var le=n(ee());function Gr(e,t,i,r,o=300){let l=i(e),[h,g]=(0,le.useState)(l),x=(0,le.useRef)(e);(0,le.useEffect)(()=>{x.current=e},[e]);let q=(0,le.useRef)();return{value:h,onChange:k=>{g(k),q.current&&clearTimeout(q.current),q.current=window.setTimeout(()=>{t?.(r(x.current,k))},o)}}}var Te=n(y()),Hr={person:{label:"persons",description:"Search by name, email, Person ID or Distinct ID."},group:{label:"groups",description:"Search by group name or Distinct ID. Group name will match partially. Distinct ID needs to match exactly."}};function Vr({query:e,setQuery:t}){let{value:i,onChange:r}=Gr(e,t,l=>l.search||"",(l,h)=>({...l,search:h})),o=rr(e)?"group":"person";return(0,Te.jsxs)("div",{className:"flex items-center gap-2",children:[(0,Te.jsx)(ge,{type:"search",value:i,placeholder:`Search for ${Hr[o].label}`,"data-attr":"persons-search",disabled:!t,onChange:r}),(0,Te.jsx)(Ae,{title:Hr[o].description,children:(0,Te.jsx)(ei,{className:"text-2xl text-secondary shrink-0"})})]})}a();d();p();var Br=n(W());var pt=n(y());function Dr({query:e}){let{response:t}=(0,Br.useValues)(pe),i=t?.hogql?{kind:"DataTableNode",full:!0,source:{kind:"HogQLQuery",query:t.hogql}}:null;return(0,pt.jsx)(f,{type:"secondary",icon:(0,pt.jsx)(zt,{}),to:F.insightNew({query:e}),sideAction:t?.hogql?{dropdown:{overlay:(0,pt.jsx)(pi,{items:[{label:"Open as direct SQL insight",to:F.insightNew({query:i}),"data-attr":"open-sql-editor-button"}]})}}:void 0,"data-attr":"open-json-editor-button",children:"Open as new insight"})}var s=n(y()),_n=["hogql_expression","event_properties","person_properties","event_feature_flags"],vn=["hogql_expression","person_properties"],$n=0;function sl({uniqueKey:e,query:t,setQuery:i,context:r,cachedResults:o,readOnly:l}){let[h]=(0,Ie.useState)(()=>$n++),[g]=(0,Ie.useState)(()=>`DataNode.${e||h}`),x=r?.insightProps||{dashboardItemId:`new-AdHoc.${g}`,dataNodeCollectionId:g},q=Wi(x),A={query:t.source,key:q,cachedResults:o,dataNodeCollectionId:r?.insightProps?.dataNodeCollectionId||g,alwaysRefresh:r?.alwaysRefresh},k=Z(A),{response:T,responseLoading:m,responseError:M,queryCancelled:Y,nextDataLoading:U,newDataLoading:X,highlightedRows:je,backToSourceQuery:We}=(0,Pe.useValues)(k),Ne={query:t,vizKey:q,dataKey:g,dataNodeLogicKey:A.key,context:r},{dataTableRows:Re,columnsInQuery:ye,columnsInResponse:G,queryWithDefaults:ue,canSort:ke,sourceFeatures:P}=(0,Pe.useValues)(pe(Ne)),{showActions:Ge,showDateRange:H,showTestAccountFilters:Se,showSearch:zr,showEventFilter:Jr,showPropertyFilter:He,showHogQLEditor:Yr,showReload:Xr,showExport:lt,showElapsedTime:Kr,showColumnConfigurator:en,showPersistentColumnConfigurator:tn,showSavedQueries:rn,expandable:jt,embedded:Wt,showOpenEditorButton:yt,showResultsTable:nn,showTimings:sn}=ue,fe=!!l,Nt=Ge&&P.has(1)&&G?.includes("*"),Fe=P.has(0)?G??ye:ye,ut=ie(t.source)?vn:_n,on=[...Fe.map((u,S)=>({dataIndex:u,...Ki(u,t,r),render:function(I,{result:$,label:j},O){if(j)return S===(jt?1:0)?{children:j,props:{colSpan:Fe.length+(Nt?1:0)}}:{props:{colSpan:0}};if($)return P.has(9)?Tt(u,$[S],$,O,t,i,r):Tt(u,$[u],$,O,t,i,r)},sorter:void 0,more:!fe&&Ge&&P.has(10)?(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("div",{className:"px-2 py-1",children:[(0,s.jsx)("div",{className:"font-mono font-bold",children:Le(u)}),Le(u)!==z(u)&&(0,s.jsx)("div",{className:"font-mono",children:z(u)})]}),(0,s.jsx)(ce,{}),(0,s.jsx)(me,{groupType:"hogql_expression",value:u,groupTypes:ut,metadataSource:t.source,renderValue:()=>(0,s.jsx)(s.Fragment,{children:"Edit column"}),type:"tertiary",fullWidth:!0,onChange:(C,I)=>{let $=ie(t.source)?et(I,C):_e(I,C);if(i&&$&&P.has(10)){let j=t.source,O=Fe??it(j),se=tt($),oe=j.orderBy?.[0]===u,Ht=j.orderBy?.[0]===`${u} DESC`;i({...t,source:{...j,select:O.map((Be,an)=>an===S?$:Be).filter(Be=>se?Be!=="*"&&Be!=="person.$delete":!0),orderBy:oe||Ht?[Ht?`${$} DESC`:$]:j.orderBy}})}}}),(0,s.jsx)(ce,{}),ke&&u!=="person.$delete"&&u!=="person"?(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(f,{fullWidth:!0,"data-attr":"datatable-sort-asc",onClick:()=>{i?.({...t,source:{...t.source,orderBy:[u]}})},children:"Sort ascending"}),(0,s.jsx)(f,{fullWidth:!0,"data-attr":"datatable-sort-desc",onClick:()=>{i?.({...t,source:{...t.source,orderBy:[`${u} DESC`]}})},children:"Sort descending"}),(0,s.jsx)(ce,{})]}):null,(0,s.jsx)(me,{groupType:"hogql_expression",value:"",groupTypes:ut,metadataSource:t.source,placeholder:(0,s.jsx)("span",{className:"not-italic",children:"Add column left"}),"data-attr":"datatable-add-column-left",type:"tertiary",fullWidth:!0,onChange:(C,I)=>{let $=ie(t.source)?et(I,C):_e(I,C);if(i&&$&&P.has(10)){let j=tt($),O=t.source,se=Fe??it(O);i({...t,source:{...O,select:[...se.slice(0,S),$,...se.slice(S)].filter(oe=>j?oe!=="*"&&oe!=="person.$delete":!0)}})}}}),(0,s.jsx)(me,{groupType:"hogql_expression",value:"",groupTypes:ut,metadataSource:t.source,placeholder:(0,s.jsx)("span",{className:"not-italic",children:"Add column right"}),"data-attr":"datatable-add-column-right",type:"tertiary",fullWidth:!0,onChange:(C,I)=>{let $=ie(t.source)?et(I,C):_e(I,C);if(i&&$&&P.has(10)){let j=tt($),O=t.source,se=Fe??it(O);i?.({...t,source:{...O,select:[...se.slice(0,S+1),$,...se.slice(S+1)].filter(oe=>j?oe!=="*"&&oe!=="person.$delete":!0)}})}}}),ye.filter(C=>C!=="*").length>1?(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(ce,{}),(0,s.jsx)(f,{fullWidth:!0,status:"danger","data-attr":"datatable-remove-column",onClick:()=>{let C=z(u),I={...t.source,select:t.source.select.filter(($,j)=>j!==S),orderBy:t.source.orderBy?.find($=>z($)===C||z($)===`-${C}`)?void 0:t.source.orderBy};i?.({...t,source:I})},children:"Remove column"})]}):null]}):void 0})),...Nt?[{dataIndex:"__more",title:"",render:function(S,{label:C,result:I}){return C?{props:{colSpan:0}}:I&&G?.includes("*")?(0,s.jsx)(vr,{event:I[G.indexOf("*")]}):null},width:0}]:[]].filter(u=>!t.hiddenColumns?.includes(u.dataIndex)&&u.dataIndex!=="*"),K=(0,Ie.useCallback)(u=>i?.({...t,source:u}),[i,t]),ft=[We?(0,s.jsx)(gr,{},"return-to-source"):null,We&&ie(t.source)&&Ke(t.source.source)?(0,s.jsx)(qr,{query:t.source.source,setQuery:u=>K({...t.source,source:{...t.source.source,...u}})},"source-query-options"):null,H&&P.has(2)?(0,s.jsx)(lr,{query:t.source,setQuery:K},"date-range"):null,Jr&&P.has(3)?(0,s.jsx)(Rr,{query:t.source,setQuery:K},"event-name"):null,zr&&P.has(6)?(0,s.jsx)(Vr,{query:t.source,setQuery:K},"persons-search"):null,He&&P.has(4)?(0,s.jsx)(Ar,{query:t.source,setQuery:K,taxonomicGroupTypes:Array.isArray(He)?He:void 0},"event-property"):null,He&&P.has(5)?(0,s.jsx)(Nr,{query:t.source,setQuery:K},"person-property"):null].filter(u=>!!u),Ve=[Se&&P.has(13)?(0,s.jsx)(ur,{query:t.source,setQuery:K},"test-account-filters"):null,rn&&P.has(7)?(0,s.jsx)(Tr,{query:t,setQuery:i},"saved-queries"):null].filter(u=>!!u),Gt=[Xr?(0,s.jsx)(yr,{},"reload"):null,Kr?(0,s.jsx)(Ui,{showTimings:sn},"elapsed-time"):null].filter(u=>!!u),ct=[(en||tn)&&P.has(8)?(0,s.jsx)(Qr,{query:t,setQuery:i},"column-configurator"):null,lt?(0,s.jsx)(Mi,{query:t,setQuery:i},"data-table-export"):null,lt&&yt?(0,s.jsx)(Dr,{query:t,setQuery:i},"data-table-open-editor"):null].filter(u=>!!u),gt=!fe&&(ft.length>0||Ve.length>0),mt=!fe&&(Gt.length>0||ct.length>0),ht=gt?1:mt?2:0,bt=(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(jr,{query:t}),T?.hogql?(0,s.jsx)(Ir,{hogql:T.hogql}):null]});return!lt&&yt&&!fe&&(ht===1?Ve.push(bt):ht===2&&ct.push(bt)),(0,s.jsx)(Pe.BindLogic,{logic:pe,props:Ne,children:(0,s.jsx)(Pe.BindLogic,{logic:Z,props:A,children:(0,s.jsxs)("div",{className:"relative w-full flex flex-col gap-4 flex-1 h-full",children:[Yr&&B(t.source)&&!fe?(0,s.jsx)(Mr,{query:t.source,setQuery:K,embedded:Wt}):null,gt&&(0,s.jsxs)("div",{className:"flex gap-x-4 gap-y-2 items-center flex-wrap",children:[ft,ft.length>0&&Ve.length>0?(0,s.jsx)("div",{className:"flex-1"}):null,Ve]}),gt&&mt&&(0,s.jsx)(ce,{className:"my-0"}),mt&&(0,s.jsxs)("div",{className:"flex gap-4 justify-between flex-wrap",children:[(0,s.jsx)("div",{className:"flex gap-4 items-center",children:Gt}),(0,s.jsx)("div",{className:"flex gap-4 items-center",children:ct})]}),yt&&ht===0&&!fe?(0,s.jsx)("div",{className:"absolute right-0 z-10 p-1",children:bt}):null,nn&&(0,s.jsx)(yi,{className:"DataTable",loading:m&&!U&&!X,columns:on,embedded:Wt,dataSource:Re??[],rowKey:(u,S)=>S,sorting:null,useURLForSorting:!1,emptyState:M?P.has(11)?(0,s.jsx)(qt,{query:t,excludeDetail:!0,title:Y?"The query was cancelled":T&&"error"in T?T.error:M}):(0,s.jsx)(qt,{query:t}):(0,s.jsx)(Ei,{heading:r?.emptyStateHeading,detail:r?.emptyStateDetail}),expandable:jt&&G?.includes("*")?{expandedRowRender:function({result:S}){if(V(t.source)&&Array.isArray(S))return(0,s.jsx)(Rt,{event:S[G.indexOf("*")]??{}});if(S&&!Array.isArray(S))return(0,s.jsx)(Rt,{event:S})},rowExpandable:({result:u})=>!!u,noIndent:!0}:void 0,rowClassName:({result:u,label:S})=>(0,Or.default)("DataTable__row",{"DataTable__row--highlight_once":u&&je.has(u),"DataTable__row--category_row":!!S,"border border-x-danger-dark bg-danger-highlight":P.has(14)&&u&&u[0]&&u[0].event==="$exception"}),footer:(Re??[]).length>0&&!P.has(12)?(0,s.jsx)(er,{query:t.source}):null,onRow:r?.rowProps},[...G??[],...ye].join("::")),(0,s.jsx)(pr,{})]})})})}a();d();p();var Ur=n(ln());var Zr={$schema:"http://json-schema.org/draft-07/schema#",definitions:{ActionConversionGoal:{additionalProperties:!1,properties:{actionId:{$ref:"#/definitions/integer"}},required:["actionId"],type:"object"},ActionsNode:{additionalProperties:!1,properties:{custom_name:{type:"string"},fixedProperties:{description:"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},id:{$ref:"#/definitions/integer"},kind:{const:"ActionsNode",type:"string"},math:{$ref:"#/definitions/MathType"},math_group_type_index:{enum:[0,1,2,3,4],type:"number"},math_hogql:{type:"string"},math_property:{type:"string"},math_property_type:{type:"string"},name:{type:"string"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},response:{type:"object"}},required:["id","kind"],type:"object"},ActorsPropertyTaxonomyQuery:{additionalProperties:!1,properties:{group_type_index:{$ref:"#/definitions/integer"},kind:{const:"ActorsPropertyTaxonomyQuery",type:"string"},maxPropertyValues:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},property:{type:"string"},response:{$ref:"#/definitions/ActorsPropertyTaxonomyQueryResponse"}},required:["kind","property"],type:"object"},ActorsPropertyTaxonomyQueryResponse:{additionalProperties:!1,description:"All analytics query responses must inherit from this.",properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/ActorsPropertyTaxonomyResponse"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},ActorsPropertyTaxonomyResponse:{additionalProperties:!1,properties:{sample_count:{$ref:"#/definitions/integer"},sample_values:{items:{anyOf:[{type:"string"},{type:"number"},{type:"boolean"},{$ref:"#/definitions/integer"}]},type:"array"}},required:["sample_values","sample_count"],type:"object"},ActorsQuery:{additionalProperties:!1,properties:{fixedProperties:{description:"Currently only person filters supported. No filters for querying groups. See `filter_conditions()` in actor_strategies.py.",items:{$ref:"#/definitions/AnyPersonScopeFilter"},type:"array"},kind:{const:"ActorsQuery",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},orderBy:{items:{type:"string"},type:"array"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPersonScopeFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilterValue"}],description:"Currently only person filters supported. No filters for querying groups. See `filter_conditions()` in actor_strategies.py."},response:{$ref:"#/definitions/ActorsQueryResponse"},search:{type:"string"},select:{items:{$ref:"#/definitions/HogQLExpression"},type:"array"},source:{anyOf:[{$ref:"#/definitions/InsightActorsQuery"},{$ref:"#/definitions/FunnelsActorsQuery"},{$ref:"#/definitions/FunnelCorrelationActorsQuery"},{$ref:"#/definitions/StickinessActorsQuery"},{$ref:"#/definitions/HogQLQuery"}]}},required:["kind"],type:"object"},ActorsQueryResponse:{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},missing_actors_count:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{items:{},type:"array"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{type:"string"},type:"array"}},required:["columns","hogql","limit","offset","results","types"],type:"object"},AggregationAxisFormat:{enum:["numeric","duration","duration_ms","percentage","percentage_scaled"],type:"string"},AlertCalculationInterval:{enum:["hourly","daily","weekly","monthly"],type:"string"},AlertCondition:{additionalProperties:!1,properties:{type:{$ref:"#/definitions/AlertConditionType"}},required:["type"],type:"object"},AlertConditionType:{enum:["absolute_value","relative_increase","relative_decrease"],type:"string"},AlertState:{enum:["Firing","Not firing","Errored","Snoozed"],type:"string"},AnyDataNode:{anyOf:[{$ref:"#/definitions/EventsNode"},{$ref:"#/definitions/ActionsNode"},{$ref:"#/definitions/PersonsNode"},{$ref:"#/definitions/EventsQuery"},{$ref:"#/definitions/ActorsQuery"},{$ref:"#/definitions/InsightActorsQuery"},{$ref:"#/definitions/InsightActorsQueryOptions"},{$ref:"#/definitions/SessionsTimelineQuery"},{$ref:"#/definitions/HogQuery"},{$ref:"#/definitions/HogQLQuery"},{$ref:"#/definitions/HogQLMetadata"},{$ref:"#/definitions/HogQLAutocomplete"},{$ref:"#/definitions/WebOverviewQuery"},{$ref:"#/definitions/WebStatsTableQuery"},{$ref:"#/definitions/WebExternalClicksTableQuery"},{$ref:"#/definitions/WebGoalsQuery"},{$ref:"#/definitions/WebVitalsQuery"},{$ref:"#/definitions/WebVitalsPathBreakdownQuery"},{$ref:"#/definitions/SessionAttributionExplorerQuery"},{$ref:"#/definitions/ErrorTrackingQuery"},{$ref:"#/definitions/ExperimentFunnelsQuery"},{$ref:"#/definitions/ExperimentTrendsQuery"},{$ref:"#/definitions/RecordingsQuery"},{$ref:"#/definitions/TracesQuery"}]},AnyEntityNode:{anyOf:[{$ref:"#/definitions/EventsNode"},{$ref:"#/definitions/ActionsNode"},{$ref:"#/definitions/DataWarehouseNode"}]},AnyFilterLike:{anyOf:[{$ref:"#/definitions/AnyPropertyFilter"},{$ref:"#/definitions/PropertyGroupFilter"},{$ref:"#/definitions/PropertyGroupFilterValue"}]},AnyPersonScopeFilter:{anyOf:[{$ref:"#/definitions/PersonPropertyFilter"},{$ref:"#/definitions/CohortPropertyFilter"},{$ref:"#/definitions/HogQLPropertyFilter"},{$ref:"#/definitions/EmptyPropertyFilter"}],description:'Any filter type supported by `property_to_expr(scope="person", ...)`.'},AnyPropertyFilter:{anyOf:[{$ref:"#/definitions/EventPropertyFilter"},{$ref:"#/definitions/PersonPropertyFilter"},{$ref:"#/definitions/ElementPropertyFilter"},{$ref:"#/definitions/SessionPropertyFilter"},{$ref:"#/definitions/CohortPropertyFilter"},{$ref:"#/definitions/RecordingPropertyFilter"},{$ref:"#/definitions/LogEntryPropertyFilter"},{$ref:"#/definitions/GroupPropertyFilter"},{$ref:"#/definitions/FeaturePropertyFilter"},{$ref:"#/definitions/HogQLPropertyFilter"},{$ref:"#/definitions/EmptyPropertyFilter"},{$ref:"#/definitions/DataWarehousePropertyFilter"},{$ref:"#/definitions/DataWarehousePersonPropertyFilter"}]},AnyResponseType:{anyOf:[{type:"object"},{$ref:"#/definitions/HogQueryResponse"},{$ref:"#/definitions/HogQLQueryResponse"},{$ref:"#/definitions/HogQLMetadataResponse"},{$ref:"#/definitions/HogQLAutocompleteResponse"},{type:"object"},{not:{}},{$ref:"#/definitions/EventsQueryResponse"},{$ref:"#/definitions/ErrorTrackingQueryResponse"}]},AssistantArrayPropertyFilter:{additionalProperties:!1,properties:{operator:{$ref:"#/definitions/AssistantArrayPropertyFilterOperator",description:"`exact` - exact match of any of the values. `is_not` - does not match any of the values."},value:{description:'Only use property values from the plan. Always use strings as values. If you have a number, convert it to a string first. If you have a boolean, convert it to a string "true" or "false".',items:{type:"string"},type:"array"}},required:["operator","value"],type:"object"},AssistantArrayPropertyFilterOperator:{enum:["exact","is_not"],type:"string"},AssistantBaseMultipleBreakdownFilter:{additionalProperties:!1,properties:{property:{description:"Property name from the plan to break down by.",type:"string"}},required:["property"],type:"object"},AssistantBasePropertyFilter:{anyOf:[{$ref:"#/definitions/AssistantStringNumberOrBooleanPropertyFilter"},{$ref:"#/definitions/AssistantDateTimePropertyFilter"},{$ref:"#/definitions/AssistantSetPropertyFilter"}]},AssistantBreakdownFilter:{additionalProperties:!1,properties:{breakdown_limit:{$ref:"#/definitions/integer",default:25,description:"How many distinct values to show."}},type:"object"},AssistantDateTimePropertyFilter:{additionalProperties:!1,properties:{operator:{$ref:"#/definitions/AssistantDateTimePropertyFilterOperator"},value:{description:"Value must be a date in ISO 8601 format.",type:"string"}},required:["operator","value"],type:"object"},AssistantDateTimePropertyFilterOperator:{enum:["is_date_exact","is_date_before","is_date_after"],type:"string"},AssistantEventMultipleBreakdownFilterType:{enum:["person","event","session","hogql"],type:"string"},AssistantEventType:{enum:["status","message","conversation"],type:"string"},AssistantForm:{additionalProperties:!1,properties:{options:{items:{$ref:"#/definitions/AssistantFormOption"},type:"array"}},required:["options"],type:"object"},AssistantFormOption:{additionalProperties:!1,properties:{value:{type:"string"},variant:{type:"string"}},required:["value"],type:"object"},AssistantFunnelsBreakdownFilter:{additionalProperties:!1,properties:{breakdown:{description:"The entity property to break down by.",type:"string"},breakdown_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"If `breakdown_type` is `group`, this is the index of the group. Use the index from the group mapping."},breakdown_limit:{$ref:"#/definitions/integer",default:25,description:"How many distinct values to show."},breakdown_type:{$ref:"#/definitions/AssistantFunnelsBreakdownType",default:"event",description:"Type of the entity to break down by. If `group` is used, you must also provide `breakdown_group_type_index` from the group mapping."}},required:["breakdown_type","breakdown"],type:"object"},AssistantFunnelsBreakdownType:{enum:["person","event","group","session"],type:"string"},AssistantFunnelsEventsNode:{additionalProperties:!1,properties:{custom_name:{description:"Optional custom name for the event if it is needed to be renamed.",type:"string"},event:{description:"Name of the event.",type:"string"},kind:{const:"EventsNode",type:"string"},math:{$ref:"#/definitions/AssistantTrendsMath",description:"Optional math aggregation type for the series. Only specify this math type if the user wants one of these. `first_time_for_user` - counts the number of users who have completed the event for the first time ever. `first_time_for_user_with_filters` - counts the number of users who have completed the event with specified filters for the first time."},properties:{items:{$ref:"#/definitions/AssistantPropertyFilter"},type:"array"},response:{type:"object"}},required:["event","kind"],type:"object"},AssistantFunnelsExclusionEventsNode:{additionalProperties:!1,description:`Exclustion steps for funnels. The "from" and "to" steps must not exceed the funnel's series length.`,properties:{event:{type:"string"},funnelFromStep:{$ref:"#/definitions/integer"},funnelToStep:{$ref:"#/definitions/integer"},kind:{const:"EventsNode",type:"string"}},required:["event","funnelFromStep","funnelToStep","kind"],type:"object"},AssistantFunnelsFilter:{additionalProperties:!1,properties:{binCount:{description:"Use this setting only when `funnelVizType` is `time_to_convert`: number of bins to show in histogram.",type:"integer"},exclusions:{default:[],description:"Users may want to use exclusion events to filter out conversions in which a particular event occurred between specific steps. These events must not be included in the main sequence. You must include start and end indexes for each exclusion where the minimum index is one and the maximum index is the number of steps in the funnel. For example, there is a sequence with three steps: sign up, finish onboarding, purchase. If the user wants to exclude all conversions in which users left the page before finishing the onboarding, the exclusion step would be the event `$pageleave` with start index 2 and end index 3.",items:{$ref:"#/definitions/AssistantFunnelsExclusionEventsNode"},type:"array"},funnelAggregateByHogQL:{const:"properties.$session_id",description:"Use this field only if the user explicitly asks to aggregate the funnel by unique sessions.",type:"string"},funnelOrderType:{$ref:"#/definitions/StepOrderValue",default:"ordered",description:"Defines the behavior of event matching between steps. Prefer the `strict` option unless explicitly told to use a different one. `ordered` - defines a sequential funnel. Step B must happen after Step A, but any number of events can happen between A and B. `strict` - defines a funnel where all events must happen in order. Step B must happen directly after Step A without any events in between. `any` - order doesn't matter. Steps can be completed in any sequence."},funnelStepReference:{$ref:"#/definitions/FunnelStepReference",default:"total",description:"Whether conversion shown in the graph should be across all steps or just relative to the previous step."},funnelVizType:{$ref:"#/definitions/FunnelVizType",default:"steps",description:"Defines the type of visualization to use. The `steps` option is recommended. `steps` - shows a step-by-step funnel. Perfect to show a conversion rate of a sequence of events (default). `time_to_convert` - shows a histogram of the time it took to complete the funnel. `trends` - shows trends of the conversion rate of the whole sequence over time."},funnelWindowInterval:{$ref:"#/definitions/integer",default:14,description:"Controls a time frame value for a conversion to be considered. Select a reasonable value based on the user's query. Use in combination with `funnelWindowIntervalUnit`. The default value is 14 days."},funnelWindowIntervalUnit:{$ref:"#/definitions/FunnelConversionWindowTimeUnit",default:"day",description:"Controls a time frame interval for a conversion to be considered. Select a reasonable value based on the user's query. Use in combination with `funnelWindowInterval`. The default value is 14 days."},layout:{$ref:"#/definitions/FunnelLayout",default:"vertical",description:"Controls how the funnel chart is displayed: vertically (preferred) or horizontally."}},type:"object"},AssistantFunnelsQuery:{additionalProperties:!1,properties:{aggregation_group_type_index:{$ref:"#/definitions/integer",description:"Use this field to define the aggregation by a specific group from the group mapping that the user has provided."},breakdownFilter:{$ref:"#/definitions/AssistantFunnelsBreakdownFilter",description:"Breakdown the chart by a property"},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},funnelsFilter:{$ref:"#/definitions/AssistantFunnelsFilter",description:"Properties specific to the funnels insight"},interval:{$ref:"#/definitions/IntervalType",description:"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`"},kind:{const:"FunnelsQuery",type:"string"},properties:{default:[],description:"Property filters for all series",items:{$ref:"#/definitions/AssistantPropertyFilter"},type:"array"},samplingFactor:{description:"Sampling rate from 0 to 1 where 1 is 100% of the data.",type:["number","null"]},series:{description:"Events to include",items:{$ref:"#/definitions/AssistantFunnelsEventsNode"},type:"array"}},required:["kind","series"],type:"object"},AssistantGenerationStatusEvent:{additionalProperties:!1,properties:{type:{$ref:"#/definitions/AssistantGenerationStatusType"}},required:["type"],type:"object"},AssistantGenerationStatusType:{enum:["ack","generation_error"],type:"string"},AssistantGenericMultipleBreakdownFilter:{additionalProperties:!1,properties:{property:{description:"Property name from the plan to break down by.",type:"string"},type:{$ref:"#/definitions/AssistantEventMultipleBreakdownFilterType"}},required:["property","type"],type:"object"},AssistantGenericPropertyFilter:{anyOf:[{additionalProperties:!1,properties:{key:{description:"Use one of the properties the user has provided in the plan.",type:"string"},operator:{$ref:"#/definitions/AssistantSingleValuePropertyFilterOperator",description:"`icontains` - case insensitive contains. `not_icontains` - case insensitive does not contain. `regex` - matches the regex pattern. `not_regex` - does not match the regex pattern."},type:{anyOf:[{const:"event",description:"Event properties",type:"string"},{const:"person",description:"Person properties",type:"string"},{const:"session",type:"string"},{const:"feature",description:'Event property with "$feature/" prepended',type:"string"}]},value:{description:"Only use property values from the plan. If the operator is `regex` or `not_regex`, the value must be a valid ClickHouse regex pattern to match against. Otherwise, the value must be a substring that will be matched against the property value.",type:"string"}},required:["key","operator","type","value"],type:"object"},{additionalProperties:!1,properties:{key:{description:"Use one of the properties the user has provided in the plan.",type:"string"},operator:{$ref:"#/definitions/AssistantArrayPropertyFilterOperator",description:"`exact` - exact match of any of the values. `is_not` - does not match any of the values."},type:{anyOf:[{const:"event",description:"Event properties",type:"string"},{const:"person",description:"Person properties",type:"string"},{const:"session",type:"string"},{const:"feature",description:'Event property with "$feature/" prepended',type:"string"}]},value:{description:'Only use property values from the plan. Always use strings as values. If you have a number, convert it to a string first. If you have a boolean, convert it to a string "true" or "false".',items:{type:"string"},type:"array"}},required:["key","operator","type","value"],type:"object"},{additionalProperties:!1,properties:{key:{description:"Use one of the properties the user has provided in the plan.",type:"string"},operator:{$ref:"#/definitions/AssistantDateTimePropertyFilterOperator"},type:{anyOf:[{const:"event",description:"Event properties",type:"string"},{const:"person",description:"Person properties",type:"string"},{const:"session",type:"string"},{const:"feature",description:'Event property with "$feature/" prepended',type:"string"}]},value:{description:"Value must be a date in ISO 8601 format.",type:"string"}},required:["key","operator","type","value"],type:"object"},{additionalProperties:!1,properties:{key:{description:"Use one of the properties the user has provided in the plan.",type:"string"},operator:{$ref:"#/definitions/AssistantSetPropertyFilterOperator",description:"`is_set` - the property has any value. `is_not_set` - the property doesn't have a value or wasn't collected."},type:{anyOf:[{const:"event",description:"Event properties",type:"string"},{const:"person",description:"Person properties",type:"string"},{const:"session",type:"string"},{const:"feature",description:'Event property with "$feature/" prepended',type:"string"}]}},required:["key","operator","type"],type:"object"}]},AssistantGroupMultipleBreakdownFilter:{additionalProperties:!1,properties:{group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Index of the group type from the group mapping."},property:{description:"Property name from the plan to break down by.",type:"string"},type:{const:"group",type:"string"}},required:["property","type"],type:"object"},AssistantGroupPropertyFilter:{anyOf:[{additionalProperties:!1,properties:{group_type_index:{$ref:"#/definitions/integer",description:"Index of the group type from the group mapping."},key:{description:"Use one of the properties the user has provided in the plan.",type:"string"},operator:{$ref:"#/definitions/AssistantSingleValuePropertyFilterOperator",description:"`icontains` - case insensitive contains. `not_icontains` - case insensitive does not contain. `regex` - matches the regex pattern. `not_regex` - does not match the regex pattern."},type:{const:"group",type:"string"},value:{description:"Only use property values from the plan. If the operator is `regex` or `not_regex`, the value must be a valid ClickHouse regex pattern to match against. Otherwise, the value must be a substring that will be matched against the property value.",type:"string"}},required:["group_type_index","key","operator","type","value"],type:"object"},{additionalProperties:!1,properties:{group_type_index:{$ref:"#/definitions/integer",description:"Index of the group type from the group mapping."},key:{description:"Use one of the properties the user has provided in the plan.",type:"string"},operator:{$ref:"#/definitions/AssistantArrayPropertyFilterOperator",description:"`exact` - exact match of any of the values. `is_not` - does not match any of the values."},type:{const:"group",type:"string"},value:{description:'Only use property values from the plan. Always use strings as values. If you have a number, convert it to a string first. If you have a boolean, convert it to a string "true" or "false".',items:{type:"string"},type:"array"}},required:["group_type_index","key","operator","type","value"],type:"object"},{additionalProperties:!1,properties:{group_type_index:{$ref:"#/definitions/integer",description:"Index of the group type from the group mapping."},key:{description:"Use one of the properties the user has provided in the plan.",type:"string"},operator:{$ref:"#/definitions/AssistantDateTimePropertyFilterOperator"},type:{const:"group",type:"string"},value:{description:"Value must be a date in ISO 8601 format.",type:"string"}},required:["group_type_index","key","operator","type","value"],type:"object"},{additionalProperties:!1,properties:{group_type_index:{$ref:"#/definitions/integer",description:"Index of the group type from the group mapping."},key:{description:"Use one of the properties the user has provided in the plan.",type:"string"},operator:{$ref:"#/definitions/AssistantSetPropertyFilterOperator",description:"`is_set` - the property has any value. `is_not_set` - the property doesn't have a value or wasn't collected."},type:{const:"group",type:"string"}},required:["group_type_index","key","operator","type"],type:"object"}]},AssistantInsightsQueryBase:{additionalProperties:!1,properties:{dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},properties:{default:[],description:"Property filters for all series",items:{$ref:"#/definitions/AssistantPropertyFilter"},type:"array"},samplingFactor:{description:"Sampling rate from 0 to 1 where 1 is 100% of the data.",type:["number","null"]}},type:"object"},AssistantMessage:{additionalProperties:!1,properties:{content:{type:"string"},id:{type:"string"},meta:{$ref:"#/definitions/AssistantMessageMetadata"},tool_calls:{items:{$ref:"#/definitions/AssistantToolCall"},type:"array"},type:{const:"ai",type:"string"}},required:["type","content"],type:"object"},AssistantMessageMetadata:{additionalProperties:!1,properties:{form:{$ref:"#/definitions/AssistantForm"}},type:"object"},AssistantMessageType:{enum:["human","tool","ai","ai/reasoning","ai/viz","ai/failure"],type:"string"},AssistantMultipleBreakdownFilter:{anyOf:[{$ref:"#/definitions/AssistantGroupMultipleBreakdownFilter"},{$ref:"#/definitions/AssistantGenericMultipleBreakdownFilter"}]},AssistantPropertyFilter:{anyOf:[{$ref:"#/definitions/AssistantGenericPropertyFilter"},{$ref:"#/definitions/AssistantGroupPropertyFilter"}]},AssistantRetentionFilter:{additionalProperties:!1,properties:{cumulative:{description:"Whether retention should be rolling (aka unbounded, cumulative). Rolling retention means that a user coming back in period 5 makes them count towards all the previous periods.",type:"boolean"},period:{$ref:"#/definitions/RetentionPeriod",default:"Day",description:"Retention period, the interval to track cohorts by."},retentionReference:{description:"Whether retention is with regard to initial cohort size, or that of the previous period.",enum:["total","previous"],type:"string"},retentionType:{$ref:"#/definitions/RetentionType",description:"Retention type: recurring or first time. Recurring retention counts a user as part of a cohort if they performed the cohort event during that time period, irrespective of it was their first time or not. First time retention only counts a user as part of the cohort if it was their first time performing the cohort event."},returningEntity:{$ref:"#/definitions/RetentionEntity",description:"Retention event (event marking the user coming back)."},showMean:{description:"Whether an additional series should be shown, showing the mean conversion for each period across cohorts.",type:"boolean"},targetEntity:{$ref:"#/definitions/RetentionEntity",description:"Activation event (event putting the actor into the initial cohort)."},totalIntervals:{$ref:"#/definitions/integer",default:11,description:"How many intervals to show in the chart. The default value is 11 (meaning 10 periods after initial cohort)."}},type:"object"},AssistantRetentionQuery:{additionalProperties:!1,properties:{dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},kind:{const:"RetentionQuery",type:"string"},properties:{default:[],description:"Property filters for all series",items:{$ref:"#/definitions/AssistantPropertyFilter"},type:"array"},retentionFilter:{$ref:"#/definitions/AssistantRetentionFilter",description:"Properties specific to the retention insight"},samplingFactor:{description:"Sampling rate from 0 to 1 where 1 is 100% of the data.",type:["number","null"]}},required:["kind","retentionFilter"],type:"object"},AssistantSetPropertyFilter:{additionalProperties:!1,properties:{operator:{$ref:"#/definitions/AssistantSetPropertyFilterOperator",description:"`is_set` - the property has any value. `is_not_set` - the property doesn't have a value or wasn't collected."}},required:["operator"],type:"object"},AssistantSetPropertyFilterOperator:{enum:["is_set","is_not_set"],type:"string"},AssistantSingleValuePropertyFilter:{additionalProperties:!1,properties:{operator:{$ref:"#/definitions/AssistantSingleValuePropertyFilterOperator",description:"`icontains` - case insensitive contains. `not_icontains` - case insensitive does not contain. `regex` - matches the regex pattern. `not_regex` - does not match the regex pattern."},value:{description:"Only use property values from the plan. If the operator is `regex` or `not_regex`, the value must be a valid ClickHouse regex pattern to match against. Otherwise, the value must be a substring that will be matched against the property value.",type:"string"}},required:["operator","value"],type:"object"},AssistantSingleValuePropertyFilterOperator:{enum:["exact","is_not","icontains","not_icontains","regex","not_regex"],type:"string"},AssistantStringNumberOrBooleanPropertyFilter:{anyOf:[{$ref:"#/definitions/AssistantSingleValuePropertyFilter"},{$ref:"#/definitions/AssistantArrayPropertyFilter"}]},AssistantToolCall:{additionalProperties:!1,properties:{args:{additionalProperties:{},type:"object"},id:{type:"string"},name:{type:"string"}},required:["id","name","args"],type:"object"},AssistantToolCallMessage:{additionalProperties:!1,properties:{content:{type:"string"},id:{type:"string"},tool_call_id:{type:"string"},type:{const:"tool",type:"string"}},required:["type","content","tool_call_id"],type:"object"},AssistantTrendsBreakdownFilter:{additionalProperties:!1,properties:{breakdown_limit:{$ref:"#/definitions/integer",default:25,description:"How many distinct values to show."},breakdowns:{description:"Use this field to define breakdowns.",items:{$ref:"#/definitions/AssistantMultipleBreakdownFilter"},maxLength:3,type:"array"}},required:["breakdowns"],type:"object"},AssistantTrendsDisplayType:{anyOf:[{const:"ActionsLineGraph",type:"string"},{const:"ActionsBar",type:"string"},{const:"ActionsAreaGraph",type:"string"},{const:"ActionsLineGraphCumulative",type:"string"},{const:"BoldNumber",type:"string"},{const:"ActionsPie",type:"string"},{const:"ActionsBarValue",type:"string"},{const:"ActionsTable",type:"string"},{const:"WorldMap",type:"string"},{not:{}}]},AssistantTrendsEventsNode:{additionalProperties:!1,properties:{custom_name:{type:"string"},event:{description:"The event or `null` for all events.",type:["string","null"]},kind:{const:"EventsNode",type:"string"},math:{$ref:"#/definitions/MathType"},math_group_type_index:{enum:[0,1,2,3,4],type:"number"},math_property:{type:"string"},math_property_type:{type:"string"},name:{type:"string"},orderBy:{description:"Columns to order by",items:{type:"string"},type:"array"},properties:{items:{$ref:"#/definitions/AssistantPropertyFilter"},type:"array"},response:{type:"object"}},required:["kind"],type:"object"},AssistantTrendsFilter:{additionalProperties:!1,properties:{aggregationAxisFormat:{$ref:"#/definitions/AggregationAxisFormat",default:"numeric",description:"Formats the trends value axis. Do not use the formatting unless you are absolutely sure that formatting will match the data. `numeric` - no formatting. Prefer this option by default. `duration` - formats the value in seconds to a human-readable duration, e.g., `132` becomes `2 minutes 12 seconds`. Use this option only if you are sure that the values are in seconds. `duration_ms` - formats the value in miliseconds to a human-readable duration, e.g., `1050` becomes `1 second 50 milliseconds`. Use this option only if you are sure that the values are in miliseconds. `percentage` - adds a percentage sign to the value, e.g., `50` becomes `50%`. `percentage_scaled` - formats the value as a percentage scaled to 0-100, e.g., `0.5` becomes `50%`."},aggregationAxisPostfix:{description:"Custom postfix to add to the aggregation axis, e.g., ` clicks` to format 5 as `5 clicks`. You may need to add a space before postfix.",type:"string"},aggregationAxisPrefix:{description:"Custom prefix to add to the aggregation axis, e.g., `$` for USD dollars. You may need to add a space after prefix.",type:"string"},decimalPlaces:{description:"Number of decimal places to show. Do not add this unless you are sure that values will have a decimal point.",type:"number"},display:{default:"ActionsLineGraph",description:"Visualization type. Available values: `ActionsLineGraph` - time-series line chart; most common option, as it shows change over time. `ActionsBar` - time-series bar chart. `ActionsAreaGraph` - time-series area chart. `ActionsLineGraphCumulative` - cumulative time-series line chart; good for cumulative metrics. `BoldNumber` - total value single large number. You can't use this with breakdown or with multiple series; use when user explicitly asks for a single output number. `ActionsBarValue` - total value (NOT time-series) bar chart; good for categorical data. `ActionsPie` - total value pie chart; good for visualizing proportions. `ActionsTable` - total value table; good when using breakdown to list users or other entities. `WorldMap` - total value world map; use when breaking down by country name using property `$geoip_country_name`, and only then.",enum:["ActionsLineGraph","ActionsBar","ActionsAreaGraph","ActionsLineGraphCumulative","BoldNumber","ActionsPie","ActionsBarValue","ActionsTable","WorldMap"],type:"string"},formulas:{description:"If the formula is provided, apply it here.",items:{type:"string"},type:"array"},showLegend:{default:!1,description:"Whether to show the legend describing series and breakdowns.",type:"boolean"},showPercentStackView:{default:!1,description:"Whether to show a percentage of each series. Use only with",type:"boolean"},showValuesOnSeries:{default:!1,description:"Whether to show a value on each data point.",type:"boolean"},yAxisScaleType:{default:"linear",description:"Whether to scale the y-axis.",enum:["log10","linear"],type:"string"}},type:"object"},AssistantTrendsMath:{enum:["first_time_for_user","first_time_for_user_with_filters"],type:"string"},AssistantTrendsQuery:{additionalProperties:!1,properties:{breakdownFilter:{$ref:"#/definitions/AssistantTrendsBreakdownFilter",description:"Breakdown of the events"},compareFilter:{$ref:"#/definitions/CompareFilter",description:"Compare to date range"},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},interval:{$ref:"#/definitions/IntervalType",default:"day",description:"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`"},kind:{const:"TrendsQuery",type:"string"},properties:{default:[],description:"Property filters for all series",items:{$ref:"#/definitions/AssistantPropertyFilter"},type:"array"},samplingFactor:{description:"Sampling rate from 0 to 1 where 1 is 100% of the data.",type:["number","null"]},series:{description:"Events to include",items:{$ref:"#/definitions/AssistantTrendsEventsNode"},type:"array"},trendsFilter:{$ref:"#/definitions/AssistantTrendsFilter",description:"Properties specific to the trends insight"}},required:["kind","series"],type:"object"},AutocompleteCompletionItem:{additionalProperties:!1,properties:{detail:{description:"A human-readable string with additional information about this item, like type or symbol information.",type:"string"},documentation:{description:"A human-readable string that represents a doc-comment.",type:"string"},insertText:{description:"A string or snippet that should be inserted in a document when selecting this completion.",type:"string"},kind:{$ref:"#/definitions/AutocompleteCompletionItemKind",description:"The kind of this completion item. Based on the kind an icon is chosen by the editor."},label:{description:"The label of this completion item. By default this is also the text that is inserted when selecting this completion.",type:"string"}},required:["label","insertText","kind"],type:"object"},AutocompleteCompletionItemKind:{enum:["Method","Function","Constructor","Field","Variable","Class","Struct","Interface","Module","Property","Event","Operator","Unit","Value","Constant","Enum","EnumMember","Keyword","Text","Color","File","Reference","Customcolor","Folder","TypeParameter","User","Issue","Snippet"],type:"string"},BaseAssistantMessage:{additionalProperties:!1,properties:{id:{type:"string"}},type:"object"},BaseMathType:{enum:["total","dau","weekly_active","monthly_active","unique_session","first_time_for_user","first_matching_event_for_user"],type:"string"},BinCountValue:{anyOf:[{type:"number"},{const:"auto",type:"string"}]},Breakdown:{additionalProperties:!1,properties:{group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}]},histogram_bin_count:{$ref:"#/definitions/integer"},normalize_url:{type:"boolean"},property:{type:"string"},type:{anyOf:[{$ref:"#/definitions/MultipleBreakdownType"},{type:"null"}]}},required:["property"],type:"object"},BreakdownAttributionType:{enum:["first_touch","last_touch","all_events","step"],type:"string"},BreakdownFilter:{additionalProperties:!1,properties:{breakdown:{anyOf:[{type:"string"},{$ref:"#/definitions/integer"},{items:{anyOf:[{type:"string"},{$ref:"#/definitions/integer"}]},type:"array"},{type:"null"}]},breakdown_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}]},breakdown_hide_other_aggregation:{type:["boolean","null"]},breakdown_histogram_bin_count:{$ref:"#/definitions/integer"},breakdown_limit:{$ref:"#/definitions/integer"},breakdown_normalize_url:{type:"boolean"},breakdown_type:{anyOf:[{$ref:"#/definitions/BreakdownType"},{type:"null"}],default:"event"},breakdowns:{items:{$ref:"#/definitions/Breakdown"},maxLength:3,type:"array"}},type:"object"},BreakdownItem:{additionalProperties:!1,properties:{label:{type:"string"},value:{anyOf:[{type:"string"},{$ref:"#/definitions/BreakdownValueInt"}]}},required:["label","value"],type:"object"},BreakdownKeyType:{anyOf:[{type:"integer"},{type:"string"},{type:"number"},{items:{anyOf:[{type:"integer"},{type:"string"},{type:"number"}]},type:"array"},{type:"null"}]},BreakdownType:{enum:["cohort","person","event","group","session","hogql","data_warehouse","data_warehouse_person_property"],type:"string"},BreakdownValueInt:{$ref:"#/definitions/integer"},CacheMissResponse:{additionalProperties:!1,properties:{cache_key:{type:["string","null"]},query_status:{$ref:"#/definitions/QueryStatus"}},required:["cache_key"],type:"object"},CachedActorsPropertyTaxonomyQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/ActorsPropertyTaxonomyResponse"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedActorsQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},limit:{$ref:"#/definitions/integer"},missing_actors_count:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{items:{},type:"array"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{type:"string"},type:"array"}},required:["cache_key","columns","hogql","is_cached","last_refresh","limit","next_allowed_client_refresh","offset","results","timezone","types"],type:"object"},CachedErrorTrackingQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},columns:{items:{type:"string"},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/ErrorTrackingIssue"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedEventTaxonomyQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/EventTaxonomyResponse"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedEventsQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{items:{},type:"array"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{type:"string"},type:"array"}},required:["cache_key","columns","hogql","is_cached","last_refresh","next_allowed_client_refresh","results","timezone","types"],type:"object"},CachedExperimentExposureQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},date_range:{$ref:"#/definitions/DateRange"},is_cached:{type:"boolean"},kind:{const:"ExperimentExposureQuery",type:"string"},last_refresh:{format:"date-time",type:"string"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},timeseries:{items:{$ref:"#/definitions/ExperimentExposureTimeSeries"},type:"array"},timezone:{type:"string"},total_exposures:{additionalProperties:{type:"number"},type:"object"}},required:["cache_key","date_range","is_cached","kind","last_refresh","next_allowed_client_refresh","timeseries","timezone","total_exposures"],type:"object"},CachedExperimentFunnelsQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},expected_loss:{type:"number"},funnels_query:{$ref:"#/definitions/FunnelsQuery"},insight:{items:{items:{type:"object"},type:"array"},type:"array"},is_cached:{type:"boolean"},kind:{const:"ExperimentFunnelsQuery",type:"string"},last_refresh:{format:"date-time",type:"string"},next_allowed_client_refresh:{format:"date-time",type:"string"},probability:{additionalProperties:{type:"number"},type:"object"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},timezone:{type:"string"},variants:{items:{$ref:"#/definitions/ExperimentVariantFunnelsBaseStats"},type:"array"}},required:["cache_key","credible_intervals","expected_loss","insight","is_cached","kind","last_refresh","next_allowed_client_refresh","probability","significance_code","significant","timezone","variants"],type:"object"},CachedExperimentQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},insight:{items:{type:"object"},type:"array"},is_cached:{type:"boolean"},kind:{const:"ExperimentQuery",type:"string"},last_refresh:{format:"date-time",type:"string"},metric:{$ref:"#/definitions/ExperimentMetric"},next_allowed_client_refresh:{format:"date-time",type:"string"},p_value:{type:"number"},probability:{additionalProperties:{type:"number"},type:"object"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},timezone:{type:"string"},variants:{anyOf:[{items:{$ref:"#/definitions/ExperimentVariantTrendsBaseStats"},type:"array"},{items:{$ref:"#/definitions/ExperimentVariantFunnelsBaseStats"},type:"array"}]}},required:["cache_key","credible_intervals","insight","is_cached","kind","last_refresh","metric","next_allowed_client_refresh","p_value","probability","significance_code","significant","timezone","variants"],type:"object"},CachedExperimentTrendsQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},count_query:{$ref:"#/definitions/TrendsQuery"},credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},exposure_query:{$ref:"#/definitions/TrendsQuery"},insight:{items:{type:"object"},type:"array"},is_cached:{type:"boolean"},kind:{const:"ExperimentTrendsQuery",type:"string"},last_refresh:{format:"date-time",type:"string"},next_allowed_client_refresh:{format:"date-time",type:"string"},p_value:{type:"number"},probability:{additionalProperties:{type:"number"},type:"object"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},timezone:{type:"string"},variants:{items:{$ref:"#/definitions/ExperimentVariantTrendsBaseStats"},type:"array"}},required:["cache_key","credible_intervals","insight","is_cached","kind","last_refresh","next_allowed_client_refresh","p_value","probability","significance_code","significant","timezone","variants"],type:"object"},CachedFunnelCorrelationResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/FunnelCorrelationResult"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedFunnelsQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},isUdf:{type:"boolean"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{anyOf:[{$ref:"#/definitions/FunnelStepsResults"},{$ref:"#/definitions/FunnelStepsBreakdownResults"},{$ref:"#/definitions/FunnelTimeToConvertResults"},{$ref:"#/definitions/FunnelTrendsResults"}]},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedHogQLQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},clickhouse:{description:"Executed ClickHouse query",type:"string"},columns:{description:"Returned columns",items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},explain:{description:"Query explanation output",items:{type:"string"},type:"array"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},limit:{$ref:"#/definitions/integer"},metadata:{$ref:"#/definitions/HogQLMetadataResponse",description:"Query metadata output"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},offset:{$ref:"#/definitions/integer"},query:{description:"Input query string",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{description:"Types of returned columns",items:{},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedInsightActorsQueryOptionsResponse:{additionalProperties:!1,properties:{breakdown:{items:{$ref:"#/definitions/BreakdownItem"},type:"array"},breakdowns:{items:{$ref:"#/definitions/MultipleBreakdownOptions"},type:"array"},cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},compare:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{type:"string"}},required:["label","value"],type:"object"},type:"array"},day:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{anyOf:[{type:"string"},{$ref:"#/definitions/DatetimeDay"},{$ref:"#/definitions/Day"}]}},required:["label","value"],type:"object"},type:"array"},interval:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{$ref:"#/definitions/integer",description:"An interval selected out of available intervals in source query"}},required:["label","value"],type:"object"},type:"array"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},series:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{$ref:"#/definitions/integer"}},required:["label","value"],type:"object"},type:"array"},status:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{type:"string"}},required:["label","value"],type:"object"},type:"array"},timezone:{type:"string"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","timezone"],type:"object"},CachedLifecycleQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{type:"object"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedPathsQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/PathsLink"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedRetentionQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/RetentionResult"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedSessionAttributionExplorerQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedSessionsTimelineQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/TimelineEntry"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedStickinessQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{type:"object"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedSuggestedQuestionsQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},questions:{items:{type:"string"},type:"array"},timezone:{type:"string"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","questions","timezone"],type:"object"},CachedTeamTaxonomyQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/TeamTaxonomyResponse"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedTracesQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},columns:{items:{type:"string"},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/LLMTrace"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedTrendsQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{description:"Wether more breakdown values are available.",type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{type:"object"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedWebExternalClicksTableQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedWebGoalsQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedWebOverviewQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},dateFrom:{type:"string"},dateTo:{type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebOverviewItem"},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedWebStatsTableQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedWebVitalsPathBreakdownQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebVitalsPathBreakdownResult"},maxItems:1,minItems:1,type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},CachedWebVitalsQueryResponse:{additionalProperties:!1,properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebVitalsItem"},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},ChartAxis:{additionalProperties:!1,properties:{column:{type:"string"},settings:{additionalProperties:!1,properties:{display:{$ref:"#/definitions/ChartSettingsDisplay"},formatting:{$ref:"#/definitions/ChartSettingsFormatting"}},type:"object"}},required:["column"],type:"object"},ChartDisplayCategory:{enum:["TimeSeries","CumulativeTimeSeries","TotalValue"],type:"string"},ChartDisplayType:{enum:["ActionsLineGraph","ActionsBar","ActionsStackedBar","ActionsAreaGraph","ActionsLineGraphCumulative","BoldNumber","ActionsPie","ActionsBarValue","ActionsTable","WorldMap"],type:"string"},ChartSettings:{additionalProperties:!1,properties:{goalLines:{items:{$ref:"#/definitions/GoalLine"},type:"array"},leftYAxisSettings:{$ref:"#/definitions/YAxisSettings"},rightYAxisSettings:{$ref:"#/definitions/YAxisSettings"},seriesBreakdownColumn:{type:["string","null"]},showLegend:{type:"boolean"},stackBars100:{description:"Whether we fill the bars to 100% in stacked mode",type:"boolean"},xAxis:{$ref:"#/definitions/ChartAxis"},yAxis:{items:{$ref:"#/definitions/ChartAxis"},type:"array"},yAxisAtZero:{description:"Deprecated: use `[left|right]YAxisSettings`. Whether the Y axis should start at zero",type:"boolean"}},type:"object"},ChartSettingsDisplay:{additionalProperties:!1,properties:{color:{type:"string"},displayType:{enum:["auto","line","bar"],type:"string"},label:{type:"string"},trendLine:{type:"boolean"},yAxisPosition:{enum:["left","right"],type:"string"}},type:"object"},ChartSettingsFormatting:{additionalProperties:!1,properties:{decimalPlaces:{type:"number"},prefix:{type:"string"},style:{enum:["none","number","percent"],type:"string"},suffix:{type:"string"}},type:"object"},ClickhouseQueryProgress:{additionalProperties:!1,properties:{active_cpu_time:{$ref:"#/definitions/integer"},bytes_read:{$ref:"#/definitions/integer"},estimated_rows_total:{$ref:"#/definitions/integer"},rows_read:{$ref:"#/definitions/integer"},time_elapsed:{$ref:"#/definitions/integer"}},required:["bytes_read","rows_read","estimated_rows_total","time_elapsed","active_cpu_time"],type:"object"},CohortPropertyFilter:{additionalProperties:!1,description:"Sync with plugin-server/src/types.ts",properties:{cohort_name:{type:"string"},key:{const:"id",type:"string"},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator",default:"in"},type:{const:"cohort",type:"string"},value:{type:"integer"}},required:["key","operator","type","value"],type:"object"},CompareFilter:{additionalProperties:!1,properties:{compare:{default:!1,description:"Whether to compare the current date range to a previous date range.",type:"boolean"},compare_to:{description:"The date range to compare to. The value is a relative date. Examples of relative dates are: `-1y` for 1 year ago, `-14m` for 14 months ago, `-100w` for 100 weeks ago, `-14d` for 14 days ago, `-30h` for 30 hours ago.",type:"string"}},type:"object"},ConditionalFormattingRule:{additionalProperties:!1,properties:{bytecode:{items:{},type:"array"},color:{type:"string"},colorMode:{enum:["light","dark"],type:"string"},columnName:{type:"string"},id:{type:"string"},input:{type:"string"},templateId:{type:"string"}},required:["id","templateId","columnName","bytecode","input","color"],type:"object"},CountPerActorMathType:{enum:["avg_count_per_actor","min_count_per_actor","max_count_per_actor","median_count_per_actor","p75_count_per_actor","p90_count_per_actor","p95_count_per_actor","p99_count_per_actor"],type:"string"},CustomChannelCondition:{additionalProperties:!1,properties:{id:{type:"string"},key:{$ref:"#/definitions/CustomChannelField"},op:{$ref:"#/definitions/CustomChannelOperator"},value:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}]}},required:["key","op","id"],type:"object"},CustomChannelField:{enum:["utm_source","utm_medium","utm_campaign","referring_domain","url","pathname","hostname"],type:"string"},CustomChannelOperator:{enum:["exact","is_not","is_set","is_not_set","icontains","not_icontains","regex","not_regex"],type:"string"},CustomChannelRule:{additionalProperties:!1,properties:{channel_type:{type:"string"},combiner:{$ref:"#/definitions/FilterLogicalOperator"},id:{type:"string"},items:{items:{$ref:"#/definitions/CustomChannelCondition"},type:"array"}},required:["items","combiner","channel_type","id"],type:"object"},CustomEventConversionGoal:{additionalProperties:!1,properties:{customEventName:{type:"string"}},required:["customEventName"],type:"object"},DashboardFilter:{additionalProperties:!1,properties:{breakdown_filter:{anyOf:[{$ref:"#/definitions/BreakdownFilter"},{type:"null"}]},date_from:{type:["string","null"]},date_to:{type:["string","null"]},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{type:"null"}]}},type:"object"},DataColorToken:{enum:["preset-1","preset-2","preset-3","preset-4","preset-5","preset-6","preset-7","preset-8","preset-9","preset-10","preset-11","preset-12","preset-13","preset-14","preset-15"],type:"string"},DataTableNode:{additionalProperties:!1,properties:{allowSorting:{description:"Can the user click on column headers to sort the table? (default: true)",type:"boolean"},columns:{description:"Columns shown in the table, unless the `source` provides them.",items:{$ref:"#/definitions/HogQLExpression"},type:"array"},embedded:{description:"Uses the embedded version of LemonTable",type:"boolean"},expandable:{description:"Can expand row to show raw event data (default: true)",type:"boolean"},full:{description:"Show with most visual options enabled. Used in scenes.",type:"boolean"},hiddenColumns:{description:"Columns that aren't shown in the table, even if in columns or returned data",items:{$ref:"#/definitions/HogQLExpression"},type:"array"},kind:{const:"DataTableNode",type:"string"},propertiesViaUrl:{description:"Link properties via the URL (default: false)",type:"boolean"},response:{anyOf:[{properties:{},type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{items:{},type:"array"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{type:"string"},type:"array"}},required:["columns","hogql","results","types"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},missing_actors_count:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{items:{},type:"array"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{type:"string"},type:"array"}},required:["columns","hogql","limit","offset","results","types"],type:"object"},{additionalProperties:!1,properties:{clickhouse:{description:"Executed ClickHouse query",type:"string"},columns:{description:"Returned columns",items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},explain:{description:"Query explanation output",items:{type:"string"},type:"array"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},metadata:{$ref:"#/definitions/HogQLMetadataResponse",description:"Query metadata output"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query:{description:"Input query string",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{description:"Types of returned columns",items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{dateFrom:{type:"string"},dateTo:{type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebOverviewItem"},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebVitalsPathBreakdownResult"},maxItems:1,minItems:1,type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{type:"string"},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/ErrorTrackingIssue"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},expected_loss:{type:"number"},funnels_query:{$ref:"#/definitions/FunnelsQuery"},insight:{items:{items:{type:"object"},type:"array"},type:"array"},kind:{const:"ExperimentFunnelsQuery",type:"string"},probability:{additionalProperties:{type:"number"},type:"object"},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},variants:{items:{$ref:"#/definitions/ExperimentVariantFunnelsBaseStats"},type:"array"}},required:["credible_intervals","expected_loss","insight","kind","probability","significance_code","significant","variants"],type:"object"},{additionalProperties:!1,properties:{count_query:{$ref:"#/definitions/TrendsQuery"},credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},exposure_query:{$ref:"#/definitions/TrendsQuery"},insight:{items:{type:"object"},type:"array"},kind:{const:"ExperimentTrendsQuery",type:"string"},p_value:{type:"number"},probability:{additionalProperties:{type:"number"},type:"object"},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},variants:{items:{$ref:"#/definitions/ExperimentVariantTrendsBaseStats"},type:"array"}},required:["credible_intervals","insight","kind","p_value","probability","significance_code","significant","variants"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{type:"string"},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/LLMTrace"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"}]},showActions:{description:"Show the kebab menu at the end of the row",type:"boolean"},showColumnConfigurator:{description:"Show a button to configure the table's columns if possible",type:"boolean"},showDateRange:{description:"Show date range selector",type:"boolean"},showElapsedTime:{description:"Show the time it takes to run a query",type:"boolean"},showEventFilter:{description:"Include an event filter above the table (EventsNode only)",type:"boolean"},showExport:{description:"Show the export button",type:"boolean"},showHogQLEditor:{description:"Include a HogQL query editor above HogQL tables",type:"boolean"},showOpenEditorButton:{description:"Show a button to open the current query as a new insight. (default: true)",type:"boolean"},showPersistentColumnConfigurator:{description:"Show a button to configure and persist the table's default columns if possible",type:"boolean"},showPropertyFilter:{anyOf:[{type:"boolean"},{items:{$ref:"#/definitions/TaxonomicFilterGroupType"},type:"array"}],description:"Include a property filter above the table"},showReload:{description:"Show a reload button",type:"boolean"},showResultsTable:{description:"Show a results table",type:"boolean"},showSavedQueries:{description:"Shows a list of saved queries",type:"boolean"},showSearch:{description:"Include a free text search field (PersonsNode only)",type:"boolean"},showTestAccountFilters:{description:"Show filter to exclude test accounts",type:"boolean"},showTimings:{description:"Show a detailed query timing breakdown",type:"boolean"},source:{anyOf:[{$ref:"#/definitions/EventsNode"},{$ref:"#/definitions/EventsQuery"},{$ref:"#/definitions/PersonsNode"},{$ref:"#/definitions/ActorsQuery"},{$ref:"#/definitions/HogQLQuery"},{$ref:"#/definitions/WebOverviewQuery"},{$ref:"#/definitions/WebStatsTableQuery"},{$ref:"#/definitions/WebExternalClicksTableQuery"},{$ref:"#/definitions/WebGoalsQuery"},{$ref:"#/definitions/WebVitalsQuery"},{$ref:"#/definitions/WebVitalsPathBreakdownQuery"},{$ref:"#/definitions/SessionAttributionExplorerQuery"},{$ref:"#/definitions/ErrorTrackingQuery"},{$ref:"#/definitions/ExperimentFunnelsQuery"},{$ref:"#/definitions/ExperimentTrendsQuery"},{$ref:"#/definitions/TracesQuery"}],description:"Source of the events"}},required:["kind","source"],type:"object"},DataVisualizationNode:{additionalProperties:!1,properties:{chartSettings:{$ref:"#/definitions/ChartSettings"},display:{$ref:"#/definitions/ChartDisplayType"},kind:{const:"DataVisualizationNode",type:"string"},source:{$ref:"#/definitions/HogQLQuery"},tableSettings:{$ref:"#/definitions/TableSettings"}},required:["kind","source"],type:"object"},DataWarehouseEventsModifier:{additionalProperties:!1,properties:{distinct_id_field:{type:"string"},id_field:{type:"string"},table_name:{type:"string"},timestamp_field:{type:"string"}},required:["table_name","timestamp_field","distinct_id_field","id_field"],type:"object"},DataWarehouseNode:{additionalProperties:!1,properties:{custom_name:{type:"string"},distinct_id_field:{type:"string"},fixedProperties:{description:"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},id:{type:"string"},id_field:{type:"string"},kind:{const:"DataWarehouseNode",type:"string"},math:{$ref:"#/definitions/MathType"},math_group_type_index:{enum:[0,1,2,3,4],type:"number"},math_hogql:{type:"string"},math_property:{type:"string"},math_property_type:{type:"string"},name:{type:"string"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},response:{type:"object"},table_name:{type:"string"},timestamp_field:{type:"string"}},required:["distinct_id_field","id","id_field","kind","table_name","timestamp_field"],type:"object"},DataWarehousePersonPropertyFilter:{additionalProperties:!1,properties:{key:{type:"string"},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator"},type:{const:"data_warehouse_person_property",type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","operator","type"],type:"object"},DataWarehousePropertyFilter:{additionalProperties:!1,properties:{key:{type:"string"},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator"},type:{const:"data_warehouse",type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","operator","type"],type:"object"},DatabaseSchemaBatchExportTable:{additionalProperties:!1,properties:{fields:{additionalProperties:{$ref:"#/definitions/DatabaseSchemaField"},type:"object"},id:{type:"string"},name:{type:"string"},type:{const:"batch_export",type:"string"}},required:["fields","id","name","type"],type:"object"},DatabaseSchemaDataWarehouseTable:{additionalProperties:!1,properties:{fields:{additionalProperties:{$ref:"#/definitions/DatabaseSchemaField"},type:"object"},format:{type:"string"},id:{type:"string"},name:{type:"string"},schema:{$ref:"#/definitions/DatabaseSchemaSchema"},source:{$ref:"#/definitions/DatabaseSchemaSource"},type:{const:"data_warehouse",type:"string"},url_pattern:{type:"string"}},required:["fields","format","id","name","type","url_pattern"],type:"object"},DatabaseSchemaField:{additionalProperties:!1,properties:{chain:{items:{anyOf:[{type:"string"},{$ref:"#/definitions/integer"}]},type:"array"},fields:{items:{type:"string"},type:"array"},hogql_value:{type:"string"},id:{type:"string"},name:{type:"string"},schema_valid:{type:"boolean"},table:{type:"string"},type:{$ref:"#/definitions/DatabaseSerializedFieldType"}},required:["name","hogql_value","type","schema_valid"],type:"object"},DatabaseSchemaMaterializedViewTable:{additionalProperties:!1,properties:{fields:{additionalProperties:{$ref:"#/definitions/DatabaseSchemaField"},type:"object"},id:{type:"string"},last_run_at:{type:"string"},name:{type:"string"},query:{$ref:"#/definitions/HogQLQuery"},status:{type:"string"},type:{const:"materialized_view",type:"string"}},required:["fields","id","name","query","type"],type:"object"},DatabaseSchemaPostHogTable:{additionalProperties:!1,properties:{fields:{additionalProperties:{$ref:"#/definitions/DatabaseSchemaField"},type:"object"},id:{type:"string"},name:{type:"string"},type:{const:"posthog",type:"string"}},required:["fields","id","name","type"],type:"object"},DatabaseSchemaQuery:{additionalProperties:!1,properties:{kind:{const:"DatabaseSchemaQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},response:{$ref:"#/definitions/DatabaseSchemaQueryResponse"}},required:["kind"],type:"object"},DatabaseSchemaQueryResponse:{additionalProperties:!1,properties:{tables:{additionalProperties:{$ref:"#/definitions/DatabaseSchemaTable"},type:"object"}},required:["tables"],type:"object"},DatabaseSchemaSchema:{additionalProperties:!1,properties:{id:{type:"string"},incremental:{type:"boolean"},last_synced_at:{type:"string"},name:{type:"string"},should_sync:{type:"boolean"},status:{type:"string"}},required:["id","name","should_sync","incremental"],type:"object"},DatabaseSchemaSource:{additionalProperties:!1,properties:{id:{type:"string"},last_synced_at:{type:"string"},prefix:{type:"string"},source_type:{type:"string"},status:{type:"string"}},required:["id","status","source_type","prefix"],type:"object"},DatabaseSchemaTable:{anyOf:[{$ref:"#/definitions/DatabaseSchemaPostHogTable"},{$ref:"#/definitions/DatabaseSchemaDataWarehouseTable"},{$ref:"#/definitions/DatabaseSchemaViewTable"},{$ref:"#/definitions/DatabaseSchemaBatchExportTable"},{$ref:"#/definitions/DatabaseSchemaMaterializedViewTable"}]},DatabaseSchemaTableCommon:{additionalProperties:!1,properties:{fields:{additionalProperties:{$ref:"#/definitions/DatabaseSchemaField"},type:"object"},id:{type:"string"},name:{type:"string"},type:{enum:["posthog","data_warehouse","view","batch_export","materialized_view"],type:"string"}},required:["type","id","name","fields"],type:"object"},DatabaseSchemaViewTable:{additionalProperties:!1,properties:{fields:{additionalProperties:{$ref:"#/definitions/DatabaseSchemaField"},type:"object"},id:{type:"string"},name:{type:"string"},query:{$ref:"#/definitions/HogQLQuery"},type:{const:"view",type:"string"}},required:["fields","id","name","query","type"],type:"object"},DatabaseSerializedFieldType:{enum:["integer","float","string","datetime","date","boolean","array","json","lazy_table","virtual_table","field_traverser","expression","view","materialized_view"],type:"string"},DateRange:{additionalProperties:!1,properties:{date_from:{type:["string","null"]},date_to:{type:["string","null"]},explicitDate:{default:!1,description:"Whether the date_from and date_to should be used verbatim. Disables rounding to the start and end of period.",type:["boolean","null"]}},type:"object"},DatetimeDay:{format:"date-time",type:"string"},Day:{$ref:"#/definitions/integer"},DefaultChannelTypes:{enum:["Cross Network","Paid Search","Paid Social","Paid Video","Paid Shopping","Paid Unknown","Direct","Organic Search","Organic Social","Organic Video","Organic Shopping","Push","SMS","Audio","Email","Referral","Affiliate","Unknown"],type:"string"},DurationType:{enum:["duration","active_seconds","inactive_seconds"],type:"string"},ElementPropertyFilter:{additionalProperties:!1,description:"Sync with plugin-server/src/types.ts",properties:{key:{enum:["tag_name","text","href","selector"],type:"string"},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator"},type:{const:"element",type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","operator","type"],type:"object"},ElementType:{additionalProperties:!1,properties:{attr_class:{items:{type:"string"},type:"array"},attr_id:{type:"string"},attributes:{additionalProperties:{type:"string"},type:"object"},href:{type:"string"},nth_child:{type:"number"},nth_of_type:{type:"number"},order:{type:"number"},tag_name:{type:"string"},text:{type:"string"}},required:["attributes","tag_name"],type:"object"},EmptyPropertyFilter:{additionalProperties:!1,type:"object"},EntityNode:{additionalProperties:!1,properties:{custom_name:{type:"string"},fixedProperties:{description:"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},kind:{$ref:"#/definitions/NodeKind"},math:{$ref:"#/definitions/MathType"},math_group_type_index:{enum:[0,1,2,3,4],type:"number"},math_hogql:{type:"string"},math_property:{type:"string"},math_property_type:{type:"string"},name:{type:"string"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},response:{type:"object"}},required:["kind"],type:"object"},EntityType:{enum:["actions","events","data_warehouse","new_entity"],type:"string"},ErrorTrackingIssue:{additionalProperties:!1,properties:{aggregations:{$ref:"#/definitions/ErrorTrackingIssueAggregations"},assignee:{anyOf:[{$ref:"#/definitions/ErrorTrackingIssueAssignee"},{type:"null"}]},description:{type:["string","null"]},earliest:{type:"string"},first_seen:{format:"date-time",type:"string"},id:{type:"string"},last_seen:{format:"date-time",type:"string"},name:{type:["string","null"]},status:{enum:["archived","active","resolved","pending_release"],type:"string"}},required:["assignee","description","first_seen","id","name","status"],type:"object"},ErrorTrackingIssueAggregations:{additionalProperties:!1,properties:{customVolume:{anyOf:[{items:{type:"number"},type:"array"},{type:"null"}]},occurrences:{type:"number"},sessions:{type:"number"},users:{type:"number"},volumeDay:{items:{type:"number"},type:"array"},volumeMonth:{items:{type:"number"},type:"array"}},required:["occurrences","sessions","users","volumeDay","volumeMonth","customVolume"],type:"object"},ErrorTrackingIssueAssignee:{additionalProperties:!1,properties:{id:{anyOf:[{$ref:"#/definitions/integer"},{type:"string"}]},type:{enum:["user_group","user"],type:"string"}},required:["type","id"],type:"object"},ErrorTrackingQuery:{additionalProperties:!1,properties:{assignee:{anyOf:[{$ref:"#/definitions/ErrorTrackingIssueAssignee"},{type:"null"}]},customVolume:{anyOf:[{$ref:"#/definitions/ErrorTrackingSparklineConfig"},{type:"null"}]},dateRange:{$ref:"#/definitions/DateRange"},filterGroup:{$ref:"#/definitions/PropertyGroupFilter"},filterTestAccounts:{type:"boolean"},issueId:{type:"string"},kind:{const:"ErrorTrackingQuery",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},orderBy:{enum:["last_seen","first_seen","occurrences","users","sessions"],type:"string"},response:{$ref:"#/definitions/ErrorTrackingQueryResponse"},searchQuery:{type:"string"},status:{enum:["archived","active","resolved","pending_release","all"],type:"string"}},required:["dateRange","kind"],type:"object"},ErrorTrackingQueryResponse:{additionalProperties:!1,properties:{columns:{items:{type:"string"},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/ErrorTrackingIssue"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},ErrorTrackingRelationalIssue:{additionalProperties:!1,properties:{assignee:{anyOf:[{$ref:"#/definitions/ErrorTrackingIssueAssignee"},{type:"null"}]},description:{type:["string","null"]},first_seen:{format:"date-time",type:"string"},id:{type:"string"},name:{type:["string","null"]},status:{enum:["archived","active","resolved","pending_release"],type:"string"}},required:["id","name","description","assignee","status","first_seen"],type:"object"},ErrorTrackingSparklineConfig:{additionalProperties:!1,properties:{interval:{enum:["minute","hour","day","week","month"],type:"string"},value:{$ref:"#/definitions/integer"}},required:["value","interval"],type:"object"},EventDefinition:{additionalProperties:!1,properties:{elements:{items:{},type:"array"},event:{type:"string"},properties:{type:"object"}},required:["event","properties","elements"],type:"object"},EventOddsRatioSerialized:{additionalProperties:!1,properties:{correlation_type:{enum:["success","failure"],type:"string"},event:{$ref:"#/definitions/EventDefinition"},failure_count:{$ref:"#/definitions/integer"},odds_ratio:{type:"number"},success_count:{$ref:"#/definitions/integer"}},required:["event","success_count","failure_count","odds_ratio","correlation_type"],type:"object"},EventPropertyFilter:{additionalProperties:!1,description:"Sync with plugin-server/src/types.ts",properties:{key:{type:"string"},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator",default:"exact"},type:{const:"event",description:"Event properties",type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","operator","type"],type:"object"},EventTaxonomyItem:{additionalProperties:!1,properties:{property:{type:"string"},sample_count:{$ref:"#/definitions/integer"},sample_values:{items:{type:"string"},type:"array"}},required:["property","sample_values","sample_count"],type:"object"},EventTaxonomyQuery:{additionalProperties:!1,properties:{event:{type:"string"},kind:{const:"EventTaxonomyQuery",type:"string"},maxPropertyValues:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{items:{type:"string"},type:"array"},response:{$ref:"#/definitions/EventTaxonomyQueryResponse"}},required:["event","kind"],type:"object"},EventTaxonomyQueryResponse:{additionalProperties:!1,description:"All analytics query responses must inherit from this.",properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/EventTaxonomyResponse"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},EventTaxonomyResponse:{items:{$ref:"#/definitions/EventTaxonomyItem"},type:"array"},EventType:{additionalProperties:!1,properties:{distinct_id:{type:"string"},elements:{items:{$ref:"#/definitions/ElementType"},type:"array"},elements_chain:{type:["string","null"]},event:{type:"string"},id:{type:"string"},person:{additionalProperties:!1,properties:{distinct_ids:{items:{type:"string"},type:"array"},is_identified:{type:"boolean"},properties:{type:"object"}},required:["distinct_ids","properties"],type:"object"},properties:{type:"object"},timestamp:{type:"string"},uuid:{type:"string"}},required:["id","distinct_id","properties","event","timestamp","elements"],type:"object"},EventsNode:{additionalProperties:!1,properties:{custom_name:{type:"string"},event:{description:"The event or `null` for all events.",type:["string","null"]},fixedProperties:{description:"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},kind:{const:"EventsNode",type:"string"},limit:{$ref:"#/definitions/integer"},math:{$ref:"#/definitions/MathType"},math_group_type_index:{enum:[0,1,2,3,4],type:"number"},math_hogql:{type:"string"},math_property:{type:"string"},math_property_type:{type:"string"},name:{type:"string"},orderBy:{description:"Columns to order by",items:{type:"string"},type:"array"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},response:{type:"object"}},required:["kind"],type:"object"},EventsQuery:{additionalProperties:!1,properties:{actionId:{$ref:"#/definitions/integer",description:"Show events matching a given action"},after:{description:"Only fetch events that happened after this timestamp",type:"string"},before:{description:"Only fetch events that happened before this timestamp",type:"string"},event:{description:"Limit to events matching this string",type:["string","null"]},filterTestAccounts:{description:"Filter test accounts",type:"boolean"},fixedProperties:{description:"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",items:{$ref:"#/definitions/AnyFilterLike"},type:"array"},kind:{const:"EventsQuery",type:"string"},limit:{$ref:"#/definitions/integer",description:"Number of rows to return"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer",description:"Number of rows to skip before returning rows"},orderBy:{description:"Columns to order by",items:{type:"string"},type:"array"},personId:{description:"Show events for a given person",type:"string"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},response:{$ref:"#/definitions/EventsQueryResponse"},select:{description:"Return a limited set of data. Required.",items:{$ref:"#/definitions/HogQLExpression"},type:"array"},where:{description:"HogQL filters to apply on returned data",items:{$ref:"#/definitions/HogQLExpression"},type:"array"}},required:["kind","select"],type:"object"},EventsQueryPersonColumn:{additionalProperties:!1,properties:{created_at:{type:"string"},distinct_id:{type:"string"},properties:{additionalProperties:!1,properties:{email:{type:"string"},name:{type:"string"}},type:"object"},uuid:{type:"string"}},required:["uuid","created_at","properties","distinct_id"],type:"object"},EventsQueryResponse:{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{items:{},type:"array"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{type:"string"},type:"array"}},required:["columns","hogql","results","types"],type:"object"},ExperimentActionMetricConfig:{additionalProperties:!1,properties:{action:{type:"number"},kind:{const:"ExperimentActionMetricConfig",type:"string"},math:{$ref:"#/definitions/ExperimentMetricMath"},math_hogql:{type:"string"},math_property:{type:"string"},name:{type:"string"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"}},required:["kind","action"],type:"object"},ExperimentDataWarehouseMetricConfig:{additionalProperties:!1,properties:{data_warehouse_join_key:{type:"string"},events_join_key:{type:"string"},kind:{const:"ExperimentDataWarehouseMetricConfig",type:"string"},math:{$ref:"#/definitions/ExperimentMetricMath"},math_hogql:{type:"string"},math_property:{type:"string"},name:{type:"string"},table_name:{type:"string"},timestamp_field:{type:"string"}},required:["kind","table_name","timestamp_field","events_join_key","data_warehouse_join_key"],type:"object"},ExperimentEventMetricConfig:{additionalProperties:!1,properties:{event:{type:"string"},kind:{const:"ExperimentEventMetricConfig",type:"string"},math:{$ref:"#/definitions/ExperimentMetricMath"},math_hogql:{type:"string"},math_property:{type:"string"},name:{type:"string"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"}},required:["kind","event"],type:"object"},ExperimentExposureQuery:{additionalProperties:!1,properties:{experiment_id:{$ref:"#/definitions/integer"},kind:{const:"ExperimentExposureQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},response:{$ref:"#/definitions/ExperimentExposureQueryResponse"}},required:["kind"],type:"object"},ExperimentExposureQueryResponse:{additionalProperties:!1,properties:{date_range:{$ref:"#/definitions/DateRange"},kind:{const:"ExperimentExposureQuery",type:"string"},timeseries:{items:{$ref:"#/definitions/ExperimentExposureTimeSeries"},type:"array"},total_exposures:{additionalProperties:{type:"number"},type:"object"}},required:["kind","timeseries","total_exposures","date_range"],type:"object"},ExperimentExposureTimeSeries:{additionalProperties:!1,properties:{days:{items:{type:"string"},type:"array"},exposure_counts:{items:{type:"number"},type:"array"},variant:{type:"string"}},required:["variant","days","exposure_counts"],type:"object"},ExperimentFunnelsQuery:{additionalProperties:!1,properties:{experiment_id:{$ref:"#/definitions/integer"},funnels_query:{$ref:"#/definitions/FunnelsQuery"},kind:{const:"ExperimentFunnelsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},name:{type:"string"},response:{$ref:"#/definitions/ExperimentFunnelsQueryResponse"}},required:["funnels_query","kind"],type:"object"},ExperimentFunnelsQueryResponse:{additionalProperties:!1,properties:{credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},expected_loss:{type:"number"},funnels_query:{$ref:"#/definitions/FunnelsQuery"},insight:{items:{items:{type:"object"},type:"array"},type:"array"},kind:{const:"ExperimentFunnelsQuery",type:"string"},probability:{additionalProperties:{type:"number"},type:"object"},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},variants:{items:{$ref:"#/definitions/ExperimentVariantFunnelsBaseStats"},type:"array"}},required:["kind","insight","variants","probability","significant","significance_code","expected_loss","credible_intervals"],type:"object"},ExperimentMetric:{additionalProperties:!1,properties:{filterTestAccounts:{type:"boolean"},inverse:{type:"boolean"},kind:{const:"ExperimentMetric",type:"string"},metric_config:{anyOf:[{$ref:"#/definitions/ExperimentEventMetricConfig"},{$ref:"#/definitions/ExperimentActionMetricConfig"},{$ref:"#/definitions/ExperimentDataWarehouseMetricConfig"}]},metric_type:{$ref:"#/definitions/ExperimentMetricType"},name:{type:"string"}},required:["kind","metric_type","metric_config"],type:"object"},ExperimentMetricMath:{enum:["total","sum","avg","median","min","max"],type:"string"},ExperimentMetricType:{enum:["count","continuous","binomial"],type:"string"},ExperimentQuery:{additionalProperties:!1,properties:{experiment_id:{$ref:"#/definitions/integer"},kind:{const:"ExperimentQuery",type:"string"},metric:{$ref:"#/definitions/ExperimentMetric"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},name:{type:"string"},response:{$ref:"#/definitions/ExperimentQueryResponse"}},required:["kind","metric"],type:"object"},ExperimentQueryResponse:{additionalProperties:!1,properties:{credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},insight:{items:{type:"object"},type:"array"},kind:{const:"ExperimentQuery",type:"string"},metric:{$ref:"#/definitions/ExperimentMetric"},p_value:{type:"number"},probability:{additionalProperties:{type:"number"},type:"object"},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},variants:{anyOf:[{items:{$ref:"#/definitions/ExperimentVariantTrendsBaseStats"},type:"array"},{items:{$ref:"#/definitions/ExperimentVariantFunnelsBaseStats"},type:"array"}]}},required:["kind","insight","metric","variants","probability","significant","significance_code","p_value","credible_intervals"],type:"object"},ExperimentSignificanceCode:{enum:["significant","not_enough_exposure","low_win_probability","high_loss","high_p_value"],type:"string"},ExperimentTrendsQuery:{additionalProperties:!1,properties:{count_query:{$ref:"#/definitions/TrendsQuery"},experiment_id:{$ref:"#/definitions/integer"},exposure_query:{$ref:"#/definitions/TrendsQuery"},kind:{const:"ExperimentTrendsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},name:{type:"string"},response:{$ref:"#/definitions/ExperimentTrendsQueryResponse"}},required:["count_query","kind"],type:"object"},ExperimentTrendsQueryResponse:{additionalProperties:!1,properties:{count_query:{$ref:"#/definitions/TrendsQuery"},credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},exposure_query:{$ref:"#/definitions/TrendsQuery"},insight:{items:{type:"object"},type:"array"},kind:{const:"ExperimentTrendsQuery",type:"string"},p_value:{type:"number"},probability:{additionalProperties:{type:"number"},type:"object"},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},variants:{items:{$ref:"#/definitions/ExperimentVariantTrendsBaseStats"},type:"array"}},required:["kind","insight","variants","probability","significant","significance_code","p_value","credible_intervals"],type:"object"},ExperimentVariantFunnelsBaseStats:{additionalProperties:!1,properties:{failure_count:{type:"number"},key:{type:"string"},success_count:{type:"number"}},required:["key","success_count","failure_count"],type:"object"},ExperimentVariantTrendsBaseStats:{additionalProperties:!1,properties:{absolute_exposure:{type:"number"},count:{type:"number"},exposure:{type:"number"},key:{type:"string"}},required:["key","count","exposure","absolute_exposure"],type:"object"},FailureMessage:{additionalProperties:!1,properties:{content:{type:"string"},id:{type:"string"},type:{const:"ai/failure",type:"string"}},required:["type"],type:"object"},FeaturePropertyFilter:{additionalProperties:!1,properties:{key:{type:"string"},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator"},type:{const:"feature",description:'Event property with "$feature/" prepended',type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","operator","type"],type:"object"},FileSystemEntry:{additionalProperties:!1,properties:{created_at:{description:"Timestamp when file was added. Used to check persistence",type:"string"},href:{description:"Object's URL",type:"string"},id:{description:"Unique UUID for tree entry",type:"string"},meta:{description:"Metadata",type:"object"},path:{description:"Object's name and folder",type:"string"},ref:{description:"Object's ID or other unique reference",type:"string"},type:{$ref:"#/definitions/FileSystemType",description:"Type of object, used for icon, e.g. feature_flag, insight, etc"}},required:["path"],type:"object"},FileSystemType:{enum:["aichat","broadcast","dashboard","destination","experiment","feature_flag","feature","folder","insight","notebook","repl","site_app","source","sql","survey","transformation"],type:"string"},FilterLogicalOperator:{enum:["AND","OR"],type:"string"},FunnelConversionWindowTimeUnit:{enum:["second","minute","hour","day","week","month"],type:"string"},FunnelCorrelationActorsQuery:{additionalProperties:!1,properties:{funnelCorrelationPersonConverted:{type:"boolean"},funnelCorrelationPersonEntity:{$ref:"#/definitions/AnyEntityNode"},funnelCorrelationPropertyValues:{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},includeRecordings:{type:"boolean"},kind:{const:"FunnelCorrelationActorsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},response:{$ref:"#/definitions/ActorsQueryResponse"},source:{$ref:"#/definitions/FunnelCorrelationQuery"}},required:["kind","source"],type:"object"},FunnelCorrelationQuery:{additionalProperties:!1,properties:{funnelCorrelationEventExcludePropertyNames:{items:{type:"string"},type:"array"},funnelCorrelationEventNames:{items:{type:"string"},type:"array"},funnelCorrelationExcludeEventNames:{items:{type:"string"},type:"array"},funnelCorrelationExcludeNames:{items:{type:"string"},type:"array"},funnelCorrelationNames:{items:{type:"string"},type:"array"},funnelCorrelationType:{$ref:"#/definitions/FunnelCorrelationResultsType"},kind:{const:"FunnelCorrelationQuery",type:"string"},response:{$ref:"#/definitions/FunnelCorrelationResponse"},source:{$ref:"#/definitions/FunnelsActorsQuery"}},required:["funnelCorrelationType","kind","source"],type:"object"},FunnelCorrelationResponse:{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/FunnelCorrelationResult"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},FunnelCorrelationResult:{additionalProperties:!1,properties:{events:{items:{$ref:"#/definitions/EventOddsRatioSerialized"},type:"array"},skewed:{type:"boolean"}},required:["events","skewed"],type:"object"},FunnelCorrelationResultsType:{enum:["events","properties","event_with_properties"],type:"string"},FunnelExclusion:{anyOf:[{$ref:"#/definitions/FunnelExclusionEventsNode"},{$ref:"#/definitions/FunnelExclusionActionsNode"}]},FunnelExclusionActionsNode:{additionalProperties:!1,properties:{custom_name:{type:"string"},fixedProperties:{description:"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},funnelFromStep:{$ref:"#/definitions/integer"},funnelToStep:{$ref:"#/definitions/integer"},id:{$ref:"#/definitions/integer"},kind:{const:"ActionsNode",type:"string"},math:{$ref:"#/definitions/MathType"},math_group_type_index:{enum:[0,1,2,3,4],type:"number"},math_hogql:{type:"string"},math_property:{type:"string"},math_property_type:{type:"string"},name:{type:"string"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},response:{type:"object"}},required:["funnelFromStep","funnelToStep","id","kind"],type:"object"},FunnelExclusionEventsNode:{additionalProperties:!1,properties:{custom_name:{type:"string"},event:{description:"The event or `null` for all events.",type:["string","null"]},fixedProperties:{description:"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},funnelFromStep:{$ref:"#/definitions/integer"},funnelToStep:{$ref:"#/definitions/integer"},kind:{const:"EventsNode",type:"string"},limit:{$ref:"#/definitions/integer"},math:{$ref:"#/definitions/MathType"},math_group_type_index:{enum:[0,1,2,3,4],type:"number"},math_hogql:{type:"string"},math_property:{type:"string"},math_property_type:{type:"string"},name:{type:"string"},orderBy:{description:"Columns to order by",items:{type:"string"},type:"array"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},response:{type:"object"}},required:["funnelFromStep","funnelToStep","kind"],type:"object"},FunnelExclusionLegacy:{additionalProperties:!1,properties:{custom_name:{type:["string","null"]},funnel_from_step:{type:"number"},funnel_to_step:{type:"number"},id:{type:["string","number","null"]},index:{type:"number"},name:{type:["string","null"]},order:{type:"number"},type:{$ref:"#/definitions/EntityType"}},required:["funnel_from_step","funnel_to_step"],type:"object"},FunnelExclusionSteps:{additionalProperties:!1,properties:{funnelFromStep:{$ref:"#/definitions/integer"},funnelToStep:{$ref:"#/definitions/integer"}},required:["funnelFromStep","funnelToStep"],type:"object"},FunnelLayout:{enum:["horizontal","vertical"],type:"string"},FunnelMathType:{enum:["total","first_time_for_user","first_time_for_user_with_filters"],type:"string"},FunnelPathType:{enum:["funnel_path_before_step","funnel_path_between_steps","funnel_path_after_step"],type:"string"},FunnelPathsFilter:{additionalProperties:!1,properties:{funnelPathType:{$ref:"#/definitions/FunnelPathType"},funnelSource:{$ref:"#/definitions/FunnelsQuery"},funnelStep:{$ref:"#/definitions/integer"}},required:["funnelSource"],type:"object"},FunnelStepReference:{enum:["total","previous"],type:"string"},FunnelStepsBreakdownResults:{items:{items:{type:"object"},type:"array"},type:"array"},FunnelStepsResults:{items:{type:"object"},type:"array"},FunnelTimeToConvertResults:{additionalProperties:!1,properties:{average_conversion_time:{type:["number","null"]},bins:{items:{items:{type:"integer"},maxItems:2,minItems:2,type:"array"},type:"array"}},required:["average_conversion_time","bins"],type:"object"},FunnelTrendsResults:{items:{type:"object"},type:"array"},FunnelVizType:{enum:["steps","time_to_convert","trends"],type:"string"},FunnelsActorsQuery:{additionalProperties:!1,properties:{funnelCustomSteps:{description:"Custom step numbers to get persons for. This overrides `funnelStep`. Primarily for correlation use.",items:{$ref:"#/definitions/integer"},type:"array"},funnelStep:{$ref:"#/definitions/integer",description:"Index of the step for which we want to get the timestamp for, per person. Positive for converted persons, negative for dropped of persons."},funnelStepBreakdown:{$ref:"#/definitions/BreakdownKeyType",description:"The breakdown value for which to get persons for. This is an array for person and event properties, a string for groups and an integer for cohorts."},funnelTrendsDropOff:{type:"boolean"},funnelTrendsEntrancePeriodStart:{description:"Used together with `funnelTrendsDropOff` for funnels time conversion date for the persons modal.",type:"string"},includeRecordings:{type:"boolean"},kind:{const:"FunnelsActorsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},response:{$ref:"#/definitions/ActorsQueryResponse"},source:{$ref:"#/definitions/FunnelsQuery"}},required:["kind","source"],type:"object"},FunnelsFilter:{additionalProperties:!1,properties:{binCount:{type:"integer"},breakdownAttributionType:{$ref:"#/definitions/BreakdownAttributionType",default:"first_touch"},breakdownAttributionValue:{$ref:"#/definitions/integer"},exclusions:{default:[],items:{$ref:"#/definitions/FunnelExclusion"},type:"array"},funnelAggregateByHogQL:{type:"string"},funnelFromStep:{$ref:"#/definitions/integer"},funnelOrderType:{$ref:"#/definitions/StepOrderValue",default:"ordered"},funnelStepReference:{$ref:"#/definitions/FunnelStepReference",default:"total"},funnelToStep:{$ref:"#/definitions/integer"},funnelVizType:{$ref:"#/definitions/FunnelVizType",default:"steps"},funnelWindowInterval:{$ref:"#/definitions/integer",default:14},funnelWindowIntervalUnit:{$ref:"#/definitions/FunnelConversionWindowTimeUnit",default:"day"},hiddenLegendBreakdowns:{items:{type:"string"},type:"array"},layout:{$ref:"#/definitions/FunnelLayout",default:"vertical"},resultCustomizations:{additionalProperties:{$ref:"#/definitions/ResultCustomizationByValue"},description:"Customizations for the appearance of result datasets.",type:"object"},useUdf:{type:"boolean"}},type:"object"},FunnelsFilterLegacy:{additionalProperties:!1,description:"`FunnelsFilterType` minus everything inherited from `FilterType` and persons modal related params",properties:{bin_count:{$ref:"#/definitions/BinCountValue"},breakdown_attribution_type:{$ref:"#/definitions/BreakdownAttributionType"},breakdown_attribution_value:{type:"number"},exclusions:{items:{$ref:"#/definitions/FunnelExclusionLegacy"},type:"array"},funnel_aggregate_by_hogql:{type:"string"},funnel_from_step:{type:"number"},funnel_order_type:{$ref:"#/definitions/StepOrderValue"},funnel_step_reference:{$ref:"#/definitions/FunnelStepReference"},funnel_to_step:{type:"number"},funnel_viz_type:{$ref:"#/definitions/FunnelVizType"},funnel_window_interval:{type:"number"},funnel_window_interval_unit:{$ref:"#/definitions/FunnelConversionWindowTimeUnit"},hidden_legend_keys:{additionalProperties:{anyOf:[{type:"boolean"},{not:{}}]},type:"object"},layout:{$ref:"#/definitions/FunnelLayout"}},type:"object"},FunnelsQuery:{additionalProperties:!1,properties:{aggregation_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Groups aggregation"},breakdownFilter:{$ref:"#/definitions/BreakdownFilter",description:"Breakdown of the events and actions"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},funnelsFilter:{$ref:"#/definitions/FunnelsFilter",description:"Properties specific to the funnels insight"},interval:{$ref:"#/definitions/IntervalType",description:"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`"},kind:{const:"FunnelsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/FunnelsQueryResponse"},samplingFactor:{description:"Sampling rate",type:["number","null"]},series:{description:"Events and actions to include",items:{$ref:"#/definitions/AnyEntityNode"},type:"array"}},required:["kind","series"],type:"object"},FunnelsQueryResponse:{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},isUdf:{type:"boolean"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{anyOf:[{$ref:"#/definitions/FunnelStepsResults"},{$ref:"#/definitions/FunnelStepsBreakdownResults"},{$ref:"#/definitions/FunnelTimeToConvertResults"},{$ref:"#/definitions/FunnelTrendsResults"}]},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},GenericCachedQueryResponse:{properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},timezone:{type:"string"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","timezone"],type:"object"},GoalLine:{additionalProperties:!1,properties:{borderColor:{type:"string"},displayLabel:{type:"boolean"},label:{type:"string"},value:{type:"number"}},required:["label","value"],type:"object"},GroupMathType:{const:"unique_group",type:"string"},GroupPropertyFilter:{additionalProperties:!1,properties:{group_type_index:{anyOf:[{type:"integer"},{type:"null"}]},key:{type:"string"},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator"},type:{const:"group",type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","operator","type"],type:"object"},HasPropertiesNode:{anyOf:[{$ref:"#/definitions/EventsNode"},{$ref:"#/definitions/EventsQuery"},{$ref:"#/definitions/PersonsNode"}]},HogCompileResponse:{additionalProperties:!1,properties:{bytecode:{items:{},type:"array"},locals:{items:{},type:"array"}},required:["bytecode","locals"],type:"object"},HogLanguage:{enum:["hog","hogJson","hogQL","hogQLExpr","hogTemplate"],type:"string"},HogQLASTQuery:{additionalProperties:!1,properties:{explain:{deprecated:"use modifiers.debug instead",type:"boolean"},filters:{$ref:"#/definitions/HogQLFilters"},kind:{const:"HogQLASTQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},name:{description:"Client provided name of the query",type:"string"},query:{type:"object"},response:{$ref:"#/definitions/HogQLQueryResponse"},values:{description:"Constant values that can be referenced with the {placeholder} syntax in the query",type:"object"},variables:{additionalProperties:{$ref:"#/definitions/HogQLVariable"},description:"Variables to be substituted into the query",type:"object"}},required:["kind","query"],type:"object"},HogQLAutocomplete:{additionalProperties:!1,properties:{endPosition:{$ref:"#/definitions/integer",description:"End position of the editor word"},filters:{$ref:"#/definitions/HogQLFilters",description:"Table to validate the expression against"},globals:{description:"Global values in scope",type:"object"},kind:{const:"HogQLAutocomplete",type:"string"},language:{$ref:"#/definitions/HogLanguage",description:"Language to validate"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query:{description:"Query to validate",type:"string"},response:{$ref:"#/definitions/HogQLAutocompleteResponse"},sourceQuery:{$ref:"#/definitions/AnyDataNode",description:"Query in whose context to validate."},startPosition:{$ref:"#/definitions/integer",description:"Start position of the editor word"}},required:["endPosition","kind","language","query","startPosition"],type:"object"},HogQLAutocompleteResponse:{additionalProperties:!1,properties:{incomplete_list:{description:"Whether or not the suggestions returned are complete",type:"boolean"},suggestions:{items:{$ref:"#/definitions/AutocompleteCompletionItem"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["suggestions","incomplete_list"],type:"object"},HogQLExpression:{type:"string"},HogQLFilters:{additionalProperties:!1,description:"Filters object that will be converted to a HogQL {filters} placeholder",properties:{dateRange:{$ref:"#/definitions/DateRange"},filterTestAccounts:{type:"boolean"},properties:{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"}},type:"object"},HogQLMathType:{const:"hogql",type:"string"},HogQLMetadata:{additionalProperties:!1,properties:{debug:{description:"Enable more verbose output, usually run from the /debug page",type:"boolean"},filters:{$ref:"#/definitions/HogQLFilters",description:"Extra filters applied to query via {filters}"},globals:{description:"Extra globals for the query",type:"object"},kind:{const:"HogQLMetadata",type:"string"},language:{$ref:"#/definitions/HogLanguage",description:"Language to validate"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query:{description:"Query to validate",type:"string"},response:{$ref:"#/definitions/HogQLMetadataResponse"},sourceQuery:{$ref:"#/definitions/AnyDataNode",description:'Query within which "expr" and "template" are validated. Defaults to "select * from events"'},variables:{additionalProperties:{$ref:"#/definitions/HogQLVariable"},description:"Variables to be subsituted into the query",type:"object"}},required:["kind","language","query"],type:"object"},HogQLMetadataResponse:{additionalProperties:!1,properties:{errors:{items:{$ref:"#/definitions/HogQLNotice"},type:"array"},isValid:{type:"boolean"},isValidView:{type:"boolean"},notices:{items:{$ref:"#/definitions/HogQLNotice"},type:"array"},query:{type:"string"},table_names:{items:{type:"string"},type:"array"},warnings:{items:{$ref:"#/definitions/HogQLNotice"},type:"array"}},required:["errors","warnings","notices"],type:"object"},HogQLNotice:{additionalProperties:!1,properties:{end:{$ref:"#/definitions/integer"},fix:{type:"string"},message:{type:"string"},start:{$ref:"#/definitions/integer"}},required:["message"],type:"object"},HogQLPropertyFilter:{additionalProperties:!1,properties:{key:{type:"string"},label:{type:"string"},type:{const:"hogql",type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","type"],type:"object"},HogQLQuery:{additionalProperties:!1,properties:{explain:{deprecated:"use modifiers.debug instead",type:"boolean"},filters:{$ref:"#/definitions/HogQLFilters"},kind:{const:"HogQLQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},name:{description:"Client provided name of the query",type:"string"},query:{type:"string"},response:{$ref:"#/definitions/HogQLQueryResponse"},values:{description:"Constant values that can be referenced with the {placeholder} syntax in the query",type:"object"},variables:{additionalProperties:{$ref:"#/definitions/HogQLVariable"},description:"Variables to be substituted into the query",type:"object"}},required:["kind","query"],type:"object"},HogQLQueryModifiers:{additionalProperties:!1,description:"HogQL Query Options are automatically set per team. However, they can be overridden in the query.",properties:{bounceRateDurationSeconds:{type:"number"},bounceRatePageViewMode:{enum:["count_pageviews","uniq_urls","uniq_page_screen_autocaptures"],type:"string"},customChannelTypeRules:{items:{$ref:"#/definitions/CustomChannelRule"},type:"array"},dataWarehouseEventsModifiers:{items:{$ref:"#/definitions/DataWarehouseEventsModifier"},type:"array"},debug:{type:"boolean"},inCohortVia:{enum:["auto","leftjoin","subquery","leftjoin_conjoined"],type:"string"},materializationMode:{enum:["auto","legacy_null_as_string","legacy_null_as_null","disabled"],type:"string"},optimizeJoinedFilters:{type:"boolean"},personsArgMaxVersion:{enum:["auto","v1","v2"],type:"string"},personsJoinMode:{enum:["inner","left"],type:"string"},personsOnEventsMode:{enum:["disabled","person_id_no_override_properties_on_events","person_id_override_properties_on_events","person_id_override_properties_joined"],type:"string"},propertyGroupsMode:{enum:["enabled","disabled","optimized"],type:"string"},s3TableUseInvalidColumns:{type:"boolean"},sessionTableVersion:{enum:["auto","v1","v2"],type:"string"},useMaterializedViews:{type:"boolean"}},type:"object"},HogQLQueryResponse:{additionalProperties:!1,properties:{clickhouse:{description:"Executed ClickHouse query",type:"string"},columns:{description:"Returned columns",items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},explain:{description:"Query explanation output",items:{type:"string"},type:"array"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},metadata:{$ref:"#/definitions/HogQLMetadataResponse",description:"Query metadata output"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query:{description:"Input query string",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{description:"Types of returned columns",items:{},type:"array"}},required:["results"],type:"object"},HogQLVariable:{additionalProperties:!1,properties:{code_name:{type:"string"},value:{},variableId:{type:"string"}},required:["variableId","code_name"],type:"object"},HogQuery:{additionalProperties:!1,properties:{code:{type:"string"},kind:{const:"HogQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},response:{$ref:"#/definitions/HogQueryResponse"}},required:["kind"],type:"object"},HogQueryResponse:{additionalProperties:!1,properties:{bytecode:{items:{},type:"array"},coloredBytecode:{items:{},type:"array"},results:{},stdout:{type:"string"}},required:["results"],type:"object"},HumanMessage:{additionalProperties:!1,properties:{content:{type:"string"},id:{type:"string"},type:{const:"human",type:"string"}},required:["type","content"],type:"object"},InsightActorsQuery:{additionalProperties:!1,properties:{breakdown:{anyOf:[{type:"string"},{$ref:"#/definitions/BreakdownValueInt"},{items:{type:"string"},type:"array"}]},compare:{enum:["current","previous"],type:"string"},day:{anyOf:[{type:"string"},{$ref:"#/definitions/Day"}]},includeRecordings:{type:"boolean"},interval:{$ref:"#/definitions/integer",description:"An interval selected out of available intervals in source query."},kind:{const:"InsightActorsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},response:{$ref:"#/definitions/ActorsQueryResponse"},series:{$ref:"#/definitions/integer"},source:{$ref:"#/definitions/InsightQuerySource"},status:{type:"string"}},required:["kind","source"],type:"object"},InsightActorsQueryBase:{additionalProperties:!1,properties:{includeRecordings:{type:"boolean"},kind:{$ref:"#/definitions/NodeKind"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},response:{$ref:"#/definitions/ActorsQueryResponse"}},required:["kind"],type:"object"},InsightActorsQueryOptions:{additionalProperties:!1,properties:{kind:{const:"InsightActorsQueryOptions",type:"string"},response:{$ref:"#/definitions/InsightActorsQueryOptionsResponse"},source:{anyOf:[{$ref:"#/definitions/InsightActorsQuery"},{$ref:"#/definitions/FunnelsActorsQuery"},{$ref:"#/definitions/FunnelCorrelationActorsQuery"},{$ref:"#/definitions/StickinessActorsQuery"}]}},required:["kind","source"],type:"object"},InsightActorsQueryOptionsResponse:{additionalProperties:!1,properties:{breakdown:{items:{$ref:"#/definitions/BreakdownItem"},type:"array"},breakdowns:{items:{$ref:"#/definitions/MultipleBreakdownOptions"},type:"array"},compare:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{type:"string"}},required:["label","value"],type:"object"},type:"array"},day:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{anyOf:[{type:"string"},{$ref:"#/definitions/DatetimeDay"},{$ref:"#/definitions/Day"}]}},required:["label","value"],type:"object"},type:"array"},interval:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{$ref:"#/definitions/integer",description:"An interval selected out of available intervals in source query"}},required:["label","value"],type:"object"},type:"array"},series:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{$ref:"#/definitions/integer"}},required:["label","value"],type:"object"},type:"array"},status:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{type:"string"}},required:["label","value"],type:"object"},type:"array"}},type:"object"},InsightFilter:{anyOf:[{$ref:"#/definitions/TrendsFilter"},{$ref:"#/definitions/FunnelsFilter"},{$ref:"#/definitions/RetentionFilter"},{$ref:"#/definitions/PathsFilter"},{$ref:"#/definitions/StickinessFilter"},{$ref:"#/definitions/LifecycleFilter"}]},InsightFilterProperty:{enum:["trendsFilter","funnelsFilter","retentionFilter","pathsFilter","stickinessFilter","lifecycleFilter"],type:"string"},InsightNodeKind:{enum:["TrendsQuery","FunnelsQuery","RetentionQuery","PathsQuery","StickinessQuery","LifecycleQuery"],type:"string"},InsightQueryNode:{discriminator:{propertyName:"kind"},oneOf:[{$ref:"#/definitions/TrendsQuery"},{$ref:"#/definitions/FunnelsQuery"},{$ref:"#/definitions/RetentionQuery"},{$ref:"#/definitions/PathsQuery"},{$ref:"#/definitions/StickinessQuery"},{$ref:"#/definitions/LifecycleQuery"}],required:["kind"],type:"object"},InsightQuerySource:{$ref:"#/definitions/InsightQueryNode"},InsightShortId:{type:"string"},InsightThreshold:{additionalProperties:!1,properties:{bounds:{$ref:"#/definitions/InsightsThresholdBounds"},type:{$ref:"#/definitions/InsightThresholdType"}},required:["type"],type:"object"},InsightThresholdType:{enum:["absolute","percentage"],type:"string"},InsightVizNode:{additionalProperties:!1,properties:{embedded:{description:"Query is embedded inside another bordered component",type:"boolean"},full:{description:"Show with most visual options enabled. Used in insight scene.",type:"boolean"},hidePersonsModal:{type:"boolean"},kind:{const:"InsightVizNode",type:"string"},showCorrelationTable:{type:"boolean"},showFilters:{type:"boolean"},showHeader:{type:"boolean"},showLastComputation:{type:"boolean"},showLastComputationRefresh:{type:"boolean"},showResults:{type:"boolean"},showTable:{type:"boolean"},source:{$ref:"#/definitions/InsightQueryNode"},suppressSessionAnalysisWarning:{type:"boolean"},vizSpecificOptions:{$ref:"#/definitions/VizSpecificOptions"}},required:["kind","source"],type:"object"},"InsightsQueryBase<FunnelsQueryResponse>":{additionalProperties:!1,description:"Base class for insight query nodes. Should not be used directly.",properties:{aggregation_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Groups aggregation"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},kind:{$ref:"#/definitions/NodeKind"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/FunnelsQueryResponse"},samplingFactor:{description:"Sampling rate",type:["number","null"]}},required:["kind"],type:"object"},"InsightsQueryBase<LifecycleQueryResponse>":{additionalProperties:!1,description:"Base class for insight query nodes. Should not be used directly.",properties:{aggregation_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Groups aggregation"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},kind:{$ref:"#/definitions/NodeKind"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/LifecycleQueryResponse"},samplingFactor:{description:"Sampling rate",type:["number","null"]}},required:["kind"],type:"object"},"InsightsQueryBase<PathsQueryResponse>":{additionalProperties:!1,description:"Base class for insight query nodes. Should not be used directly.",properties:{aggregation_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Groups aggregation"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},kind:{$ref:"#/definitions/NodeKind"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/PathsQueryResponse"},samplingFactor:{description:"Sampling rate",type:["number","null"]}},required:["kind"],type:"object"},"InsightsQueryBase<RetentionQueryResponse>":{additionalProperties:!1,description:"Base class for insight query nodes. Should not be used directly.",properties:{aggregation_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Groups aggregation"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},kind:{$ref:"#/definitions/NodeKind"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/RetentionQueryResponse"},samplingFactor:{description:"Sampling rate",type:["number","null"]}},required:["kind"],type:"object"},"InsightsQueryBase<TrendsQueryResponse>":{additionalProperties:!1,description:"Base class for insight query nodes. Should not be used directly.",properties:{aggregation_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Groups aggregation"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},kind:{$ref:"#/definitions/NodeKind"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/TrendsQueryResponse"},samplingFactor:{description:"Sampling rate",type:["number","null"]}},required:["kind"],type:"object"},InsightsThresholdBounds:{additionalProperties:!1,properties:{lower:{type:"number"},upper:{type:"number"}},type:"object"},IntervalType:{enum:["minute","hour","day","week","month"],type:"string"},LLMTrace:{additionalProperties:!1,properties:{createdAt:{type:"string"},events:{items:{$ref:"#/definitions/LLMTraceEvent"},type:"array"},id:{type:"string"},inputCost:{type:"number"},inputState:{},inputTokens:{type:"number"},outputCost:{type:"number"},outputState:{},outputTokens:{type:"number"},person:{$ref:"#/definitions/LLMTracePerson"},totalCost:{type:"number"},totalLatency:{type:"number"},traceName:{type:"string"}},required:["id","createdAt","person","events"],type:"object"},LLMTraceEvent:{additionalProperties:!1,properties:{createdAt:{type:"string"},event:{type:"string"},id:{type:"string"},properties:{type:"object"}},required:["id","event","properties","createdAt"],type:"object"},LLMTracePerson:{additionalProperties:!1,properties:{created_at:{type:"string"},distinct_id:{type:"string"},properties:{type:"object"},uuid:{type:"string"}},required:["uuid","created_at","properties","distinct_id"],type:"object"},LifecycleFilter:{additionalProperties:!1,properties:{showLegend:{default:!1,type:"boolean"},showValuesOnSeries:{type:"boolean"},toggledLifecycles:{items:{$ref:"#/definitions/LifecycleToggle"},type:"array"}},type:"object"},LifecycleFilterLegacy:{additionalProperties:!1,description:"`LifecycleFilterType` minus everything inherited from `FilterType`",properties:{show_legend:{type:"boolean"},show_values_on_series:{type:"boolean"},toggledLifecycles:{items:{$ref:"#/definitions/LifecycleToggle"},type:"array"}},type:"object"},LifecycleQuery:{additionalProperties:!1,properties:{aggregation_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Groups aggregation"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},interval:{$ref:"#/definitions/IntervalType",default:"day",description:"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`"},kind:{const:"LifecycleQuery",type:"string"},lifecycleFilter:{$ref:"#/definitions/LifecycleFilter",description:"Properties specific to the lifecycle insight"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/LifecycleQueryResponse"},samplingFactor:{description:"Sampling rate",type:["number","null"]},series:{description:"Events and actions to include",items:{$ref:"#/definitions/AnyEntityNode"},type:"array"}},required:["kind","series"],type:"object"},LifecycleQueryResponse:{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{type:"object"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},LifecycleToggle:{enum:["new","resurrecting","returning","dormant"],type:"string"},LogEntryPropertyFilter:{additionalProperties:!1,properties:{key:{type:"string"},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator"},type:{const:"log_entry",type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","operator","type"],type:"object"},MatchedRecording:{additionalProperties:!1,properties:{events:{items:{$ref:"#/definitions/MatchedRecordingEvent"},type:"array"},session_id:{type:"string"}},required:["events"],type:"object"},MatchedRecordingEvent:{additionalProperties:!1,properties:{uuid:{type:"string"}},required:["uuid"],type:"object"},MathType:{anyOf:[{$ref:"#/definitions/BaseMathType"},{$ref:"#/definitions/FunnelMathType"},{$ref:"#/definitions/PropertyMathType"},{$ref:"#/definitions/CountPerActorMathType"},{$ref:"#/definitions/GroupMathType"},{$ref:"#/definitions/HogQLMathType"}]},MultipleBreakdownOptions:{additionalProperties:!1,properties:{values:{items:{$ref:"#/definitions/BreakdownItem"},type:"array"}},required:["values"],type:"object"},MultipleBreakdownType:{enum:["person","event","group","session","hogql"],type:"string"},NodeKind:{description:`PostHog Query Schema definition.

This file acts as the source of truth for:

- frontend/src/queries/schema.json   - generated from typescript via "pnpm --filter=@posthog/frontend run schema:build:json"

- posthog/schema.py   - generated from json the above json via "pnpm -w run schema:build:python"`,enum:["EventsNode","ActionsNode","DataWarehouseNode","EventsQuery","PersonsNode","HogQuery","HogQLQuery","HogQLASTQuery","HogQLMetadata","HogQLAutocomplete","ActorsQuery","FunnelsActorsQuery","FunnelCorrelationActorsQuery","SessionsTimelineQuery","RecordingsQuery","SessionAttributionExplorerQuery","ErrorTrackingQuery","DataTableNode","DataVisualizationNode","SavedInsightNode","InsightVizNode","TrendsQuery","FunnelsQuery","RetentionQuery","PathsQuery","StickinessQuery","LifecycleQuery","InsightActorsQuery","InsightActorsQueryOptions","FunnelCorrelationQuery","WebOverviewQuery","WebStatsTableQuery","WebExternalClicksTableQuery","WebGoalsQuery","WebVitalsQuery","WebVitalsPathBreakdownQuery","ExperimentMetric","ExperimentQuery","ExperimentExposureQuery","ExperimentEventMetricConfig","ExperimentActionMetricConfig","ExperimentDataWarehouseMetricConfig","ExperimentTrendsQuery","ExperimentFunnelsQuery","DatabaseSchemaQuery","SuggestedQuestionsQuery","TeamTaxonomyQuery","EventTaxonomyQuery","ActorsPropertyTaxonomyQuery","TracesQuery"],type:"string"},PathCleaningFilter:{additionalProperties:!1,properties:{alias:{type:"string"},regex:{type:"string"}},type:"object"},PathType:{enum:["$pageview","$screen","custom_event","hogql"],type:"string"},PathsFilter:{additionalProperties:!1,properties:{edgeLimit:{$ref:"#/definitions/integer",default:50},endPoint:{type:"string"},excludeEvents:{items:{type:"string"},type:"array"},includeEventTypes:{items:{$ref:"#/definitions/PathType"},type:"array"},localPathCleaningFilters:{anyOf:[{items:{$ref:"#/definitions/PathCleaningFilter"},type:"array"},{type:"null"}]},maxEdgeWeight:{type:"integer"},minEdgeWeight:{type:"integer"},pathDropoffKey:{description:"Relevant only within actors query",type:"string"},pathEndKey:{description:"Relevant only within actors query",type:"string"},pathGroupings:{items:{type:"string"},type:"array"},pathReplacements:{type:"boolean"},pathStartKey:{description:"Relevant only within actors query",type:"string"},pathsHogQLExpression:{type:"string"},startPoint:{type:"string"},stepLimit:{$ref:"#/definitions/integer",default:5}},type:"object"},PathsFilterLegacy:{additionalProperties:!1,description:"`PathsFilterType` minus everything inherited from `FilterType` and persons modal related params",properties:{edge_limit:{type:"integer"},end_point:{type:"string"},exclude_events:{items:{type:"string"},type:"array"},funnel_filter:{type:"object"},funnel_paths:{$ref:"#/definitions/FunnelPathType"},include_event_types:{items:{$ref:"#/definitions/PathType"},type:"array"},local_path_cleaning_filters:{anyOf:[{items:{$ref:"#/definitions/PathCleaningFilter"},type:"array"},{type:"null"}]},max_edge_weight:{type:"integer"},min_edge_weight:{type:"integer"},path_groupings:{items:{type:"string"},type:"array"},path_replacements:{type:"boolean"},path_type:{$ref:"#/definitions/PathType"},paths_hogql_expression:{type:"string"},start_point:{type:"string"},step_limit:{type:"integer"}},type:"object"},PathsLink:{additionalProperties:!1,properties:{average_conversion_time:{type:"number"},source:{type:"string"},target:{type:"string"},value:{type:"number"}},required:["source","target","value","average_conversion_time"],type:"object"},PathsQuery:{additionalProperties:!1,properties:{aggregation_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Groups aggregation"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},funnelPathsFilter:{$ref:"#/definitions/FunnelPathsFilter",description:"Used for displaying paths in relation to funnel steps."},kind:{const:"PathsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},pathsFilter:{$ref:"#/definitions/PathsFilter",description:"Properties specific to the paths insight"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/PathsQueryResponse"},samplingFactor:{description:"Sampling rate",type:["number","null"]}},required:["kind","pathsFilter"],type:"object"},PathsQueryResponse:{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/PathsLink"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},PersonPropertyFilter:{additionalProperties:!1,description:"Sync with plugin-server/src/types.ts",properties:{key:{type:"string"},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator"},type:{const:"person",description:"Person properties",type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","operator","type"],type:"object"},PersonType:{additionalProperties:!1,properties:{created_at:{type:"string"},distinct_ids:{items:{type:"string"},type:"array"},id:{type:"string"},is_identified:{type:"boolean"},name:{type:"string"},properties:{type:"object"},uuid:{type:"string"}},required:["distinct_ids","properties"],type:"object"},PersonsNode:{additionalProperties:!1,deprecated:"Use `ActorsQuery` instead.",properties:{cohort:{$ref:"#/definitions/integer"},distinctId:{type:"string"},fixedProperties:{description:"Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},kind:{const:"PersonsNode",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},response:{type:"object"},search:{type:"string"}},required:["kind"],type:"object"},PropertyFilterType:{enum:["meta","event","person","element","feature","session","cohort","recording","log_entry","group","hogql","data_warehouse","data_warehouse_person_property"],type:"string"},PropertyFilterValue:{anyOf:[{type:"string"},{type:"number"},{items:{type:["string","number"]},type:"array"},{type:"null"}]},PropertyGroupFilter:{additionalProperties:!1,properties:{type:{$ref:"#/definitions/FilterLogicalOperator"},values:{items:{$ref:"#/definitions/PropertyGroupFilterValue"},type:"array"}},required:["type","values"],type:"object"},PropertyGroupFilterValue:{additionalProperties:!1,properties:{type:{$ref:"#/definitions/FilterLogicalOperator"},values:{items:{anyOf:[{$ref:"#/definitions/AnyPropertyFilter"},{$ref:"#/definitions/PropertyGroupFilterValue"}]},type:"array"}},required:["type","values"],type:"object"},PropertyMathType:{enum:["avg","sum","min","max","median","p75","p90","p95","p99"],type:"string"},PropertyOperator:{description:"Sync with plugin-server/src/types.ts",enum:["exact","is_not","icontains","not_icontains","regex","not_regex","gt","gte","lt","lte","is_set","is_not_set","is_date_exact","is_date_before","is_date_after","between","not_between","min","max","in","not_in","is_cleaned_path_exact"],type:"string"},QueryRequest:{additionalProperties:!1,properties:{async:{deprecated:"Use `refresh` instead.",type:"boolean"},client_query_id:{description:"Client provided query ID. Can be used to retrieve the status or cancel the query.",type:"string"},filters_override:{$ref:"#/definitions/DashboardFilter"},query:{$ref:"#/definitions/QuerySchema",description:`Submit a JSON string representing a query for PostHog data analysis, for example a HogQL query.

Example payload:

\`\`\`

{"query": {"kind": "HogQLQuery", "query": "select * from events limit 100"}}

\`\`\`

For more details on HogQL queries, see the [PostHog HogQL documentation](/docs/hogql#api-access).`},refresh:{$ref:"#/definitions/RefreshType",default:"blocking",description:"Whether results should be calculated sync or async, and how much to rely on the cache:\n- `'blocking'` - calculate synchronously (returning only when the query is done), UNLESS there are very fresh results in the cache\n- `'async'` - kick off background calculation (returning immediately with a query status), UNLESS there are very fresh results in the cache\n- `'lazy_async'` - kick off background calculation, UNLESS there are somewhat fresh results in the cache\n- `'force_blocking'` - calculate synchronously, even if fresh results are already cached\n- `'force_async'` - kick off background calculation, even if fresh results are already cached\n- `'force_cache'` - return cached data or a cache miss; always completes immediately as it never calculates Background calculation can be tracked using the `query_status` response field."},variables_override:{additionalProperties:{type:"object"},type:"object"}},required:["query"],type:"object"},QueryResponseAlternative:{anyOf:[{type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{items:{},type:"array"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{type:"string"},type:"array"}},required:["columns","hogql","results","types"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},missing_actors_count:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{items:{},type:"array"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{type:"string"},type:"array"}},required:["columns","hogql","limit","offset","results","types"],type:"object"},{additionalProperties:!1,properties:{breakdown:{items:{$ref:"#/definitions/BreakdownItem"},type:"array"},breakdowns:{items:{$ref:"#/definitions/MultipleBreakdownOptions"},type:"array"},compare:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{type:"string"}},required:["label","value"],type:"object"},type:"array"},day:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{anyOf:[{type:"string"},{$ref:"#/definitions/DatetimeDay"},{$ref:"#/definitions/Day"}]}},required:["label","value"],type:"object"},type:"array"},interval:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{$ref:"#/definitions/integer",description:"An interval selected out of available intervals in source query"}},required:["label","value"],type:"object"},type:"array"},series:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{$ref:"#/definitions/integer"}},required:["label","value"],type:"object"},type:"array"},status:{items:{additionalProperties:!1,properties:{label:{type:"string"},value:{type:"string"}},required:["label","value"],type:"object"},type:"array"}},type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/TimelineEntry"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{bytecode:{items:{},type:"array"},coloredBytecode:{items:{},type:"array"},results:{},stdout:{type:"string"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{clickhouse:{description:"Executed ClickHouse query",type:"string"},columns:{description:"Returned columns",items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},explain:{description:"Query explanation output",items:{type:"string"},type:"array"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},metadata:{$ref:"#/definitions/HogQLMetadataResponse",description:"Query metadata output"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query:{description:"Input query string",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{description:"Types of returned columns",items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{errors:{items:{$ref:"#/definitions/HogQLNotice"},type:"array"},isValid:{type:"boolean"},isValidView:{type:"boolean"},notices:{items:{$ref:"#/definitions/HogQLNotice"},type:"array"},query:{type:"string"},table_names:{items:{type:"string"},type:"array"},warnings:{items:{$ref:"#/definitions/HogQLNotice"},type:"array"}},required:["errors","warnings","notices"],type:"object"},{additionalProperties:!1,properties:{incomplete_list:{description:"Whether or not the suggestions returned are complete",type:"boolean"},suggestions:{items:{$ref:"#/definitions/AutocompleteCompletionItem"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["suggestions","incomplete_list"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{type:"string"},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/ErrorTrackingIssue"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},expected_loss:{type:"number"},funnels_query:{$ref:"#/definitions/FunnelsQuery"},insight:{items:{items:{type:"object"},type:"array"},type:"array"},kind:{const:"ExperimentFunnelsQuery",type:"string"},probability:{additionalProperties:{type:"number"},type:"object"},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},variants:{items:{$ref:"#/definitions/ExperimentVariantFunnelsBaseStats"},type:"array"}},required:["kind","insight","variants","probability","significant","significance_code","expected_loss","credible_intervals"],type:"object"},{additionalProperties:!1,properties:{count_query:{$ref:"#/definitions/TrendsQuery"},credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},exposure_query:{$ref:"#/definitions/TrendsQuery"},insight:{items:{type:"object"},type:"array"},kind:{const:"ExperimentTrendsQuery",type:"string"},p_value:{type:"number"},probability:{additionalProperties:{type:"number"},type:"object"},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},variants:{items:{$ref:"#/definitions/ExperimentVariantTrendsBaseStats"},type:"array"}},required:["kind","insight","variants","probability","significant","significance_code","p_value","credible_intervals"],type:"object"},{additionalProperties:!1,properties:{credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},insight:{items:{type:"object"},type:"array"},kind:{const:"ExperimentQuery",type:"string"},metric:{$ref:"#/definitions/ExperimentMetric"},p_value:{type:"number"},probability:{additionalProperties:{type:"number"},type:"object"},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},variants:{anyOf:[{items:{$ref:"#/definitions/ExperimentVariantTrendsBaseStats"},type:"array"},{items:{$ref:"#/definitions/ExperimentVariantFunnelsBaseStats"},type:"array"}]}},required:["kind","insight","metric","variants","probability","significant","significance_code","p_value","credible_intervals"],type:"object"},{additionalProperties:!1,properties:{date_range:{$ref:"#/definitions/DateRange"},kind:{const:"ExperimentExposureQuery",type:"string"},timeseries:{items:{$ref:"#/definitions/ExperimentExposureTimeSeries"},type:"array"},total_exposures:{additionalProperties:{type:"number"},type:"object"}},required:["kind","timeseries","total_exposures","date_range"],type:"object"},{additionalProperties:!1,properties:{dateFrom:{type:"string"},dateTo:{type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebOverviewItem"},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebVitalsPathBreakdownResult"},maxItems:1,minItems:1,type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{properties:{},type:"object"},{not:{}},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{items:{},type:"array"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{type:"string"},type:"array"}},required:["columns","hogql","results","types"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},missing_actors_count:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{items:{},type:"array"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{type:"string"},type:"array"}},required:["columns","hogql","limit","offset","results","types"],type:"object"},{additionalProperties:!1,properties:{clickhouse:{description:"Executed ClickHouse query",type:"string"},columns:{description:"Returned columns",items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},explain:{description:"Query explanation output",items:{type:"string"},type:"array"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},metadata:{$ref:"#/definitions/HogQLMetadataResponse",description:"Query metadata output"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query:{description:"Input query string",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{description:"Types of returned columns",items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{dateFrom:{type:"string"},dateTo:{type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebOverviewItem"},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebVitalsPathBreakdownResult"},maxItems:1,minItems:1,type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{type:"string"},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/ErrorTrackingIssue"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},expected_loss:{type:"number"},funnels_query:{$ref:"#/definitions/FunnelsQuery"},insight:{items:{items:{type:"object"},type:"array"},type:"array"},kind:{const:"ExperimentFunnelsQuery",type:"string"},probability:{additionalProperties:{type:"number"},type:"object"},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},variants:{items:{$ref:"#/definitions/ExperimentVariantFunnelsBaseStats"},type:"array"}},required:["credible_intervals","expected_loss","insight","kind","probability","significance_code","significant","variants"],type:"object"},{additionalProperties:!1,properties:{count_query:{$ref:"#/definitions/TrendsQuery"},credible_intervals:{additionalProperties:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},type:"object"},exposure_query:{$ref:"#/definitions/TrendsQuery"},insight:{items:{type:"object"},type:"array"},kind:{const:"ExperimentTrendsQuery",type:"string"},p_value:{type:"number"},probability:{additionalProperties:{type:"number"},type:"object"},significance_code:{$ref:"#/definitions/ExperimentSignificanceCode"},significant:{type:"boolean"},stats_version:{$ref:"#/definitions/integer"},variants:{items:{$ref:"#/definitions/ExperimentVariantTrendsBaseStats"},type:"array"}},required:["credible_intervals","insight","kind","p_value","probability","significance_code","significant","variants"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{type:"string"},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/LLMTrace"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{description:"Wether more breakdown values are available.",type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{type:"object"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},isUdf:{type:"boolean"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{anyOf:[{$ref:"#/definitions/FunnelStepsResults"},{$ref:"#/definitions/FunnelStepsBreakdownResults"},{$ref:"#/definitions/FunnelTimeToConvertResults"},{$ref:"#/definitions/FunnelTrendsResults"}]},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/RetentionResult"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/PathsLink"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{type:"object"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{type:"object"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/FunnelCorrelationResult"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{tables:{additionalProperties:{$ref:"#/definitions/DatabaseSchemaTable"},type:"object"}},required:["tables"],type:"object"},{additionalProperties:!1,properties:{questions:{items:{type:"string"},type:"array"}},required:["questions"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/TeamTaxonomyResponse"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/EventTaxonomyResponse"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/ActorsPropertyTaxonomyResponse"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},{additionalProperties:!1,properties:{columns:{items:{type:"string"},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/LLMTrace"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"}]},QuerySchema:{discriminator:{propertyName:"kind"},oneOf:[{$ref:"#/definitions/EventsNode"},{$ref:"#/definitions/ActionsNode"},{$ref:"#/definitions/PersonsNode"},{$ref:"#/definitions/DataWarehouseNode"},{$ref:"#/definitions/EventsQuery"},{$ref:"#/definitions/ActorsQuery"},{$ref:"#/definitions/InsightActorsQuery"},{$ref:"#/definitions/InsightActorsQueryOptions"},{$ref:"#/definitions/SessionsTimelineQuery"},{$ref:"#/definitions/HogQuery"},{$ref:"#/definitions/HogQLQuery"},{$ref:"#/definitions/HogQLMetadata"},{$ref:"#/definitions/HogQLAutocomplete"},{$ref:"#/definitions/SessionAttributionExplorerQuery"},{$ref:"#/definitions/ErrorTrackingQuery"},{$ref:"#/definitions/ExperimentFunnelsQuery"},{$ref:"#/definitions/ExperimentTrendsQuery"},{$ref:"#/definitions/ExperimentQuery"},{$ref:"#/definitions/ExperimentExposureQuery"},{$ref:"#/definitions/WebOverviewQuery"},{$ref:"#/definitions/WebStatsTableQuery"},{$ref:"#/definitions/WebExternalClicksTableQuery"},{$ref:"#/definitions/WebGoalsQuery"},{$ref:"#/definitions/WebVitalsQuery"},{$ref:"#/definitions/WebVitalsPathBreakdownQuery"},{$ref:"#/definitions/DataVisualizationNode"},{$ref:"#/definitions/DataTableNode"},{$ref:"#/definitions/SavedInsightNode"},{$ref:"#/definitions/InsightVizNode"},{$ref:"#/definitions/TrendsQuery"},{$ref:"#/definitions/FunnelsQuery"},{$ref:"#/definitions/RetentionQuery"},{$ref:"#/definitions/PathsQuery"},{$ref:"#/definitions/StickinessQuery"},{$ref:"#/definitions/LifecycleQuery"},{$ref:"#/definitions/FunnelCorrelationQuery"},{$ref:"#/definitions/DatabaseSchemaQuery"},{$ref:"#/definitions/SuggestedQuestionsQuery"},{$ref:"#/definitions/TeamTaxonomyQuery"},{$ref:"#/definitions/EventTaxonomyQuery"},{$ref:"#/definitions/ActorsPropertyTaxonomyQuery"},{$ref:"#/definitions/TracesQuery"}],required:["kind"],type:"object"},QuerySchemaRoot:{$ref:"#/definitions/QuerySchema"},QueryStatus:{additionalProperties:!1,properties:{complete:{default:!1,description:"Whether the query is still running. Will be true if the query is complete, even if it errored. Either result or error will be set.",type:"boolean"},dashboard_id:{$ref:"#/definitions/integer"},end_time:{description:"When did the query execution task finish (whether successfully or not).",format:"date-time",type:"string"},error:{default:!1,description:"If the query failed, this will be set to true. More information can be found in the error_message field.",type:"boolean"},error_message:{default:null,type:["string","null"]},expiration_time:{format:"date-time",type:"string"},id:{type:"string"},insight_id:{$ref:"#/definitions/integer"},labels:{items:{type:"string"},type:"array"},pickup_time:{description:"When was the query execution task picked up by a worker.",format:"date-time",type:"string"},query_async:{const:!0,default:!0,description:"ONLY async queries use QueryStatus.",type:"boolean"},query_progress:{$ref:"#/definitions/ClickhouseQueryProgress"},results:{},start_time:{description:"When was query execution task enqueued.",format:"date-time",type:"string"},task_id:{type:"string"},team_id:{$ref:"#/definitions/integer"}},required:["id","query_async","team_id","error","complete","error_message"],type:"object"},QueryStatusResponse:{additionalProperties:!1,properties:{query_status:{$ref:"#/definitions/QueryStatus"}},required:["query_status"],type:"object"},QueryTiming:{additionalProperties:!1,properties:{k:{description:"Key. Shortened to 'k' to save on data.",type:"string"},t:{description:"Time in seconds. Shortened to 't' to save on data.",type:"number"}},required:["k","t"],type:"object"},ReasoningMessage:{additionalProperties:!1,properties:{content:{type:"string"},id:{type:"string"},substeps:{items:{type:"string"},type:"array"},type:{const:"ai/reasoning",type:"string"}},required:["type","content"],type:"object"},RecordingOrder:{enum:["duration","recording_duration","inactive_seconds","active_seconds","start_time","console_error_count","click_count","keypress_count","mouse_activity_count","activity_score"],type:"string"},RecordingPropertyFilter:{additionalProperties:!1,properties:{key:{anyOf:[{$ref:"#/definitions/DurationType"},{const:"snapshot_source",type:"string"},{const:"visited_page",type:"string"}]},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator"},type:{const:"recording",type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","operator","type"],type:"object"},RecordingsQuery:{additionalProperties:!1,properties:{actions:{items:{type:"object"},type:"array"},console_log_filters:{items:{$ref:"#/definitions/LogEntryPropertyFilter"},type:"array"},date_from:{default:"-3d",type:["string","null"]},date_to:{type:["string","null"]},events:{items:{type:"object"},type:"array"},filter_test_accounts:{type:"boolean"},having_predicates:{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},kind:{const:"RecordingsQuery",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},operand:{$ref:"#/definitions/FilterLogicalOperator",default:"AND"},order:{$ref:"#/definitions/RecordingOrder",default:"start_time"},person_uuid:{type:"string"},properties:{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},response:{$ref:"#/definitions/RecordingsQueryResponse"},session_ids:{items:{type:"string"},type:"array"},user_modified_filters:{type:"object"}},required:["kind"],type:"object"},RecordingsQueryResponse:{additionalProperties:!1,properties:{has_next:{type:"boolean"},results:{items:{$ref:"#/definitions/SessionRecordingType"},type:"array"}},required:["results","has_next"],type:"object"},RefreshType:{anyOf:[{type:"boolean"},{const:"async",type:"string"},{const:"async_except_on_cache_miss",type:"string"},{const:"blocking",type:"string"},{const:"force_async",type:"string"},{const:"force_blocking",type:"string"},{const:"force_cache",type:"string"},{const:"lazy_async",type:"string"}]},ResultCustomization:{anyOf:[{$ref:"#/definitions/ResultCustomizationByValue"},{$ref:"#/definitions/ResultCustomizationByPosition"}]},ResultCustomizationBase:{additionalProperties:!1,properties:{color:{$ref:"#/definitions/DataColorToken"}},required:["color"],type:"object"},ResultCustomizationBy:{enum:["value","position"],type:"string"},ResultCustomizationByPosition:{additionalProperties:!1,properties:{assignmentBy:{const:"position",type:"string"},color:{$ref:"#/definitions/DataColorToken"}},required:["assignmentBy","color"],type:"object"},ResultCustomizationByValue:{additionalProperties:!1,properties:{assignmentBy:{const:"value",type:"string"},color:{$ref:"#/definitions/DataColorToken"}},required:["assignmentBy","color"],type:"object"},RetentionEntity:{additionalProperties:!1,properties:{custom_name:{type:"string"},id:{type:["string","number"]},kind:{$ref:"#/definitions/RetentionEntityKind"},name:{type:"string"},order:{type:"integer"},properties:{description:"filters on the event",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},type:{$ref:"#/definitions/EntityType"},uuid:{type:"string"}},type:"object"},RetentionEntityKind:{enum:["ActionsNode","EventsNode"],type:"string"},RetentionFilter:{additionalProperties:!1,properties:{cumulative:{type:"boolean"},period:{$ref:"#/definitions/RetentionPeriod",default:"Day"},retentionReference:{description:"Whether retention is with regard to initial cohort size, or that of the previous period.",enum:["total","previous"],type:"string"},retentionType:{$ref:"#/definitions/RetentionType"},returningEntity:{$ref:"#/definitions/RetentionEntity"},showMean:{type:"boolean"},targetEntity:{$ref:"#/definitions/RetentionEntity"},totalIntervals:{$ref:"#/definitions/integer",default:11}},type:"object"},RetentionFilterLegacy:{additionalProperties:!1,description:"`RetentionFilterType` minus everything inherited from `FilterType`",properties:{cumulative:{type:"boolean"},period:{$ref:"#/definitions/RetentionPeriod"},retention_reference:{description:"Whether retention is with regard to initial cohort size, or that of the previous period.",enum:["total","previous"],type:"string"},retention_type:{$ref:"#/definitions/RetentionType"},returning_entity:{$ref:"#/definitions/RetentionEntity"},show_mean:{type:"boolean"},target_entity:{$ref:"#/definitions/RetentionEntity"},total_intervals:{type:"integer"}},type:"object"},RetentionPeriod:{enum:["Hour","Day","Week","Month"],type:"string"},RetentionQuery:{additionalProperties:!1,properties:{aggregation_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Groups aggregation"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},kind:{const:"RetentionQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/RetentionQueryResponse"},retentionFilter:{$ref:"#/definitions/RetentionFilter",description:"Properties specific to the retention insight"},samplingFactor:{description:"Sampling rate",type:["number","null"]}},required:["kind","retentionFilter"],type:"object"},RetentionQueryResponse:{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/RetentionResult"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},RetentionResult:{additionalProperties:!1,properties:{date:{format:"date-time",type:"string"},label:{type:"string"},values:{items:{$ref:"#/definitions/RetentionValue"},type:"array"}},required:["values","label","date"],type:"object"},RetentionType:{enum:["retention_recurring","retention_first_time"],type:"string"},RetentionValue:{additionalProperties:!1,properties:{count:{$ref:"#/definitions/integer"}},required:["count"],type:"object"},RevenueTrackingConfig:{additionalProperties:!1,properties:{events:{items:{$ref:"#/definitions/RevenueTrackingEventItem"},type:"array"}},required:["events"],type:"object"},RevenueTrackingEventItem:{additionalProperties:!1,properties:{eventName:{type:"string"},revenueProperty:{type:"string"}},required:["eventName","revenueProperty"],type:"object"},RootAssistantMessage:{anyOf:[{$ref:"#/definitions/VisualizationMessage"},{$ref:"#/definitions/ReasoningMessage"},{$ref:"#/definitions/AssistantMessage"},{$ref:"#/definitions/HumanMessage"},{$ref:"#/definitions/FailureMessage"}]},SamplingRate:{additionalProperties:!1,properties:{denominator:{type:"number"},numerator:{type:"number"}},required:["numerator"],type:"object"},SavedInsightNode:{additionalProperties:!1,properties:{allowSorting:{description:"Can the user click on column headers to sort the table? (default: true)",type:"boolean"},embedded:{description:"Query is embedded inside another bordered component",type:"boolean"},expandable:{description:"Can expand row to show raw event data (default: true)",type:"boolean"},full:{description:"Show with most visual options enabled. Used in insight scene.",type:"boolean"},hidePersonsModal:{type:"boolean"},kind:{const:"SavedInsightNode",type:"string"},propertiesViaUrl:{description:"Link properties via the URL (default: false)",type:"boolean"},shortId:{$ref:"#/definitions/InsightShortId"},showActions:{description:"Show the kebab menu at the end of the row",type:"boolean"},showColumnConfigurator:{description:"Show a button to configure the table's columns if possible",type:"boolean"},showCorrelationTable:{type:"boolean"},showDateRange:{description:"Show date range selector",type:"boolean"},showElapsedTime:{description:"Show the time it takes to run a query",type:"boolean"},showEventFilter:{description:"Include an event filter above the table (EventsNode only)",type:"boolean"},showExport:{description:"Show the export button",type:"boolean"},showFilters:{type:"boolean"},showHeader:{type:"boolean"},showHogQLEditor:{description:"Include a HogQL query editor above HogQL tables",type:"boolean"},showLastComputation:{type:"boolean"},showLastComputationRefresh:{type:"boolean"},showOpenEditorButton:{description:"Show a button to open the current query as a new insight. (default: true)",type:"boolean"},showPersistentColumnConfigurator:{description:"Show a button to configure and persist the table's default columns if possible",type:"boolean"},showPropertyFilter:{anyOf:[{type:"boolean"},{items:{$ref:"#/definitions/TaxonomicFilterGroupType"},type:"array"}],description:"Include a property filter above the table"},showReload:{description:"Show a reload button",type:"boolean"},showResults:{type:"boolean"},showResultsTable:{description:"Show a results table",type:"boolean"},showSavedQueries:{description:"Shows a list of saved queries",type:"boolean"},showSearch:{description:"Include a free text search field (PersonsNode only)",type:"boolean"},showTable:{type:"boolean"},showTestAccountFilters:{description:"Show filter to exclude test accounts",type:"boolean"},showTimings:{description:"Show a detailed query timing breakdown",type:"boolean"},suppressSessionAnalysisWarning:{type:"boolean"},vizSpecificOptions:{$ref:"#/definitions/VizSpecificOptions"}},required:["kind","shortId"],type:"object"},SessionAttributionExplorerQuery:{additionalProperties:!1,properties:{filters:{additionalProperties:!1,properties:{dateRange:{$ref:"#/definitions/DateRange"},properties:{items:{$ref:"#/definitions/SessionPropertyFilter"},type:"array"}},type:"object"},groupBy:{items:{$ref:"#/definitions/SessionAttributionGroupBy"},type:"array"},kind:{const:"SessionAttributionExplorerQuery",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},response:{$ref:"#/definitions/SessionAttributionExplorerQueryResponse"}},required:["groupBy","kind"],type:"object"},SessionAttributionExplorerQueryResponse:{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},SessionAttributionGroupBy:{enum:["ChannelType","Medium","Source","Campaign","AdIds","ReferringDomain","InitialURL"],type:"string"},SessionPropertyFilter:{additionalProperties:!1,properties:{key:{type:"string"},label:{type:"string"},operator:{$ref:"#/definitions/PropertyOperator"},type:{const:"session",type:"string"},value:{$ref:"#/definitions/PropertyFilterValue"}},required:["key","operator","type"],type:"object"},SessionRecordingType:{additionalProperties:!1,properties:{active_seconds:{type:"number"},activity_score:{description:"calculated on the backend so that we can sort by it, definition may change over time",type:"number"},click_count:{type:"number"},console_error_count:{type:"number"},console_log_count:{type:"number"},console_warn_count:{type:"number"},distinct_id:{type:"string"},email:{type:"string"},end_time:{description:"When the recording ends in ISO format.",type:"string"},id:{type:"string"},inactive_seconds:{type:"number"},keypress_count:{type:"number"},matching_events:{description:"List of matching events. *",items:{$ref:"#/definitions/MatchedRecording"},type:"array"},mouse_activity_count:{description:"count of all mouse activity in the recording, not just clicks",type:"number"},ongoing:{description:`whether we have received data for this recording in the last 5 minutes (assumes the recording was loaded from ClickHouse)
*`,type:"boolean"},person:{$ref:"#/definitions/PersonType"},recording_duration:{description:"Length of recording in seconds.",type:"number"},snapshot_source:{enum:["web","mobile","unknown"],type:"string"},start_time:{description:"When the recording starts in ISO format.",type:"string"},start_url:{type:"string"},storage:{description:"Where this recording information was loaded from",enum:["object_storage_lts","object_storage"],type:"string"},summary:{type:"string"},viewed:{description:"Whether this recording has been viewed already.",type:"boolean"}},required:["id","viewed","recording_duration","start_time","end_time","snapshot_source"],type:"object"},SessionsTimelineQuery:{additionalProperties:!1,properties:{after:{description:"Only fetch sessions that started after this timestamp (default: '-24h')",type:"string"},before:{description:"Only fetch sessions that started before this timestamp (default: '+5s')",type:"string"},kind:{const:"SessionsTimelineQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},personId:{description:"Fetch sessions only for a given person",type:"string"},response:{$ref:"#/definitions/SessionsTimelineQueryResponse"}},required:["kind"],type:"object"},SessionsTimelineQueryResponse:{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/TimelineEntry"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},StepOrderValue:{enum:["strict","unordered","ordered"],type:"string"},StickinessActorsQuery:{additionalProperties:!1,properties:{breakdown:{anyOf:[{type:"string"},{$ref:"#/definitions/BreakdownValueInt"},{items:{type:"string"},type:"array"}]},compare:{enum:["current","previous"],type:"string"},day:{anyOf:[{type:"string"},{$ref:"#/definitions/Day"}]},includeRecordings:{type:"boolean"},interval:{$ref:"#/definitions/integer",description:"An interval selected out of available intervals in source query."},kind:{const:"InsightActorsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},operator:{$ref:"#/definitions/StickinessOperator"},response:{$ref:"#/definitions/ActorsQueryResponse"},series:{$ref:"#/definitions/integer"},source:{$ref:"#/definitions/InsightQuerySource"},status:{type:"string"}},required:["kind","source"],type:"object"},StickinessFilter:{additionalProperties:!1,properties:{display:{$ref:"#/definitions/ChartDisplayType"},hiddenLegendIndexes:{items:{$ref:"#/definitions/integer"},type:"array"},showLegend:{type:"boolean"},showMultipleYAxes:{type:"boolean"},showValuesOnSeries:{type:"boolean"},stickinessCriteria:{additionalProperties:!1,properties:{operator:{$ref:"#/definitions/StickinessOperator"},value:{$ref:"#/definitions/integer"}},required:["operator","value"],type:"object"}},type:"object"},StickinessFilterLegacy:{additionalProperties:!1,description:"`StickinessFilterType` minus everything inherited from `FilterType` and persons modal related params",properties:{compare:{type:"boolean"},compare_to:{type:"string"},display:{$ref:"#/definitions/ChartDisplayType"},hidden_legend_keys:{additionalProperties:{anyOf:[{type:"boolean"},{not:{}}]},type:"object"},show_legend:{type:"boolean"},show_multiple_y_axes:{type:"boolean"},show_values_on_series:{type:"boolean"}},type:"object"},StickinessOperator:{enum:["gte","lte","exact"],type:"string"},StickinessQuery:{additionalProperties:!1,properties:{compareFilter:{$ref:"#/definitions/CompareFilter",description:"Compare to date range"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},interval:{$ref:"#/definitions/IntervalType",default:"day",description:"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`"},intervalCount:{$ref:"#/definitions/integer",description:"How many intervals comprise a period. Only used for cohorts, otherwise default 1."},kind:{const:"StickinessQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/StickinessQueryResponse"},samplingFactor:{description:"Sampling rate",type:["number","null"]},series:{description:"Events and actions to include",items:{$ref:"#/definitions/AnyEntityNode"},type:"array"},stickinessFilter:{$ref:"#/definitions/StickinessFilter",description:"Properties specific to the stickiness insight"}},required:["kind","series"],type:"object"},StickinessQueryResponse:{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{type:"object"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},SuggestedQuestionsQuery:{additionalProperties:!1,properties:{kind:{const:"SuggestedQuestionsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},response:{$ref:"#/definitions/SuggestedQuestionsQueryResponse"}},required:["kind"],type:"object"},SuggestedQuestionsQueryResponse:{additionalProperties:!1,properties:{questions:{items:{type:"string"},type:"array"}},required:["questions"],type:"object"},TableSettings:{additionalProperties:!1,properties:{columns:{items:{$ref:"#/definitions/ChartAxis"},type:"array"},conditionalFormatting:{items:{$ref:"#/definitions/ConditionalFormattingRule"},type:"array"}},type:"object"},TaxonomicFilterGroupType:{enum:["metadata","actions","cohorts","cohorts_with_all","data_warehouse","data_warehouse_properties","data_warehouse_person_properties","elements","events","event_properties","event_feature_flags","numerical_event_properties","person_properties","pageview_urls","screens","custom_events","wildcard","groups","persons","feature_flags","insights","experiments","plugins","dashboards","name_groups","session_properties","hogql_expression","notebooks","log_entries","replay"],type:"string"},TeamTaxonomyItem:{additionalProperties:!1,properties:{count:{$ref:"#/definitions/integer"},event:{type:"string"}},required:["event","count"],type:"object"},TeamTaxonomyQuery:{additionalProperties:!1,properties:{kind:{const:"TeamTaxonomyQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},response:{$ref:"#/definitions/TeamTaxonomyQueryResponse"}},required:["kind"],type:"object"},TeamTaxonomyQueryResponse:{additionalProperties:!1,description:"All analytics query responses must inherit from this.",properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{$ref:"#/definitions/TeamTaxonomyResponse"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},TeamTaxonomyResponse:{items:{$ref:"#/definitions/TeamTaxonomyItem"},type:"array"},TestBasicQueryResponse:{additionalProperties:!1,deprecated:"Only exported for use in test_query_runner.py! Don't use anywhere else.",properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},TestCachedBasicQueryResponse:{additionalProperties:!1,deprecated:"Only exported for use in test_query_runner.py! Don't use anywhere else.",properties:{cache_key:{type:"string"},cache_target_age:{format:"date-time",type:"string"},calculation_trigger:{description:"What triggered the calculation of the query, leave empty if user/immediate",type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},is_cached:{type:"boolean"},last_refresh:{format:"date-time",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},next_allowed_client_refresh:{format:"date-time",type:"string"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},timezone:{type:"string"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["cache_key","is_cached","last_refresh","next_allowed_client_refresh","results","timezone"],type:"object"},TimelineEntry:{additionalProperties:!1,properties:{events:{items:{$ref:"#/definitions/EventType"},type:"array"},recording_duration_s:{description:"Duration of the recording in seconds.",type:"number"},sessionId:{description:"Session ID. None means out-of-session events",type:"string"}},required:["events"],type:"object"},TracesQuery:{additionalProperties:!1,properties:{dateRange:{$ref:"#/definitions/DateRange"},filterTestAccounts:{type:"boolean"},kind:{const:"TracesQuery",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},properties:{description:"Properties configurable in the interface",items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},response:{$ref:"#/definitions/TracesQueryResponse"},traceId:{type:"string"}},required:["kind"],type:"object"},TracesQueryResponse:{additionalProperties:!1,properties:{columns:{items:{type:"string"},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/LLMTrace"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},TrendsAlertConfig:{additionalProperties:!1,properties:{check_ongoing_interval:{type:"boolean"},series_index:{$ref:"#/definitions/integer"},type:{const:"TrendsAlertConfig",type:"string"}},required:["type","series_index"],type:"object"},TrendsFilter:{additionalProperties:!1,properties:{aggregationAxisFormat:{$ref:"#/definitions/AggregationAxisFormat",default:"numeric"},aggregationAxisPostfix:{type:"string"},aggregationAxisPrefix:{type:"string"},breakdown_histogram_bin_count:{type:"number"},decimalPlaces:{type:"number"},display:{$ref:"#/definitions/ChartDisplayType",default:"ActionsLineGraph"},formula:{type:"string"},formulas:{description:"List of formulas to apply to the data. Takes precedence over formula if both are set.",items:{type:"string"},type:"array"},goalLines:{description:"Goal Lines",items:{$ref:"#/definitions/GoalLine"},type:"array"},hiddenLegendIndexes:{items:{$ref:"#/definitions/integer"},type:"array"},resultCustomizationBy:{$ref:"#/definitions/ResultCustomizationBy",default:"value",description:"Wether result datasets are associated by their values or by their order."},resultCustomizations:{anyOf:[{additionalProperties:{$ref:"#/definitions/ResultCustomizationByValue"},type:"object"},{additionalProperties:{$ref:"#/definitions/ResultCustomizationByPosition"},propertyNames:{type:"string"},type:"object"}],description:"Customizations for the appearance of result datasets."},showAlertThresholdLines:{default:!1,type:"boolean"},showLabelsOnSeries:{type:"boolean"},showLegend:{default:!1,type:"boolean"},showMultipleYAxes:{default:!1,type:"boolean"},showPercentStackView:{default:!1,type:"boolean"},showValuesOnSeries:{default:!1,type:"boolean"},smoothingIntervals:{$ref:"#/definitions/integer",default:1},yAxisScaleType:{enum:["log10","linear"],type:"string"}},type:"object"},TrendsFilterLegacy:{additionalProperties:!1,description:"`TrendsFilterType` minus everything inherited from `FilterType` and `shown_as`",properties:{aggregation_axis_format:{$ref:"#/definitions/AggregationAxisFormat"},aggregation_axis_postfix:{type:"string"},aggregation_axis_prefix:{type:"string"},breakdown_histogram_bin_count:{type:"number"},compare:{type:"boolean"},compare_to:{type:"string"},decimal_places:{type:"number"},display:{$ref:"#/definitions/ChartDisplayType"},formula:{type:"string"},hidden_legend_keys:{additionalProperties:{anyOf:[{type:"boolean"},{not:{}}]},type:"object"},show_alert_threshold_lines:{type:"boolean"},show_labels_on_series:{type:"boolean"},show_legend:{type:"boolean"},show_multiple_y_axes:{type:"boolean"},show_percent_stack_view:{type:"boolean"},show_values_on_series:{type:"boolean"},smoothing_intervals:{type:"number"},y_axis_scale_type:{enum:["log10","linear"],type:"string"}},type:"object"},TrendsQuery:{additionalProperties:!1,properties:{aggregation_group_type_index:{anyOf:[{$ref:"#/definitions/integer"},{type:"null"}],description:"Groups aggregation"},breakdownFilter:{$ref:"#/definitions/BreakdownFilter",description:"Breakdown of the events and actions"},compareFilter:{$ref:"#/definitions/CompareFilter",description:"Compare to date range"},conversionGoal:{anyOf:[{$ref:"#/definitions/WebAnalyticsConversionGoal"},{type:"null"}],description:"Whether we should be comparing against a specific conversion goal"},dataColorTheme:{description:"Colors used in the insight's visualization",type:["number","null"]},dateRange:{$ref:"#/definitions/DateRange",description:"Date range for the query"},filterTestAccounts:{default:!1,description:"Exclude internal and test users by applying the respective filters",type:"boolean"},interval:{$ref:"#/definitions/IntervalType",default:"day",description:"Granularity of the response. Can be one of `hour`, `day`, `week` or `month`"},kind:{const:"TrendsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},properties:{anyOf:[{items:{$ref:"#/definitions/AnyPropertyFilter"},type:"array"},{$ref:"#/definitions/PropertyGroupFilter"}],default:[],description:"Property filters for all series"},response:{$ref:"#/definitions/TrendsQueryResponse"},samplingFactor:{description:"Sampling rate",type:["number","null"]},series:{description:"Events and actions to include",items:{$ref:"#/definitions/AnyEntityNode"},type:"array"},trendsFilter:{$ref:"#/definitions/TrendsFilter",description:"Properties specific to the trends insight"}},required:["kind","series"],type:"object"},TrendsQueryResponse:{additionalProperties:!1,properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{description:"Wether more breakdown values are available.",type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{type:"object"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},VisualizationMessage:{additionalProperties:!1,properties:{answer:{anyOf:[{$ref:"#/definitions/AssistantTrendsQuery"},{$ref:"#/definitions/AssistantFunnelsQuery"},{$ref:"#/definitions/AssistantRetentionQuery"}]},id:{type:"string"},initiator:{type:"string"},plan:{type:"string"},type:{const:"ai/viz",type:"string"}},required:["type"],type:"object"},VizSpecificOptions:{additionalProperties:!1,description:"Chart specific rendering options. Use ChartRenderingMetadata for non-serializable values, e.g. onClick handlers",properties:{ActionsPie:{additionalProperties:!1,properties:{disableHoverOffset:{type:"boolean"},hideAggregation:{type:"boolean"}},type:"object"},RETENTION:{additionalProperties:!1,properties:{hideLineGraph:{type:"boolean"},hideSizeColumn:{type:"boolean"},useSmallLayout:{type:"boolean"}},type:"object"}},type:"object"},WebAnalyticsConversionGoal:{anyOf:[{$ref:"#/definitions/ActionConversionGoal"},{$ref:"#/definitions/CustomEventConversionGoal"}]},WebAnalyticsOrderBy:{items:[{$ref:"#/definitions/WebAnalyticsOrderByFields"},{$ref:"#/definitions/WebAnalyticsOrderByDirection"}],maxItems:2,minItems:2,type:"array"},WebAnalyticsOrderByDirection:{enum:["ASC","DESC"],type:"string"},WebAnalyticsOrderByFields:{enum:["Visitors","Views","Clicks","BounceRate","AverageScrollPercentage","ScrollGt80Percentage","TotalConversions","UniqueConversions","ConversionRate","ConvertingUsers"],type:"string"},WebAnalyticsPropertyFilter:{anyOf:[{$ref:"#/definitions/EventPropertyFilter"},{$ref:"#/definitions/PersonPropertyFilter"},{$ref:"#/definitions/SessionPropertyFilter"}]},WebAnalyticsPropertyFilters:{items:{$ref:"#/definitions/WebAnalyticsPropertyFilter"},type:"array"},WebExternalClicksTableQuery:{additionalProperties:!1,properties:{compareFilter:{$ref:"#/definitions/CompareFilter"},conversionGoal:{anyOf:[{$ref:"#/definitions/WebAnalyticsConversionGoal"},{type:"null"}]},dateRange:{$ref:"#/definitions/DateRange"},doPathCleaning:{type:"boolean"},filterTestAccounts:{type:"boolean"},includeRevenue:{type:"boolean"},kind:{const:"WebExternalClicksTableQuery",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},orderBy:{$ref:"#/definitions/WebAnalyticsOrderBy"},properties:{$ref:"#/definitions/WebAnalyticsPropertyFilters"},response:{$ref:"#/definitions/WebExternalClicksTableQueryResponse"},sampling:{additionalProperties:!1,properties:{enabled:{type:"boolean"},forceSamplingRate:{$ref:"#/definitions/SamplingRate"}},type:"object"},stripQueryParams:{type:"boolean"},useSessionsTable:{deprecated:"ignored, always treated as enabled *",type:"boolean"}},required:["kind","properties"],type:"object"},WebExternalClicksTableQueryResponse:{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},WebGoalsQuery:{additionalProperties:!1,properties:{compareFilter:{$ref:"#/definitions/CompareFilter"},conversionGoal:{anyOf:[{$ref:"#/definitions/WebAnalyticsConversionGoal"},{type:"null"}]},dateRange:{$ref:"#/definitions/DateRange"},doPathCleaning:{type:"boolean"},filterTestAccounts:{type:"boolean"},includeRevenue:{type:"boolean"},kind:{const:"WebGoalsQuery",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},orderBy:{$ref:"#/definitions/WebAnalyticsOrderBy"},properties:{$ref:"#/definitions/WebAnalyticsPropertyFilters"},response:{$ref:"#/definitions/WebGoalsQueryResponse"},sampling:{additionalProperties:!1,properties:{enabled:{type:"boolean"},forceSamplingRate:{$ref:"#/definitions/SamplingRate"}},type:"object"},useSessionsTable:{deprecated:"ignored, always treated as enabled *",type:"boolean"}},required:["kind","properties"],type:"object"},WebGoalsQueryResponse:{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},WebOverviewItem:{additionalProperties:!1,properties:{changeFromPreviousPct:{type:"number"},isIncreaseBad:{type:"boolean"},key:{type:"string"},kind:{$ref:"#/definitions/WebOverviewItemKind"},previous:{type:"number"},value:{type:"number"}},required:["key","kind"],type:"object"},WebOverviewItemKind:{enum:["unit","duration_s","percentage","currency"],type:"string"},WebOverviewQuery:{additionalProperties:!1,properties:{compareFilter:{$ref:"#/definitions/CompareFilter"},conversionGoal:{anyOf:[{$ref:"#/definitions/WebAnalyticsConversionGoal"},{type:"null"}]},dateRange:{$ref:"#/definitions/DateRange"},doPathCleaning:{type:"boolean"},filterTestAccounts:{type:"boolean"},includeRevenue:{type:"boolean"},kind:{const:"WebOverviewQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},orderBy:{$ref:"#/definitions/WebAnalyticsOrderBy"},properties:{$ref:"#/definitions/WebAnalyticsPropertyFilters"},response:{$ref:"#/definitions/WebOverviewQueryResponse"},sampling:{additionalProperties:!1,properties:{enabled:{type:"boolean"},forceSamplingRate:{$ref:"#/definitions/SamplingRate"}},type:"object"},useSessionsTable:{deprecated:"ignored, always treated as enabled *",type:"boolean"}},required:["kind","properties"],type:"object"},WebOverviewQueryResponse:{additionalProperties:!1,properties:{dateFrom:{type:"string"},dateTo:{type:"string"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebOverviewItem"},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},WebStatsBreakdown:{enum:["Page","InitialPage","ExitPage","ExitClick","ScreenName","InitialChannelType","InitialReferringDomain","InitialUTMSource","InitialUTMCampaign","InitialUTMMedium","InitialUTMTerm","InitialUTMContent","InitialUTMSourceMediumCampaign","Browser","OS","Viewport","DeviceType","Country","Region","City","Timezone","Language"],type:"string"},WebStatsTableQuery:{additionalProperties:!1,properties:{breakdownBy:{$ref:"#/definitions/WebStatsBreakdown"},compareFilter:{$ref:"#/definitions/CompareFilter"},conversionGoal:{anyOf:[{$ref:"#/definitions/WebAnalyticsConversionGoal"},{type:"null"}]},dateRange:{$ref:"#/definitions/DateRange"},doPathCleaning:{type:"boolean"},filterTestAccounts:{type:"boolean"},includeBounceRate:{type:"boolean"},includeRevenue:{type:"boolean"},includeScrollDepth:{type:"boolean"},kind:{const:"WebStatsTableQuery",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},orderBy:{$ref:"#/definitions/WebAnalyticsOrderBy"},properties:{$ref:"#/definitions/WebAnalyticsPropertyFilters"},response:{$ref:"#/definitions/WebStatsTableQueryResponse"},sampling:{additionalProperties:!1,properties:{enabled:{type:"boolean"},forceSamplingRate:{$ref:"#/definitions/SamplingRate"}},type:"object"},useSessionsTable:{deprecated:"ignored, always treated as enabled *",type:"boolean"}},required:["breakdownBy","kind","properties"],type:"object"},WebStatsTableQueryResponse:{additionalProperties:!1,properties:{columns:{items:{},type:"array"},error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hasMore:{type:"boolean"},hogql:{description:"Generated HogQL query.",type:"string"},limit:{$ref:"#/definitions/integer"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},offset:{$ref:"#/definitions/integer"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{},type:"array"},samplingRate:{$ref:"#/definitions/SamplingRate"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"},types:{items:{},type:"array"}},required:["results"],type:"object"},WebVitalsItem:{additionalProperties:!1,properties:{action:{$ref:"#/definitions/WebVitalsItemAction"},data:{items:{type:"number"},type:"array"},days:{items:{type:"string"},type:"array"}},required:["data","days","action"],type:"object"},WebVitalsItemAction:{additionalProperties:!1,properties:{custom_name:{$ref:"#/definitions/WebVitalsMetric"},math:{$ref:"#/definitions/WebVitalsPercentile"}},required:["custom_name","math"],type:"object"},WebVitalsMetric:{enum:["INP","LCP","CLS","FCP"],type:"string"},WebVitalsMetricBand:{enum:["good","needs_improvements","poor"],type:"string"},WebVitalsPathBreakdownQuery:{additionalProperties:!1,properties:{compareFilter:{$ref:"#/definitions/CompareFilter"},conversionGoal:{anyOf:[{$ref:"#/definitions/WebAnalyticsConversionGoal"},{type:"null"}]},dateRange:{$ref:"#/definitions/DateRange"},doPathCleaning:{type:"boolean"},filterTestAccounts:{type:"boolean"},includeRevenue:{type:"boolean"},kind:{const:"WebVitalsPathBreakdownQuery",type:"string"},metric:{$ref:"#/definitions/WebVitalsMetric"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},orderBy:{$ref:"#/definitions/WebAnalyticsOrderBy"},percentile:{$ref:"#/definitions/WebVitalsPercentile"},properties:{$ref:"#/definitions/WebAnalyticsPropertyFilters"},response:{$ref:"#/definitions/WebVitalsPathBreakdownQueryResponse"},sampling:{additionalProperties:!1,properties:{enabled:{type:"boolean"},forceSamplingRate:{$ref:"#/definitions/SamplingRate"}},type:"object"},thresholds:{items:{type:"number"},maxItems:2,minItems:2,type:"array"},useSessionsTable:{deprecated:"ignored, always treated as enabled *",type:"boolean"}},required:["kind","metric","percentile","properties","thresholds"],type:"object"},WebVitalsPathBreakdownQueryResponse:{additionalProperties:!1,description:"All analytics query responses must inherit from this.",properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebVitalsPathBreakdownResult"},maxItems:1,minItems:1,type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},WebVitalsPathBreakdownResult:{additionalProperties:!1,properties:{good:{items:{$ref:"#/definitions/WebVitalsPathBreakdownResultItem"},type:"array"},needs_improvements:{items:{$ref:"#/definitions/WebVitalsPathBreakdownResultItem"},type:"array"},poor:{items:{$ref:"#/definitions/WebVitalsPathBreakdownResultItem"},type:"array"}},required:["good","needs_improvements","poor"],type:"object"},WebVitalsPathBreakdownResultItem:{additionalProperties:!1,properties:{path:{type:"string"},value:{type:"number"}},required:["path","value"],type:"object"},WebVitalsPercentile:{enum:["p75","p90","p99"],type:"string"},WebVitalsQuery:{additionalProperties:!1,properties:{compareFilter:{$ref:"#/definitions/CompareFilter"},conversionGoal:{anyOf:[{$ref:"#/definitions/WebAnalyticsConversionGoal"},{type:"null"}]},dateRange:{$ref:"#/definitions/DateRange"},doPathCleaning:{type:"boolean"},filterTestAccounts:{type:"boolean"},includeRevenue:{type:"boolean"},kind:{const:"WebVitalsQuery",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},orderBy:{$ref:"#/definitions/WebAnalyticsOrderBy"},properties:{$ref:"#/definitions/WebAnalyticsPropertyFilters"},response:{$ref:"#/definitions/WebGoalsQueryResponse"},sampling:{additionalProperties:!1,properties:{enabled:{type:"boolean"},forceSamplingRate:{$ref:"#/definitions/SamplingRate"}},type:"object"},source:{$ref:"#/definitions/InsightQueryNode"},useSessionsTable:{deprecated:"ignored, always treated as enabled *",type:"boolean"}},required:["kind","properties","source"],type:"object"},WebVitalsQueryResponse:{additionalProperties:!1,description:"All analytics query responses must inherit from this.",properties:{error:{description:"Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",type:"string"},hogql:{description:"Generated HogQL query.",type:"string"},modifiers:{$ref:"#/definitions/HogQLQueryModifiers",description:"Modifiers used when performing the query"},query_status:{$ref:"#/definitions/QueryStatus",description:"Query status indicates whether next to the provided data, a query is still running."},results:{items:{$ref:"#/definitions/WebVitalsItem"},type:"array"},timings:{description:"Measured timings for different parts of the query generation process",items:{$ref:"#/definitions/QueryTiming"},type:"array"}},required:["results"],type:"object"},YAxisSettings:{additionalProperties:!1,properties:{scale:{enum:["linear","logarithmic"],type:"string"},startAtZero:{description:"Whether the Y axis should start at zero",type:"boolean"}},type:"object"},integer:{type:"integer"}}};var dt=new Ur.default({allowUnionTypes:!0});dt.addSchema(Zr);var fl=e=>{let t=dt.getSchema("#/definitions/AnyPropertyFilter");if(!t)throw new Error("Could not find validator for AnyPropertyFilter");return Array.isArray(e)?e.every(i=>t(i)):!1},cl=e=>{let t=dt.getSchema("#/definitions/WebAnalyticsPropertyFilters");if(!t)throw new Error("Could not find validator for WebAnalyticsPropertyFilters");return t(e)},gl=e=>{let t=dt.getSchema("#/definitions/SessionPropertyFilter");if(!t)throw new Error("Could not find validator for SessionPropertyFilter");return Array.isArray(e)?e.every(i=>t(i)):!1};export{yr as a,Qs as b,jr as c,pr as d,lr as e,un as f,Pr as g,Ar as h,Mr as i,sl as j,Zr as k,fl as l,cl as m,gl as n};
//# sourceMappingURL=/static/chunk-NKVVAJQ7.js.map
