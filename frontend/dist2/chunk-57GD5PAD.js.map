{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/ftl.js"],
  "sourcesContent": ["'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ftl\nftl.displayName = 'ftl'\nftl.aliases = []\nfunction ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n"],
  "mappings": "iHAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAC,IAAAC,IAAAC,IACA,IAAIC,EAA4B,IAChCJ,EAAO,QAAUK,EACjBA,EAAI,YAAc,MAClBA,EAAI,QAAU,CAAC,EACf,SAASA,EAAIC,EAAO,CAClBA,EAAM,SAASF,CAAyB,EACtC,SAAUE,EAAO,CAMjB,QAHIC,EACF,iGACG,OACIC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAWA,EAAS,QAAQ,UAAW,UAAY,CACjD,OAAOA,CACT,CAAC,EAEHA,EAAWA,EAAS,QAAQ,UAAW,UAAU,MAAM,EACvD,IAAIF,EAAM,CACR,QAAS,kBACT,OAAQ,CACN,CAEE,QAAS,iCACT,OAAQ,EACV,EACA,CACE,QAAS,OACP,+DAA+D,OAAO,QACpE,UACA,UAAY,CACV,OAAOE,CACT,CACF,CACF,EACA,OAAQ,GACR,OAAQ,CACN,cAAe,CACb,QAAS,OACP,oDAAoD,OAAO,QACzD,UACA,UAAY,CACV,OAAOA,CACT,CACF,CACF,EACA,WAAY,GACZ,OAAQ,CACN,4BAA6B,CAC3B,QAAS,YACT,MAAO,aACT,EACA,KAAM,IACR,CACF,CACF,CACF,CACF,EACA,QAAS,aACT,QAAS,qBACT,mBAAoB,CAClB,QAAS,uBACT,WAAY,GACZ,MAAO,UACT,EACA,SAAU,iBACV,OAAQ,oBACR,SACE,4EACF,YAAa,eACf,EACAF,EAAI,OAAO,CAAC,EAAE,OAAO,cAAc,OAAO,KAAOA,EACjDC,EAAM,UAAU,IAAM,CACpB,cAAe,CAEb,QAAS,eACT,MAAO,SACT,EACA,gBAAiB,CACf,QAAS,cACT,OAAQ,CACN,UAAW,CACT,QAAS,uBACT,WAAY,GACZ,MAAO,SACT,EACA,YAAa,cACb,QAAS,CACP,QAAS,eACT,MAAO,MACP,OAAQD,CACV,CACF,CACF,EACA,oBAAqB,CACnB,QAAS,kBACT,OAAQ,CACN,YAAa,YACb,QAAS,CACP,QAAS,eACT,MAAO,MACP,OAAQA,CACV,CACF,CACF,CACF,EACAC,EAAM,MAAM,IAAI,kBAAmB,SAAUG,EAAK,CAEhD,IAAIC,EAAU,OACZ,mEAAmE,OAAO,QACxE,UACA,UAAY,CACV,OAAOH,CACT,CACF,EACA,IACF,EACAD,EAAM,UAAU,mBAAmB,EAAE,kBACnCG,EACA,MACAC,CACF,CACF,CAAC,EACDJ,EAAM,MAAM,IAAI,iBAAkB,SAAUG,EAAK,CAC/CH,EAAM,UAAU,mBAAmB,EAAE,qBAAqBG,EAAK,KAAK,CACtE,CAAC,CACH,EAAGH,CAAK,CACV",
  "names": ["require_ftl", "__commonJSMin", "exports", "module", "init_dirname", "init_buffer", "init_process", "refractorMarkupTemplating", "ftl", "Prism", "FTL_EXPR", "i", "env", "pattern"]
}
