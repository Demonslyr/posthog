{
  "version": 3,
  "sources": ["../../products/early_access_features/frontend/EarlyAccessFeatures.tsx"],
  "sourcesContent": ["import { LemonButton, LemonTable, LemonTag } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { router } from 'kea-router'\nimport { PageHeader } from 'lib/components/PageHeader'\nimport { ProductIntroduction } from 'lib/components/ProductIntroduction/ProductIntroduction'\nimport { LemonTableLink } from 'lib/lemon-ui/LemonTable/LemonTableLink'\nimport { SceneExport } from 'scenes/sceneTypes'\nimport { urls } from 'scenes/urls'\n\nimport { EarlyAccessFeatureType, ProductKey } from '~/types'\n\nimport { earlyAccessFeaturesLogic } from './earlyAccessFeaturesLogic'\n\nexport const scene: SceneExport = {\n    component: EarlyAccessFeatures,\n    logic: earlyAccessFeaturesLogic,\n}\n\nconst STAGES_IN_ORDER: Record<EarlyAccessFeatureType['stage'], number> = {\n    draft: 0,\n    concept: 1,\n    alpha: 2,\n    beta: 3,\n    'general-availability': 4,\n    archived: 5,\n}\n\nexport function EarlyAccessFeatures(): JSX.Element {\n    const { earlyAccessFeatures, earlyAccessFeaturesLoading } = useValues(earlyAccessFeaturesLogic)\n    const shouldShowEmptyState = earlyAccessFeatures.length == 0 && !earlyAccessFeaturesLoading\n\n    return (\n        <>\n            <PageHeader\n                buttons={\n                    <LemonButton type=\"primary\" to={urls.earlyAccessFeature('new')}>\n                        New feature\n                    </LemonButton>\n                }\n                delimited\n            />\n            <ProductIntroduction\n                productName=\"Early access features\"\n                productKey={ProductKey.EARLY_ACCESS_FEATURES}\n                thingName=\"feature\"\n                description=\"Allow your users to individually enable or disable features that are in public beta.\"\n                isEmpty={shouldShowEmptyState}\n                docsURL=\"https://posthog.com/docs/feature-flags/early-access-feature-management\"\n                action={() => router.actions.push(urls.earlyAccessFeature('new'))}\n            />\n            {!shouldShowEmptyState && (\n                <LemonTable\n                    loading={earlyAccessFeaturesLoading}\n                    columns={[\n                        {\n                            title: 'Name',\n                            key: 'name',\n                            render(_, feature) {\n                                return (\n                                    <LemonTableLink\n                                        title={feature.name}\n                                        description={feature.description}\n                                        to={urls.earlyAccessFeature(feature.id)}\n                                    />\n                                )\n                            },\n                            sorter: (a, b) => a.name.localeCompare(b.name),\n                        },\n                        {\n                            title: 'Stage',\n                            dataIndex: 'stage',\n                            render(_, { stage }) {\n                                return (\n                                    <LemonTag\n                                        type={\n                                            stage === 'beta'\n                                                ? 'warning'\n                                                : stage === 'general-availability'\n                                                ? 'success'\n                                                : 'default'\n                                        }\n                                        className=\"uppercase cursor-default\"\n                                    >\n                                        {stage}\n                                    </LemonTag>\n                                )\n                            },\n                            sorter: (a, b) => STAGES_IN_ORDER[a.stage] - STAGES_IN_ORDER[b.stage],\n                        },\n                    ]}\n                    dataSource={earlyAccessFeatures}\n                />\n            )}\n        </>\n    )\n}\n"],
  "mappings": "6lCAAAA,IAAAC,IAAAC,IACA,IAAAC,EAA0B,OAC1BC,EAAuB,OA8Bf,IAAAC,EAAA,OAnBKC,EAAqB,CAC9B,UAAWC,EACX,MAAOC,CACX,EAEMC,EAAmE,CACrE,MAAO,EACP,QAAS,EACT,MAAO,EACP,KAAM,EACN,uBAAwB,EACxB,SAAU,CACd,EAEO,SAASF,GAAmC,CAC/C,GAAM,CAAE,oBAAAG,EAAqB,2BAAAC,CAA2B,KAAI,aAAUH,CAAwB,EACxFI,EAAuBF,EAAoB,QAAU,GAAK,CAACC,EAEjE,SACI,oBACI,oBAACE,EAAA,CACG,WACI,OAACC,EAAA,CAAY,KAAK,UAAU,GAAIC,EAAK,mBAAmB,KAAK,EAAG,uBAEhE,EAEJ,UAAS,GACb,KACA,OAACC,EAAA,CACG,YAAY,wBACZ,mCACA,UAAU,UACV,YAAY,uFACZ,QAASJ,EACT,QAAQ,yEACR,OAAQ,IAAM,SAAO,QAAQ,KAAKG,EAAK,mBAAmB,KAAK,CAAC,EACpE,EACC,CAACH,MACE,OAACK,EAAA,CACG,QAASN,EACT,QAAS,CACL,CACI,MAAO,OACP,IAAK,OACL,OAAOO,EAAGC,EAAS,CACf,SACI,OAACC,EAAA,CACG,MAAOD,EAAQ,KACf,YAAaA,EAAQ,YACrB,GAAIJ,EAAK,mBAAmBI,EAAQ,EAAE,EAC1C,CAER,EACA,OAAQ,CAACE,EAAGC,IAAMD,EAAE,KAAK,cAAcC,EAAE,IAAI,CACjD,EACA,CACI,MAAO,QACP,UAAW,QACX,OAAOJ,EAAG,CAAE,MAAAK,CAAM,EAAG,CACjB,SACI,OAACC,EAAA,CACG,KACID,IAAU,OACJ,UACAA,IAAU,uBACV,UACA,UAEV,UAAU,2BAET,SAAAA,EACL,CAER,EACA,OAAQ,CAACF,EAAGC,IAAMb,EAAgBY,EAAE,KAAK,EAAIZ,EAAgBa,EAAE,KAAK,CACxE,CACJ,EACA,WAAYZ,EAChB,GAER,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_router", "import_jsx_runtime", "scene", "EarlyAccessFeatures", "earlyAccessFeaturesLogic", "STAGES_IN_ORDER", "earlyAccessFeatures", "earlyAccessFeaturesLoading", "shouldShowEmptyState", "PageHeader", "LemonButton", "urls", "ProductIntroduction", "LemonTable", "_", "feature", "LemonTableLink", "a", "b", "stage", "LemonTag"]
}
