{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/typoscript.js"],
  "sourcesContent": ["'use strict'\n\nmodule.exports = typoscript\ntyposcript.displayName = 'typoscript'\ntyposcript.aliases = ['tsconfig']\nfunction typoscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/\n    Prism.languages.typoscript = {\n      comment: [\n        {\n          // multiline comments /* */\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true\n        },\n        {\n          // double-slash comments - ignored when backslashes or colon is found in front\n          // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n          pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // hash comments - ignored when leading quote is found for hex colors in strings\n          pattern: /(^|[^\"'])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      function: [\n        {\n          // old include style\n          pattern:\n            /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n          inside: {\n            string: {\n              pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n              inside: {\n                keyword: keywords\n              }\n            },\n            keyword: {\n              pattern: /INCLUDE_TYPOSCRIPT/\n            }\n          }\n        },\n        {\n          // new include style\n          pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n          inside: {\n            string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n          }\n        }\n      ],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^\\d+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b\\d+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    }\n    Prism.languages.tsconfig = Prism.languages.typoscript\n  })(Prism)\n}\n"],
  "mappings": "mEAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAC,IAAAC,IAAAC,IAEAH,EAAO,QAAUI,EACjBA,EAAW,YAAc,aACzBA,EAAW,QAAU,CAAC,UAAU,EAChC,SAASA,EAAWC,EAAO,EACvB,SAAUA,EAAO,CACjB,IAAIC,EACF,gcACFD,EAAM,UAAU,WAAa,CAC3B,QAAS,CACP,CAEE,QAAS,kCACT,WAAY,EACd,EACA,CAGE,QAAS,2CACT,WAAY,GACZ,OAAQ,EACV,EACA,CAEE,QAAS,eACT,WAAY,GACZ,OAAQ,EACV,CACF,EACA,SAAU,CACR,CAEE,QACE,sEACF,OAAQ,CACN,OAAQ,CACN,QAAS,0BACT,OAAQ,CACN,QAASC,CACX,CACF,EACA,QAAS,CACP,QAAS,oBACX,CACF,CACF,EACA,CAEE,QAAS,wCACT,OAAQ,CACN,OAAQ,yBACV,CACF,CACF,EACA,OAAQ,CACN,QAAS,+BACT,WAAY,GACZ,OAAQ,CACN,SAAU,WAEV,QAASA,EACT,OAAQ,QACR,YAAa,OACf,CACF,EACA,QAASA,EACT,OAAQ,CAEN,QAAS,gBACT,OAAQ,CACN,SAAU,OACZ,CACF,EACA,IAAK,CACH,QAAS,iBACT,OAAQ,CACN,YAAa,IACf,CACF,EACA,YAAa,iBACb,SAAU,8CACZ,EACAD,EAAM,UAAU,SAAWA,EAAM,UAAU,UAC7C,GAAGA,CAAK,CACV",
  "names": ["require_typoscript", "__commonJSMin", "exports", "module", "init_dirname", "init_buffer", "init_process", "typoscript", "Prism", "keywords"]
}
