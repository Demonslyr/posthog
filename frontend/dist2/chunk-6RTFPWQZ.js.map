{
  "version": 3,
  "sources": ["../src/lib/components/BridgePage/BridgePage.tsx", "../src/scenes/authentication/WelcomeLogo.tsx"],
  "sourcesContent": ["import './BridgePage.scss'\n\nimport clsx from 'clsx'\nimport { useValues } from 'kea'\nimport { useEffect, useState } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport { WelcomeLogo } from 'scenes/authentication/WelcomeLogo'\nimport { preflightLogic } from 'scenes/PreflightCheck/preflightLogic'\n\nimport { Region } from '~/types'\n\nimport { LaptopHog4, LaptopHogEU } from '../hedgehogs'\n\nexport type BridgePageCommonProps = {\n    children?: React.ReactNode\n    footer?: React.ReactNode\n    header?: React.ReactNode\n    view: string\n    noLogo?: boolean\n    sideLogo?: boolean\n    fixedWidth?: boolean\n    leftContainerContent?: JSX.Element\n}\n\ninterface NoHedgehogProps extends BridgePageCommonProps {\n    hedgehog?: false\n    message?: never\n}\n\ninterface YesHedgehogProps extends BridgePageCommonProps {\n    hedgehog: true\n    message?: React.ReactNode\n}\n\n// Only allow setting of the hog message when a hog actually exists\ntype BridgePageProps = NoHedgehogProps | YesHedgehogProps\n\nexport function BridgePage({\n    children,\n    header,\n    footer,\n    view,\n    message,\n    noLogo = false,\n    sideLogo = false,\n    fixedWidth = true,\n    leftContainerContent,\n    hedgehog = false,\n}: BridgePageProps): JSX.Element {\n    const [messageShowing, setMessageShowing] = useState(false)\n    const { preflight } = useValues(preflightLogic)\n\n    useEffect(() => {\n        const t = setTimeout(() => {\n            setMessageShowing(true)\n        }, 200)\n        return () => clearTimeout(t)\n    }, [])\n\n    return (\n        <div className={clsx('BridgePage', fixedWidth && 'BridgePage--fixed-width')}>\n            <div className=\"BridgePage__main\">\n                {leftContainerContent || hedgehog ? (\n                    <div className=\"BridgePage__left-wrapper\">\n                        <div className=\"BridgePage__left\">\n                            {!noLogo && sideLogo && (\n                                <div className=\"BridgePage__header-logo mb-16\">\n                                    <WelcomeLogo view={view} />\n                                </div>\n                            )}\n                            {leftContainerContent && leftContainerContent}\n                            {hedgehog && (\n                                <div className=\"BridgePage__left__art\">\n                                    {preflight?.region === Region.EU ? (\n                                        <LaptopHogEU alt=\"\" draggable=\"false\" />\n                                    ) : (\n                                        <LaptopHog4 alt=\"\" draggable=\"false\" />\n                                    )}\n                                    {message ? (\n                                        <CSSTransition\n                                            in={messageShowing}\n                                            timeout={200}\n                                            classNames=\"BridgePage__left__message-\"\n                                        >\n                                            <div className=\"BridgePage__left__message\">{message}</div>\n                                        </CSSTransition>\n                                    ) : null}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                ) : null}\n                <div className=\"BridgePage__content-wrapper\">\n                    {!noLogo && (\n                        <div className={clsx('BridgePage__header-logo', { mobile: sideLogo })}>\n                            <WelcomeLogo view={view} />\n                        </div>\n                    )}\n                    <div className=\"BridgePage__header\">{header}</div>\n                    <div className=\"BridgePage__content\">{children}</div>\n                </div>\n            </div>\n            {footer && <div className=\"BridgePage__footer\">{footer}</div>}\n        </div>\n    )\n}\n", "import { Link } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport defaultLogo from 'public/posthog-logo.svg'\nimport cloudLogo from 'public/posthog-logo-cloud.svg'\nimport demoLogo from 'public/posthog-logo-demo.svg'\nimport { preflightLogic } from 'scenes/PreflightCheck/preflightLogic'\n\nexport function WelcomeLogo({ view }: { view?: string }): JSX.Element {\n    const UTM_TAGS = `utm_campaign=in-product&utm_tag=${view || 'welcome'}-header`\n    const { preflight } = useValues(preflightLogic)\n\n    return (\n        <Link to={`https://posthog.com?${UTM_TAGS}`} className=\"flex flex-col items-center mb-8\">\n            <img\n                src={preflight?.demo ? demoLogo : preflight?.cloud ? cloudLogo : defaultLogo}\n                alt={`PostHog${preflight?.cloud ? ' Cloud' : ''}`}\n                className=\"h-6\"\n            />\n        </Link>\n    )\n}\n"],
  "mappings": "+MAAAA,IAAAC,IAAAC,IAEA,IAAAC,EAAiB,OACjBC,EAA0B,OAC1BC,EAAoC,OCJpCC,IAAAC,IAAAC,IACA,IAAAC,EAA0B,O,8JAYd,IAAAC,EAAA,OANL,SAASC,EAAY,CAAE,KAAAC,CAAK,EAAmC,CAClE,IAAMC,EAAW,mCAAmCD,GAAQ,SAAS,UAC/D,CAAE,UAAAE,CAAU,KAAI,aAAUC,CAAc,EAE9C,SACI,OAACC,EAAA,CAAK,GAAI,uBAAuBH,CAAQ,GAAI,UAAU,kCACnD,mBAAC,OACG,IAAKC,GAAW,KAAOG,EAAWH,GAAW,MAAQI,EAAYC,EACjE,IAAK,UAAUL,GAAW,MAAQ,SAAW,EAAE,GAC/C,UAAU,MACd,EACJ,CAER,CD+CoC,IAAAM,EAAA,OA9B7B,SAASC,GAAW,CACvB,SAAAC,EACA,OAAAC,EACA,OAAAC,EACA,KAAAC,EACA,QAAAC,EACA,OAAAC,EAAS,GACT,SAAAC,EAAW,GACX,WAAAC,EAAa,GACb,qBAAAC,EACA,SAAAC,EAAW,EACf,EAAiC,CAC7B,GAAM,CAACC,EAAgBC,CAAiB,KAAI,YAAS,EAAK,EACpD,CAAE,UAAAC,CAAU,KAAI,aAAUC,CAAc,EAE9C,sBAAU,IAAM,CACZ,IAAMC,EAAI,WAAW,IAAM,CACvBH,EAAkB,EAAI,CAC1B,EAAG,GAAG,EACN,MAAO,IAAM,aAAaG,CAAC,CAC/B,EAAG,CAAC,CAAC,KAGD,QAAC,OAAI,aAAW,EAAAC,SAAK,aAAcR,GAAc,yBAAyB,EACtE,qBAAC,OAAI,UAAU,mBACV,UAAAC,GAAwBC,KACrB,OAAC,OAAI,UAAU,2BACX,oBAAC,OAAI,UAAU,mBACV,WAACJ,GAAUC,MACR,OAAC,OAAI,UAAU,gCACX,mBAACU,EAAA,CAAY,KAAMb,EAAM,EAC7B,EAEHK,GAAwBA,EACxBC,MACG,QAAC,OAAI,UAAU,wBACV,UAAAG,GAAW,SAAW,QACnB,OAACK,EAAA,CAAY,IAAI,GAAG,UAAU,QAAQ,KAEtC,OAACC,EAAA,CAAW,IAAI,GAAG,UAAU,QAAQ,EAExCd,KACG,OAACe,EAAA,CACG,GAAIT,EACJ,QAAS,IACT,WAAW,6BAEX,mBAAC,OAAI,UAAU,4BAA6B,SAAAN,EAAQ,EACxD,EACA,MACR,GAER,EACJ,EACA,QACJ,QAAC,OAAI,UAAU,8BACV,WAACC,MACE,OAAC,OAAI,aAAW,EAAAU,SAAK,0BAA2B,CAAE,OAAQT,CAAS,CAAC,EAChE,mBAACU,EAAA,CAAY,KAAMb,EAAM,EAC7B,KAEJ,OAAC,OAAI,UAAU,qBAAsB,SAAAF,EAAO,KAC5C,OAAC,OAAI,UAAU,sBAAuB,SAAAD,EAAS,GACnD,GACJ,EACCE,MAAU,OAAC,OAAI,UAAU,qBAAsB,SAAAA,EAAO,GAC3D,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "WelcomeLogo", "view", "UTM_TAGS", "preflight", "preflightLogic", "Link", "posthog_logo_demo_default", "posthog_logo_cloud_default", "posthog_logo_default", "import_jsx_runtime", "BridgePage", "children", "header", "footer", "view", "message", "noLogo", "sideLogo", "fixedWidth", "leftContainerContent", "hedgehog", "messageShowing", "setMessageShowing", "preflight", "preflightLogic", "t", "clsx", "WelcomeLogo", "LaptopHogEU", "LaptopHog4", "CSSTransition_default"]
}
