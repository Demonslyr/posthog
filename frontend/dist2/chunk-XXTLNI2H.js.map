{
  "version": 3,
  "sources": ["../src/scenes/settings/environment/maxSettingsLogic.tsx"],
  "sourcesContent": ["import { actions, afterMount, kea, listeners, path, reducers } from 'kea'\nimport { forms } from 'kea-forms'\nimport { loaders } from 'kea-loaders'\nimport api from 'lib/api'\nimport { lemonToast } from 'lib/lemon-ui/LemonToast/LemonToast'\n\nimport { CoreMemory } from '~/types'\n\nimport type { maxSettingsLogicType } from './maxSettingsLogicType'\n\nexport type CoreMemoryForm = {\n    text: string\n}\n\nexport const maxSettingsLogic = kea<maxSettingsLogicType>([\n    path(['scenes', 'project', 'Settings', 'maxSettingsLogic']),\n\n    actions({\n        setIsLoading: (isLoading: boolean) => ({ isLoading }),\n    }),\n\n    reducers({\n        isLoading: [\n            false,\n            {\n                loadCoreMemory: () => true,\n                loadCoreMemorySuccess: () => false,\n                loadCoreMemoryFailure: () => false,\n            },\n        ],\n\n        isUpdating: [\n            false,\n            {\n                createCoreMemory: () => true,\n                createCoreMemorySuccess: () => false,\n                createCoreMemoryFailure: () => false,\n                updateCoreMemory: () => true,\n                updateCoreMemorySuccess: () => false,\n                updateCoreMemoryFailure: () => false,\n            },\n        ],\n    }),\n\n    loaders(({ values }) => ({\n        coreMemory: {\n            __default: null as CoreMemory | null,\n            loadCoreMemory: async () => {\n                const response = await api.coreMemory.list()\n                return response.results[0] || null\n            },\n            updateCoreMemory: async (data: CoreMemoryForm) => {\n                if (!values.coreMemory) {\n                    const response = await api.coreMemory.create(data)\n                    lemonToast.success('The Max\u2019s memory has been created.')\n                    return response\n                }\n\n                const response = await api.coreMemory.update(values.coreMemory.id, data)\n                lemonToast.success('The Max\u2019s memory has been updated.')\n                return response\n            },\n        },\n    })),\n\n    forms(({ actions }) => ({\n        coreMemoryForm: {\n            defaults: { text: '' } as CoreMemoryForm,\n            submit: ({ text }) => {\n                actions.updateCoreMemory({ text })\n            },\n        },\n    })),\n\n    listeners(({ actions }) => ({\n        loadCoreMemorySuccess: ({ coreMemory }) => {\n            actions.setCoreMemoryFormValue('text', coreMemory.text)\n        },\n    })),\n\n    afterMount(({ actions }) => {\n        actions.loadCoreMemory()\n    }),\n])\n"],
  "mappings": "iJAAAA,IAAAC,IAAAC,IAAA,IAAAC,EAAoE,OACpEC,EAAsB,OACtBC,EAAwB,OAYjB,IAAMC,KAAmB,OAA0B,IACtD,QAAK,CAAC,SAAU,UAAW,WAAY,kBAAkB,CAAC,KAE1D,WAAQ,CACJ,aAAeC,IAAwB,CAAE,UAAAA,CAAU,EACvD,CAAC,KAED,YAAS,CACL,UAAW,CACP,GACA,CACI,eAAgB,IAAM,GACtB,sBAAuB,IAAM,GAC7B,sBAAuB,IAAM,EACjC,CACJ,EAEA,WAAY,CACR,GACA,CACI,iBAAkB,IAAM,GACxB,wBAAyB,IAAM,GAC/B,wBAAyB,IAAM,GAC/B,iBAAkB,IAAM,GACxB,wBAAyB,IAAM,GAC/B,wBAAyB,IAAM,EACnC,CACJ,CACJ,CAAC,KAED,WAAQ,CAAC,CAAE,OAAAC,CAAO,KAAO,CACrB,WAAY,CACR,UAAW,KACX,eAAgB,UACK,MAAMC,EAAI,WAAW,KAAK,GAC3B,QAAQ,CAAC,GAAK,KAElC,iBAAkB,MAAOC,GAAyB,CAC9C,GAAI,CAACF,EAAO,WAAY,CACpB,IAAMG,EAAW,MAAMF,EAAI,WAAW,OAAOC,CAAI,EACjD,OAAAE,EAAW,QAAQ,yCAAoC,EAChDD,CACX,CAEA,IAAMA,EAAW,MAAMF,EAAI,WAAW,OAAOD,EAAO,WAAW,GAAIE,CAAI,EACvE,OAAAE,EAAW,QAAQ,yCAAoC,EAChDD,CACX,CACJ,CACJ,EAAE,KAEF,SAAM,CAAC,CAAE,QAAAE,CAAQ,KAAO,CACpB,eAAgB,CACZ,SAAU,CAAE,KAAM,EAAG,EACrB,OAAQ,CAAC,CAAE,KAAAC,CAAK,IAAM,CAClBD,EAAQ,iBAAiB,CAAE,KAAAC,CAAK,CAAC,CACrC,CACJ,CACJ,EAAE,KAEF,aAAU,CAAC,CAAE,QAAAD,CAAQ,KAAO,CACxB,sBAAuB,CAAC,CAAE,WAAAE,CAAW,IAAM,CACvCF,EAAQ,uBAAuB,OAAQE,EAAW,IAAI,CAC1D,CACJ,EAAE,KAEF,cAAW,CAAC,CAAE,QAAAF,CAAQ,IAAM,CACxBA,EAAQ,eAAe,CAC3B,CAAC,CACL,CAAC",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_forms", "import_kea_loaders", "maxSettingsLogic", "isLoading", "values", "api_default", "data", "response", "lemonToast", "actions", "text", "coreMemory"]
}
