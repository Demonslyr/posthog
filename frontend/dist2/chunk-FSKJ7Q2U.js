import{Eo as d,Io as i,Ip as f,Vd as l,Za as p,a as m,af as E,f as C}from"/static/chunk-RFJTZKD6.js";import{qc as _}from"/static/chunk-3UDJFOQH.js";import{d as S,e as c,g,j as I}from"/static/chunk-SJXEOBQC.js";c();I();g();var n=S(m()),T=S(p()),u=S(C());var A=["RECORDINGS_TTL_WEEKS","RECORDINGS_PERFORMANCE_EVENTS_TTL_WEEKS","EMAIL_ENABLED","EMAIL_HOST","EMAIL_PORT","EMAIL_HOST_USER","EMAIL_HOST_PASSWORD","EMAIL_USE_TLS","EMAIL_USE_SSL","EMAIL_DEFAULT_FROM","EMAIL_REPLY_TO","AGGREGATE_BY_DISTINCT_IDS_TEAMS","PERSON_ON_EVENTS_ENABLED","STRICT_CACHING_TEAMS","SLACK_APP_CLIENT_ID","SLACK_APP_CLIENT_SECRET","SLACK_APP_SIGNING_SECRET","PARALLEL_DASHBOARD_ITEM_CACHE","RATE_LIMIT_ENABLED","RATE_LIMITING_ALLOW_LIST_TEAMS","SENTRY_AUTH_TOKEN","SENTRY_ORGANIZATION","HEATMAP_SAMPLE_N"],P=(0,n.kea)([(0,n.path)(["scenes","instance","SystemStatus","systemStatusLogic"]),(0,n.actions)({setTab:t=>({tab:t}),setOpenSections:t=>({sections:t}),setInstanceConfigMode:t=>({mode:t}),updateInstanceConfigValue:(t,e)=>({key:t,value:e}),clearInstanceConfigEditing:!0,saveInstanceConfig:!0,setUpdatedInstanceConfigCount:t=>({count:t}),increaseUpdatedInstanceConfigCount:!0}),(0,T.loaders)(()=>({systemStatus:[null,{loadSystemStatus:async()=>!_()||E.values.preflight?.cloud&&!d.values.user?.is_staff?null:(await i.get("api/instance_status")).results??null}],instanceSettings:[[],{loadInstanceSettings:async()=>(await i.get("api/instance_settings")).results??[]}],queries:[null,{loadQueries:async()=>(await i.get("api/instance_status/queries")).results}]})),(0,n.reducers)({tab:["overview",{setTab:(t,{tab:e})=>e}],error:[null,{loadSystemStatusFailure:(t,{error:e})=>e}],openSections:[["0"],{persist:!0},{setOpenSections:(t,{sections:e})=>e}],instanceConfigMode:["view",{setInstanceConfigMode:(t,{mode:e})=>e}],instanceConfigEditingState:[{},{updateInstanceConfigValue:(t,{key:e,value:s})=>{if(s!==void 0)return{...t,[e]:s};let a={...t};return delete a[e],a},clearInstanceConfigEditing:()=>({})}],updatedInstanceConfigCount:[null,{setUpdatedInstanceConfigCount:(t,{count:e})=>e,loadInstanceSettings:()=>null,increaseUpdatedInstanceConfigCount:t=>(t??0)+1}]}),(0,n.selectors)(()=>({overview:[t=>[t.systemStatus],t=>t?t.overview:[]],editableInstanceSettings:[t=>[t.instanceSettings],t=>t.filter(e=>e.editable&&A.includes(e.key))]})),(0,n.listeners)(({actions:t,values:e})=>({setTab:({tab:s})=>{s==="metrics"&&t.loadQueries(),t.setInstanceConfigMode("view")},updateInstanceConfigValue:({key:s,value:a})=>{let o=e.editableInstanceSettings.find(r=>r.key===s)?.value;a&&o==a&&t.updateInstanceConfigValue(s,void 0)},saveInstanceConfig:async(s,a)=>{t.setUpdatedInstanceConfigCount(0),await Promise.all(Object.entries(e.instanceConfigEditingState).map(async([o,r])=>{await i.update(`api/instance_settings/${o}`,{value:r}),f.actions.reportInstanceSettingChange(o,r),t.increaseUpdatedInstanceConfigCount()})),await a(1e3),e.updatedInstanceConfigCount===Object.keys(e.instanceConfigEditingState).length&&(t.loadInstanceSettings(),t.clearInstanceConfigEditing(),t.setInstanceConfigMode("view"),l.success("Instance settings updated"))}})),(0,u.actionToUrl)(({values:t})=>({setTab:()=>"/instance/"+(t.tab==="overview"?"status":t.tab)})),(0,u.urlToAction)(({actions:t,values:e})=>({"/instance(/:tab)":({tab:s})=>{let a=s&&["metrics","settings","staff_users"].includes(s)?s:"overview";a!==e.tab&&t.setTab(a)}})),(0,n.events)(({actions:t})=>({afterMount:()=>{t.loadSystemStatus()}}))]);export{P as a};
//# sourceMappingURL=/static/chunk-FSKJ7Q2U.js.map
