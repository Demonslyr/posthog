{
  "version": 3,
  "sources": ["../src/scenes/pipeline/metrics/appMetricsV2Logic.tsx"],
  "sourcesContent": ["import { actions, kea, key, listeners, path, props, reducers } from 'kea'\nimport { loaders } from 'kea-loaders'\nimport api from 'lib/api'\n\nimport { AppMetricsTotalsV2Response, AppMetricsV2RequestParams, AppMetricsV2Response } from '~/types'\n\nimport type { appMetricsV2LogicType } from './appMetricsV2LogicType'\n\nexport type AppMetricsV2LogicProps = {\n    id: string\n}\n\nexport type MetricsFilters = Pick<AppMetricsV2RequestParams, 'before' | 'after' | 'interval'>\n\nconst DEFAULT_FILTERS: MetricsFilters = {\n    before: undefined,\n    after: '-7d',\n    interval: 'day',\n}\n\nexport const appMetricsV2Logic = kea<appMetricsV2LogicType>([\n    props({} as AppMetricsV2LogicProps),\n    key(({ id }: AppMetricsV2LogicProps) => id),\n    path((id) => ['scenes', 'pipeline', 'appMetricsLogic', id]),\n    actions({\n        setFilters: (filters: Partial<MetricsFilters>) => ({ filters }),\n    }),\n    loaders(({ values, props }) => ({\n        appMetrics: [\n            null as AppMetricsV2Response | null,\n            {\n                loadMetrics: async () => {\n                    const params: AppMetricsV2RequestParams = {\n                        ...values.filters,\n                        breakdown_by: 'name',\n                    }\n                    return await api.hogFunctions.metrics(props.id, params)\n                },\n            },\n        ],\n\n        appMetricsTotals: [\n            null as AppMetricsTotalsV2Response | null,\n            {\n                loadMetricsTotals: async () => {\n                    const params: AppMetricsV2RequestParams = {\n                        breakdown_by: 'name',\n                    }\n                    return await api.hogFunctions.metricsTotals(props.id, params)\n                },\n            },\n        ],\n    })),\n    reducers({\n        filters: [\n            DEFAULT_FILTERS,\n            {\n                setFilters: (state, { filters }) => ({ ...state, ...filters }),\n            },\n        ],\n    }),\n    listeners(({ actions }) => ({\n        setFilters: async (_, breakpoint) => {\n            await breakpoint(100)\n            actions.loadMetrics()\n        },\n    })),\n])\n"],
  "mappings": "iIAAAA,IAAAC,IAAAC,IAAA,IAAAC,EAAoE,OACpEC,EAAwB,OAaxB,IAAMC,EAAkC,CACpC,OAAQ,OACR,MAAO,MACP,SAAU,KACd,EAEaC,KAAoB,OAA2B,IACxD,SAAM,CAAC,CAA2B,KAClC,OAAI,CAAC,CAAE,GAAAC,CAAG,IAA8BA,CAAE,KAC1C,QAAMA,GAAO,CAAC,SAAU,WAAY,kBAAmBA,CAAE,CAAC,KAC1D,WAAQ,CACJ,WAAaC,IAAsC,CAAE,QAAAA,CAAQ,EACjE,CAAC,KACD,WAAQ,CAAC,CAAE,OAAAC,EAAQ,MAAAC,CAAM,KAAO,CAC5B,WAAY,CACR,KACA,CACI,YAAa,SAAY,CACrB,IAAMC,EAAoC,CACtC,GAAGF,EAAO,QACV,aAAc,MAClB,EACA,OAAO,MAAMG,EAAI,aAAa,QAAQF,EAAM,GAAIC,CAAM,CAC1D,CACJ,CACJ,EAEA,iBAAkB,CACd,KACA,CACI,kBAAmB,SAAY,CAC3B,IAAMA,EAAoC,CACtC,aAAc,MAClB,EACA,OAAO,MAAMC,EAAI,aAAa,cAAcF,EAAM,GAAIC,CAAM,CAChE,CACJ,CACJ,CACJ,EAAE,KACF,YAAS,CACL,QAAS,CACLN,EACA,CACI,WAAY,CAACQ,EAAO,CAAE,QAAAL,CAAQ,KAAO,CAAE,GAAGK,EAAO,GAAGL,CAAQ,EAChE,CACJ,CACJ,CAAC,KACD,aAAU,CAAC,CAAE,QAAAM,CAAQ,KAAO,CACxB,WAAY,MAAOC,EAAGC,IAAe,CACjC,MAAMA,EAAW,GAAG,EACpBF,EAAQ,YAAY,CACxB,CACJ,EAAE,CACN,CAAC",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_loaders", "DEFAULT_FILTERS", "appMetricsV2Logic", "id", "filters", "values", "props", "params", "api_default", "state", "actions", "_", "breakpoint"]
}
