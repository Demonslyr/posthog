{
  "version": 3,
  "sources": ["../src/layout/navigation/TopBar/AccountPopover.tsx"],
  "sourcesContent": ["import './AccountPopover.scss'\n\nimport {\n    IconCheckCircle,\n    IconConfetti,\n    IconFeatures,\n    IconGear,\n    IconLeave,\n    IconLive,\n    IconPlusSmall,\n    IconReceipt,\n    IconServer,\n    IconShieldLock,\n} from '@posthog/icons'\nimport { LemonButtonPropsBase } from '@posthog/lemon-ui'\nimport clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { ProfilePicture } from 'lib/lemon-ui/ProfilePicture'\nimport { UploadedLogo } from 'lib/lemon-ui/UploadedLogo'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { eventUsageLogic } from 'lib/utils/eventUsageLogic'\nimport { inviteLogic } from 'scenes/settings/organization/inviteLogic'\nimport { ThemeSwitcher } from 'scenes/settings/user/ThemeSwitcher'\n\nimport {\n    AccessLevelIndicator,\n    NewOrganizationButton,\n    OtherOrganizationButton,\n} from '~/layout/navigation/OrganizationSwitcher'\nimport { sidePanelStateLogic } from '~/layout/navigation-3000/sidepanel/sidePanelStateLogic'\n\nimport { organizationLogic } from '../../../scenes/organizationLogic'\nimport { preflightLogic } from '../../../scenes/PreflightCheck/preflightLogic'\nimport { urls } from '../../../scenes/urls'\nimport { userLogic } from '../../../scenes/userLogic'\nimport { OrganizationBasicType, SidePanelTab } from '../../../types'\nimport { navigationLogic } from '../navigationLogic'\n\nfunction AccountPopoverSection({\n    title,\n    className,\n    children,\n}: {\n    title?: string | JSX.Element\n    className?: string\n    children: any\n}): JSX.Element {\n    return (\n        <div className={clsx('AccountPopover__section', className)}>\n            {title && <h5 className=\"flex items-center\">{title}</h5>}\n            {children}\n        </div>\n    )\n}\n\nfunction AccountInfo(): JSX.Element {\n    const { user } = useValues(userLogic)\n    const { closeAccountPopover } = useActions(navigationLogic)\n\n    return (\n        <div className=\"AccountInfo\">\n            <LemonButton\n                to={urls.settings('user')}\n                onClick={closeAccountPopover}\n                data-attr=\"top-menu-item-me\"\n                fullWidth\n                tooltip=\"Account settings\"\n                tooltipPlacement=\"left\"\n                sideIcon={<IconGear />}\n            >\n                <ProfilePicture user={user} size=\"xl\" />\n                <div className=\"AccountInfo__identification AccountPopover__main-info font-sans font-normal\">\n                    <div className=\"font-semibold mb-1\">{user?.first_name}</div>\n                    <div className=\"overflow-hidden text-secondary truncate text-[0.8125rem]\" title={user?.email}>\n                        {user?.email}\n                    </div>\n                </div>\n            </LemonButton>\n        </div>\n    )\n}\n\nfunction CurrentOrganization({ organization }: { organization: OrganizationBasicType }): JSX.Element {\n    const { closeAccountPopover } = useActions(navigationLogic)\n\n    return (\n        <LemonButton\n            data-attr=\"top-menu-item-org-settings\"\n            icon={\n                <UploadedLogo\n                    name={organization.name}\n                    entityId={organization.id}\n                    mediaId={organization.logo_media_id}\n                />\n            }\n            sideIcon={<IconGear />}\n            fullWidth\n            to={urls.settings('organization')}\n            onClick={closeAccountPopover}\n            tooltip=\"Organization settings\"\n            tooltipPlacement=\"left\"\n        >\n            <div className=\"grow\">\n                <span className=\"font-medium\">{organization.name}</span>\n                <AccessLevelIndicator organization={organization} />\n            </div>\n        </LemonButton>\n    )\n}\n\nexport function InviteMembersButton({\n    center = false,\n    type = 'tertiary',\n}: {\n    center?: boolean\n    type?: LemonButtonPropsBase['type']\n}): JSX.Element {\n    const { closeAccountPopover } = useActions(navigationLogic)\n    const { showInviteModal } = useActions(inviteLogic)\n    const { reportInviteMembersButtonClicked } = useActions(eventUsageLogic)\n\n    return (\n        <LemonButton\n            icon={<IconPlusSmall />}\n            onClick={() => {\n                closeAccountPopover()\n                showInviteModal()\n                reportInviteMembersButtonClicked()\n            }}\n            center={center}\n            type={type}\n            fullWidth\n            data-attr=\"top-menu-invite-team-members\"\n        >\n            Invite members\n        </LemonButton>\n    )\n}\n\nfunction InstanceSettings(): JSX.Element {\n    const { closeAccountPopover } = useActions(navigationLogic)\n\n    return (\n        <LemonButton\n            icon={<IconServer />}\n            onClick={closeAccountPopover}\n            fullWidth\n            to={urls.instanceStatus()}\n            sideAction={{\n                tooltip: 'Async migrations',\n                tooltipPlacement: 'right',\n                icon: <IconCheckCircle />,\n                to: urls.asyncMigrations(),\n                onClick: closeAccountPopover,\n            }}\n            data-attr=\"top-menu-instance-panel\"\n        >\n            Instance panel\n        </LemonButton>\n    )\n}\n\nfunction DjangoAdmin(): JSX.Element {\n    const { closeAccountPopover } = useActions(navigationLogic)\n\n    return (\n        <LemonButton\n            icon={<IconShieldLock />}\n            onClick={closeAccountPopover}\n            fullWidth\n            to=\"/admin/\"\n            disableClientSideRouting\n            data-attr=\"top-menu-django-admin\"\n        >\n            Django admin\n        </LemonButton>\n    )\n}\n\nfunction FeaturePreviewsButton(): JSX.Element {\n    const { closeAccountPopover } = useActions(navigationLogic)\n    const { openSidePanel } = useActions(sidePanelStateLogic)\n\n    return (\n        <LemonButton\n            onClick={() => {\n                closeAccountPopover()\n                openSidePanel(SidePanelTab.FeaturePreviews)\n            }}\n            icon={<IconFeatures />}\n            fullWidth\n        >\n            Feature previews\n        </LemonButton>\n    )\n}\n\nfunction SignOutButton(): JSX.Element {\n    const { logout } = useActions(userLogic)\n\n    return (\n        <LemonButton onClick={logout} icon={<IconLeave />} fullWidth data-attr=\"top-menu-item-logout\">\n            Log out\n        </LemonButton>\n    )\n}\n\nexport function AccountPopoverOverlay(): JSX.Element {\n    const { user, otherOrganizations } = useValues(userLogic)\n    const { currentOrganization } = useValues(organizationLogic)\n    const { mobileLayout } = useValues(navigationLogic)\n    const { openSidePanel } = useActions(sidePanelStateLogic)\n    const { preflight, isCloudOrDev, isCloud } = useValues(preflightLogic)\n    const { closeAccountPopover } = useActions(navigationLogic)\n    const { featureFlags } = useValues(featureFlagLogic)\n\n    return (\n        <>\n            <AccountPopoverSection title=\"Signed in as\">\n                <AccountInfo />\n            </AccountPopoverSection>\n            <AccountPopoverSection title=\"Current organization\">\n                {currentOrganization && <CurrentOrganization organization={currentOrganization} />}\n                {isCloudOrDev ? (\n                    <LemonButton\n                        onClick={closeAccountPopover}\n                        to={\n                            featureFlags[FEATURE_FLAGS.BILLING_USAGE_DASHBOARD]\n                                ? urls.organizationBillingSection('overview')\n                                : urls.organizationBilling()\n                        }\n                        icon={<IconReceipt />}\n                        fullWidth\n                        data-attr=\"top-menu-item-billing\"\n                    >\n                        {featureFlags[FEATURE_FLAGS.BILLING_USAGE_DASHBOARD] ? 'Billing & Usage' : 'Billing'}\n                    </LemonButton>\n                ) : null}\n                <InviteMembersButton />\n            </AccountPopoverSection>\n            {(otherOrganizations.length > 0 || preflight?.can_create_org) && (\n                <AccountPopoverSection title=\"Other organizations\">\n                    {otherOrganizations.map((otherOrganization, i) => (\n                        <OtherOrganizationButton\n                            key={otherOrganization.id}\n                            organization={otherOrganization}\n                            index={i + 2}\n                        />\n                    ))}\n                    {preflight?.can_create_org && <NewOrganizationButton />}\n                </AccountPopoverSection>\n            )}\n            <AccountPopoverSection>\n                <ThemeSwitcher fullWidth type=\"tertiary\" />\n                <LemonButton\n                    to=\"https://posthog.com/changelog\"\n                    onClick={(e) => {\n                        closeAccountPopover()\n                        if (!mobileLayout) {\n                            e.preventDefault()\n                            openSidePanel(SidePanelTab.Docs, '/changelog')\n                        }\n                    }}\n                    icon={<IconLive />}\n                    fullWidth\n                    data-attr=\"whats-new-button\"\n                    targetBlank\n                >\n                    What's new?\n                </LemonButton>\n                <FeaturePreviewsButton />\n            </AccountPopoverSection>\n            {user?.is_staff && (\n                <AccountPopoverSection>\n                    <DjangoAdmin />\n                    <InstanceSettings />\n                </AccountPopoverSection>\n            )}\n            {!isCloud && (\n                <AccountPopoverSection>\n                    <LemonButton\n                        onClick={closeAccountPopover}\n                        to={urls.moveToPostHogCloud()}\n                        icon={<IconConfetti />}\n                        fullWidth\n                        data-attr=\"top-menu-item-upgrade-to-cloud\"\n                    >\n                        Try PostHog Cloud\n                    </LemonButton>\n                </AccountPopoverSection>\n            )}\n            <AccountPopoverSection>\n                <SignOutButton />\n            </AccountPopoverSection>\n        </>\n    )\n}\n"],
  "mappings": "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",
  "names": ["init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_jsx_runtime", "AccountPopoverSection", "title", "className", "children", "clsx", "AccountInfo", "user", "userLogic", "closeAccountPopover", "navigationLogic", "LemonButton", "urls", "IconGear", "ProfilePicture", "CurrentOrganization", "organization", "UploadedLogo", "AccessLevelIndicator", "InviteMembersButton", "center", "type", "showInviteModal", "inviteLogic", "reportInviteMembersButtonClicked", "eventUsageLogic", "IconPlusSmall", "InstanceSettings", "IconServer", "IconCheckCircle", "DjangoAdmin", "IconShieldLock", "FeaturePreviewsButton", "openSidePanel", "sidePanelStateLogic", "IconFeatures", "SignOutButton", "logout", "IconLeave", "AccountPopoverOverlay", "otherOrganizations", "currentOrganization", "organizationLogic", "mobileLayout", "preflight", "isCloudOrDev", "isCloud", "preflightLogic", "featureFlags", "featureFlagLogic", "FEATURE_FLAGS", "IconReceipt", "otherOrganization", "i", "OtherOrganizationButton", "NewOrganizationButton", "ThemeSwitcher", "e", "IconLive", "IconConfetti"]
}
