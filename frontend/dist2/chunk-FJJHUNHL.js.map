{
  "version": 3,
  "sources": ["../src/scenes/authentication/RegionSelect.tsx"],
  "sourcesContent": ["import { IconCheckCircle } from '@posthog/icons'\nimport { LemonModal, LemonSelect } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { router } from 'kea-router'\nimport { CLOUD_HOSTNAMES } from 'lib/constants'\nimport { LemonField } from 'lib/lemon-ui/LemonField'\nimport { useState } from 'react'\nimport { preflightLogic } from 'scenes/PreflightCheck/preflightLogic'\n\nimport { Region } from '~/types'\n\nconst sections = [\n    {\n        title: 'US hosting',\n        features: [\n            'Faster if you and your users are based in the US',\n            'Easier to comply with some US regulations',\n            'Hosted in Virginia, USA',\n        ],\n    },\n    {\n        title: 'EU hosting',\n        features: [\n            'Faster if you and your users are based in Europe',\n            'Keeps data in the EU to comply with GDPR requirements',\n            'Hosted in Frankfurt, Germany',\n        ],\n    },\n]\n\nfunction WhyCloudModal({ setOpen, open }: { setOpen: (open: boolean) => void; open: boolean }): JSX.Element {\n    return (\n        <LemonModal\n            title=\"Which region would you like to choose?\"\n            description=\"It's possible to migrate to another region later.\"\n            isOpen={open}\n            onClose={() => setOpen(false)}\n        >\n            <ul className=\"list-none\">\n                {sections.map((section) => {\n                    return (\n                        <li\n                            key={section.title}\n                            className=\"border-t first:border-t-0 border-dashed border-gray-accent mt-2 first:mt-0\"\n                        >\n                            <h4 className=\"text-lg m-0 mt-2\">{section.title}</h4>\n                            <ul className=\"list-none p-0 my-2 space-y-1\">\n                                {section.features.map((feature) => {\n                                    return (\n                                        <li\n                                            key={feature}\n                                            className=\"flex items-center space-x-2 text-gray-accent-light align-center\"\n                                        >\n                                            <IconCheckCircle className=\"w-[20px] flex-shrink-0\" />\n                                            <span className=\"text-black font-medium\">{feature}</span>\n                                        </li>\n                                    )\n                                })}\n                            </ul>\n                        </li>\n                    )\n                })}\n            </ul>\n        </LemonModal>\n    )\n}\n\nconst RegionSelect = (): JSX.Element | null => {\n    const { preflight } = useValues(preflightLogic)\n    const [regionModalOpen, setRegionModalOpen] = useState(false)\n\n    if (!preflight?.cloud || !preflight?.region) {\n        return null\n    }\n\n    return (\n        <>\n            <LemonField.Pure label=\"Data region\" onExplanationClick={() => setRegionModalOpen(true)}>\n                <LemonSelect\n                    onChange={(region) => {\n                        if (!region) {\n                            return\n                        }\n                        const { pathname, search, hash } = router.values.currentLocation\n                        const newUrl = `https://${CLOUD_HOSTNAMES[region]}${pathname}${search}${hash}`\n                        window.location.href = newUrl\n                    }}\n                    value={preflight?.region}\n                    options={[\n                        {\n                            label: 'United States',\n                            value: Region.US,\n                        },\n                        {\n                            label: 'European Union',\n                            value: Region.EU,\n                        },\n                    ]}\n                    fullWidth\n                />\n            </LemonField.Pure>\n\n            <WhyCloudModal open={regionModalOpen} setOpen={setRegionModalOpen} />\n        </>\n    )\n}\n\nexport default RegionSelect\n"],
  "mappings": "4NAAAA,IAAAC,IAAAC,IAEA,IAAAC,EAA0B,OAC1BC,EAAuB,OAGvB,IAAAC,EAAyB,OAuCG,IAAAC,EAAA,OAlCtBC,EAAW,CACb,CACI,MAAO,aACP,SAAU,CACN,mDACA,4CACA,yBACJ,CACJ,EACA,CACI,MAAO,aACP,SAAU,CACN,mDACA,wDACA,8BACJ,CACJ,CACJ,EAEA,SAASC,EAAc,CAAE,QAAAC,EAAS,KAAAC,CAAK,EAAqE,CACxG,SACI,OAACC,EAAA,CACG,MAAM,yCACN,YAAY,oDACZ,OAAQD,EACR,QAAS,IAAMD,EAAQ,EAAK,EAE5B,mBAAC,MAAG,UAAU,YACT,SAAAF,EAAS,IAAKK,MAEP,QAAC,MAEG,UAAU,6EAEV,oBAAC,MAAG,UAAU,mBAAoB,SAAAA,EAAQ,MAAM,KAChD,OAAC,MAAG,UAAU,+BACT,SAAAA,EAAQ,SAAS,IAAKC,MAEf,QAAC,MAEG,UAAU,kEAEV,oBAACC,EAAA,CAAgB,UAAU,yBAAyB,KACpD,OAAC,QAAK,UAAU,yBAA0B,SAAAD,EAAQ,IAJ7CA,CAKT,CAEP,EACL,IAhBKD,EAAQ,KAiBjB,CAEP,EACL,EACJ,CAER,CAEA,IAAMG,EAAe,IAA0B,CAC3C,GAAM,CAAE,UAAAC,CAAU,KAAI,aAAUC,CAAc,EACxC,CAACC,EAAiBC,CAAkB,KAAI,YAAS,EAAK,EAE5D,MAAI,CAACH,GAAW,OAAS,CAACA,GAAW,OAC1B,QAIP,oBACI,oBAACI,EAAW,KAAX,CAAgB,MAAM,cAAc,mBAAoB,IAAMD,EAAmB,EAAI,EAClF,mBAACE,EAAA,CACG,SAAWC,GAAW,CAClB,GAAI,CAACA,EACD,OAEJ,GAAM,CAAE,SAAAC,EAAU,OAAAC,EAAQ,KAAAC,CAAK,EAAI,SAAO,OAAO,gBAC3CC,EAAS,WAAWC,EAAgBL,CAAM,CAAC,GAAGC,CAAQ,GAAGC,CAAM,GAAGC,CAAI,GAC5E,OAAO,SAAS,KAAOC,CAC3B,EACA,MAAOV,GAAW,OAClB,QAAS,CACL,CACI,MAAO,gBACP,UACJ,EACA,CACI,MAAO,iBACP,UACJ,CACJ,EACA,UAAS,GACb,EACJ,KAEA,OAACR,EAAA,CAAc,KAAMU,EAAiB,QAASC,EAAoB,GACvE,CAER,EAEOS,EAAQb",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_router", "import_react", "import_jsx_runtime", "sections", "WhyCloudModal", "setOpen", "open", "LemonModal", "section", "feature", "IconCheckCircle", "RegionSelect", "preflight", "preflightLogic", "regionModalOpen", "setRegionModalOpen", "LemonField", "LemonSelect", "region", "pathname", "search", "hash", "newUrl", "CLOUD_HOSTNAMES", "RegionSelect_default"]
}
