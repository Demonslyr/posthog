{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/smali.js"],
  "sourcesContent": ["'use strict'\n\nmodule.exports = smali\nsmali.displayName = 'smali'\nsmali.aliases = []\nfunction smali(Prism) {\n  // Test files for the parser itself:\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n  Prism.languages.smali = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n      lookbehind: true,\n      inside: {\n        'class-name': {\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n          lookbehind: true\n        },\n        namespace: {\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\//\n          }\n        },\n        builtin: /^L/\n      }\n    },\n    builtin: [\n      {\n        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n        pattern: /([();\\[])[BCDFIJSVZ]+/,\n        lookbehind: true\n      },\n      {\n        // e.g. .field mWifiOnUid:I\n        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /(\\.end\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n      lookbehind: true\n    },\n    field: {\n      pattern: /[\\w$]+(?=:)/,\n      alias: 'variable'\n    },\n    register: {\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    boolean: {\n      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n      lookbehind: true\n    },\n    label: {\n      pattern: /(:)\\w+/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    operator: /->|\\.\\.|[\\[=]/,\n    punctuation: /[{}(),;:]/\n  }\n}\n"],
  "mappings": "mEAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAC,IAAAC,IAAAC,IAEAH,EAAO,QAAUI,EACjBA,EAAM,YAAc,QACpBA,EAAM,QAAU,CAAC,EACjB,SAASA,EAAMC,EAAO,CAGpBA,EAAM,UAAU,MAAQ,CACtB,QAAS,MACT,OAAQ,CACN,QAAS,gEACT,OAAQ,EACV,EACA,aAAc,CACZ,QACE,oEACF,WAAY,GACZ,OAAQ,CACN,aAAc,CACZ,QAAS,iCACT,WAAY,EACd,EACA,UAAW,CACT,QAAS,iCACT,WAAY,GACZ,OAAQ,CACN,YAAa,IACf,CACF,EACA,QAAS,IACX,CACF,EACA,QAAS,CACP,CAEE,QAAS,wBACT,WAAY,EACd,EACA,CAEE,QAAS,uBACT,WAAY,EACd,CACF,EACA,QAAS,CACP,CACE,QAAS,mBACT,WAAY,EACd,EACA,CACE,QAAS,4BACT,WAAY,EACd,EACA,CACE,QACE,0JACF,WAAY,EACd,CACF,EACA,SAAU,CACR,QAAS,qCACT,WAAY,EACd,EACA,MAAO,CACL,QAAS,cACT,MAAO,UACT,EACA,SAAU,CACR,QAAS,8BACT,WAAY,GACZ,MAAO,UACT,EACA,QAAS,CACP,QAAS,sCACT,WAAY,EACd,EACA,OAAQ,CACN,QACE,sJACF,WAAY,EACd,EACA,MAAO,CACL,QAAS,SACT,WAAY,GACZ,MAAO,UACT,EACA,SAAU,gBACV,YAAa,WACf,CACF",
  "names": ["require_smali", "__commonJSMin", "exports", "module", "init_dirname", "init_buffer", "init_process", "smali", "Prism"]
}
