{
  "version": 3,
  "sources": ["../src/lib/components/ProductIntroduction/ProductIntroduction.tsx"],
  "sourcesContent": ["import { IconOpenSidebar, IconPlus, IconX } from '@posthog/icons'\nimport { useActions, useValues } from 'kea'\nimport { LemonButton } from 'lib/lemon-ui/LemonButton'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { ProductKey } from '~/types'\n\nimport { BuilderHog3, DetectiveHog } from '../hedgehogs'\n\n/**\n * A component to introduce new users to a product, and to show something\n * other than an empty table when there are no items.\n * Not to be confused with the `OnboardingProductIntroduction` scene,\n * which is shown when a team has yet to go through onboarding for the product.\n */\n\nexport type ProductIntroductionProps = {\n    /** The name of the product, e.g. \"Cohorts\" */\n    productName: string\n    productKey?: ProductKey\n    /** The name of the thing that they will create, e.g. \"cohort\" */\n    thingName: string\n    description: string\n    /** If you want to override the title, defaults to \"Create your first *thing*\" */\n    titleOverride?: string\n    /** If we should show the empty state */\n    isEmpty?: boolean\n    /** The action to take when the user clicks the CTA */\n    action?: () => void\n    /** If you want to provide a custom action button instead of using the default one */\n    actionElementOverride?: JSX.Element\n    docsURL?: string\n    customHog?: React.ComponentType<{ className?: string }>\n}\n\nexport const ProductIntroduction = ({\n    productName,\n    productKey,\n    thingName,\n    description,\n    titleOverride,\n    isEmpty,\n    action,\n    actionElementOverride,\n    docsURL,\n    customHog: CustomHog,\n}: ProductIntroductionProps): JSX.Element | null => {\n    const { updateHasSeenProductIntroFor } = useActions(userLogic)\n    const { user } = useValues(userLogic)\n\n    if (!user) {\n        return null\n    }\n\n    if (!isEmpty && (!productKey || user.has_seen_product_intro_for?.[productKey])) {\n        // Hide if its not an empty list but the user has seen it before\n        return null\n    }\n\n    const actionable = action || actionElementOverride\n    return (\n        <div className=\"border-2 border-dashed border-border w-full p-8 justify-center rounded mt-2 mb-4\">\n            {!isEmpty && (\n                <div className=\"flex justify-end -mb-6 -mt-2 -mr-2\">\n                    <div>\n                        <LemonButton\n                            icon={<IconX />}\n                            size=\"small\"\n                            onClick={() => {\n                                productKey && updateHasSeenProductIntroFor(productKey, true)\n                            }}\n                        />\n                    </div>\n                </div>\n            )}\n            <div className=\"flex items-center gap-8 w-full justify-center\">\n                <div>\n                    <div className=\"w-40 lg:w-50 mx-auto mb-4 hidden md:block\">\n                        {CustomHog ? (\n                            <CustomHog className=\"w-full h-full\" />\n                        ) : actionable ? (\n                            <BuilderHog3 className=\"w-full h-full\" />\n                        ) : (\n                            <DetectiveHog className=\"w-full h-full\" />\n                        )}\n                    </div>\n                </div>\n                <div className=\"flex-shrink max-w-140\">\n                    <h2>\n                        {!isEmpty\n                            ? `Welcome to ${productName}!`\n                            : actionable\n                            ? titleOverride\n                                ? titleOverride\n                                : `Create your first ${thingName}`\n                            : `No ${thingName}s yet`}\n                    </h2>\n                    <p className=\"ml-0\">{description}</p>\n                    {!isEmpty && (\n                        <p className=\"ml-0\">\n                            Your team is already using {productName}. You can take a look at what they're doing, or get\n                            started yourself.\n                        </p>\n                    )}\n                    <div className=\"flex items-center gap-x-4 gap-y-2 mt-6 flex-wrap\">\n                        {action ? (\n                            <LemonButton\n                                type=\"primary\"\n                                icon={<IconPlus />}\n                                onClick={() => {\n                                    productKey && updateHasSeenProductIntroFor(productKey, true)\n                                    action && action()\n                                }}\n                                data-attr={'create-' + thingName.replace(' ', '-').toLowerCase()}\n                            >\n                                Create {thingName}\n                            </LemonButton>\n                        ) : (\n                            actionElementOverride\n                        )}\n                        {docsURL && (\n                            <LemonButton\n                                type={actionable ? 'tertiary' : 'secondary'}\n                                sideIcon={<IconOpenSidebar className=\"w-4 h-4\" />}\n                                to={`${docsURL}?utm_medium=in-product&utm_campaign=empty-state-docs-link`}\n                                data-attr=\"product-introduction-docs-link\"\n                                targetBlank\n                            >\n                                Learn more\n                            </LemonButton>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],
  "mappings": "gLAAAA,IAAAC,IAAAC,IACA,IAAAC,EAAsC,OAiEJ,IAAAC,EAAA,OA/BrBC,EAAsB,CAAC,CAChC,YAAAC,EACA,WAAAC,EACA,UAAAC,EACA,YAAAC,EACA,cAAAC,EACA,QAAAC,EACA,OAAAC,EACA,sBAAAC,EACA,QAAAC,EACA,UAAWC,CACf,IAAoD,CAChD,GAAM,CAAE,6BAAAC,CAA6B,KAAI,cAAWC,CAAS,EACvD,CAAE,KAAAC,CAAK,KAAI,aAAUD,CAAS,EAMpC,GAJI,CAACC,GAID,CAACP,IAAY,CAACJ,GAAcW,EAAK,6BAA6BX,CAAU,GAExE,OAAO,KAGX,IAAMY,EAAaP,GAAUC,EAC7B,SACI,QAAC,OAAI,UAAU,mFACV,WAACF,MACE,OAAC,OAAI,UAAU,qCACX,mBAAC,OACG,mBAACS,EAAA,CACG,QAAM,OAACC,EAAA,EAAM,EACb,KAAK,QACL,QAAS,IAAM,CACXd,GAAcS,EAA6BT,EAAY,EAAI,CAC/D,EACJ,EACJ,EACJ,KAEJ,QAAC,OAAI,UAAU,gDACX,oBAAC,OACG,mBAAC,OAAI,UAAU,4CACV,SAAAQ,KACG,OAACA,EAAA,CAAU,UAAU,gBAAgB,EACrCI,KACA,OAACG,EAAA,CAAY,UAAU,gBAAgB,KAEvC,OAACC,EAAA,CAAa,UAAU,gBAAgB,EAEhD,EACJ,KACA,QAAC,OAAI,UAAU,wBACX,oBAAC,MACI,SAACZ,EAEIQ,EACAT,GAEI,qBAAqBF,CAAS,GAClC,MAAMA,CAAS,QALf,cAAcF,CAAW,IAMnC,KACA,OAAC,KAAE,UAAU,OAAQ,SAAAG,EAAY,EAChC,CAACE,MACE,QAAC,KAAE,UAAU,OAAO,wCACYL,EAAY,yEAE5C,KAEJ,QAAC,OAAI,UAAU,mDACV,UAAAM,KACG,QAACQ,EAAA,CACG,KAAK,UACL,QAAM,OAACI,EAAA,EAAS,EAChB,QAAS,IAAM,CACXjB,GAAcS,EAA6BT,EAAY,EAAI,EAC3DK,GAAUA,EAAO,CACrB,EACA,YAAW,UAAYJ,EAAU,QAAQ,IAAK,GAAG,EAAE,YAAY,EAClE,oBACWA,GACZ,EAEAK,EAEHC,MACG,OAACM,EAAA,CACG,KAAMD,EAAa,WAAa,YAChC,YAAU,OAACM,EAAA,CAAgB,UAAU,UAAU,EAC/C,GAAI,GAAGX,CAAO,4DACd,YAAU,iCACV,YAAW,GACd,sBAED,GAER,GACJ,GACJ,GACJ,CAER",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "ProductIntroduction", "productName", "productKey", "thingName", "description", "titleOverride", "isEmpty", "action", "actionElementOverride", "docsURL", "CustomHog", "updateHasSeenProductIntroFor", "userLogic", "user", "actionable", "LemonButton", "IconX", "BuilderHog3", "DetectiveHog", "IconPlus", "IconOpenSidebar"]
}
