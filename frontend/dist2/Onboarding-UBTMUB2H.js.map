{
  "version": 3,
  "sources": ["../src/scenes/onboarding/Onboarding.tsx", "../src/scenes/onboarding/sdks/web-analytics/WebAnalyticsSDKInstructions.tsx", "../src/scenes/onboarding/sdks/web-analytics/index.tsx", "../src/scenes/onboarding/sdks/web-analytics/android.tsx", "../src/scenes/onboarding/sdks/web-analytics/FinalSteps.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/index.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/android.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/angular.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/js-web.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/astro.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/bubble.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/django.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/elixir.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/flutter.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/framer.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/go.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/ios.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/laravel.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/nodejs.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/nuxt.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/php.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/python.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/react-native.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/remix.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/ruby.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/svelte.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/vue.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/webflow.tsx", "../src/scenes/onboarding/sdks/web-analytics/angular.tsx", "../src/scenes/onboarding/sdks/web-analytics/astro.tsx", "../src/scenes/onboarding/sdks/web-analytics/bubble.tsx", "../src/scenes/onboarding/sdks/web-analytics/flutter.tsx", "../src/scenes/onboarding/sdks/web-analytics/framer.tsx", "../src/scenes/onboarding/sdks/web-analytics/html-snippet.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/html-snippet.tsx", "../src/scenes/onboarding/sdks/web-analytics/ios.tsx", "../src/scenes/onboarding/sdks/web-analytics/js-web.tsx", "../src/scenes/onboarding/sdks/web-analytics/next-js.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/next-js.tsx", "../src/scenes/onboarding/sdks/web-analytics/nuxt.tsx", "../src/scenes/onboarding/sdks/web-analytics/react.tsx", "../src/scenes/onboarding/sdks/sdk-install-instructions/react.tsx", "../src/scenes/onboarding/sdks/web-analytics/react-native.tsx", "../src/scenes/onboarding/sdks/web-analytics/remix.tsx", "../src/scenes/onboarding/sdks/web-analytics/svelte.tsx", "../src/scenes/onboarding/sdks/web-analytics/vue.tsx", "../src/scenes/onboarding/sdks/web-analytics/webflow.tsx", "../src/scenes/onboarding/billing/OnboardingUpgradeStep.tsx", "../src/scenes/onboarding/OnboardingStep.tsx", "../src/scenes/onboarding/productAnalyticsSteps/onboardingTemplateConfigLogic.ts", "../src/scenes/onboarding/billing/PlanCards.tsx", "../src/scenes/onboarding/billing/FreeTierLimits.tsx", "../src/scenes/onboarding/data-warehouse/OnboardingDataWarehouseSourcesStep.tsx", "../src/scenes/onboarding/OnboardingBillingStep.tsx", "../src/scenes/billing/AllProductsPlanComparison.tsx", "../src/scenes/billing/BillingHero.tsx", "../src/scenes/onboarding/OnboardingInviteTeammates.tsx", "../src/scenes/onboarding/OnboardingProductConfiguration.tsx", "../src/scenes/pipeline/pipelineDefaultEnabledLogic.tsx", "../src/scenes/onboarding/onboardingProductConfigurationLogic.ts", "../src/scenes/onboarding/OnboardingProductIntroduction.tsx", "../src/scenes/onboarding/sdks/sdksLogic.tsx", "../src/scenes/onboarding/sdks/allSDKs.tsx", "../src/toolbar/assets/Logomark.tsx", "../src/scenes/onboarding/OnboardingReverseProxy.tsx", "../src/scenes/onboarding/OnboardingSessionReplayConfiguration.tsx", "../src/scenes/onboarding/productAnalyticsSteps/DashboardTemplateConfigureStep.tsx", "../src/lib/components/IframedToolbarBrowser/IframedToolbarBrowser.tsx", "../src/scenes/onboarding/productAnalyticsSteps/DashboardTemplateVariables.tsx", "../src/scenes/onboarding/productAnalyticsSteps/DashboardTemplateSelectStep.tsx", "../src/scenes/onboarding/sdks/experiments/ExperimentsSDKInstructions.tsx", "../src/scenes/onboarding/sdks/experiments/android.tsx", "../src/scenes/onboarding/sdks/experiments/ExperimentsImplementationSnippet.tsx", "../src/scenes/onboarding/sdks/experiments/angular.tsx", "../src/scenes/onboarding/sdks/experiments/astro.tsx", "../src/scenes/onboarding/sdks/experiments/bubble.tsx", "../src/scenes/onboarding/sdks/experiments/django.tsx", "../src/scenes/onboarding/sdks/experiments/flutter.tsx", "../src/scenes/onboarding/sdks/experiments/framer.tsx", "../src/scenes/onboarding/sdks/experiments/go.tsx", "../src/scenes/onboarding/sdks/experiments/ios.tsx", "../src/scenes/onboarding/sdks/experiments/js-web.tsx", "../src/scenes/onboarding/sdks/experiments/laravel.tsx", "../src/scenes/onboarding/sdks/experiments/next-js.tsx", "../src/scenes/onboarding/sdks/experiments/nodejs.tsx", "../src/scenes/onboarding/sdks/experiments/nuxt.tsx", "../src/scenes/onboarding/sdks/experiments/php.tsx", "../src/scenes/onboarding/sdks/experiments/python.tsx", "../src/scenes/onboarding/sdks/experiments/react.tsx", "../src/scenes/onboarding/sdks/experiments/react-native.tsx", "../src/scenes/onboarding/sdks/experiments/remix.tsx", "../src/scenes/onboarding/sdks/experiments/ruby.tsx", "../src/scenes/onboarding/sdks/experiments/svelte.tsx", "../src/scenes/onboarding/sdks/experiments/vue.tsx", "../src/scenes/onboarding/sdks/experiments/webflow.tsx", "../src/scenes/onboarding/sdks/feature-flags/FeatureFlagsSDKInstructions.tsx", "../src/scenes/onboarding/sdks/feature-flags/index.tsx", "../src/scenes/onboarding/sdks/feature-flags/android.tsx", "../src/scenes/onboarding/sdks/session-replay/SessionReplaySDKInstructions.tsx", "../src/scenes/onboarding/sdks/session-replay/index.tsx", "../src/scenes/onboarding/sdks/session-replay/android.tsx", "../src/scenes/onboarding/sdks/shared-snippets.tsx", "../src/scenes/onboarding/sdks/session-replay/angular.tsx", "../src/scenes/onboarding/sdks/session-replay/astro.tsx", "../src/scenes/onboarding/sdks/session-replay/bubble.tsx", "../src/scenes/onboarding/sdks/session-replay/flutter.tsx", "../src/scenes/onboarding/sdks/session-replay/framer.tsx", "../src/scenes/onboarding/sdks/session-replay/html-snippet.tsx", "../src/scenes/onboarding/sdks/session-replay/ios.tsx", "../src/scenes/onboarding/sdks/session-replay/js-web.tsx", "../src/scenes/onboarding/sdks/session-replay/next-js.tsx", "../src/scenes/onboarding/sdks/session-replay/nuxt.tsx", "../src/scenes/onboarding/sdks/session-replay/react.tsx", "../src/scenes/onboarding/sdks/session-replay/react-native.tsx", "../src/scenes/onboarding/sdks/session-replay/remix.tsx", "../src/scenes/onboarding/sdks/session-replay/svelte.tsx", "../src/scenes/onboarding/sdks/session-replay/vue.tsx", "../src/scenes/onboarding/sdks/session-replay/webflow.tsx", "../src/scenes/onboarding/sdks/feature-flags/flagImplementationSnippet.tsx", "../src/scenes/onboarding/sdks/feature-flags/angular.tsx", "../src/scenes/onboarding/sdks/feature-flags/api.tsx", "../src/scenes/onboarding/sdks/feature-flags/astro.tsx", "../src/scenes/onboarding/sdks/feature-flags/bubble.tsx", "../src/scenes/onboarding/sdks/feature-flags/django.tsx", "../src/scenes/onboarding/sdks/feature-flags/flutter.tsx", "../src/scenes/onboarding/sdks/feature-flags/framer.tsx", "../src/scenes/onboarding/sdks/feature-flags/go.tsx", "../src/scenes/onboarding/sdks/feature-flags/ios.tsx", "../src/scenes/onboarding/sdks/feature-flags/js-web.tsx", "../src/scenes/onboarding/sdks/feature-flags/laravel.tsx", "../src/scenes/onboarding/sdks/feature-flags/next-js.tsx", "../src/scenes/onboarding/sdks/feature-flags/nodejs.tsx", "../src/scenes/onboarding/sdks/feature-flags/nuxt.tsx", "../src/scenes/onboarding/sdks/feature-flags/php.tsx", "../src/scenes/onboarding/sdks/feature-flags/python.tsx", "../src/scenes/onboarding/sdks/feature-flags/react.tsx", "../src/scenes/onboarding/sdks/feature-flags/react-native.tsx", "../src/scenes/onboarding/sdks/feature-flags/remix.tsx", "../src/scenes/onboarding/sdks/feature-flags/ruby.tsx", "../src/scenes/onboarding/sdks/feature-flags/svelte.tsx", "../src/scenes/onboarding/sdks/feature-flags/vue.tsx", "../src/scenes/onboarding/sdks/feature-flags/webflow.tsx", "../src/scenes/onboarding/sdks/product-analytics/ProductAnalyticsSDKInstructions.tsx", "../src/scenes/onboarding/sdks/product-analytics/index.tsx", "../src/scenes/onboarding/sdks/product-analytics/android.tsx", "../src/scenes/onboarding/sdks/product-analytics/angular.tsx", "../src/scenes/onboarding/sdks/product-analytics/AllJSFinalSteps.tsx", "../src/scenes/onboarding/sdks/product-analytics/api.tsx", "../src/scenes/onboarding/sdks/product-analytics/astro.tsx", "../src/scenes/onboarding/sdks/product-analytics/bubble.tsx", "../src/scenes/onboarding/sdks/product-analytics/django.tsx", "../src/scenes/onboarding/sdks/product-analytics/elixir.tsx", "../src/scenes/onboarding/sdks/product-analytics/flutter.tsx", "../src/scenes/onboarding/sdks/product-analytics/framer.tsx", "../src/scenes/onboarding/sdks/product-analytics/go.tsx", "../src/scenes/onboarding/sdks/product-analytics/helicone.tsx", "../src/scenes/onboarding/sdks/product-analytics/html-snippet.tsx", "../src/scenes/onboarding/sdks/product-analytics/ios.tsx", "../src/scenes/onboarding/sdks/product-analytics/js-web.tsx", "../src/scenes/onboarding/sdks/product-analytics/langfuse.tsx", "../src/scenes/onboarding/sdks/product-analytics/laravel.tsx", "../src/scenes/onboarding/sdks/product-analytics/next-js.tsx", "../src/scenes/onboarding/sdks/product-analytics/nodejs.tsx", "../src/scenes/onboarding/sdks/product-analytics/nuxt.tsx", "../src/scenes/onboarding/sdks/product-analytics/php.tsx", "../src/scenes/onboarding/sdks/product-analytics/python.tsx", "../src/scenes/onboarding/sdks/product-analytics/react-native.tsx", "../src/scenes/onboarding/sdks/product-analytics/remix.tsx", "../src/scenes/onboarding/sdks/product-analytics/ruby.tsx", "../src/scenes/onboarding/sdks/product-analytics/svelte.tsx", "../src/scenes/onboarding/sdks/product-analytics/traceloop.tsx", "../src/scenes/onboarding/sdks/product-analytics/vue.tsx", "../src/scenes/onboarding/sdks/product-analytics/webflow.tsx", "../src/scenes/onboarding/sdks/SDKs.tsx", "../src/lib/hooks/useInterval.js", "../src/scenes/onboarding/sdks/SDKSnippet.tsx", "../src/scenes/onboarding/sdks/surveys/SurveysSDKInstructions.tsx", "../src/scenes/onboarding/sdks/surveys/index.tsx", "../src/scenes/onboarding/sdks/surveys/angular.tsx", "../src/scenes/onboarding/sdks/surveys/astro.tsx", "../src/scenes/onboarding/sdks/surveys/bubble.tsx", "../src/scenes/onboarding/sdks/surveys/framer.tsx", "../src/scenes/onboarding/sdks/surveys/html-snippet.tsx", "../src/scenes/onboarding/sdks/surveys/js-web.tsx", "../src/scenes/onboarding/sdks/surveys/next-js.tsx", "../src/scenes/onboarding/sdks/surveys/nuxt.tsx", "../src/scenes/onboarding/sdks/surveys/react.tsx", "../src/scenes/onboarding/sdks/surveys/remix.tsx", "../src/scenes/onboarding/sdks/surveys/svelte.tsx", "../src/scenes/onboarding/sdks/surveys/vue.tsx", "../src/scenes/onboarding/sdks/surveys/webflow.tsx"],
  "sourcesContent": ["import { Spinner } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { FEATURE_FLAGS, SESSION_REPLAY_MINIMUM_DURATION_OPTIONS } from 'lib/constants'\nimport { useFeatureFlag } from 'lib/hooks/useFeatureFlag'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { useEffect, useState } from 'react'\nimport { billingLogic } from 'scenes/billing/billingLogic'\nimport { newDashboardLogic } from 'scenes/dashboard/newDashboardLogic'\nimport { WebAnalyticsSDKInstructions } from 'scenes/onboarding/sdks/web-analytics/WebAnalyticsSDKInstructions'\nimport { productsLogic } from 'scenes/products/productsLogic'\nimport { SceneExport } from 'scenes/sceneTypes'\nimport { teamLogic } from 'scenes/teamLogic'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { AvailableFeature, ProductKey } from '~/types'\n\nimport { OnboardingUpgradeStep } from './billing/OnboardingUpgradeStep'\nimport { OnboardingDataWarehouseSourcesStep } from './data-warehouse/OnboardingDataWarehouseSourcesStep'\nimport { OnboardingBillingStep } from './OnboardingBillingStep'\nimport { OnboardingInviteTeammates } from './OnboardingInviteTeammates'\nimport { onboardingLogic, OnboardingStepKey } from './onboardingLogic'\nimport { OnboardingProductConfiguration } from './OnboardingProductConfiguration'\nimport { ProductConfigOption } from './onboardingProductConfigurationLogic'\nimport { OnboardingProductIntroduction } from './OnboardingProductIntroduction'\nimport { OnboardingReverseProxy } from './OnboardingReverseProxy'\nimport { OnboardingSessionReplayConfiguration } from './OnboardingSessionReplayConfiguration'\nimport { OnboardingDashboardTemplateConfigureStep } from './productAnalyticsSteps/DashboardTemplateConfigureStep'\nimport { OnboardingDashboardTemplateSelectStep } from './productAnalyticsSteps/DashboardTemplateSelectStep'\nimport { ExperimentsSDKInstructions } from './sdks/experiments/ExperimentsSDKInstructions'\nimport { FeatureFlagsSDKInstructions } from './sdks/feature-flags/FeatureFlagsSDKInstructions'\nimport { ProductAnalyticsSDKInstructions } from './sdks/product-analytics/ProductAnalyticsSDKInstructions'\nimport { SDKs } from './sdks/SDKs'\nimport { sdksLogic } from './sdks/sdksLogic'\nimport { SessionReplaySDKInstructions } from './sdks/session-replay/SessionReplaySDKInstructions'\nimport { SurveysSDKInstructions } from './sdks/surveys/SurveysSDKInstructions'\n\nexport const scene: SceneExport = {\n    component: Onboarding,\n    logic: onboardingLogic,\n}\n\n/**\n * Wrapper for custom onboarding content. This automatically includes billing, other products, and invite steps.\n */\nconst OnboardingWrapper = ({ children }: { children: React.ReactNode }): JSX.Element => {\n    const {\n        productKey,\n        currentOnboardingStep,\n        shouldShowBillingStep,\n        shouldShowReverseProxyStep,\n        shouldShowDataWarehouseStep,\n        product,\n        includeIntro,\n        waitForBilling,\n    } = useValues(onboardingLogic)\n    const { billing, billingLoading } = useValues(billingLogic)\n    const { setAllOnboardingSteps } = useActions(onboardingLogic)\n    const [allSteps, setAllSteps] = useState<JSX.Element[]>([])\n\n    const showNewPlansStep = useFeatureFlag('ONBOARDING_NEW_PLANS_STEP', 'test')\n\n    useEffect(() => {\n        createAllSteps()\n    }, [children, billingLoading])\n\n    useEffect(() => {\n        if (!allSteps.length || (billingLoading && waitForBilling)) {\n            return\n        }\n        setAllOnboardingSteps(allSteps)\n    }, [allSteps])\n\n    if (!product || !children) {\n        return <></>\n    }\n\n    const createAllSteps = (): void => {\n        let steps = []\n        if (Array.isArray(children)) {\n            steps = [...children]\n        } else {\n            steps = [children as JSX.Element]\n        }\n        const billingProduct = billing?.products.find((p) => p.type === productKey)\n        if (includeIntro && billingProduct) {\n            const IntroStep = <OnboardingProductIntroduction stepKey={OnboardingStepKey.PRODUCT_INTRO} />\n            steps = [IntroStep, ...steps]\n        }\n\n        if (shouldShowDataWarehouseStep) {\n            const DataWarehouseStep = (\n                <OnboardingDataWarehouseSourcesStep\n                    usersAction=\"Data Warehouse\"\n                    stepKey={OnboardingStepKey.LINK_DATA}\n                />\n            )\n            steps = [...steps, DataWarehouseStep]\n        }\n\n        if (shouldShowReverseProxyStep) {\n            const ReverseProxyStep = <OnboardingReverseProxy stepKey={OnboardingStepKey.REVERSE_PROXY} />\n            steps = [...steps, ReverseProxyStep]\n        }\n        if (shouldShowBillingStep && billingProduct) {\n            const BillingStep = showNewPlansStep ? (\n                <OnboardingUpgradeStep product={billingProduct} stepKey={OnboardingStepKey.PLANS} />\n            ) : (\n                <OnboardingBillingStep product={billingProduct} stepKey={OnboardingStepKey.PLANS} />\n            )\n            steps = [...steps, BillingStep]\n        }\n        const inviteTeammatesStep = <OnboardingInviteTeammates stepKey={OnboardingStepKey.INVITE_TEAMMATES} />\n        steps = [...steps, inviteTeammatesStep].filter(Boolean)\n        setAllSteps(steps)\n    }\n\n    if (!currentOnboardingStep) {\n        return (\n            <div className=\"flex items-center justify-center my-20\">\n                <Spinner className=\"text-2xl text-secondary w-10 h-10\" />\n            </div>\n        )\n    }\n\n    return currentOnboardingStep || <></>\n}\n\nconst ProductAnalyticsOnboarding = (): JSX.Element => {\n    const { currentTeam } = useValues(teamLogic)\n    const { featureFlags } = useValues(featureFlagLogic)\n    const { combinedSnippetAndLiveEventsHosts } = useValues(sdksLogic)\n    const { selectedProducts } = useValues(productsLogic)\n    // mount the logic here so that it stays mounted for the entire onboarding flow\n    // not sure if there is a better way to do this\n    useValues(newDashboardLogic)\n\n    const showTemplateSteps =\n        featureFlags[FEATURE_FLAGS.ONBOARDING_DASHBOARD_TEMPLATES] == 'test' &&\n        window.innerWidth > 1000 &&\n        combinedSnippetAndLiveEventsHosts.length > 0\n\n    const showSessionReplayStep =\n        useFeatureFlag('ONBOARDING_SESSION_REPLAY_SEPARATE_STEP', 'test') &&\n        !selectedProducts.includes(ProductKey.SESSION_REPLAY)\n\n    const options: ProductConfigOption[] = [\n        {\n            title: 'Autocapture frontend interactions',\n            description: `If you use our JavaScript, React Native or iOS libraries, we'll automagically \n            capture frontend interactions like clicks, submits, and more. Fine-tune what you \n            capture directly in your code snippet.`,\n            teamProperty: 'autocapture_opt_out',\n            value: !currentTeam?.autocapture_opt_out,\n            type: 'toggle',\n            inverseToggle: true,\n            visible: true,\n        },\n        {\n            title: 'Enable heatmaps',\n            description: `If you use our JavaScript libraries, we can capture general clicks, mouse movements,\n                   and scrolling to create heatmaps. \n                   No additional events are created, and you can disable this at any time.`,\n            teamProperty: 'heatmaps_opt_in',\n            value: currentTeam?.heatmaps_opt_in ?? true,\n            type: 'toggle',\n            visible: true,\n        },\n        {\n            title: 'Enable web vitals autocapture',\n            description: `Uses Google's web vitals library to automagically capture performance information.`,\n            teamProperty: 'autocapture_web_vitals_opt_in',\n            value: currentTeam?.autocapture_web_vitals_opt_in ?? true,\n            type: 'toggle',\n            visible: true,\n        },\n        {\n            title: 'Enable session recordings',\n            description: `Turn on session recordings and watch how users experience your app. We will also turn on console log and network performance recording. You can change these settings any time in the settings panel.`,\n            teamProperty: 'session_recording_opt_in',\n            // TRICKY: if someone has shown secondary product intent for replay we want to include it as enabled\n            // particularly while we're not taking people through every product onboarding they showed interest in\n            value:\n                (currentTeam?.session_recording_opt_in || selectedProducts.includes(ProductKey.SESSION_REPLAY)) ?? true,\n            type: 'toggle',\n            visible: true,\n        },\n        {\n            title: 'Capture console logs',\n            description: `Automatically enable console log capture`,\n            teamProperty: 'capture_console_log_opt_in',\n            value: true,\n            type: 'toggle',\n            visible: false,\n        },\n        {\n            title: 'Capture network performance',\n            description: `Automatically enable network performance capture`,\n            teamProperty: 'capture_performance_opt_in',\n            value: true,\n            type: 'toggle',\n            visible: false,\n        },\n    ]\n\n    const filteredOptions = showSessionReplayStep\n        ? options.filter((option) => option.teamProperty !== 'session_recording_opt_in')\n        : options\n\n    return (\n        <OnboardingWrapper>\n            <SDKs\n                usersAction=\"collecting events\"\n                sdkInstructionMap={ProductAnalyticsSDKInstructions}\n                stepKey={OnboardingStepKey.INSTALL}\n            />\n            <OnboardingProductConfiguration\n                stepKey={OnboardingStepKey.PRODUCT_CONFIGURATION}\n                options={filteredOptions}\n            />\n\n            {showSessionReplayStep && (\n                <OnboardingSessionReplayConfiguration stepKey={OnboardingStepKey.SESSION_REPLAY} />\n            )}\n\n            {/* this is two conditionals because they need to be direct children of the wrapper */}\n            {showTemplateSteps ? (\n                <OnboardingDashboardTemplateSelectStep stepKey={OnboardingStepKey.DASHBOARD_TEMPLATE} />\n            ) : null}\n            {showTemplateSteps ? (\n                <OnboardingDashboardTemplateConfigureStep stepKey={OnboardingStepKey.DASHBOARD_TEMPLATE_CONFIGURE} />\n            ) : null}\n        </OnboardingWrapper>\n    )\n}\n\nconst WebAnalyticsOnboarding = (): JSX.Element => {\n    const { currentTeam } = useValues(teamLogic)\n\n    const options: ProductConfigOption[] = [\n        {\n            title: 'Autocapture frontend interactions',\n            description: `If you use our JavaScript, React Native or iOS libraries, we'll automagically \n            capture frontend interactions like clicks, submits, and more. Fine-tune what you \n            capture directly in your code snippet.`,\n            teamProperty: 'autocapture_opt_out',\n            value: !currentTeam?.autocapture_opt_out,\n            type: 'toggle',\n            inverseToggle: true,\n            visible: true,\n        },\n        {\n            title: 'Enable heatmaps',\n            description: `If you use our JavaScript libraries, we can capture general clicks, mouse movements,\n                   and scrolling to create heatmaps. \n                   No additional events are created, and you can disable this at any time.`,\n            teamProperty: 'heatmaps_opt_in',\n            value: currentTeam?.heatmaps_opt_in ?? true,\n            type: 'toggle',\n            visible: true,\n        },\n        {\n            title: 'Enable web vitals autocapture',\n            description: `Uses Google's web vitals library to automagically capture performance information.`,\n            teamProperty: 'autocapture_web_vitals_opt_in',\n            value: currentTeam?.autocapture_web_vitals_opt_in ?? true,\n            type: 'toggle',\n            visible: true,\n        },\n        {\n            title: 'Enable session recordings',\n            description: `Turn on session recordings and watch how users experience your app. We will also turn on console log and network performance recording. You can change these settings any time in the settings panel.`,\n            teamProperty: 'session_recording_opt_in',\n            value: currentTeam?.session_recording_opt_in ?? true,\n            type: 'toggle',\n            visible: true,\n        },\n        {\n            title: 'Capture network performance',\n            description: `Automatically enable network performance capture`,\n            teamProperty: 'capture_performance_opt_in',\n            value: true,\n            type: 'toggle',\n            visible: false,\n        },\n    ]\n\n    return (\n        <OnboardingWrapper>\n            <SDKs\n                usersAction=\"collecting events\"\n                sdkInstructionMap={WebAnalyticsSDKInstructions}\n                stepKey={OnboardingStepKey.INSTALL}\n            />\n            <OnboardingProductConfiguration stepKey={OnboardingStepKey.PRODUCT_CONFIGURATION} options={options} />\n        </OnboardingWrapper>\n    )\n}\nconst SessionReplayOnboarding = (): JSX.Element => {\n    const { hasAvailableFeature } = useValues(userLogic)\n    const { currentTeam } = useValues(teamLogic)\n\n    const configOptions: ProductConfigOption[] = [\n        {\n            type: 'toggle',\n            title: 'Capture console logs',\n            description: `Capture console logs as a part of user session recordings. \n                            Use the console logs alongside recordings to debug any issues with your app.`,\n            teamProperty: 'capture_console_log_opt_in',\n            value: currentTeam?.capture_console_log_opt_in ?? true,\n            visible: true,\n        },\n        {\n            type: 'toggle',\n            title: 'Capture network performance',\n            description: `Capture performance and network information alongside recordings. Use the\n                            network requests and timings in the recording player to help you debug issues with your app.`,\n            teamProperty: 'capture_performance_opt_in',\n            value: currentTeam?.capture_performance_opt_in ?? true,\n            visible: true,\n        },\n        {\n            type: 'toggle',\n            title: 'Record user sessions',\n            description: 'Watch recordings of how users interact with your web app to see what can be improved.',\n            teamProperty: 'session_recording_opt_in',\n            value: true,\n            visible: false,\n        },\n    ]\n\n    if (hasAvailableFeature(AvailableFeature.REPLAY_RECORDING_DURATION_MINIMUM)) {\n        configOptions.push({\n            type: 'select',\n            title: 'Minimum session duration (seconds)',\n            description: `Only record sessions that are longer than the specified duration. \n                            Start with it low and increase it later if you're getting too many short sessions.`,\n            teamProperty: 'session_recording_minimum_duration_milliseconds',\n            value: currentTeam?.session_recording_minimum_duration_milliseconds || null,\n            selectOptions: SESSION_REPLAY_MINIMUM_DURATION_OPTIONS,\n            visible: true,\n        })\n    }\n\n    return (\n        <OnboardingWrapper>\n            <SDKs\n                usersAction=\"recording sessions\"\n                sdkInstructionMap={SessionReplaySDKInstructions}\n                subtitle=\"Choose the framework your frontend is built on, or use our all-purpose JavaScript library. If you already have the snippet installed, you can skip this step!\"\n                stepKey={OnboardingStepKey.INSTALL}\n            />\n            <OnboardingProductConfiguration\n                stepKey={OnboardingStepKey.PRODUCT_CONFIGURATION}\n                options={configOptions}\n                product={ProductKey.SESSION_REPLAY}\n            />\n        </OnboardingWrapper>\n    )\n}\n\nconst FeatureFlagsOnboarding = (): JSX.Element => {\n    return (\n        <OnboardingWrapper>\n            <SDKs\n                usersAction=\"loading flags\"\n                sdkInstructionMap={FeatureFlagsSDKInstructions}\n                subtitle=\"Choose the framework where you want to use feature flags, or use our all-purpose JavaScript library. If you already have the snippet installed, you can skip this step!\"\n                stepKey={OnboardingStepKey.INSTALL}\n            />\n        </OnboardingWrapper>\n    )\n}\n\nconst ExperimentsOnboarding = (): JSX.Element => {\n    return (\n        <OnboardingWrapper>\n            <SDKs\n                usersAction=\"loading experiments\"\n                sdkInstructionMap={ExperimentsSDKInstructions}\n                subtitle=\"Choose the framework where you want to run experiments, or use our all-purpose JavaScript library. If you already have the snippet installed, you can skip this step!\"\n                stepKey={OnboardingStepKey.INSTALL}\n            />\n        </OnboardingWrapper>\n    )\n}\n\nconst SurveysOnboarding = (): JSX.Element => {\n    return (\n        <OnboardingWrapper>\n            <SDKs\n                usersAction=\"taking surveys\"\n                sdkInstructionMap={SurveysSDKInstructions}\n                subtitle=\"Choose the framework your frontend is built on, or use our all-purpose JavaScript library. If you already have the snippet installed, you can skip this step!\"\n                stepKey={OnboardingStepKey.INSTALL}\n            />\n        </OnboardingWrapper>\n    )\n}\n\nconst DataWarehouseOnboarding = (): JSX.Element => {\n    return (\n        <OnboardingWrapper>\n            <OnboardingDataWarehouseSourcesStep usersAction=\"Data Warehouse\" stepKey={OnboardingStepKey.LINK_DATA} />\n        </OnboardingWrapper>\n    )\n}\n\nexport const onboardingViews = {\n    [ProductKey.PRODUCT_ANALYTICS]: ProductAnalyticsOnboarding,\n    [ProductKey.WEB_ANALYTICS]: WebAnalyticsOnboarding,\n    [ProductKey.SESSION_REPLAY]: SessionReplayOnboarding,\n    [ProductKey.FEATURE_FLAGS]: FeatureFlagsOnboarding,\n    [ProductKey.EXPERIMENTS]: ExperimentsOnboarding,\n    [ProductKey.SURVEYS]: SurveysOnboarding,\n    [ProductKey.DATA_WAREHOUSE]: DataWarehouseOnboarding,\n}\n\nexport function Onboarding(): JSX.Element | null {\n    const { product, productKey } = useValues(onboardingLogic)\n\n    if (!product || !productKey) {\n        return <></>\n    }\n    const OnboardingView = onboardingViews[productKey]\n\n    return <OnboardingView />\n}\n", "import { SDKInstructionsMap, SDKKey } from '~/types'\n\nimport {\n    AndroidInstructions,\n    AngularInstructions,\n    AstroInstructions,\n    BubbleInstructions,\n    FlutterInstructions,\n    FramerInstructions,\n    HTMLSnippetInstructions,\n    iOSInstructions,\n    JSWebInstructions,\n    NextJSInstructions,\n    NuxtJSInstructions,\n    ReactInstructions,\n    RemixInstructions,\n    SvelteInstructions,\n    VueInstructions,\n    WebAnalyticsRNInstructions,\n    WebflowInstructions,\n} from '.'\n\nexport const WebAnalyticsSDKInstructions: SDKInstructionsMap = {\n    [SDKKey.JS_WEB]: JSWebInstructions,\n    [SDKKey.HTML_SNIPPET]: HTMLSnippetInstructions,\n    [SDKKey.ANGULAR]: AngularInstructions,\n    [SDKKey.ASTRO]: AstroInstructions,\n    [SDKKey.IOS]: iOSInstructions,\n    [SDKKey.BUBBLE]: BubbleInstructions,\n    [SDKKey.FRAMER]: FramerInstructions,\n    [SDKKey.NEXT_JS]: NextJSInstructions,\n    [SDKKey.NUXT_JS]: NuxtJSInstructions,\n    [SDKKey.REACT]: ReactInstructions,\n    [SDKKey.REMIX]: RemixInstructions,\n    [SDKKey.SVELTE]: SvelteInstructions,\n    [SDKKey.VUE_JS]: VueInstructions,\n    [SDKKey.WEBFLOW]: WebflowInstructions,\n    [SDKKey.ANDROID]: AndroidInstructions,\n    [SDKKey.REACT_NATIVE]: WebAnalyticsRNInstructions,\n    [SDKKey.FLUTTER]: FlutterInstructions,\n}\n", "export * from './android'\nexport * from './angular'\nexport * from './astro'\nexport * from './bubble'\nexport * from './flutter'\nexport * from './framer'\nexport * from './html-snippet'\nexport * from './ios'\nexport * from './js-web'\nexport * from './next-js'\nexport * from './nuxt'\nexport * from './react'\nexport * from './react-native'\nexport * from './remix'\nexport * from './svelte'\nexport * from './vue'\nexport * from './webflow'\n", "import { WebAnalyticsMobileFinalSteps } from 'scenes/onboarding/sdks/web-analytics/FinalSteps'\n\nimport { SDKInstallAndroidInstructions, SDKInstallAndroidTrackScreenInstructions } from '../sdk-install-instructions'\n\nexport function AndroidInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAndroidInstructions includeReplay={false} />\n            <WebAnalyticsMobileFinalSteps />\n            <SDKInstallAndroidTrackScreenInstructions />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nfunction JSEventSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JavaScript}>{`posthog.capture('my event', { property: 'value' })`}</CodeSnippet>\n    )\n}\n\nexport const WebAnalyticsAllJSFinalSteps = (): JSX.Element => {\n    return (\n        <>\n            <h4>Send events</h4>\n            <p>\n                Click around and view a couple pages to generate some events. Our package automatically captures them\n                for you.\n            </p>\n            <h4>Optional: Send a manual event</h4>\n            <p>If you'd like, you can manually define events, too.</p>\n            <JSEventSnippet />\n        </>\n    )\n}\n\nexport const WebAnalyticsMobileFinalSteps = (): JSX.Element => {\n    return (\n        <>\n            <h3>Track screen views</h3>\n            <p>\n                Despite the name, the web analytics dashboard can be used to track screen views in mobile apps, too.\n                Open your app and view some screens to generate some events.\n            </p>\n        </>\n    )\n}\n", "export * from './android'\nexport * from './angular'\nexport * from './astro'\nexport * from './bubble'\nexport * from './django'\nexport * from './elixir'\nexport * from './flutter'\nexport * from './framer'\nexport * from './go'\nexport * from './ios'\nexport * from './js-web'\nexport * from './laravel'\nexport * from './nodejs'\nexport * from './nuxt'\nexport * from './php'\nexport * from './python'\nexport * from './react-native'\nexport * from './remix'\nexport * from './ruby'\nexport * from './svelte'\nexport * from './vue'\nexport * from './webflow'\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nexport interface AndroidSetupProps {\n    includeReplay?: boolean\n}\n\nfunction AndroidInstallSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Kotlin}>\n            {`dependencies {\n    implementation(\"com.posthog:posthog-android:3.+\")\n}`}\n        </CodeSnippet>\n    )\n}\n\nfunction AndroidSetupSnippet({ includeReplay }: AndroidSetupProps): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.Kotlin}>\n            {`class SampleApp : Application() {\n\n    companion object {\n        const val POSTHOG_API_KEY = \"${currentTeam?.api_token}\"\n        const val POSTHOG_HOST = \"${apiHostOrigin()}\"\n    }\n\n    override fun onCreate() {\n        super.onCreate()\n\n        // Create a PostHog Config with the given API key and host\n        val config = PostHogAndroidConfig(\n            apiKey = POSTHOG_API_KEY,\n            host = POSTHOG_HOST\n        )\n        ${\n            includeReplay\n                ? `\n        // check https://posthog.com/docs/session-replay/installation?tab=Android\n        // for more config and to learn about how we capture sessions on mobile\n        // and what to expect\n        config.sessionReplay = true\n        // choose whether to mask images or text\n        config.sessionReplayConfig.maskAllImages = false\n        config.sessionReplayConfig.maskAllTextInputs = true\n        // screenshot is disabled by default\n        // The screenshot may contain sensitive information, use with caution\n        config.sessionReplayConfig.screenshot = true`\n                : ''\n        }\n\n        // Setup PostHog with the given Context and Config\n        PostHogAndroid.setup(this, config)\n    }\n}`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallAndroidInstructions(props: AndroidSetupProps): JSX.Element {\n    return (\n        <>\n            <h3>Install</h3>\n            <AndroidInstallSnippet />\n            <h3>Configure</h3>\n            <AndroidSetupSnippet {...props} />\n        </>\n    )\n}\n\nexport function SDKInstallAndroidTrackScreenInstructions(): JSX.Element {\n    return (\n        <>\n            <p>\n                With <code>captureScreenViews = true</code>, PostHog will try to record all screen changes\n                automatically.\n            </p>\n            <p>\n                If you want to manually send a new screen capture event, use the <code>screen</code> function.\n            </p>\n            <CodeSnippet language={Language.Kotlin}>{`import com.posthog.PostHog\n\nPostHog.screen(\n    screenTitle = \"Dashboard\",\n    properties = mapOf(\n        \"background\" to \"blue\",\n        \"hero\" to \"superhog\"\n    )\n)`}</CodeSnippet>\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { JSInstallSnippet } from './js-web'\n\nfunction EnvVarsSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.Bash}>\n            {[`POSTHOG_KEY=${currentTeam?.api_token}`, `POSTHOG_HOST=${apiHostOrigin()}`].join('\\n')}\n        </CodeSnippet>\n    )\n}\n\nfunction AngularInitializeCodeSnippet(): JSX.Element {\n    const { featureFlags } = useValues(featureFlagLogic)\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`// in src/main.ts\n\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\nimport posthog from 'posthog-js'\n\nposthog.init(\n  process.env.POSTHOG_KEY,\n  {\n    api_host:process.env.POSTHOG_HOST,\n    ${\n        !isPersonProfilesDisabled\n            ? `person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well`\n            : null\n    }\n  }\n)\n\nbootstrapApplication(AppComponent, appConfig)\n  .catch((err) => console.error(err));`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallAngularInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install posthog-js using your package manager</h3>\n            <JSInstallSnippet />\n            <h3>Add environment variables</h3>\n            <p>\n                Add your environment variables to your .env.local file and to your hosting provider (e.g. Vercel,\n                Netlify, AWS). You can find your project API key in your project settings.\n            </p>\n            <EnvVarsSnippet />\n\n            <h3>Initialize</h3>\n            <p>\n                In your <code>src/main.ts</code>, initialize PostHog using your project API key and instance address:\n            </p>\n            <AngularInitializeCodeSnippet />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nexport function JSInstallSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Bash}>\n            {['npm install posthog-js', '# OR', 'yarn add posthog-js', '# OR', 'pnpm add posthog-js'].join('\\n')}\n        </CodeSnippet>\n    )\n}\n\nexport function JSSetupSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n    const { featureFlags } = useValues(featureFlagLogic)\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {[\n                \"import posthog from 'posthog-js'\",\n                '',\n                `posthog.init('${currentTeam?.api_token}',`,\n                `    {`,\n                `        api_host: '${apiHostOrigin()}',`,\n                isPersonProfilesDisabled\n                    ? ``\n                    : `        person_profiles: 'identified_only' // or 'always' to create profiles for anonymous users as well`,\n                `    }`,\n                `)`,\n            ].join('\\n')}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallJSWebInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install</h3>\n            <JSInstallSnippet />\n            <h3>Initialize</h3>\n            <JSSetupSnippet />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { useJsSnippet } from 'lib/components/JSSnippet'\n\nfunction CreatePostHogAstroFileSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Bash}>\n            {`cd ./src/components \n# or 'cd ./src && mkdir components && cd ./components' if your components folder doesn't exist \ntouch posthog.astro`}\n        </CodeSnippet>\n    )\n}\n\nfunction AstroSetupSnippet(): JSX.Element {\n    const jsSnippetScriptTag = useJsSnippet()\n    return (\n        <>\n            <CodeSnippet language={Language.JavaScript}>\n                {`---\n\n---\n${jsSnippetScriptTag}\n`}\n            </CodeSnippet>\n        </>\n    )\n}\n\nexport function SDKInstallAstroInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install the PostHog web snippet</h3>\n            <p>\n                In your <code>src/components</code> folder, create a <code>posthog.astro</code> file:\n            </p>\n            <CreatePostHogAstroFileSnippet />\n            <p>In this file, add your PostHog web snippet:</p>\n            <AstroSetupSnippet />\n        </>\n    )\n}\n", "import { JSSnippet } from 'lib/components/JSSnippet'\n\nexport function SDKInstallBubbleInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install the PostHog web snippet</h3>\n            <p>First copy your web snippet:</p>\n            <JSSnippet />\n            <p>\n                Go to your Bubble site settings by clicking on the icon in the left-hand menu. If you haven\u2019t already,\n                sign up for at least the <strong>Starter</strong> site plan. This enables you to add custom code. Then:\n            </p>\n            <ol>\n                <li>\n                    Go to the <strong>SEO / metatags</strong> tab in site settings.\n                </li>\n                <li>\n                    Paste your PostHog snippet in the <strong>Script/meta tags in header</strong> section.\n                </li>\n                <li> Deploy your site to live.</li>\n            </ol>\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nfunction DjangoInstallSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.Bash}>pip install posthog</CodeSnippet>\n}\n\nfunction DjangoAppConfigSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.Python}>\n            {`from django.apps import AppConfig\nimport posthog\n\nclass YourAppConfig(AppConfig):\n    name = \"your_app_name\"\n    def ready(self):\n        posthog.api_key = '${currentTeam?.api_token}'\n        posthog.host = '${apiHostOrigin()}'`}\n        </CodeSnippet>\n    )\n}\n\nfunction DjangoSettingsSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Python}>\n            {`INSTALLED_APPS = [\n    # other apps\n    'your_app_name.apps.MyAppConfig',  # Add your app config\n] `}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallDjangoInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install</h3>\n            <DjangoInstallSnippet />\n            <h3>Configure</h3>\n            <p>\n                Set the PostHog API key and host in your <code>AppConfig</code> in <code>apps.py</code> so that's it's\n                available everywhere:\n            </p>\n            <DjangoAppConfigSnippet />\n            <p />\n            Next, if you haven't done so already, make sure you add your <code>AppConfig</code> to your{' '}\n            <code>settings.py</code> under <code>INSTALLED_APPS</code>:\n            <DjangoSettingsSnippet />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nfunction ElixirInstallSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Elixir}>\n            {'def deps do\\n    [\\n        {:posthog, \"~> 0.1\"}\\n    ]\\nend'}\n        </CodeSnippet>\n    )\n}\n\nfunction ElixirSetupSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n    const url = apiHostOrigin()\n\n    return (\n        <CodeSnippet language={Language.Elixir}>\n            {'config :posthog,\\n    api_url: \"' + url + '\",\\n    api_key: \"' + currentTeam?.api_token + '\"'}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallElixirInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install</h3>\n            <ElixirInstallSnippet />\n            <h3>Configure</h3>\n            <ElixirSetupSnippet />\n        </>\n    )\n}\n", "import { LemonBanner, Link } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { useJsSnippet } from 'lib/components/JSSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nexport interface FlutterSetupProps {\n    includeReplay?: boolean\n}\n\nexport interface FlutterInstallProps {\n    apiToken?: string\n}\n\nfunction FlutterInstallSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.YAML}>posthog_flutter: ^4.0.0</CodeSnippet>\n}\n\nfunction InstallFlutterSessionReplay(props: FlutterInstallProps): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Dart}>\n            {`import 'package:flutter/material.dart';\n\nimport 'package:posthog_flutter/posthog_flutter.dart';\n\nFuture<void> main() async {\n  // init WidgetsFlutterBinding if not yet\n  WidgetsFlutterBinding.ensureInitialized();\n  final config = PostHogConfig('${props.apiToken}');\n  config.host = '${apiHostOrigin()}';\n  config.debug = true;\n  config.captureApplicationLifecycleEvents = true;\n\n  // check https://posthog.com/docs/session-replay/installation?tab=Flutter\n  // for more config and to learn about how we capture sessions on mobile\n  // and what to expect\n  config.sessionReplay = true;\n  // choose whether to mask images or text\n  config.sessionReplayConfig.maskAllTexts = false;\n  config.sessionReplayConfig.maskAllImages = false;\n\n  // Setup PostHog with the given Context and Config\n  await Posthog().setup(config);\n  runApp(MyApp());\n}`}\n        </CodeSnippet>\n    )\n}\n\nfunction InstallFlutterWidgetsSessionReplay(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Dart}>\n            {`import 'package:flutter/material.dart';\n\nimport 'package:posthog_flutter/posthog_flutter.dart';\n\nclass MyApp extends StatefulWidget {\n  const MyApp({super.key});\n\n  @override\n  State<MyApp> createState() => _MyAppState();\n}\n\nclass _MyAppState extends State<MyApp> {\n  @override\n  void initState() {\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // Wrap your App with PostHogWidget\n    return PostHogWidget(\n      child: MaterialApp(\n        // Add PosthogObserver to your navigatorObservers\n        navigatorObservers: [PosthogObserver()],\n        title: 'My App',\n        home: const HomeScreen(),\n      ),\n    );\n  }\n}`}\n        </CodeSnippet>\n    )\n}\n\nfunction FlutterAndroidSetupSnippet({ includeReplay }: FlutterSetupProps): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n    const url = apiHostOrigin()\n    const props = { apiToken: currentTeam?.api_token }\n\n    if (includeReplay) {\n        return (\n            <>\n                <CodeSnippet language={Language.XML}>\n                    {\n                        '<application>\\n\\t<activity>\\n\\t\\t[...]\\n\\t</activity>\\n\\t<meta-data android:name=\"com.posthog.posthog.AUTO_INIT\" android:value=\"false\" />\\n</application>'\n                    }\n                </CodeSnippet>\n                <InstallFlutterSessionReplay {...props} />\n                <InstallFlutterWidgetsSessionReplay />\n            </>\n        )\n    }\n    return (\n        <CodeSnippet language={Language.XML}>\n            {'<application>\\n\\t<activity>\\n\\t\\t[...]\\n\\t</activity>\\n\\t<meta-data android:name=\"com.posthog.posthog.API_KEY\" android:value=\"' +\n                currentTeam?.api_token +\n                '\" />\\n\\t<meta-data android:name=\"com.posthog.posthog.POSTHOG_HOST\" android:value=\"' +\n                url +\n                '\" />\\n\\t<meta-data android:name=\"com.posthog.posthog.TRACK_APPLICATION_LIFECYCLE_EVENTS\" android:value=\"true\" />\\n\\t<meta-data android:name=\"com.posthog.posthog.DEBUG\" android:value=\"true\" />\\n</application>'}\n        </CodeSnippet>\n    )\n}\n\nfunction FlutterIOSSetupSnippet({ includeReplay }: FlutterSetupProps): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n    const url = apiHostOrigin()\n    const props = { apiToken: currentTeam?.api_token }\n\n    if (includeReplay) {\n        return (\n            <>\n                <CodeSnippet language={Language.XML}>\n                    {'<dict>\\n\\t[...]\\n\\t<key>com.posthog.posthog.AUTO_INIT</key>\\n\\t<false/>\\n\\t[...]\\n</dict>'}\n                </CodeSnippet>\n                <InstallFlutterSessionReplay {...props} />\n                <InstallFlutterWidgetsSessionReplay />\n            </>\n        )\n    }\n    return (\n        <CodeSnippet language={Language.XML}>\n            {'<dict>\\n\\t[...]\\n\\t<key>com.posthog.posthog.API_KEY</key>\\n\\t<string>' +\n                currentTeam?.api_token +\n                '</string>\\n\\t<key>com.posthog.posthog.POSTHOG_HOST</key>\\n\\t<string>' +\n                url +\n                '</string>\\n\\t<key>com.posthog.posthog.CAPTURE_APPLICATION_LIFECYCLE_EVENTS</key>\\n\\t<true/>\\n\\t[...]\\n</dict>'}\n        </CodeSnippet>\n    )\n}\n\nfunction FlutterWebSetupSnippet(): JSX.Element {\n    const jsSnippet = useJsSnippet(4)\n\n    return (\n        <CodeSnippet language={Language.HTML}>\n            {`<!DOCTYPE html>\n<html>\n  <head>\n    ...\n${jsSnippet}\n  </head>\n\n  <body>\n    ...\n  </body>\n</html>`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallFlutterInstructions(props: FlutterSetupProps): JSX.Element {\n    return (\n        <>\n            {props.includeReplay ? (\n                <LemonBanner type=\"info\">\n                    \uD83D\uDEA7 NOTE: <Link to=\"https://posthog.com/docs/session-replay/mobile\">Mobile recording</Link> is\n                    currently in beta. We are keen to gather as much feedback as possible so if you try this out please\n                    let us know. You can send feedback via the{' '}\n                    <Link to=\"https://us.posthog.com/#panel=support%3Afeedback%3Asession_replay%3Alow\">\n                        in-app support panel\n                    </Link>{' '}\n                    or one of our other <Link to=\"https://posthog.com/docs/support-options\">support options</Link>.\n                </LemonBanner>\n            ) : null}\n            <h3>Install</h3>\n            <FlutterInstallSnippet />\n            <h3>Android Setup</h3>\n            <p className=\"prompt-text\">Add these values in AndroidManifest.xml</p>\n            <FlutterAndroidSetupSnippet {...props} />\n            <h3>iOS/macOS Setup</h3>\n            <p className=\"prompt-text\">Add these values in Info.plist</p>\n            <FlutterIOSSetupSnippet {...props} />\n            <h3>Web Setup</h3>\n            <p className=\"prompt-text\">Add these values in index.html</p>\n            <FlutterWebSetupSnippet />\n        </>\n    )\n}\n\nexport function SDKInstallFlutterTrackScreenInstructions(): JSX.Element {\n    return (\n        <>\n            <p>\n                With the <Link to=\"https://posthog.com/docs/libraries/flutter#example\">PosthogObserver</Link> Observer,\n                PostHog will try to record all screen changes automatically.\n            </p>\n            <p>\n                If you want to manually send a new screen capture event, use the <code>screen</code> function.\n            </p>\n            <CodeSnippet language={Language.Dart}>{`import 'package:posthog_flutter/posthog_flutter.dart';\n\nawait Posthog().screen(\n    screenName: 'Dashboard',\n    properties: {\n      'background': 'blue',\n      'hero': 'superhog'\n    });\n`}</CodeSnippet>\n        </>\n    )\n}\n", "import { JSSnippet } from 'lib/components/JSSnippet'\n\nexport function SDKInstallFramerInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install the PostHog web snippet</h3>\n            <p>First copy your web snippet:</p>\n            <JSSnippet />\n            <p>\n                Then go to your Framer project settings by clicking the gear in the top right. If you haven\u2019t already,\n                sign up for at least the <strong>Mini</strong> site plan. This enables you to add custom code. Then:\n            </p>\n            <ol>\n                <li>\n                    Go to the <strong>General</strong> tab in site settings.\n                </li>\n                <li>\n                    Scroll down to the <strong>Custom Code</strong> section.\n                </li>\n                <li>\n                    {' '}\n                    Under{' '}\n                    <strong>\n                        End of <code>&lt;head&gt;</code> tag\n                    </strong>\n                    , paste your PostHog snippet.\n                </li>\n                <li> Press save, and then publish your site.</li>\n            </ol>\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nfunction GoInstallSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.Bash}>go get \"github.com/posthog/posthog-go\"</CodeSnippet>\n}\n\nfunction GoSetupSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.Go}>\n            {`package main\nimport (\n    \"github.com/posthog/posthog-go\"\n)\nfunc main() {\n    client, _ := posthog.NewWithConfig(\"${currentTeam?.api_token}\", posthog.Config{Endpoint: \"${apiHostOrigin()}\"})\n    defer client.Close()\n}`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallGoInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install</h3>\n            <GoInstallSnippet />\n            <h3>Configure</h3>\n            <GoSetupSnippet />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nexport interface iOSSetupProps {\n    includeReplay?: boolean\n}\n\nfunction IOSInstallCocoaPodsSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.Ruby}>{'pod \"PostHog\", \"~> 3.0.0\"'}</CodeSnippet>\n}\n\nfunction IOSInstallSPMSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Swift}>\n            {`dependencies: [\n  .package(url: \"https://github.com/PostHog/posthog-ios.git\", from: \"3.0.0\")\n]`}\n        </CodeSnippet>\n    )\n}\n\nfunction IOSSetupSnippet({ includeReplay }: iOSSetupProps): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.Swift}>\n            {`import Foundation\nimport PostHog\nimport UIKit\n\nclass AppDelegate: NSObject, UIApplicationDelegate {\n    func application(_: UIApplication, didFinishLaunchingWithOptions _: [UIApplication.LaunchOptionsKey: Any]? = nil) -> Bool {\n        let POSTHOG_API_KEY = \"${currentTeam?.api_token}\"\n        let POSTHOG_HOST = \"${apiHostOrigin()}\"\n\n        let config = PostHogConfig(apiKey: POSTHOG_API_KEY, host: POSTHOG_HOST)\n        ${\n            includeReplay\n                ? `\n        // check https://posthog.com/docs/session-replay/installation?tab=iOS\n        // for more config and to learn about how we capture sessions on mobile\n        // and what to expect\n        config.sessionReplay = true\n        // choose whether to mask images or text\n        config.sessionReplayConfig.maskAllImages = false\n        config.sessionReplayConfig.maskAllTextInputs = true\n        // screenshot is disabled by default\n        // The screenshot may contain sensitive information, use with caution\n        config.sessionReplayConfig.screenshotMode = true`\n                : ''\n        }\n        PostHogSDK.shared.setup(config)\n\n        return true\n    }\n}`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallIOSInstructions(props: iOSSetupProps): JSX.Element {\n    return (\n        <>\n            <h3>Install via CocoaPods</h3>\n            <IOSInstallCocoaPodsSnippet />\n            <h3>Or Install via SPM</h3>\n            <IOSInstallSPMSnippet />\n            <h3>Configure</h3>\n            <IOSSetupSnippet {...props} />\n        </>\n    )\n}\n\nexport function SDKInstallIOSTrackScreenInstructions(): JSX.Element {\n    return (\n        <>\n            <p>\n                With <code>configuration.captureScreenViews</code> set as <code>true</code>, PostHog will try to record\n                all screen changes automatically.\n            </p>\n            <p>\n                If you want to manually send a new screen capture event, use the <code>screen</code> function.\n            </p>\n            <CodeSnippet\n                language={Language.Swift}\n            >{`PostHogSDK.shared.screen(\"Dashboard\", properties: [\"fromIcon\": \"bottom\"])`}</CodeSnippet>\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nfunction LaravelConfigSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.Bash}>composer require posthog/posthog-php</CodeSnippet>\n}\n\nfunction LaravelInstallSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.PHP}>\n            {`<?php\n\nnamespace App\\\\Providers;\n\nuse Illuminate\\\\Support\\\\ServiceProvider;\nuse PostHog\\\\PostHog;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    public function boot(): void\n    {\n        PostHog::init(\n            '${currentTeam?.api_token}',\n            [\n                'host' => '${apiHostOrigin()}'\n            ]\n        );\n    }\n}\n`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallLaravelInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Dependency Setup</h3>\n            <LaravelConfigSnippet />\n            <h3>Configure</h3>\n            <p>\n                Initialize PostHog in the <code>boot</code> method of <code>app/Providers/AppServiceProvider.php</code>\n            </p>\n            <LaravelInstallSnippet />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nexport function NodeInstallSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Bash}>\n            {`npm install posthog-node\n# OR\nyarn add posthog-node\n# OR\npnpm add posthog-node`}\n        </CodeSnippet>\n    )\n}\n\nexport function NodeSetupSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`import { PostHog } from 'posthog-node'\n\nconst client = new PostHog(\n    '${currentTeam?.api_token}',\n    { host: '${apiHostOrigin()}' }\n)`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallNodeInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install</h3>\n            <NodeInstallSnippet />\n            <h3>Configure</h3>\n            <NodeSetupSnippet />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { Link } from 'lib/lemon-ui/Link'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { JSInstallSnippet } from './js-web'\n\nfunction NuxtEnvVarsSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`export default defineNuxtConfig({\n                runtimeConfig: {\n                  public: {\n                    posthogPublicKey: '${currentTeam?.api_token}',\n                    posthogHost: '${apiHostOrigin()}'\n                  }\n                }\n              })`}\n        </CodeSnippet>\n    )\n}\n\nfunction NuxtAppClientCodeSnippet(): JSX.Element {\n    const { featureFlags } = useValues(featureFlagLogic)\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`import { defineNuxtPlugin } from '#app'\nimport posthog from 'posthog-js'\nexport default defineNuxtPlugin(nuxtApp => {\n  const runtimeConfig = useRuntimeConfig();\n  const posthogClient = posthog.init(runtimeConfig.public.posthogPublicKey, {\n    api_host: runtimeConfig.public.posthogHost,\n    ${\n        isPersonProfilesDisabled\n            ? ``\n            : `person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well`\n    }\n    capture_pageview: false, // we add manual pageview capturing below\n    loaded: (posthog) => {\n      if (import.meta.env.MODE === 'development') posthog.debug();\n    }\n  })\n\n  // Make sure that pageviews are captured with each route change\n  const router = useRouter();\n  router.afterEach((to) => {\n    nextTick(() => {\n      posthog.capture('$pageview', {\n        current_url: to.fullPath\n      });\n    });\n  });\n\n  return {\n    provide: {\n      posthog: () => posthogClient\n    }\n  }\n})`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallNuxtJSInstructions(): JSX.Element {\n    return (\n        <>\n            <p>\n                The below guide is for Nuxt v3.0 and above. For Nuxt v2.16 and below, see our{' '}\n                <Link to=\"https://posthog.com/docs/libraries/nuxt-js#nuxt-v216-and-below\">Nuxt docs</Link>\n            </p>\n            <h3>Install posthog-js using your package manager</h3>\n            <JSInstallSnippet />\n            <h3>Add environment variables</h3>\n            <p>\n                Add your PostHog API key and host to your <code>nuxt.config.js</code> file.\n            </p>\n            <NuxtEnvVarsSnippet />\n\n            <h3>Create a plugin</h3>\n            <p>\n                Create a new plugin by creating a new file <code>posthog.client.js</code> in your{' '}\n                <Link to=\"https://nuxt.com/docs/guide/directory-structure/plugins\" target=\"_blank\">\n                    plugins directory\n                </Link>\n                :\n            </p>\n            <NuxtAppClientCodeSnippet />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nfunction PHPConfigSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JSON}>\n            {`{\n    \"require\": {\n        \"posthog/posthog-php\": \"1.0.*\"\n    }\n}`}\n        </CodeSnippet>\n    )\n}\n\nfunction PHPInstallSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.Bash}>php composer.phar install</CodeSnippet>\n}\n\nfunction PHPSetupSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.PHP}>\n            {`PostHog::init('${currentTeam?.api_token}',\n    array('host' => '${apiHostOrigin()}')\n);`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallPHPInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Dependency Setup</h3>\n            <PHPConfigSnippet />\n            <h3>Install</h3>\n            <PHPInstallSnippet />\n            <h3>Configure</h3>\n            <PHPSetupSnippet />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nfunction PythonInstallSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.Bash}>pip install posthog</CodeSnippet>\n}\n\nfunction PythonSetupSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.Python}>\n            {`from posthog import Posthog\n\nposthog = Posthog(project_api_key='${currentTeam?.api_token}', host='${apiHostOrigin()}')\n\n            `}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallPythonInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install</h3>\n            <PythonInstallSnippet />\n            <h3>Configure</h3>\n            <PythonSetupSnippet />\n        </>\n    )\n}\n", "import { Link } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nexport interface RNSetupProps {\n    includeReplay?: boolean\n}\n\nfunction RNInstallSnippet({ includeReplay }: RNSetupProps): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Bash}>\n            {`# Expo apps\nnpx expo install posthog-react-native expo-file-system expo-application expo-device expo-localization${\n                includeReplay ? ` posthog-react-native-session-replay` : ''\n            } \n\n# Standard React Native apps\nyarn add posthog-react-native @react-native-async-storage/async-storage react-native-device-info${\n                includeReplay ? ` posthog-react-native-session-replay` : ''\n            } \n# or\nnpm i -s posthog-react-native @react-native-async-storage/async-storage react-native-device-info${\n                includeReplay ? ` posthog-react-native-session-replay` : ''\n            } \n\n# for iOS\ncd ios\npod install`}\n        </CodeSnippet>\n    )\n}\n\nfunction RNSetupSnippet({ includeReplay }: RNSetupProps): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n    const url = apiHostOrigin()\n\n    return (\n        <>\n            <p>\n                PostHog is most easily used via the <code>PostHogProvider</code> component but if you need to\n                instantiate it directly,{' '}\n                <Link to=\"https://posthog.com/docs/libraries/react-native#without-the-posthogprovider\">\n                    check out the docs\n                </Link>{' '}\n                which explain how to do this correctly.\n            </p>\n            <CodeSnippet language={Language.JSX}>\n                {`// App.(js|ts)\nimport { PostHogProvider } from 'posthog-react-native'\n...\n\nexport function MyApp() {\n    return (\n        <PostHogProvider apiKey=\"${currentTeam?.api_token}\" options={{\n            host: \"${url}\",\n            ${\n                includeReplay\n                    ? `\n            // check https://posthog.com/docs/session-replay/installation?tab=React+Native\n            // for more config and to learn about how we capture sessions on mobile\n            // and what to expect\n            enableSessionReplay: true,\n            sessionReplayConfig: {\n                // Whether text inputs are masked. Default is true.\n                // Password inputs are always masked regardless\n                maskAllTextInputs: true,\n                // Whether images are masked. Default is true.\n                maskAllImages: true,\n                // Capture logs automatically. Default is true.\n                // Android only (Native Logcat only)\n                captureLog: true,\n                // Whether network requests are captured in recordings. Default is true\n                // Only metric-like data like speed, size, and response code are captured.\n                // No data is captured from the request or response body.\n                // iOS only\n                captureNetworkTelemetry: true,\n                // Deboucer delay used to reduce the number of snapshots captured and reduce performance impact. Default is 500ms\n                androidDebouncerDelayMs: 500,\n                // Deboucer delay used to reduce the number of snapshots captured and reduce performance impact. Default is 1000ms\n                iOSdebouncerDelayMs: 1000,\n            },`\n                    : ''\n            }\n        }}>\n            <RestOfApp />\n        </PostHogProvider>\n    )\n}`}\n            </CodeSnippet>\n        </>\n    )\n}\n\nexport function SDKInstallRNInstructions(props: RNSetupProps): JSX.Element {\n    return (\n        <>\n            <h3>Install</h3>\n            <RNInstallSnippet {...props} />\n            <h3>Configure</h3>\n            <RNSetupSnippet {...props} />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { JSInstallSnippet } from './js-web'\n\nfunction RemixAppClientCodeSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n    const { featureFlags } = useValues(featureFlagLogic)\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`import { RemixBrowser } from \"@remix-run/react\";\nimport { startTransition, StrictMode, useEffect } from \"react\";\nimport { hydrateRoot } from \"react-dom/client\";\nimport posthog from \"posthog-js\";\n\nfunction PosthogInit() {\n  useEffect(() => {\n    posthog.init('${currentTeam?.api_token}', {\n      api_host: '${apiHostOrigin()}',\n      ${\n          isPersonProfilesDisabled\n              ? ``\n              : `person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well`\n      }\n    });\n  }, []);\n\n  return null;\n}\n\nstartTransition(() => {\n  hydrateRoot(\n    document,\n    <StrictMode>\n        <RemixBrowser />\n        <PosthogInit/>\n    </StrictMode>\n  );\n});`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallRemixJSInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install posthog-js using your package manager</h3>\n            <JSInstallSnippet />\n\n            <h3>Initialize</h3>\n            <p>\n                Go to your <code>app/entry.client.tsx</code> file and initialize PostHog as a component:\n            </p>\n            <RemixAppClientCodeSnippet />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nfunction RubyInstallSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.Bash}>gem \"posthog-ruby\"</CodeSnippet>\n}\n\nfunction RubySetupSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.Ruby}>\n            {`posthog = PostHog::Client.new({\n    api_key: \"${currentTeam?.api_token}\",\n    host: \"${apiHostOrigin()}\",\n    on_error: Proc.new { |status, msg| print msg }\n})`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallRubyInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install</h3>\n            <RubyInstallSnippet />\n            <h3>Configure</h3>\n            <RubySetupSnippet />\n        </>\n    )\n}\n", "import { Link } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { JSInstallSnippet } from './js-web'\n\nfunction SvelteAppClientCodeSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n    const { featureFlags } = useValues(featureFlagLogic)\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`import posthog from 'posthog-js'\nimport { browser } from '$app/environment';\nimport { onMount } from 'svelte';\n\nonMount(() => {\n  if (browser) {\n    posthog.init(\n      '${currentTeam?.api_token}',\n      { \n        api_host: '${apiHostOrigin()}',\n        ${\n            isPersonProfilesDisabled\n                ? ``\n                : `person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well`\n        }\n      }\n    )\n  }\n  return\n});`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallSvelteJSInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install posthog-js using your package manager</h3>\n            <JSInstallSnippet />\n\n            <h3>Initialize</h3>\n            <p>\n                If you haven't created a root{' '}\n                <Link to=\"https://kit.svelte.dev/docs/routing#layout\" target=\"_blank\">\n                    layout\n                </Link>{' '}\n                already, create a new file called <code>+layout.js</code> in your <code>src/routes</code> folder. In\n                this file, check the environment is the browser, and initialize PostHog if so:\n            </p>\n            <SvelteAppClientCodeSnippet />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { Link } from 'lib/lemon-ui/Link'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { JSInstallSnippet } from './js-web'\n\nfunction VueCreatePluginsFileSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Bash}>\n            {`mkdir plugins #skip if you already have one\ncd plugins \ntouch posthog.js`}\n        </CodeSnippet>\n    )\n}\n\nfunction VuePluginsCodeSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`//./plugins/posthog.js\nimport posthog from \"posthog-js\";\n\nexport default {\n  install(app) {\n    app.config.globalProperties.$posthog = posthog.init(\n      '${currentTeam?.api_token}',\n      {\n        api_host: '${apiHostOrigin()}',\n      }\n    );\n  },\n};`}\n        </CodeSnippet>\n    )\n}\n\nfunction VueActivatePluginSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`//main.js\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport posthogPlugin from \"./plugins/posthog\"; //import the plugin. \n\nconst app = createApp(App);\n\napp.use(posthogPlugin); //install the plugin\napp.mount('#app')`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallVueInstructions(): JSX.Element {\n    return (\n        <>\n            <p>\n                The below guide is for integrating using plugins in Vue versions 3 and above. For integrating PostHog\n                using Provide/inject, Vue.prototype, or versions 2.7 and below, see our{' '}\n                <Link to=\"https://posthog.com/docs/libraries/vue-js\">Vue docs</Link>\n            </p>\n            <h3>Install posthog-js using your package manager</h3>\n            <JSInstallSnippet />\n            <h3>Create a plugin</h3>\n            <p>\n                Create a new file <code>posthog.js</code> in your plugins directory:\n            </p>\n            <VueCreatePluginsFileSnippet />\n            Add the following code to <code>posthog.js</code>:\n            <VuePluginsCodeSnippet />\n            <h3>Activate your plugin</h3>\n            <VueActivatePluginSnippet />\n        </>\n    )\n}\n", "import { JSSnippet } from 'lib/components/JSSnippet'\n\nexport function SDKInstallWebflowInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install the PostHog web snippet</h3>\n            <p>First copy your web snippet:</p>\n            <JSSnippet />\n            <p>\n                Go to your Webflow site settings by clicking on the menu icon in the top left. If you haven\u2019t already,\n                sign up for at least the <strong>Basic</strong> site plan. This enables you to add custom code. Then:\n            </p>\n            <ol>\n                <li>\n                    Go to the <strong>Custom code</strong> tab in site settings.\n                </li>\n                <li>\n                    In the <strong>Head code</strong> section, paste your PostHog snippet and press save.\n                </li>\n                <li> Publish your site.</li>\n            </ol>\n        </>\n    )\n}\n", "import { SDKInstallAngularInstructions } from '../sdk-install-instructions'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function AngularInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAngularInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallAstroInstructions } from '../sdk-install-instructions'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function AstroInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAstroInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallBubbleInstructions } from '../sdk-install-instructions'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function BubbleInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallBubbleInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { WebAnalyticsMobileFinalSteps } from 'scenes/onboarding/sdks/web-analytics/FinalSteps'\n\nimport { SDKInstallFlutterInstructions, SDKInstallFlutterTrackScreenInstructions } from '../sdk-install-instructions'\n\nexport function FlutterInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFlutterInstructions includeReplay={false} />\n            <WebAnalyticsMobileFinalSteps />\n            <SDKInstallFlutterTrackScreenInstructions />\n        </>\n    )\n}\n", "import { SDKInstallFramerInstructions } from '../sdk-install-instructions'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function FramerInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFramerInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { SDKHtmlSnippetInstructions } from '../sdk-install-instructions/html-snippet'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function HTMLSnippetInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKHtmlSnippetInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { JSSnippet } from 'lib/components/JSSnippet'\n\nexport function SDKHtmlSnippetInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install</h3>\n            <p>\n                Add this snippet to your website within the <code>&lt;head&gt;</code> tag and you'll be ready to start\n                using PostHog. This can also be used in services like Google Tag Manager.\n            </p>\n            <JSSnippet />\n        </>\n    )\n}\n", "import { WebAnalyticsMobileFinalSteps } from 'scenes/onboarding/sdks/web-analytics/FinalSteps'\n\nimport { SDKInstallIOSInstructions, SDKInstallIOSTrackScreenInstructions } from '../sdk-install-instructions'\n\nexport function iOSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallIOSInstructions includeReplay={false} />\n            <WebAnalyticsMobileFinalSteps />\n            <SDKInstallIOSTrackScreenInstructions />\n        </>\n    )\n}\n", "import { SDKInstallJSWebInstructions } from '../sdk-install-instructions'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function JSWebInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallJSWebInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallNextJSInstructions } from '../sdk-install-instructions/next-js'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function NextJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNextJSInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { Link } from 'lib/lemon-ui/Link'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { JSInstallSnippet } from './js-web'\n\nfunction NextEnvVarsSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.Bash}>\n            {[`NEXT_PUBLIC_POSTHOG_KEY=${currentTeam?.api_token}`, `NEXT_PUBLIC_POSTHOG_HOST=${apiHostOrigin()}`].join(\n                '\\n'\n            )}\n        </CodeSnippet>\n    )\n}\n\nfunction NextPagesRouterCodeSnippet(): JSX.Element {\n    const { featureFlags } = useValues(featureFlagLogic)\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`// pages/_app.js\nimport { useEffect } from 'react'\nimport { Router } from 'next/router'\nimport posthog from 'posthog-js'\nimport { PostHogProvider } from 'posthog-js/react'\n\nexport default function App({ Component, pageProps }) {\n\n  useEffect(() => {\n    posthog.init(process.env.NEXT_PUBLIC_POSTHOG_KEY, {\n      api_host: process.env.NEXT_PUBLIC_POSTHOG_HOST || 'https://us.i.posthog.com',\n      ${\n          isPersonProfilesDisabled\n              ? ``\n              : `person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well`\n      }\n      // Enable debug mode in development\n      loaded: (posthog) => {\n        if (process.env.NODE_ENV === 'development') posthog.debug()\n      }\n    })\n  }, [])\n\n  return (\n    <PostHogProvider client={posthog}>\n      <Component {...pageProps} />\n    </PostHogProvider>\n  )\n}`}\n        </CodeSnippet>\n    )\n}\n\nfunction NextPagesRouterPageViewSnippet(): JSX.Element {\n    const { featureFlags } = useValues(featureFlagLogic)\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`// pages/_app.js\nimport { useEffect } from 'react'\nimport { Router } from 'next/router'\nimport posthog from 'posthog-js'\nimport { PostHogProvider } from 'posthog-js/react'\n\nexport default function App({ Component, pageProps }) {\n\n  useEffect(() => {\n    posthog.init(process.env.NEXT_PUBLIC_POSTHOG_KEY, {\n      api_host: process.env.NEXT_PUBLIC_POSTHOG_HOST || 'https://us.i.posthog.com',\n      ${\n          isPersonProfilesDisabled\n              ? ``\n              : `person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well`\n      }\n      // Enable debug mode in development\n      loaded: (posthog) => {\n        if (process.env.NODE_ENV === 'development') posthog.debug()\n      }\n    })\n\n    const handleRouteChange = () => posthog?.capture('$pageview')\n\n    Router.events.on('routeChangeComplete', handleRouteChange);\n\n    return () => {\n      Router.events.off('routeChangeComplete', handleRouteChange);\n    }\n  }, [])\n\n  return (\n    <PostHogProvider client={posthog}>\n      <Component {...pageProps} />\n    </PostHogProvider>\n  )\n}`}\n        </CodeSnippet>\n    )\n}\n\nfunction NextAppRouterCodeSnippet(): JSX.Element {\n    const { featureFlags } = useValues(featureFlagLogic)\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`// app/providers.jsx\n'use client'\nimport posthog from 'posthog-js'\nimport { PostHogProvider as PHProvider } from 'posthog-js/react'\nimport { useEffect } from 'react'\n\nexport function PostHogProvider({ children }) {\n  useEffect(() => {\n    posthog.init(process.env.NEXT_PUBLIC_POSTHOG_KEY, {\n      api_host: process.env.NEXT_PUBLIC_POSTHOG_HOST,\n      ${\n          isPersonProfilesDisabled\n              ? ``\n              : `person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well`\n      }\n    })\n  }, [])\n\n  return (\n    <PHProvider client={posthog}>\n      {children}\n    </PHProvider>\n  )\n}`}\n        </CodeSnippet>\n    )\n}\n\nfunction NextAppRouterLayoutSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`// app/layout.jsx\nimport './globals.css'\nimport { PostHogProvider } from './providers'\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <PostHogProvider>\n          {children}\n        </PostHogProvider>\n      </body>\n    </html>\n  )\n}`}\n        </CodeSnippet>\n    )\n}\n\nfunction NextAppRouterPageViewSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`// app/PostHogPageView.jsx\n'use client'\n\nimport { usePathname, useSearchParams } from \"next/navigation\"\nimport { useEffect, Suspense } from \"react\"\nimport { usePostHog } from 'posthog-js/react'\n\nfunction PostHogPageView() {\n  const pathname = usePathname()\n  const searchParams = useSearchParams()\n  const posthog = usePostHog()\n\n  // Track pageviews\n  useEffect(() => {\n    if (pathname && posthog) {\n      let url = window.origin + pathname\n      if (searchParams.toString()) {\n        url = url + \"?\" + searchParams.toString();\n      }\n\n      posthog.capture('$pageview', { '$current_url': url })\n    }\n  }, [pathname, searchParams, posthog])\n  \n  return null\n}\n\n// Wrap this in Suspense to avoid the useSearchParams usage above\n// from de-opting the whole app into client-side rendering\n// See: https://nextjs.org/docs/messages/deopted-into-client-rendering\nexport default function SuspendedPostHogPageView() {\n  return <Suspense fallback={null}>\n    <PostHogPageView />\n  </Suspense>\n}`}\n        </CodeSnippet>\n    )\n}\n\nfunction NextAppRouterPageViewProviderSnippet(): JSX.Element {\n    const { featureFlags } = useValues(featureFlagLogic)\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`// app/providers.jsx\n'use client'\nimport posthog from 'posthog-js'\nimport { PostHogProvider as PHProvider } from 'posthog-js/react'\nimport { useEffect } from 'react'\nimport PostHogPageView from \"./PostHogPageView\"\n\nexport function PostHogProvider({ children }) {\n    useEffect(() => {\n        posthog.init(process.env.NEXT_PUBLIC_POSTHOG_KEY, {\n            api_host: process.env.NEXT_PUBLIC_POSTHOG_HOST,\n            ${\n                isPersonProfilesDisabled\n                    ? ``\n                    : `person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well`\n            }\n            capture_pageview: false // Disable automatic pageview capture, as we capture manually\n        })\n    }, [])\n\nreturn (\n    <PHProvider client={posthog}>\n        <PostHogPageView />\n        {children}\n    </PHProvider>\n)\n}`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallNextJSInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install posthog-js using your package manager</h3>\n            <JSInstallSnippet />\n            <h3>Add environment variables</h3>\n            <p>\n                Add your environment variables to your .env.local file and to your hosting provider (e.g. Vercel,\n                Netlify, AWS). You can find your project API key in your project settings.\n            </p>\n            <p>\n                These values need to start with <code>NEXT_PUBLIC_</code> to be accessible on the client-side.\n            </p>\n            <NextEnvVarsSnippet />\n\n            <h3>Initialize</h3>\n            <h4>With App router</h4>\n            <p>\n                If your Next.js app uses the{' '}\n                <Link to=\"https://nextjs.org/docs/app\" target=\"_blank\">\n                    app router\n                </Link>\n                , you can integrate PostHog by creating a <code>providers</code> file in your <code>app</code> folder.\n                This is because the <code>posthog-js</code> library needs to be initialized on the client-side using the\n                Next.js{' '}\n                <Link to=\"https://nextjs.org/docs/getting-started/react-essentials#client-components\" target=\"_blank\">\n                    <code>'use client'</code> directive\n                </Link>\n                .\n            </p>\n            <NextAppRouterCodeSnippet />\n            <p>\n                Afterwards, import the <code>PostHogProvider</code> component in your <code>app/layout.jsx</code> file\n                and wrap your app with it.\n            </p>\n            <NextAppRouterLayoutSnippet />\n            <h4>With Pages router</h4>\n            <p>\n                If your Next.js app uses the{' '}\n                <Link to=\"https://nextjs.org/docs/pages\" target=\"_blank\">\n                    pages router\n                </Link>\n                , you can integrate PostHog at the root of your app.\n            </p>\n            <NextPagesRouterCodeSnippet />\n            <h3>Capturing pageviews</h3>\n            <p>\n                PostHog's <code>$pageview</code> autocapture relies on page load events. Since Next.js acts as a\n                single-page app, this event doesn't trigger on navigation and we need to capture <code>$pageview</code>{' '}\n                events manually.\n            </p>\n            <h4>With App router</h4>\n            <p>\n                Set up a <code>PostHogPageView</code> component to listen to URL changes.\n            </p>\n            <NextAppRouterPageViewSnippet />\n            <p>\n                We can then update our <code>PostHogProvider</code> to include this component in all of our pages.\n            </p>\n            <NextAppRouterPageViewProviderSnippet />\n            <h4>With Pages router</h4>\n            <p>\n                We can set up a <code>handleRouteChange</code> function to capture pageviews in the{' '}\n                <code>useEffect</code> hook in <code>pages/_app.js</code>.\n            </p>\n            <NextPagesRouterPageViewSnippet />\n        </>\n    )\n}\n", "import { SDKInstallNuxtJSInstructions } from '../sdk-install-instructions/nuxt'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function NuxtJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNuxtJSInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallReactInstructions } from '../sdk-install-instructions/react'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function ReactInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallReactInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { JSInstallSnippet } from './js-web'\n\nfunction ReactEnvVarsSnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <CodeSnippet language={Language.Bash}>\n            {[\n                `REACT_APP_PUBLIC_POSTHOG_KEY=${currentTeam?.api_token}`,\n                `REACT_APP_PUBLIC_POSTHOG_HOST=${apiHostOrigin()}`,\n            ].join('\\n')}\n        </CodeSnippet>\n    )\n}\n\nfunction ReactSetupSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nimport { PostHogProvider} from 'posthog-js/react'\n\nconst options = {\n  api_host: process.env.REACT_APP_PUBLIC_POSTHOG_HOST,\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <PostHogProvider \n      apiKey={process.env.REACT_APP_PUBLIC_POSTHOG_KEY}\n      options={options}\n    >\n      <App />\n    </PostHogProvider>\n  </React.StrictMode>\n);`}\n        </CodeSnippet>\n    )\n}\n\nexport function SDKInstallReactInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Install the package</h3>\n            <JSInstallSnippet />\n            <h3>Add environment variables</h3>\n            <ReactEnvVarsSnippet />\n            <h3>Initialize</h3>\n            <p>\n                Integrate PostHog at the root of your app (<code>src/index.js</code> for the default{' '}\n                <code>create-react-app</code>).\n            </p>\n            <ReactSetupSnippet />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { WebAnalyticsMobileFinalSteps } from 'scenes/onboarding/sdks/web-analytics/FinalSteps'\n\nimport { SDKInstallRNInstructions } from '../sdk-install-instructions'\n\nexport function WebAnalyticsRNInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRNInstructions />\n            <h3 className=\"mt-4\">Optional: Send a manual event</h3>\n            <p>Our package will autocapture events for you, but you can manually define events, too!</p>\n            <CodeSnippet language={Language.JSX}>{`// With hooks\nimport { usePostHog } from 'posthog-react-native'\n\nconst MyComponent = () => {\n    const posthog = usePostHog()\n\n    useEffect(() => {\n        posthog.capture(\"MyComponent loaded\", { foo: \"bar\" })\n    }, [])\n}\n        `}</CodeSnippet>\n            <WebAnalyticsMobileFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallRemixJSInstructions } from '../sdk-install-instructions/remix'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function RemixInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRemixJSInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallSvelteJSInstructions } from '../sdk-install-instructions/svelte'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function SvelteInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallSvelteJSInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallVueInstructions } from '../sdk-install-instructions'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function VueInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallVueInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallWebflowInstructions } from '../sdk-install-instructions'\nimport { WebAnalyticsAllJSFinalSteps } from './FinalSteps'\n\nexport function WebflowInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallWebflowInstructions />\n            <WebAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { IconCheckCircle } from '@posthog/icons'\nimport { Spinner } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { StarHog } from 'lib/components/hedgehogs'\nimport { billingLogic } from 'scenes/billing/billingLogic'\n\nimport type { BillingProductV2Type } from '~/types'\n\nimport { OnboardingStepKey } from '../onboardingLogic'\nimport { OnboardingStep } from '../OnboardingStep'\nimport PlanCards from './PlanCards'\n\ntype Props = {\n    product: BillingProductV2Type\n    stepKey: OnboardingStepKey\n}\n\nexport const OnboardingUpgradeStep = ({ product, stepKey }: Props): JSX.Element => {\n    const { billing, billingLoading } = useValues(billingLogic)\n\n    const action = billing?.subscription_level === 'custom' ? 'Subscribe' : 'Upgrade'\n\n    if (billingLoading) {\n        return (\n            <div className=\"flex items-center justify-center my-20\">\n                <Spinner className=\"text-2xl text-muted w-10 h-10\" />\n            </div>\n        )\n    }\n\n    return (\n        <OnboardingStep\n            title=\"Select a plan\"\n            stepKey={stepKey}\n            continueOverride={!product.subscribed ? <></> : undefined}\n        >\n            {!product.subscribed && <PlanCards product={product} />}\n            {product.subscribed && <ProductSubscribed product={product} action={action} />}\n        </OnboardingStep>\n    )\n}\n\nconst ProductSubscribed = ({ product, action }: { product: BillingProductV2Type; action: string }): JSX.Element => {\n    return (\n        <div className=\"mb-8\">\n            <div className=\"bg-success-highlight rounded p-6 flex justify-between items-center\">\n                <div className=\"flex gap-x-4 min-w-0 justify-center items-center\">\n                    <IconCheckCircle className=\"text-success text-3xl flex-shrink-0\" />\n                    <div className=\"flex-1 min-w-0\">\n                        <h3 className=\"text-lg font-bold mb-1 text-left\">{action} successful</h3>\n                        <p className=\"mx-0 mb-0\">You're all ready to use {product.name}.</p>\n                    </div>\n                </div>\n                <div className=\"h-20 w-20 flex-shrink-0\">\n                    <StarHog className=\"h-full w-full object-contain\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n", "import { IconArrowRight } from '@posthog/icons'\nimport { LemonButton, Link } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { supportLogic } from 'lib/components/Support/supportLogic'\nimport { IconChevronRight } from 'lib/lemon-ui/icons'\nimport React from 'react'\nimport { urls } from 'scenes/urls'\n\nimport { breadcrumbExcludeSteps, onboardingLogic, OnboardingStepKey, stepKeyToTitle } from './onboardingLogic'\nimport { onboardingTemplateConfigLogic } from './productAnalyticsSteps/onboardingTemplateConfigLogic'\n\nexport const OnboardingStep = ({\n    stepKey,\n    title,\n    subtitle,\n    children,\n    showSkip = false,\n    showHelpButton = false,\n    onSkip,\n    continueAction,\n    continueText,\n    continueOverride,\n    hideHeader,\n    breadcrumbHighlightName,\n    fullWidth = false,\n}: {\n    stepKey: OnboardingStepKey\n    title: string\n    subtitle?: string\n    children: React.ReactNode\n    showSkip?: boolean\n    showHelpButton?: boolean\n    onSkip?: () => void\n    continueAction?: () => void\n    continueText?: string\n    continueOverride?: JSX.Element\n    hideHeader?: boolean\n    breadcrumbHighlightName?: OnboardingStepKey\n    fullWidth?: boolean\n}): JSX.Element => {\n    const { hasNextStep, onboardingStepKeys, currentOnboardingStep } = useValues(onboardingLogic)\n    const { completeOnboarding, goToNextStep, setStepKey } = useActions(onboardingLogic)\n    const { openSupportForm } = useActions(supportLogic)\n    const { dashboardCreatedDuringOnboarding } = useValues(onboardingTemplateConfigLogic)\n\n    if (!stepKey) {\n        throw new Error('stepKey is required in any OnboardingStep')\n    }\n    const breadcrumbStepKeys = onboardingStepKeys.filter((stepKey) => !breadcrumbExcludeSteps.includes(stepKey))\n\n    return (\n        <>\n            <div className=\"pb-2\">\n                <div className={`text-secondary max-w-screen-md mx-auto ${hideHeader && 'hidden'}`}>\n                    <div\n                        className=\"flex items-center justify-start gap-x-3 px-2 shrink-0 w-full\"\n                        data-attr=\"onboarding-breadcrumbs\"\n                    >\n                        {breadcrumbStepKeys.map((stepName, idx) => {\n                            const highlightStep = [\n                                currentOnboardingStep?.props.stepKey,\n                                breadcrumbHighlightName,\n                            ].includes(stepName)\n                            return (\n                                <React.Fragment key={`stepKey-${idx}`}>\n                                    <Link\n                                        className={`text-sm ${highlightStep && 'font-bold'} font-bold`}\n                                        data-text={stepKeyToTitle(stepName)}\n                                        key={stepName}\n                                        onClick={() => setStepKey(stepName)}\n                                    >\n                                        <span className={`text-sm ${!highlightStep && 'text-muted'}`}>\n                                            {stepKeyToTitle(stepName)}\n                                        </span>\n                                    </Link>\n                                    {breadcrumbStepKeys.length > 1 && idx !== breadcrumbStepKeys.length - 1 && (\n                                        <IconChevronRight className=\"text-xl\" />\n                                    )}\n                                </React.Fragment>\n                            )\n                        })}\n                    </div>\n                    <h1 className={`font-bold m-0 mt-3 px-2 ${fullWidth && 'text-center'}`}>\n                        {title || stepKeyToTitle(currentOnboardingStep?.props.stepKey)}\n                    </h1>\n                </div>\n            </div>\n            <div\n                className={`${stepKey !== 'product_intro' && 'p-2'} ${\n                    stepKey !== 'product_intro' && !fullWidth && 'max-w-screen-md mx-auto'\n                }`}\n            >\n                {subtitle && (\n                    <div className=\"max-w-screen-md mx-auto\">\n                        <p>{subtitle}</p>\n                    </div>\n                )}\n                {children}\n                <div className=\"mt-8 flex justify-end gap-x-2\">\n                    {showHelpButton && (\n                        <LemonButton\n                            type=\"secondary\"\n                            onClick={() => openSupportForm({ kind: 'support', target_area: 'onboarding' })}\n                        >\n                            Need help?\n                        </LemonButton>\n                    )}\n                    {showSkip && (\n                        <LemonButton\n                            type=\"secondary\"\n                            onClick={() => {\n                                onSkip && onSkip()\n                                !hasNextStep\n                                    ? completeOnboarding(\n                                          undefined,\n                                          dashboardCreatedDuringOnboarding\n                                              ? urls.dashboard(dashboardCreatedDuringOnboarding.id)\n                                              : undefined\n                                      )\n                                    : goToNextStep()\n                            }}\n                            data-attr=\"onboarding-skip-button\"\n                        >\n                            Skip {!hasNextStep ? 'and finish' : 'for now'}\n                        </LemonButton>\n                    )}\n                    {continueOverride ? (\n                        continueOverride\n                    ) : (\n                        <LemonButton\n                            type=\"primary\"\n                            status=\"alt\"\n                            data-attr=\"onboarding-continue\"\n                            onClick={() => {\n                                continueAction && continueAction()\n                                !hasNextStep\n                                    ? completeOnboarding(\n                                          undefined,\n                                          dashboardCreatedDuringOnboarding\n                                              ? urls.dashboard(dashboardCreatedDuringOnboarding.id)\n                                              : undefined\n                                      )\n                                    : goToNextStep()\n                            }}\n                            sideIcon={hasNextStep ? <IconArrowRight /> : null}\n                        >\n                            {continueText ? continueText : !hasNextStep ? 'Finish' : 'Next'}\n                        </LemonButton>\n                    )}\n                </div>\n            </div>\n        </>\n    )\n}\n", "import { actions, connect, kea, listeners, path, reducers } from 'kea'\nimport { forms } from 'kea-forms'\nimport { urlToAction } from 'kea-router'\nimport posthog from 'posthog-js'\nimport { dashboardTemplateVariablesLogic } from 'scenes/dashboard/dashboardTemplateVariablesLogic'\nimport { newDashboardLogic } from 'scenes/dashboard/newDashboardLogic'\nimport { urls } from 'scenes/urls'\n\nimport { sidePanelStateLogic } from '~/layout/navigation-3000/sidepanel/sidePanelStateLogic'\nimport { DashboardTemplateType, DashboardType } from '~/types'\n\nimport { onboardingLogic, OnboardingStepKey } from '../onboardingLogic'\nimport type { onboardingTemplateConfigLogicType } from './onboardingTemplateConfigLogicType'\n\n// TODO: We should have a variables logic that is keyed for each variable and can handle its state independently.\n// Right now we have fields like customEventFieldShown that, if used outside of onboarding, will impact all variables.\n\nexport const onboardingTemplateConfigLogic = kea<onboardingTemplateConfigLogicType>([\n    path(['scenes', 'onboarding', 'productAnalyticsSteps', 'onboardingTemplateConfigLogic']),\n    connect({\n        values: [newDashboardLogic, ['activeDashboardTemplate'], dashboardTemplateVariablesLogic, ['activeVariable']],\n        actions: [\n            newDashboardLogic,\n            ['submitNewDashboardSuccessWithResult', 'setIsLoading'],\n            dashboardTemplateVariablesLogic,\n            [\n                'setActiveVariableIndex',\n                'incrementActiveVariableIndex',\n                'setActiveVariableCustomEventName',\n                'maybeResetActiveVariableCustomEventName',\n            ],\n            onboardingLogic,\n            ['goToPreviousStep', 'setOnCompleteOnboardingRedirectUrl', 'goToNextStep'],\n            sidePanelStateLogic,\n            ['closeSidePanel'],\n        ],\n    }),\n    actions({\n        setDashboardCreatedDuringOnboarding: (dashboard: DashboardType | null) => ({ dashboard }),\n        showCustomEventField: true,\n        hideCustomEventField: true,\n        reportTemplateSelected: (template: DashboardTemplateType) => ({ template }),\n        showTemplateRequestModal: true,\n        hideTemplateRequestModal: true,\n    }),\n    reducers({\n        dashboardCreatedDuringOnboarding: [\n            null as DashboardType | null,\n            { persist: true },\n            {\n                submitNewDashboardSuccessWithResult: (_, { result }) => result,\n                setDashboardCreatedDuringOnboarding: (_, { dashboard }) => dashboard,\n            },\n        ],\n        customEventFieldShown: [\n            false as boolean,\n            {\n                showCustomEventField: () => true,\n                hideCustomEventField: () => false,\n            },\n        ],\n        isTemplateRequestModalOpen: [\n            false as boolean,\n            {\n                showTemplateRequestModal: () => true,\n                hideTemplateRequestModal: () => false,\n            },\n        ],\n    }),\n    forms(({ actions, values }) => ({\n        templateRequestForm: {\n            alwaysShowErrors: true,\n            showErrorsOnTouch: true,\n            defaults: {\n                templateRequest: '',\n            },\n            errors: ({ templateRequest }) => ({\n                templateRequest: !templateRequest\n                    ? \"Please enter a template you'd like us to add to continue\"\n                    : undefined,\n            }),\n            submit: async () => {\n                posthog.capture('template requested during onboarding', {\n                    template_request: values.templateRequestForm.templateRequest,\n                })\n                actions.hideTemplateRequestModal()\n                actions.resetTemplateRequestForm()\n                actions.goToNextStep(2)\n            },\n        },\n    })),\n    listeners(({ actions, values }) => ({\n        submitNewDashboardSuccessWithResult: ({ result, variables }) => {\n            if (result && variables?.length == 0) {\n                // dashbboard was created without variables, go to next step for success message\n                onboardingLogic.actions.goToNextStep()\n            }\n            actions.setOnCompleteOnboardingRedirectUrl(urls.dashboard(result.id))\n            posthog.capture('dashboard created during onboarding', {\n                dashboard_id: result.id,\n                creation_mode: result.creation_mode,\n                title: result.name,\n                has_variables: variables?.length ? variables?.length > 0 : false,\n                total_variables: variables?.length || 0,\n                variables: variables?.map((v) => v.name),\n            })\n        },\n        reportTemplateSelected: ({ template }) => {\n            posthog.capture('template selected during onboarding', {\n                template_id: template.id,\n                template_name: template.template_name,\n                variables: template.variables?.map((v) => v.name),\n            })\n        },\n        setActiveVariableIndex: () => {\n            actions.maybeResetActiveVariableCustomEventName()\n        },\n        incrementActiveVariableIndex: () => {\n            actions.maybeResetActiveVariableCustomEventName()\n        },\n        maybeResetActiveVariableCustomEventName: () => {\n            if (values.activeVariable.default?.custom_event) {\n                actions.showCustomEventField()\n                actions.setActiveVariableCustomEventName(values.activeVariable?.default?.id)\n            } else {\n                actions.hideCustomEventField()\n            }\n        },\n    })),\n    urlToAction(({ actions, values }) => ({\n        '/onboarding/:productKey': (_, { step }) => {\n            if (step === OnboardingStepKey.DASHBOARD_TEMPLATE_CONFIGURE) {\n                if (\n                    (!values.activeDashboardTemplate || !values.activeDashboardTemplate.variables) &&\n                    // we want to use the \"success\" part of this configure screen, so if we have a dashboard created\n                    // during onboarding, we can view this screen to show the success message. So only go back if we don't have one.\n                    !values.dashboardCreatedDuringOnboarding\n                ) {\n                    actions.goToPreviousStep()\n                }\n            }\n            if (step === OnboardingStepKey.DASHBOARD_TEMPLATE) {\n                actions.closeSidePanel()\n            }\n            actions.setIsLoading(false)\n        },\n    })),\n])\n", "import './PlanCards.scss'\n\nimport { IconCheck, IconX } from '@posthog/icons'\nimport { LemonButton } from '@posthog/lemon-ui'\nimport clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { BillingUpgradeCTA } from 'lib/components/BillingUpgradeCTA'\nimport { HeartHog } from 'lib/components/hedgehogs'\nimport { eventUsageLogic } from 'lib/utils/eventUsageLogic'\nimport React, { useState } from 'react'\nimport { getUpgradeProductLink } from 'scenes/billing/billing-utils'\nimport { billingLogic } from 'scenes/billing/billingLogic'\n\nimport { type BillingProductV2Type } from '~/types'\n\nimport { onboardingLogic } from '../onboardingLogic'\nimport { FreeTierLimits } from './FreeTierLimits'\n\ntype Feature = {\n    name: string\n    available: boolean\n}\n\nenum Plan {\n    TOTALLY_FREE = 'totally_free',\n    RIDICULOUSLY_CHEAP = 'ridiculously_cheap',\n}\n\ntype PlanData = {\n    title: string\n    plan: Plan\n    billingPlanKeyPrefix: 'free' | 'paid'\n    subtitle: string\n    pricePreface?: string\n    price: string\n    priceSuffix?: string\n    priceSubtitle?: string | JSX.Element\n    features: Feature[]\n    ctaText?: string\n    ctaAction?: 'billing' | 'next'\n}\n\ntype PlanCardProps = {\n    planData: PlanData\n    product: BillingProductV2Type\n    highlight?: boolean\n    hogPosition?: 'top-right' | 'top-left'\n}\n\nexport const PlanCard: React.FC<PlanCardProps> = ({ planData, product, highlight, hogPosition = 'top-right' }) => {\n    const { redirectPath, billingLoading, billing } = useValues(billingLogic)\n    const { reportBillingUpgradeClicked } = useActions(eventUsageLogic)\n    const [isHovering, setIsHovering] = useState<boolean | undefined>(undefined)\n    const { goToNextStep } = useActions(onboardingLogic)\n\n    const productPlan = product.plans.find((plan) => plan.plan_key?.startsWith(planData.billingPlanKeyPrefix))\n    const platformPlan = billing?.products\n        ?.find((p) => p.type === 'platform_and_support')\n        ?.plans.find((p) => p.plan_key?.startsWith(planData.billingPlanKeyPrefix))\n\n    const dataRetentionFeature = productPlan?.features.find(\n        (feature) => feature.key === `${product.type}_data_retention`\n    )\n    const projectLimitFeature = platformPlan?.features.find((feature) => feature.key === 'organizations_projects')\n\n    const features = [\n        ...(projectLimitFeature?.limit\n            ? [\n                  {\n                      name: `${projectLimitFeature.limit} project${projectLimitFeature.limit === 1 ? '' : 's'}`,\n                      available: true,\n                  },\n              ]\n            : []),\n        ...(dataRetentionFeature?.limit\n            ? [{ name: `${dataRetentionFeature.limit}-year data retention`, available: true }]\n            : []),\n        ...planData.features,\n    ]\n\n    const hogPositionClass = hogPosition === 'top-right' ? 'CheekyHogTopRight' : 'CheekyHogTopLeft'\n\n    return (\n        <div className=\"relative\" onMouseEnter={() => setIsHovering(true)} onMouseLeave={() => setIsHovering(false)}>\n            <HeartHog\n                width=\"100\"\n                height=\"100\"\n                className={clsx(\n                    hogPositionClass,\n                    isHovering === true && `${hogPositionClass}--peek`,\n                    isHovering === false && `${hogPositionClass}--hide`\n                )}\n            />\n            <div\n                className={clsx(\n                    'relative flex flex-col h-full p-6 bg-bg-light dark:bg-bg-depth rounded-sm border transition-transform transform hover:scale-[1.02] hover:shadow-lg',\n                    highlight ? 'border-2 border-accent-primary-active' : 'border-gray-200 dark:border-gray-700'\n                )}\n            >\n                {planData.plan === Plan.RIDICULOUSLY_CHEAP && (\n                    <div className=\"absolute top-0 right-0 -mt-4 -mr-4 px-3 py-1 bg-bg-light dark:bg-bg-depth rounded-sm text-xs text-accent-primary-active font-semibold shadow-md border-accent-primary-active border-2\">\n                        Free tier included!\n                    </div>\n                )}\n                <header className=\"mb-0\">\n                    <h3 className=\"text-2xl font-bold mb-0 text-gray-800 dark:text-gray-100\">{planData.title}</h3>\n                    <p className=\"text-muted dark:text-gray-400\">{planData.subtitle}</p>\n                </header>\n                <section className=\"mb-3\">\n                    <div className=\"flex items-baseline gap-1\">\n                        {planData.pricePreface && (\n                            <span className=\"text-base text-muted-alt dark:text-gray-300\">{planData.pricePreface}</span>\n                        )}\n                        <span className=\"text-xl font-extrabold text-gray-900 dark:text-white\">{planData.price}</span>\n                        {planData.priceSuffix && (\n                            <span className=\"text-base text-muted-alt dark:text-gray-300\">{planData.priceSuffix}</span>\n                        )}\n                    </div>\n                    {planData.priceSubtitle && (\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">{planData.priceSubtitle}</p>\n                    )}\n                </section>\n                <section className=\"flex-1 mb-3\">\n                    <ul className=\"space-y-2\">\n                        {features.map((feature) => (\n                            <li key={feature.name} className=\"flex items-center\">\n                                {feature.available ? (\n                                    <IconCheck className=\"w-4 h-4 text-success mr-2\" />\n                                ) : (\n                                    <IconX className=\"w-4 h-4 text-gray-400 mr-2\" />\n                                )}\n                                <span className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">\n                                    {feature.name}\n                                </span>\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n                <footer className=\"mt-auto\">\n                    {planData.ctaAction === 'billing' && (\n                        <BillingUpgradeCTA\n                            to={getUpgradeProductLink({\n                                product,\n                                redirectPath,\n                                includeAddons: true,\n                            })}\n                            type=\"primary\"\n                            status={highlight ? 'alt' : undefined}\n                            center\n                            disabledReason={billingLoading && 'Please wait...'}\n                            disableClientSideRouting\n                            onClick={() => {\n                                reportBillingUpgradeClicked(product.type)\n                            }}\n                            data-attr=\"onboarding-subscribe-button\"\n                        >\n                            {planData.ctaText}\n                        </BillingUpgradeCTA>\n                    )}\n                    {planData.ctaAction === 'next' && (\n                        <LemonButton\n                            type=\"primary\"\n                            fullWidth\n                            center\n                            status={highlight ? 'alt' : undefined}\n                            onClick={() => goToNextStep()}\n                        >\n                            {planData.ctaText}\n                        </LemonButton>\n                    )}\n                </footer>\n            </div>\n        </div>\n    )\n}\n\nconst PLANS_DATA: PlanData[] = [\n    {\n        title: 'Totally free',\n        plan: Plan.TOTALLY_FREE,\n        billingPlanKeyPrefix: 'free',\n        subtitle: 'No credit card required',\n        price: 'Free',\n        features: [\n            { name: 'Community support', available: true },\n            { name: 'Capped usage', available: false },\n            { name: 'Group analytics + Data pipeline addons', available: false },\n            { name: 'Happy hedgehogs', available: false },\n        ],\n        ctaText: 'Select this plan',\n        ctaAction: 'next',\n    },\n    {\n        title: 'Ridiculously cheap',\n        plan: Plan.RIDICULOUSLY_CHEAP,\n        billingPlanKeyPrefix: 'paid',\n        subtitle: 'Usage-based pricing after free tier',\n        pricePreface: 'Starts at',\n        price: '$0',\n        priceSuffix: '/mo',\n        features: [\n            { name: 'Email support', available: true },\n            { name: 'Unlimited usage', available: true },\n            { name: 'Group analytics + Data pipeline addons', available: true },\n            { name: 'Happy hedgehogs', available: true },\n        ],\n        ctaText: 'Unlock all features',\n        ctaAction: 'billing',\n    },\n]\n\nexport const PlanCards: React.FC<{ product: BillingProductV2Type }> = ({ product }) => {\n    return (\n        <div className=\"px-4\">\n            <div className=\"py-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    {PLANS_DATA.map((planData, index) => (\n                        <PlanCard\n                            key={planData.plan}\n                            planData={planData}\n                            product={product}\n                            highlight={planData.plan === Plan.RIDICULOUSLY_CHEAP}\n                            hogPosition={index === 0 ? 'top-left' : 'top-right'}\n                        />\n                    ))}\n                </div>\n                <FreeTierLimits />\n            </div>\n        </div>\n    )\n}\n\nexport default PlanCards\n", "import * as Icons from '@posthog/icons'\nimport { useValues } from 'kea'\nimport { billingLogic } from 'scenes/billing/billingLogic'\n\nimport { availableOnboardingProducts } from '../utils'\n\ntype FreeTierLimit = {\n    title: string\n    icon: string\n    color: string\n    unit: string\n    value: number\n}\n\nconst formatFreeTierLimit = (value: number): string => {\n    return Intl.NumberFormat('en', {\n        notation: 'compact',\n        compactDisplay: 'short',\n        maximumFractionDigits: 1,\n    }).format(value)\n}\n\nconst FreeTierItem = ({ limit }: { limit: FreeTierLimit }): JSX.Element => {\n    const Icon = Icons[limit.icon as keyof typeof Icons]\n    return (\n        <div className=\"flex flex-col items-center w-36\">\n            <div className=\"flex gap-1 items-center\">\n                <Icon className=\"w-6 h-6\" color={limit.color} />\n            </div>\n            <strong className=\"text-[15px] text-center leading-none mt-2 mb-1\">{limit.title}</strong>\n            <div className=\"text-sm text-center text-success dark:text-green-400\">\n                {`${formatFreeTierLimit(limit.value)} ${limit.unit}${limit.value === 1 ? '' : 's'}`}\n            </div>\n        </div>\n    )\n}\n\nexport const FreeTierLimits: React.FC = (): JSX.Element => {\n    const { billing } = useValues(billingLogic)\n\n    const availableProducts = billing?.products?.filter((p) => p.type in availableOnboardingProducts)\n\n    const freeTierLimits = (availableProducts ?? [])\n        .map((p) => {\n            const freePlan = p.plans.find((plan) => plan.plan_key?.startsWith('free'))\n            return {\n                title: p.name,\n                icon:\n                    p.icon_key ?? availableOnboardingProducts[p.type as keyof typeof availableOnboardingProducts]?.icon,\n\n                color: availableOnboardingProducts[p.type as keyof typeof availableOnboardingProducts]?.iconColor,\n                unit: freePlan?.unit ?? '',\n                value: freePlan?.free_allocation ?? 0,\n            }\n        })\n        .filter((limit) => limit.unit && limit.value > 0)\n\n    return (\n        <div className=\"mt-12\">\n            <h4 className=\"text-center text-base font-semibold text-gray-800 dark:text-gray-100 mb-4\">\n                Monthly free tier applies to both plans\n            </h4>\n            <div className=\"flex justify-center\">\n                <div className=\"flex flex-wrap justify-center\">\n                    {freeTierLimits.map((limit) => (\n                        <div key={limit.title} className=\"w-full basis-1/3 py-2 flex justify-center items-center\">\n                            <FreeTierItem limit={limit} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n", "import { useActions, useValues } from 'kea'\nimport { NewSourcesWizard } from 'scenes/data-warehouse/new/NewSourceWizard'\nimport { sourceWizardLogic } from 'scenes/data-warehouse/new/sourceWizardLogic'\n\nimport { onboardingLogic, OnboardingStepKey } from '../onboardingLogic'\nimport { OnboardingStep } from '../OnboardingStep'\n\nexport function OnboardingDataWarehouseSourcesStep({\n    stepKey = OnboardingStepKey.INSTALL,\n}: {\n    usersAction?: string\n    subtitle?: string\n    stepKey?: OnboardingStepKey\n}): JSX.Element {\n    const { goToNextStep } = useActions(onboardingLogic)\n    const { currentStep } = useValues(sourceWizardLogic)\n\n    return (\n        <OnboardingStep\n            title=\"Link data\"\n            stepKey={stepKey}\n            continueOverride={<></>}\n            showSkip={currentStep == 1}\n            subtitle={\n                currentStep == 1\n                    ? `Link all your important data from your CRM, payment processor, \n                or database and query across them seamlessly.`\n                    : undefined\n            }\n        >\n            <NewSourcesWizard onComplete={() => goToNextStep()} />\n        </OnboardingStep>\n    )\n}\n", "import { IconCheckCircle } from '@posthog/icons'\nimport { LemonButton } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { BillingUpgradeCTA } from 'lib/components/BillingUpgradeCTA'\nimport { StarHog } from 'lib/components/hedgehogs'\nimport { Spinner } from 'lib/lemon-ui/Spinner'\nimport { eventUsageLogic } from 'lib/utils/eventUsageLogic'\nimport { useState } from 'react'\nimport { AllProductsPlanComparison } from 'scenes/billing/AllProductsPlanComparison'\nimport { getUpgradeProductLink } from 'scenes/billing/billing-utils'\nimport { BillingHero } from 'scenes/billing/BillingHero'\nimport { billingLogic } from 'scenes/billing/billingLogic'\nimport { PlanComparison } from 'scenes/billing/PlanComparison'\n\nimport { BillingProductV2Type } from '~/types'\n\nimport { onboardingLogic, OnboardingStepKey } from './onboardingLogic'\nimport { OnboardingStep } from './OnboardingStep'\n\nexport const OnboardingBillingStep = ({\n    product,\n    stepKey = OnboardingStepKey.PLANS,\n}: {\n    product: BillingProductV2Type\n    stepKey?: OnboardingStepKey\n}): JSX.Element => {\n    const { billing, redirectPath, billingLoading } = useValues(billingLogic)\n    const { productKey } = useValues(onboardingLogic)\n    const { reportBillingUpgradeClicked } = useActions(eventUsageLogic)\n\n    const [showPlanComp, setShowPlanComp] = useState(false)\n\n    const action = billing?.subscription_level === 'custom' ? 'Subscribe' : 'Upgrade'\n    return (\n        <OnboardingStep\n            title=\"Plans\"\n            showSkip={!product.subscribed}\n            stepKey={stepKey}\n            continueOverride={\n                product?.subscribed && !billingLoading ? undefined : (\n                    <BillingUpgradeCTA\n                        // TODO: redirect path won't work properly until navigation is properly set up\n                        to={getUpgradeProductLink({\n                            product,\n                            redirectPath,\n                            includeAddons: true,\n                        })}\n                        type=\"primary\"\n                        status=\"alt\"\n                        center\n                        disabledReason={billingLoading && 'Please wait...'}\n                        disableClientSideRouting\n                        onClick={() => {\n                            reportBillingUpgradeClicked(product.type)\n                        }}\n                        data-attr=\"onboarding-subscribe-button\"\n                    >\n                        {action}\n                    </BillingUpgradeCTA>\n                )\n            }\n        >\n            {billing?.products && productKey && product && !billingLoading ? (\n                <div className=\"mt-6\">\n                    {product.subscribed && (\n                        <div className=\"mb-8\">\n                            <div className=\"bg-success-highlight rounded p-6 flex justify-between items-center\">\n                                <div className=\"flex gap-x-4 min-w-0\">\n                                    <IconCheckCircle className=\"text-success text-3xl mb-6 flex-shrink-0\" />\n                                    <div className=\"flex-1 min-w-0\">\n                                        <h3 className=\"text-lg font-bold mb-1 text-left\">{action} successful</h3>\n                                        <p className=\"mx-0 mb-0\">You're all ready to use {product.name}.</p>\n                                    </div>\n                                </div>\n                                <div className=\"h-20 w-20 flex-shrink-0\">\n                                    <StarHog className=\"h-full w-full object-contain\" />\n                                </div>\n                            </div>\n                            <LemonButton\n                                data-attr=\"show-plans\"\n                                className=\"mt-2\"\n                                onClick={() => setShowPlanComp(!showPlanComp)}\n                            >\n                                {showPlanComp ? 'Hide' : 'Show'} plans\n                            </LemonButton>\n                        </div>\n                    )}\n\n                    {(!product.subscribed || showPlanComp) && (\n                        <>\n                            <BillingHero />\n                            {billing?.subscription_level === 'custom' ? (\n                                <PlanComparison product={product} />\n                            ) : (\n                                <AllProductsPlanComparison product={product} />\n                            )}\n                        </>\n                    )}\n                </div>\n            ) : (\n                <div className=\"flex items-center justify-center my-20\">\n                    <Spinner className=\"text-2xl text-secondary w-10 h-10\" />\n                </div>\n            )}\n        </OnboardingStep>\n    )\n}\n", "import { IconCheckCircle, IconWarning, IconX } from '@posthog/icons'\nimport { LemonCollapse, LemonModal, LemonTag, Link } from '@posthog/lemon-ui'\nimport clsx from 'clsx'\nimport { useActions, useValues } from 'kea'\nimport { BillingUpgradeCTA } from 'lib/components/BillingUpgradeCTA'\nimport { FEATURE_FLAGS, UNSUBSCRIBE_SURVEY_ID } from 'lib/constants'\nimport { Tooltip } from 'lib/lemon-ui/Tooltip'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { eventUsageLogic } from 'lib/utils/eventUsageLogic'\nimport React, { useState } from 'react'\nimport { getProductIcon } from 'scenes/products/Products'\nimport useResizeObserver from 'use-resize-observer'\n\nimport { BillingFeatureType, BillingPlanType, BillingProductV2AddonType, BillingProductV2Type } from '~/types'\n\nimport { convertLargeNumberToWords, getProration, getProrationMessage, getUpgradeProductLink } from './billing-utils'\nimport { billingLogic } from './billingLogic'\nimport { billingProductLogic } from './billingProductLogic'\nimport { UnsubscribeSurveyModal } from './UnsubscribeSurveyModal'\n\nexport function PlanIcon({\n    feature,\n    className,\n    timeDenominator,\n}: {\n    feature?: BillingFeatureType\n    className?: string\n    timeDenominator?: string\n}): JSX.Element {\n    return (\n        <div className=\"flex items-center text-xs text-secondary\">\n            {!feature ? (\n                <>\n                    <IconX className={clsx('text-danger mx-4', className)} />\n                </>\n            ) : feature.limit ? (\n                <>\n                    <IconWarning className={clsx('text-warning mx-4 shrink-0', className)} />\n                    {feature.limit &&\n                        `${convertLargeNumberToWords(feature.limit, null)} ${feature.unit && feature.unit}${\n                            timeDenominator ? `/${timeDenominator}` : ''\n                        }`}\n                    {feature.note}\n                </>\n            ) : (\n                <>\n                    <IconCheckCircle className={clsx('text-success mx-4 shrink-0', className)} />\n                    {feature.note}\n                </>\n            )}\n        </div>\n    )\n}\n\nconst PricingTiers = ({\n    plan,\n    product,\n}: {\n    plan: BillingPlanType\n    product: BillingProductV2Type | BillingProductV2AddonType\n}): JSX.Element => {\n    const { width, ref: tiersRef } = useResizeObserver()\n    const tiers = plan?.tiers\n\n    const allTierPrices = tiers?.map((tier) => parseFloat(tier.unit_amount_usd))\n    const sigFigs = allTierPrices?.map((price) => price?.toString().split('.')[1]?.length).sort((a, b) => b - a)[0]\n\n    return (\n        <>\n            {tiers ? (\n                tiers?.map((tier, i) => (\n                    <div\n                        key={`${plan.plan_key}-${product.type}-${tier.up_to}`}\n                        className={clsx(\n                            'flex',\n                            width && width < 100 ? 'flex-col mb-2' : 'justify-between items-center'\n                        )}\n                        ref={tiersRef}\n                    >\n                        <span className=\"text-xs\">\n                            {convertLargeNumberToWords(tier.up_to, tiers[i - 1]?.up_to, true, product.unit)}\n                        </span>\n                        <span className=\"font-bold\">\n                            {i === 0 && parseFloat(tier.unit_amount_usd) === 0\n                                ? 'Free'\n                                : `$${parseFloat(tier.unit_amount_usd).toFixed(sigFigs)}`}\n                        </span>\n                    </div>\n                ))\n            ) : product?.free_allocation ? (\n                <div\n                    key={`${plan.plan_key}-${product.type}-tiers`}\n                    className={clsx('flex', width && width < 100 ? 'flex-col mb-2' : ' justify-between items-center')}\n                    ref={tiersRef}\n                >\n                    <span className=\"text-xs\">\n                        Up to {convertLargeNumberToWords(product?.free_allocation, null)} {product?.unit}s/mo\n                    </span>\n                    <span className=\"font-bold\">Free</span>\n                </div>\n            ) : null}\n        </>\n    )\n}\n\n/**\n * Determines the pricing description for a given plan.\n *\n * @param {Object} plan\n * @param {boolean} plan.free_allocation - Indicates if the plan has a free allocation.\n * @param {boolean} plan.tiers - Indicates if the plan has tiers.\n * @param {string} plan.unit_amount_usd - The unit amount in USD.\n * @param {boolean} plan.contact_support - Indicates if the plan requires contacting support.\n * @param {string} plan.included_if - Condition for plan inclusion.\n * @returns {string} - The pricing description for the plan.\n */\nfunction getPlanDescription(plan: BillingPlanType): string {\n    if (plan.free_allocation && !plan.tiers) {\n        return 'Free forever'\n    } else if (plan.unit_amount_usd) {\n        return `$${parseFloat(plan.unit_amount_usd).toFixed(0)} per month`\n    } else if (plan.contact_support) {\n        return 'Custom'\n    } else if (plan.included_if === 'has_subscription') {\n        return 'Usage-based - starting at $0 per month'\n    }\n    return '$0 per month'\n}\n\nexport const AllProductsPlanComparison = ({\n    product,\n    includeAddons = false,\n}: {\n    product: BillingProductV2Type\n    includeAddons?: boolean\n}): JSX.Element | null => {\n    const { billing, redirectPath, timeRemainingInSeconds, timeTotalInSeconds } = useValues(billingLogic)\n    const { ref: planComparisonRef } = useResizeObserver()\n    const { reportBillingUpgradeClicked, reportBillingDowngradeClicked } = useActions(eventUsageLogic)\n    const { surveyID, comparisonModalHighlightedFeatureKey, billingProductLoading } = useValues(\n        billingProductLogic({ product })\n    )\n    const { reportSurveyShown, setSurveyResponse, setBillingProductLoading } = useActions(\n        billingProductLogic({ product })\n    )\n    const { featureFlags } = useValues(featureFlagLogic)\n\n    const plans = product.plans?.filter(\n        (plan) => !plan.included_if || plan.included_if == 'has_subscription' || plan.current_plan\n    )\n    if (plans?.length === 0) {\n        return null\n    }\n    const currentPlanIndex = plans.findIndex((plan) => plan.current_plan)\n\n    const nonInclusionProducts = billing?.products.filter((p) => !p.inclusion_only) || []\n    const inclusionProducts = billing?.products.filter((p) => !!p.inclusion_only) || []\n    const sortedProducts = nonInclusionProducts\n        ?.filter((p) => p.type === product.type)\n        .slice()\n        .concat(nonInclusionProducts.filter((p) => p.type !== product.type))\n    const platformAndSupportProduct = inclusionProducts.find((p) => p.type === 'platform_and_support')\n    const platformAndSupportPlans = platformAndSupportProduct?.plans.filter((p) => !p.contact_support) || []\n\n    const upgradeButtons = plans?.map((plan, i) => {\n        return (\n            <td key={`${plan.plan_key}-cta`} className=\"px-4 py-2\">\n                <BillingUpgradeCTA\n                    to={\n                        plan.contact_support\n                            ? 'mailto:sales@posthog.com?subject=Enterprise%20plan%20request'\n                            : i < currentPlanIndex\n                            ? undefined // Downgrade action handled in onClick\n                            : getUpgradeProductLink({\n                                  product,\n                                  redirectPath,\n                                  includeAddons,\n                              })\n                    }\n                    type={plan.current_plan || i < currentPlanIndex ? 'secondary' : 'primary'}\n                    status={\n                        plan.current_plan || (plan.included_if == 'has_subscription' && i >= currentPlanIndex)\n                            ? 'default'\n                            : 'alt'\n                    }\n                    fullWidth\n                    center\n                    disableClientSideRouting={!plan.contact_support}\n                    disabledReason={\n                        plan.included_if == 'has_subscription' && i >= currentPlanIndex\n                            ? billing?.has_active_subscription\n                                ? 'Unsubscribe from all products to remove'\n                                : null\n                            : plan.current_plan\n                            ? 'Current plan'\n                            : undefined\n                    }\n                    onClick={() => {\n                        if (!plan.current_plan) {\n                            setBillingProductLoading(product.type)\n                            if (i < currentPlanIndex) {\n                                setSurveyResponse('$survey_response_1', product.type)\n                                reportSurveyShown(UNSUBSCRIBE_SURVEY_ID, product.type)\n                                reportBillingDowngradeClicked(product.type)\n                            } else {\n                                reportBillingUpgradeClicked(product.type)\n                            }\n                        }\n                    }}\n                    loading={billingProductLoading === product.type && !plan.current_plan && !plan.contact_support}\n                    data-attr={`upgrade-${plan.name}`}\n                >\n                    {plan.current_plan\n                        ? 'Current plan'\n                        : i < currentPlanIndex\n                        ? 'Downgrade'\n                        : plan.contact_support\n                        ? 'Get in touch'\n                        : plan.included_if == 'has_subscription' &&\n                          i >= currentPlanIndex &&\n                          !billing?.has_active_subscription\n                        ? 'Upgrade'\n                        : plan.free_allocation && !plan.tiers\n                        ? 'Select' // Free plan\n                        : 'Upgrade'}\n                </BillingUpgradeCTA>\n            </td>\n        )\n    })\n\n    return (\n        <div>\n            {surveyID && <UnsubscribeSurveyModal product={product} />}\n            <table className=\"w-full table-fixed max-w-[920px] mb-6 mt-2\" ref={planComparisonRef}>\n                <thead>\n                    {/* Plan name header row */}\n                    <tr>\n                        <td />\n                        {platformAndSupportPlans?.map((plan) => (\n                            <td key={`plan-type-${plan.plan_key}`} className=\"px-4 py-2\">\n                                <h3 className=\"font-bold mb-0\">{plan.name}</h3>\n                            </td>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {/* Plan price row */}\n                    <tr>\n                        <td className=\"px-4 py-2 font-bold\">Monthly {product.tiered && 'base '} price</td>\n                        {platformAndSupportPlans?.map((plan) => {\n                            const { prorationAmount, isProrated } = getProration({\n                                timeRemainingInSeconds,\n                                timeTotalInSeconds,\n                                amountUsd: plan.unit_amount_usd,\n                                hasActiveSubscription: billing?.has_active_subscription,\n                            })\n                            return (\n                                <td key={`${plan.plan_key}-basePrice`} className=\"px-4 py-2 text-sm font-medium\">\n                                    {getPlanDescription(plan)}\n                                    {isProrated && (\n                                        <p className=\"text-xxs text-secondary font-normal italic mt-2\">\n                                            {getProrationMessage(prorationAmount, plan.unit_amount_usd)}\n                                        </p>\n                                    )}\n                                </td>\n                            )\n                        })}\n                    </tr>\n                    {/* CTA Row */}\n                    <tr>\n                        <td />\n                        {upgradeButtons}\n                    </tr>\n                    {/* Inclusion products  */}\n                    {inclusionProducts.reverse().map((includedProduct) => {\n                        const includedPlans = includedProduct.plans.filter(\n                            (plan) => plan.included_if == 'has_subscription' || plan.current_plan\n                        )\n                        return (\n                            <React.Fragment key={`inclusion-only-product-features-${includedProduct.type}`}>\n                                <tr className=\"border-b\">\n                                    {/* Inclusion product title row */}\n                                    <th colSpan={3} className=\"justify-left rounded text-left mb-2 py-6\">\n                                        <div className=\"flex items-center gap-x-2 my-2\">\n                                            {getProductIcon(includedProduct.name, includedProduct.icon_key, 'text-2xl')}\n                                            <Tooltip title={includedProduct.description}>\n                                                <span className=\"font-bold\">{includedProduct.name}</span>\n                                            </Tooltip>\n                                        </div>\n                                    </th>\n                                </tr>\n                                {includedPlans\n                                    .find((plan: BillingPlanType) => plan.included_if == 'has_subscription')\n                                    ?.features?.map((feature) => (\n                                        // Inclusion product feature row\n                                        <tr key={`tr-${feature.key}`} className=\"border-b\">\n                                            <th className=\"text-secondary py-3 pl-8 font-medium text-left\">\n                                                <Tooltip title={feature.description}>\n                                                    <span>{feature.name}</span>\n                                                </Tooltip>\n                                            </th>\n                                            {includedPlans?.map((plan) => (\n                                                <React.Fragment key={`${plan.plan_key}-${feature.key}`}>\n                                                    {/* Some products don't have a free plan, so we need to pretend there is one \n                                                                so the features line up in the correct columns in the UI. This is kind of \n                                                                hacky because it assumes we only have 2 plans total, but it works for now.\n                                                            */}\n                                                    {includedPlans?.length === 1 && (\n                                                        <td className=\"p-4\">\n                                                            <PlanIcon feature={undefined} className=\"text-base\" />\n                                                        </td>\n                                                    )}\n                                                    <td className=\"p-4\">\n                                                        <PlanIcon\n                                                            feature={plan.features?.find(\n                                                                (thisPlanFeature) => feature.key === thisPlanFeature.key\n                                                            )}\n                                                            className=\"text-base\"\n                                                        />\n                                                    </td>\n                                                </React.Fragment>\n                                            ))}\n                                        </tr>\n                                    ))}\n                            </React.Fragment>\n                        )\n                    })}\n                </tbody>\n            </table>\n\n            <h3>Product features breakdown:</h3>\n            <LemonCollapse\n                defaultActiveKey={product.type}\n                size=\"large\"\n                panels={\n                    sortedProducts.map((currentProduct) => ({\n                        header: (\n                            <span className=\"flex justify-start items-center gap-1\">\n                                {getProductIcon(currentProduct.name, currentProduct.icon_key, 'text-2xl')}\n                                <span>\n                                    {currentProduct.name} {currentProduct.type === product.type ? '(this product)' : ''}\n                                </span>\n                            </span>\n                        ),\n                        className: 'bg-primary',\n                        key: currentProduct.type,\n                        content: (\n                            <table className=\"w-full table-fixed max-w-[920px]\" ref={planComparisonRef}>\n                                <tbody>\n                                    {/* Pricing row */}\n                                    <tr className=\"\">\n                                        <th scope=\"row\">\n                                            {includeAddons && currentProduct.addons?.length > 0 && (\n                                                <p className=\"ml-0\">\n                                                    <span className=\"font-bold\">{currentProduct.name}</span>\n                                                </p>\n                                            )}\n                                            <p className=\"ml-0 text-xs mt-1\">Priced per {currentProduct.unit}</p>\n                                        </th>\n                                        {currentProduct.plans?.map((plan) => (\n                                            <td key={`${plan.plan_key}-tiers-td`} className=\"p-4\">\n                                                <PricingTiers plan={plan} product={currentProduct} />\n                                            </td>\n                                        ))}\n                                    </tr>\n                                    <tr>\n                                        <tr className=\"rounded text-left\">\n                                            <h4 className=\"mt-6 mb-2\">Product Features:</h4>\n                                        </tr>\n                                    </tr>\n                                    {currentProduct.plans[currentProduct.plans.length - 1]?.features?.map(\n                                        (feature, i) => (\n                                            <tr\n                                                key={`tr-${feature.key}`}\n                                                className={clsx(\n                                                    i ==\n                                                        currentProduct.plans[currentProduct.plans.length - 1]?.features\n                                                            ?.length -\n                                                            1 && !billing?.has_active_subscription\n                                                        ? ''\n                                                        : 'border-b'\n                                                )}\n                                            >\n                                                <th className=\"text-secondary py-3 pl-8 font-medium text-left\">\n                                                    <Tooltip title={feature.description}>\n                                                        <div\n                                                            className={\n                                                                comparisonModalHighlightedFeatureKey === feature.key\n                                                                    ? 'border-b-2 border-danger-lighter px-1 pb-1 w-max'\n                                                                    : undefined\n                                                            }\n                                                        >\n                                                            <span>{feature.name}</span>\n                                                        </div>\n                                                    </Tooltip>\n                                                </th>\n                                                {currentProduct.plans?.map((plan) => (\n                                                    <td key={`${plan.plan_key}-${feature.key}`} className=\"p-4\">\n                                                        <PlanIcon\n                                                            feature={plan.features?.find(\n                                                                (thisPlanFeature) => feature.key === thisPlanFeature.key\n                                                            )}\n                                                            className=\"text-base\"\n                                                        />\n                                                    </td>\n                                                ))}\n                                            </tr>\n                                        )\n                                    )}\n                                    {includeAddons && product.addons.length > 0 && (\n                                        <tr>\n                                            <th colSpan={1} className=\"PlanTable__th__section rounded text-left\">\n                                                <h3 className=\"mt-6 mb-6\">Available add-ons:</h3>\n                                            </th>\n                                        </tr>\n                                    )}\n                                    {includeAddons &&\n                                        currentProduct.addons\n                                            ?.filter((addon) => {\n                                                if (addon.inclusion_only) {\n                                                    if (featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]) {\n                                                        return false\n                                                    }\n                                                }\n                                                return true\n                                            })\n                                            .map((addon) => {\n                                                return addon.tiered ? (\n                                                    <tr\n                                                        key={addon.name + 'pricing-row'}\n                                                        className=\"PlanTable__tr__border\"\n                                                    >\n                                                        <th scope=\"row\">\n                                                            <p className=\"ml-0\">\n                                                                <Tooltip title={addon.description}>\n                                                                    <span className=\"font-bold cursor-default\">\n                                                                        {addon.name}\n                                                                    </span>\n                                                                </Tooltip>\n                                                                <Tooltip\n                                                                    title={\n                                                                        addon.inclusion_only\n                                                                            ? 'Automatically charged based on SDK config options and usage.'\n                                                                            : 'If subscribed, charged on all usage.'\n                                                                    }\n                                                                >\n                                                                    <LemonTag\n                                                                        type={\n                                                                            addon.inclusion_only ? 'option' : 'primary'\n                                                                        }\n                                                                        className=\"ml-2\"\n                                                                    >\n                                                                        {addon.inclusion_only ? 'config' : 'add-on'}\n                                                                    </LemonTag>\n                                                                </Tooltip>\n                                                            </p>\n                                                            <p className=\"ml-0 text-xs text-secondary mt-1\">\n                                                                Priced per {addon.unit}\n                                                            </p>\n                                                        </th>\n                                                        {plans?.map((plan, i) => {\n                                                            // If the parent plan is free, the addon isn't available\n                                                            return !addon.inclusion_only ? (\n                                                                plan.free_allocation && !plan.tiers ? (\n                                                                    <td\n                                                                        key={`${addon.name}-free-tiers-td`}\n                                                                        className=\"p-4\"\n                                                                    >\n                                                                        <p className=\"text-secondary text-xs\">\n                                                                            Not available on this plan.\n                                                                        </p>\n                                                                    </td>\n                                                                ) : (\n                                                                    <td key={`${addon.type}-tiers-td`} className=\"p-4\">\n                                                                        <AddonPlanTiers\n                                                                            plan={addon.plans?.[0]}\n                                                                            addon={addon}\n                                                                        />\n                                                                    </td>\n                                                                )\n                                                            ) : plan.free_allocation && !plan.tiers ? (\n                                                                <td key={`${addon.name}-free-tiers-td`} className=\"p-4\">\n                                                                    <PricingTiers plan={plan} product={product} />\n                                                                </td>\n                                                            ) : (\n                                                                <td key={`${addon.type}-tiers-td`} className=\"p-4\">\n                                                                    <AddonPlanTiers\n                                                                        plan={addon.plans?.[i]}\n                                                                        addon={addon}\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        })}\n                                                    </tr>\n                                                ) : null\n                                            })}\n                                </tbody>\n                            </table>\n                        ),\n                    })) || []\n                }\n            />\n        </div>\n    )\n}\n\nexport const AllProductsPlanComparisonModal = ({\n    product,\n    title,\n    includeAddons = false,\n    modalOpen,\n    onClose,\n}: {\n    product: BillingProductV2Type\n    title?: string\n    includeAddons?: boolean\n    modalOpen: boolean\n    onClose?: () => void\n}): JSX.Element | null => {\n    return (\n        <LemonModal isOpen={modalOpen} onClose={onClose}>\n            <div className=\"PlanComparisonModal flex w-full h-full justify-center p-6\">\n                <div className=\"text-left bg-surface-primary rounded relative w-full\">\n                    {title ? <h2>{title}</h2> : <h2>{product.name} plans</h2>}\n                    <AllProductsPlanComparison product={product} includeAddons={includeAddons} />\n                </div>\n            </div>\n        </LemonModal>\n    )\n}\n\nconst AddonPlanTiers = ({ plan, addon }: { plan: BillingPlanType; addon: BillingProductV2AddonType }): JSX.Element => {\n    const [showTiers, setShowTiers] = useState(false)\n\n    return showTiers ? (\n        <>\n            <PricingTiers plan={plan} product={addon} />\n            <p className=\"mb-0\">\n                <Link onClick={() => setShowTiers(false)} className=\"text-xs\">\n                    Hide volume discounts\n                </Link>\n            </p>\n        </>\n    ) : (\n        <>\n            <p className=\"mb-1\">\n                <b>\n                    First {convertLargeNumberToWords(plan?.tiers?.[0].up_to || 0, null)} {addon.unit}s free\n                </b>\n                , then just ${plan?.tiers?.[1].unit_amount_usd}.\n            </p>\n            <p className=\"mb-0\">\n                <Link onClick={() => setShowTiers(true)} className=\"text-xs\">\n                    Show volume discounts\n                </Link>\n            </p>\n        </>\n    )\n}\n", "import './BillingHero.scss'\n\nimport { BlushingHog } from 'lib/components/hedgehogs'\nimport useResizeObserver from 'use-resize-observer'\n\nexport const BillingHero = (): JSX.Element => {\n    const { width, ref: billingHeroRef } = useResizeObserver()\n\n    return (\n        <div className=\"BillingHero\" ref={billingHeroRef}>\n            <div className=\"p-4\">\n                <p className=\"text-xs uppercase my-0\">How pricing works</p>\n                <h1 className=\"ingestion-title\">Get the whole hog.</h1>\n                <h1 className=\"ingestion-title text-danger\">Only pay for what you use.</h1>\n                <p className=\"mt-2 mb-0\">\n                    Upgrade to get access to premium product and platform features. Set billing limits as low as $0 to\n                    control spend.\n                </p>\n            </div>\n            {width && width > 500 && (\n                <div className=\"BillingHero__hog shrink-0\">\n                    <BlushingHog className=\"BillingHero__hog__img\" />\n                </div>\n            )}\n        </div>\n    )\n}\n", "import { useActions, useValues } from 'kea'\nimport { preflightLogic } from 'scenes/PreflightCheck/preflightLogic'\nimport { inviteLogic } from 'scenes/settings/organization/inviteLogic'\nimport { InviteTeamMatesComponent } from 'scenes/settings/organization/InviteModal'\n\nimport { ProductKey } from '~/types'\n\nimport { onboardingLogic, OnboardingStepKey } from './onboardingLogic'\nimport { OnboardingStep } from './OnboardingStep'\n\nexport const OnboardingInviteTeammates = ({ stepKey }: { stepKey: OnboardingStepKey }): JSX.Element => {\n    const { preflight } = useValues(preflightLogic)\n    const { productKey } = useValues(onboardingLogic)\n    const { inviteTeamMembers } = useActions(inviteLogic)\n    const { invitesToSend, canSubmit: canSubmitInvites } = useValues(inviteLogic)\n\n    const titlePrefix = (): string => {\n        switch (productKey) {\n            case ProductKey.PRODUCT_ANALYTICS:\n                return 'Analytics are'\n            case ProductKey.SESSION_REPLAY:\n                return 'Replays are'\n            case ProductKey.FEATURE_FLAGS:\n                return 'Feature flags are'\n            case ProductKey.SURVEYS:\n                return 'Surveys are'\n            default:\n                return 'PostHog is'\n        }\n    }\n\n    const likeTo = (): string => {\n        switch (productKey) {\n            case ProductKey.PRODUCT_ANALYTICS:\n                return 'dig into the data'\n            case ProductKey.SESSION_REPLAY:\n                return 'see how people use your product'\n            case ProductKey.FEATURE_FLAGS:\n                return 'customize user experiences'\n            case ProductKey.SURVEYS:\n                return 'ask all the questions'\n            default:\n                return 'dig into the data'\n        }\n    }\n\n    return (\n        <OnboardingStep\n            title=\"Invite teammates\"\n            stepKey={stepKey}\n            continueAction={() =>\n                preflight?.email_service_available &&\n                invitesToSend[0]?.target_email &&\n                canSubmitInvites &&\n                inviteTeamMembers()\n            }\n        >\n            <div className=\"mb-6 mt-6\">\n                <p>\n                    {titlePrefix()} better with friends ... or maybe even just coworkers. Ya know the ones who like to{' '}\n                    {likeTo()}?{' '}\n                    {preflight?.email_service_available && (\n                        <span>\n                            Enter their email below and we'll send them a custom invite link. Invites expire after 3\n                            days.\n                        </span>\n                    )}\n                </p>\n                {!preflight?.email_service_available && (\n                    <p>\n                        This PostHog instance isn't configured to send emails. In the meantime, enter your teammates'\n                        emails below to generate their custom invite links.{' '}\n                        <strong>You'll need to share the links with your project members manually</strong>. You can\n                        invite more people later.\n                    </p>\n                )}\n            </div>\n            <InviteTeamMatesComponent />\n        </OnboardingStep>\n    )\n}\n", "import { LemonDivider, LemonSelect, LemonSwitch } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport React, { useEffect, useRef } from 'react'\nimport { pipelineDefaultEnabledLogic } from 'scenes/pipeline/pipelineDefaultEnabledLogic'\n\nimport { ProductKey } from '~/types'\n\nimport { OnboardingStepKey } from './onboardingLogic'\nimport { onboardingProductConfigurationLogic, ProductConfigOption } from './onboardingProductConfigurationLogic'\nimport { OnboardingStep } from './OnboardingStep'\n\ntype ConfigType = 'toggle' | 'select'\ntype PluginType = 'plugin'\ntype ConfigOption =\n    | {\n          title: string\n          description?: string\n          type: ConfigType\n          selectOptions?: { label: string; value: string | number }[]\n          value: boolean | string | number\n          onChange: (newValue: boolean | string | number) => void\n      }\n    | {\n          title: string\n          description?: string\n          type: PluginType\n          value: boolean\n          onChange: (newValue: boolean) => void\n      }\n\nexport const OnboardingProductConfiguration = ({\n    stepKey = OnboardingStepKey.PRODUCT_CONFIGURATION,\n    options,\n    product,\n}: {\n    stepKey?: OnboardingStepKey\n    options: (ProductConfigOption | undefined)[]\n    // which product is being configured\n    product?: ProductKey\n}): JSX.Element | null => {\n    const { configOptions } = useValues(onboardingProductConfigurationLogic)\n    const { pipelineDefaultEnabled } = useValues(pipelineDefaultEnabledLogic)\n    const { setConfigOptions, saveConfiguration } = useActions(onboardingProductConfigurationLogic)\n    const { toggleEnabled } = useActions(pipelineDefaultEnabledLogic)\n\n    const configOptionsRef = useRef(configOptions)\n\n    useEffect(() => {\n        configOptionsRef.current = configOptions\n    }, [configOptions])\n\n    useEffect(() => {\n        setConfigOptions(options.filter((option): option is ProductConfigOption => !!option))\n    }, [])\n\n    const combinedList: ConfigOption[] = [\n        ...configOptions\n            .filter((option) => option.visible)\n            .map((option) => ({\n                title: option.title,\n                description: option.description,\n                type: option.type as ConfigType,\n                selectOptions: option.selectOptions,\n                value: option.value,\n                onChange: (newValue: boolean | string | number) => {\n                    // Use the current value from the ref to ensure that onChange always accesses\n                    // the latest state of configOptions, preventing the closure from using stale data.\n                    const updatedConfigOptions = configOptionsRef.current.map((o) =>\n                        o.teamProperty === option.teamProperty ? { ...o, value: newValue } : o\n                    )\n                    setConfigOptions(updatedConfigOptions)\n                },\n            })),\n        ...pipelineDefaultEnabled\n            .filter((plugin) => {\n                return !(product && plugin?.productOnboardingDenyList?.includes(product))\n            })\n            .map((item) => {\n                return {\n                    title: item.title,\n                    description: item.description,\n                    type: 'plugin' as PluginType,\n                    value: item.enabled,\n                    onChange: (enabled: boolean) => {\n                        toggleEnabled({\n                            id: item.id,\n                            enabled: enabled,\n                        })\n                    },\n                }\n            }),\n    ]\n\n    return combinedList.length > 0 ? (\n        <OnboardingStep title=\"Set up your configuration\" stepKey={stepKey} continueAction={saveConfiguration}>\n            <div className=\"mt-6\">\n                <h2 className=\"pt-2\">Options</h2>\n                {combinedList.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <LemonDivider className=\"my-4\" />\n                        <div className=\"grid gap-4 grid-cols-3\">\n                            <div className=\"col-span-2\">\n                                <label className=\"text-base font-semibold\">{item.title}</label>\n                                <p className=\"prompt-text mt-2 mb-0 \">{item.description}</p>\n                            </div>\n                            <div className=\"flex justify-end\">\n                                {item.type === 'toggle' ? (\n                                    <LemonSwitch\n                                        onChange={item.onChange}\n                                        className=\"justify-end\"\n                                        fullWidth={true}\n                                        checked={(item.value as boolean) || false}\n                                    />\n                                ) : item.type === 'plugin' ? (\n                                    <LemonSwitch\n                                        onChange={item.onChange}\n                                        className=\"justify-end\"\n                                        fullWidth={true}\n                                        checked={item.value || false}\n                                    />\n                                ) : (\n                                    <div className=\"flex justify-between items-center mb-1 gap-x-4\">\n                                        <LemonSelect\n                                            dropdownMatchSelectWidth={false}\n                                            onChange={item.onChange}\n                                            options={item.selectOptions || []}\n                                            value={item.value}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </OnboardingStep>\n    ) : null\n}\n", "import { connect, kea, path, selectors } from 'kea'\n\nimport { ProductKey } from '~/types'\n\nimport type { pipelineDefaultEnabledLogicType } from './pipelineDefaultEnabledLogicType'\nimport { pipelineTransformationsLogic } from './transformationsLogic'\n\ninterface PluginContent {\n    title: string\n    description: string\n    // which onboarding pages should this plugin be hidden on\n    // e.g. geolocation doesn't apply to session replay\n    productOnboardingDenyList?: ProductKey[]\n}\n\ntype PluginContentMapping = Record<string, PluginContent>\nexport const pluginContentMapping: PluginContentMapping = {\n    GeoIP: {\n        title: 'Capture location information',\n        description:\n            'Enrich PostHog events and persons with IP location data. This is useful for understanding where your users are coming from. This setting can be found under data pipeline.',\n        productOnboardingDenyList: [ProductKey.SESSION_REPLAY],\n    },\n}\n\nexport interface DefaultEnabledType {\n    title: string\n    description?: string\n    productOnboardingDenyList?: ProductKey[]\n    id: number\n    enabled: boolean\n}\n\nexport const pipelineDefaultEnabledLogic = kea<pipelineDefaultEnabledLogicType>([\n    path(['scenes', 'pipeline', 'pipelineDefaultEnabledLogic']),\n    connect({\n        values: [pipelineTransformationsLogic, ['plugins', 'pluginConfigs']],\n        actions: [pipelineTransformationsLogic, ['toggleEnabled']],\n    }),\n    selectors({\n        pipelineDefaultEnabled: [\n            (s) => [s.plugins, s.pluginConfigs],\n            (plugins, pluginConfigs): DefaultEnabledType[] => {\n                const defaultEnabledPluginIds = Object.values(plugins)\n                    .filter((plugin) => plugin.name in pluginContentMapping)\n                    .map((plugin) => plugin.id)\n                const defaultEnabledPluginConfigs = Object.values(pluginConfigs).filter((pluginConfig) =>\n                    defaultEnabledPluginIds.includes(pluginConfig.plugin)\n                )\n                return defaultEnabledPluginConfigs.map((pluginConfig) => {\n                    const plugin = plugins[pluginConfig.plugin]\n                    const pluginContent = pluginContentMapping[plugin.name]\n                    return {\n                        title: pluginContent?.title || plugin.name,\n                        description: pluginContent?.description || plugin.description,\n                        productOnboardingDenyList: pluginContent?.productOnboardingDenyList,\n                        id: pluginConfig.id,\n                        enabled: pluginConfig.enabled,\n                    }\n                })\n            },\n        ],\n    }),\n])\n", "import { LemonSelectOptions } from '@posthog/lemon-ui'\nimport { actions, connect, kea, listeners, path, reducers } from 'kea'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { TeamType } from '~/types'\n\nimport type { onboardingProductConfigurationLogicType } from './onboardingProductConfigurationLogicType'\n\nexport interface ProductConfigOptionBase {\n    title: string\n    description: string\n    teamProperty: keyof TeamType\n    visible: boolean\n}\n\nexport interface ProductConfigurationToggle extends ProductConfigOptionBase {\n    type: 'toggle'\n    /** Sets the initial value. Use a team setting to reflect current state, or a static value to set a default. */\n    value: boolean\n    /** If true, the value is inverted when saving, used for 'opt_out' type settings */\n    inverseToggle?: boolean\n}\n\nexport interface ProductConfigurationSelect extends ProductConfigOptionBase {\n    type: 'select'\n    /** Sets the initial value. Use a team setting to reflect current state, or a static value to set a default. */\n    value: string | number | null\n    selectOptions: LemonSelectOptions<any>\n}\n\nexport type ProductConfigOption = ProductConfigurationToggle | ProductConfigurationSelect\n\nexport const onboardingProductConfigurationLogic = kea<onboardingProductConfigurationLogicType>([\n    path(() => ['scenes', 'onboarding', 'onboardingProductConfigurationLogic']),\n    connect({\n        actions: [teamLogic, ['updateCurrentTeam']],\n    }),\n    actions({\n        setConfigOptions: (configOptions: ProductConfigOption[]) => ({ configOptions }),\n        saveConfiguration: true,\n    }),\n    reducers(() => ({\n        configOptions: [\n            [],\n            {\n                setConfigOptions: (_, { configOptions }) => configOptions,\n            },\n        ],\n    })),\n    listeners(({ values, actions }) => ({\n        saveConfiguration: async () => {\n            const updateConfig = {}\n            values.configOptions.forEach((configOption) => {\n                updateConfig[configOption.teamProperty] = configOption.inverseToggle\n                    ? !configOption.value\n                    : configOption.value\n            })\n            actions.updateCurrentTeam(updateConfig)\n        },\n    })),\n])\n", "import { IconCheck, IconMap, IconMessage, IconStack } from '@posthog/icons'\nimport { LemonButton, Link, Spinner } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { WavingHog } from 'lib/components/hedgehogs'\nimport { ProductIntentContext } from 'lib/utils/product-intents'\nimport React from 'react'\nimport { convertLargeNumberToWords } from 'scenes/billing/billing-utils'\nimport { billingProductLogic } from 'scenes/billing/billingProductLogic'\nimport { ProductPricingModal } from 'scenes/billing/ProductPricingModal'\nimport { preflightLogic } from 'scenes/PreflightCheck/preflightLogic'\nimport { getProductIcon } from 'scenes/products/Products'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { BillingFeatureType, BillingProductV2Type, ProductKey } from '~/types'\n\nimport { onboardingLogic, OnboardingStepKey } from './onboardingLogic'\nimport { OnboardingStep } from './OnboardingStep'\nimport { multiInstallProducts, sdksLogic } from './sdks/sdksLogic'\n\nexport const Feature = ({ name, description, images }: BillingFeatureType): JSX.Element => {\n    return images ? (\n        <li className=\"text-center\">\n            <div className=\"mb-2 w-full rounded\">\n                <img src={images.light} className=\"w-full rounded\" />\n            </div>\n            <h4 className=\"mb-1 leading-tight text-lg\">{name}</h4>\n            <p className=\"text-[15px]\">{description}</p>\n        </li>\n    ) : (\n        <></>\n    )\n}\n\nexport const Subfeature = ({ name, description, icon_key }: BillingFeatureType): JSX.Element => {\n    return (\n        <li className=\"rounded-lg p-4 sm:p-6 sm:pb-8 bg-primary-alt-highlight\">\n            <span className=\"inline-block text-2xl mb-2 opacity-75\">{getProductIcon(name, icon_key)}</span>\n            <h3 className=\"text-[17px] mb-1 leading-tight\">{name}</h3>\n            <p className=\"m-0 text-[15px]\">{description}</p>\n        </li>\n    )\n}\n\nconst GetStartedButton = ({ product }: { product: BillingProductV2Type }): JSX.Element => {\n    const { addProductIntent } = useActions(teamLogic)\n    const { completeOnboarding, setTeamPropertiesForProduct, goToNextStep } = useActions(onboardingLogic)\n    const { isFirstProductOnboarding } = useValues(onboardingLogic)\n    const { hasSnippetEvents } = useValues(sdksLogic)\n    const cta: Partial<Record<ProductKey, string>> = {\n        [ProductKey.SESSION_REPLAY]: 'Start recording my website or mobile app',\n        [ProductKey.FEATURE_FLAGS]: 'Create a feature flag or experiment',\n        [ProductKey.SURVEYS]: 'Create a survey',\n    }\n\n    return (\n        <div className=\"flex gap-x-4 items-center\">\n            {isFirstProductOnboarding ? (\n                <>\n                    <LemonButton\n                        type=\"primary\"\n                        status=\"alt\"\n                        data-attr=\"start-onboarding\"\n                        center\n                        className=\"max-w-max\"\n                        onClick={() => {\n                            setTeamPropertiesForProduct(product.type as ProductKey)\n                            addProductIntent({\n                                product_type: product.type as ProductKey,\n                                intent_context: ProductIntentContext.ONBOARDING_PRODUCT_SELECTED_PRIMARY,\n                            })\n                            goToNextStep()\n                        }}\n                    >\n                        {cta[product.type] || 'Get started'}\n                    </LemonButton>\n                </>\n            ) : (\n                <>\n                    <LemonButton\n                        type=\"primary\"\n                        status=\"alt\"\n                        data-attr=\"skip-onboarding\"\n                        center\n                        className=\"max-w-max\"\n                        onClick={() => {\n                            setTeamPropertiesForProduct(product.type as ProductKey)\n                            addProductIntent({\n                                product_type: product.type as ProductKey,\n                                intent_context: ProductIntentContext.ONBOARDING_PRODUCT_SELECTED_SECONDARY,\n                            })\n                            completeOnboarding()\n                        }}\n                    >\n                        {cta[product.type] || 'Get started'}\n                    </LemonButton>\n                    {(!hasSnippetEvents || multiInstallProducts.includes(product.type as ProductKey)) && (\n                        <LemonButton\n                            type=\"tertiary\"\n                            data-attr=\"start-onboarding-sdk\"\n                            onClick={() => {\n                                setTeamPropertiesForProduct(product.type as ProductKey)\n                                addProductIntent({\n                                    product_type: product.type as ProductKey,\n                                    intent_context: ProductIntentContext.ONBOARDING_PRODUCT_SELECTED_SECONDARY,\n                                })\n                                goToNextStep()\n                            }}\n                        >\n                            View SDK instructions\n                        </LemonButton>\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n\nconst PricingSection = ({ product }: { product: BillingProductV2Type }): JSX.Element => {\n    const { currentAndUpgradePlans, isPricingModalOpen } = useValues(billingProductLogic({ product: product }))\n    const { toggleIsPricingModalOpen } = useActions(billingProductLogic({ product: product }))\n    const planForStats = currentAndUpgradePlans.upgradePlan || currentAndUpgradePlans.currentPlan\n    if (!planForStats) {\n        return <></>\n    }\n    const pricingListItems = [\n        planForStats.tiers?.[0].up_to && (\n            <>\n                Get{' '}\n                <b>\n                    {convertLargeNumberToWords(planForStats.tiers?.[0].up_to, null)} {product.unit}s free\n                </b>{' '}\n                every month.\n            </>\n        ),\n        planForStats.tiers?.[0].up_to && (\n            <>\n                Then just <span className=\"font-bold\">${planForStats.tiers?.[1].unit_amount_usd}</span>/{product.unit}{' '}\n                after that, with{' '}\n                <Link onClick={() => toggleIsPricingModalOpen()} className=\"font-bold\">\n                    volume discounts\n                </Link>{' '}\n                automatically applied.\n            </>\n        ),\n        <>\n            Set <b>usage limits as low as $0</b> so you never get an unexpected bill.\n        </>,\n        <>Pay only for what you use.</>,\n        <>\n            Or, stay on our generous free plan if you'd like - you still get{' '}\n            <b>\n                {convertLargeNumberToWords(\n                    currentAndUpgradePlans.currentPlan?.free_allocation ||\n                        currentAndUpgradePlans.downgradePlan?.free_allocation ||\n                        0,\n                    null\n                )}{' '}\n                {product.unit}s free\n            </b>{' '}\n            every month.\n        </>,\n    ]\n\n    return (\n        <div className=\"w-full max-w-screen-xl\">\n            <h3 className=\"mb-4 text-2xl font-bold\">Usage-based pricing that only scales when you do</h3>\n            <ul className=\"pl-2 flex flex-col gap-y-1\">\n                {pricingListItems.map((item, i) => (\n                    <li className=\"flex gap-x-2 items-start\" key={`pricing-item-${i}`}>\n                        <IconCheck className=\"inline-block text-success shrink-0 mt-1\" />\n                        <span>{item}</span>\n                    </li>\n                ))}\n            </ul>\n            <ProductPricingModal\n                product={product}\n                modalOpen={isPricingModalOpen}\n                planKey={planForStats.plan_key}\n                onClose={toggleIsPricingModalOpen}\n            />\n        </div>\n    )\n}\n\nexport function OnboardingProductIntroduction({ stepKey }: { stepKey: OnboardingStepKey }): JSX.Element | null {\n    const { billingProduct } = useValues(onboardingLogic)\n    const { isCloudOrDev } = useValues(preflightLogic)\n    const websiteSlug: Partial<Record<ProductKey, string>> = {\n        [ProductKey.SESSION_REPLAY]: 'session-replay',\n        [ProductKey.FEATURE_FLAGS]: 'feature-flags',\n        [ProductKey.SURVEYS]: 'surveys',\n        [ProductKey.EXPERIMENTS]: 'experimentation',\n        [ProductKey.PRODUCT_ANALYTICS]: 'product-analytics',\n    }\n\n    return (\n        <OnboardingStep title=\"Product Intro\" stepKey={stepKey} continueOverride={<></>} hideHeader>\n            {billingProduct ? (\n                <div className=\"unsubscribed-product-landing-page -m-scene-padding -mt-8\">\n                    <header className=\"bg-primary-alt-highlight border-b border-t border-border flex justify-center p-8\">\n                        <div className=\"grid md:grid-cols-2 items-center gap-8 w-full max-w-screen-xl\">\n                            <div className=\"\">\n                                <h3 className=\"text-4xl font-bold\" data-attr=\"product-intro-title\">\n                                    {billingProduct.headline}\n                                </h3>\n                                <p>{billingProduct.description}</p>\n                                <GetStartedButton product={billingProduct} />\n                            </div>\n                            {billingProduct.image_url && (\n                                <aside className=\"text-right my-2 hidden md:block\">\n                                    <img src={billingProduct.image_url || undefined} className=\"max-w-96\" />\n                                </aside>\n                            )}\n                        </div>\n                    </header>\n                    {billingProduct.screenshot_url && (\n                        <div className=\"flex justify-center\">\n                            <div className=\"max-w-6xl mt-8 -mb-12\">\n                                <img src={billingProduct.screenshot_url || undefined} className=\"w-full\" />\n                            </div>\n                        </div>\n                    )}\n\n                    <div className=\"p-8 py-8 border-t border-border flex justify-center\">\n                        <div className=\"max-w-screen-xl\">\n                            <h3 className=\"mb-6 text-2xl font-bold\">Features</h3>\n                            <ul className=\"list-none p-0 grid grid-cols-2 md:grid-cols-3 gap-8 mb-8 \">\n                                {billingProduct?.features\n                                    ?.filter((feature) => feature.type == 'primary')\n                                    .map((feature, i) => {\n                                        return (\n                                            <React.Fragment key={`${billingProduct.type}-feature-${i}`}>\n                                                <Feature {...feature} />\n                                            </React.Fragment>\n                                        )\n                                    })}\n                            </ul>\n\n                            <ul className=\"list-none p-0 grid grid-cols-2 md:grid-cols-3 gap-4\">\n                                {billingProduct?.features\n                                    ?.filter((feature) => feature.type == 'secondary')\n                                    .map((subfeature, i) => {\n                                        return (\n                                            <React.Fragment key={`${billingProduct.type}-subfeature-${i}`}>\n                                                <Subfeature {...subfeature} />\n                                            </React.Fragment>\n                                        )\n                                    })}\n                            </ul>\n                            <div className=\"mt-12\">\n                                <h3 className=\"mb-4 text-lg font-bold\">Get the most out of {billingProduct.name}</h3>\n                                <ul className=\"flex flex-col sm:flex-row gap-x-8 gap-y-2\">\n                                    <li>\n                                        <Link to={billingProduct.docs_url} target=\"_blank\">\n                                            <IconStack className=\"mr-2 text-xl\" />\n                                            <span className=\"font-bold\">Product docs</span>\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link\n                                            to={`https://posthog.com/tutorials/${websiteSlug[billingProduct.type]}`}\n                                            target=\"_blank\"\n                                        >\n                                            <IconMap className=\"mr-2 text-xl\" />\n                                            <span className=\"font-bold\">Tutorials</span>\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link\n                                            to={`https://posthog.com/questions/topic/${\n                                                websiteSlug[billingProduct.type]\n                                            }`}\n                                            target=\"_blank\"\n                                        >\n                                            <IconMessage className=\"mr-2 text-xl\" />\n                                            <span className=\"font-bold\">Community</span>\n                                        </Link>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    {isCloudOrDev && (\n                        <div className=\"p-8 py-12 border-t border-border\">\n                            <div className=\"max-w-screen-xl m-auto\">\n                                <PricingSection product={billingProduct} />\n                            </div>\n                        </div>\n                    )}\n                    <div className=\"mb-12 flex justify-center px-8\">\n                        <div className=\"w-full max-w-screen-xl rounded bg-primary-alt-highlight border border-border p-6 flex justify-between items-center gap-x-12\">\n                            <div>\n                                <h3 className=\"mb-4 text-2xl font-bold\">Get started with {billingProduct.name}</h3>\n                                <p className=\"text-sm max-w-2xl\">{billingProduct.description}</p>\n                                <GetStartedButton product={billingProduct} />\n                            </div>\n                            <div className=\"w-24 hidden sm:block\">\n                                <WavingHog className=\"h-full w-full\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"w-full text-center text-3xl mt-12\">\n                    <Spinner />\n                </div>\n            )}\n        </OnboardingStep>\n    )\n}\n", "import { actions, afterMount, connect, events, kea, listeners, path, reducers, selectors } from 'kea'\nimport { loaders } from 'kea-loaders'\nimport { urlToAction } from 'kea-router'\nimport api from 'lib/api'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { LemonSelectOptions } from 'lib/lemon-ui/LemonSelect/LemonSelect'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\nimport { eventUsageLogic } from 'lib/utils/eventUsageLogic'\nimport { liveEventsTableLogic } from 'scenes/activity/live/liveEventsTableLogic'\nimport { userLogic } from 'scenes/userLogic'\n\nimport { HogQLQuery, NodeKind } from '~/queries/schema/schema-general'\nimport { hogql } from '~/queries/utils'\nimport { ProductKey, SDK, SDKInstructionsMap, SDKKey } from '~/types'\n\nimport { onboardingLogic } from '../onboardingLogic'\nimport { allSDKs } from './allSDKs'\nimport type { sdksLogicType } from './sdksLogicType'\n\n/*\nTo add SDK instructions for your product:\n    1. If needed, add a new ProductKey enum value in ~/types.ts\n    2. Create a folder in this directory for your product\n    3. Create and export the instruction components\n    4. Create a file like ProductAnalyticsSDKInstructions.tsx and export the instructions object with the SDKKey:Component mapping\n    6. Add the SDK component to your product onboarding component\n*/\n\nconst getSourceOptions = (availableSDKInstructionsMap: SDKInstructionsMap): LemonSelectOptions<string> => {\n    const filteredSDKsTags = allSDKs\n        .filter((sdk) => Object.keys(availableSDKInstructionsMap).includes(sdk.key))\n        .flatMap((sdk) => sdk.tags)\n    const uniqueTags = filteredSDKsTags.filter((item, index) => filteredSDKsTags.indexOf(item) === index)\n    const selectOptions = uniqueTags.map((tag) => ({\n        label: tag,\n        value: tag,\n    }))\n    return selectOptions\n}\n\n/*\nProducts that will often be installed in multiple places, eg. web and mobile\n*/\nexport const multiInstallProducts = [ProductKey.PRODUCT_ANALYTICS, ProductKey.FEATURE_FLAGS]\n\nconst getProductAnalyticsOrderedSDKs = (sdks: SDK[]): SDK[] => {\n    return [\n        ...sdks.filter((sdk) => sdk.key === SDKKey.HTML_SNIPPET),\n        ...sdks.filter((sdk) => sdk.key === SDKKey.JS_WEB),\n        ...sdks.filter((sdk) => ![SDKKey.HTML_SNIPPET, SDKKey.JS_WEB].includes(sdk.key as SDKKey)),\n    ]\n}\n\nexport const sdksLogic = kea<sdksLogicType>([\n    path(['scenes', 'onboarding', 'sdks', 'sdksLogic']),\n    connect({\n        values: [\n            onboardingLogic,\n            ['productKey'],\n            liveEventsTableLogic,\n            ['eventHosts'],\n            featureFlagLogic,\n            ['featureFlags'],\n            userLogic,\n            ['user', 'isUserNonTechnical'],\n        ],\n        actions: [eventUsageLogic, ['reportSDKSelected']],\n    }),\n    actions({\n        setSourceFilter: (sourceFilter: string | null) => ({ sourceFilter }),\n        filterSDKs: true,\n        setSDKs: (sdks: SDK[]) => ({ sdks }),\n        setSelectedSDK: (sdk: SDK | null) => ({ sdk }),\n        setSourceOptions: (sourceOptions: LemonSelectOptions<string>) => ({ sourceOptions }),\n        resetSDKs: true,\n        setAvailableSDKInstructionsMap: (sdkInstructionMap: SDKInstructionsMap) => ({ sdkInstructionMap }),\n        setShowSideBySide: (showSideBySide: boolean) => ({ showSideBySide }),\n        setPanel: (panel: 'instructions' | 'options') => ({ panel }),\n        setHasSnippetEvents: (hasSnippetEvents: boolean) => ({ hasSnippetEvents }),\n        setSnippetHosts: (snippetHosts: string[]) => ({ snippetHosts }),\n        selectSDK: (sdk: SDK) => ({ sdk }),\n    }),\n    reducers({\n        sourceFilter: [\n            null as string | null,\n            {\n                setSourceFilter: (_, { sourceFilter }) => sourceFilter,\n            },\n        ],\n        sdks: [\n            [] as SDK[] | null,\n            {\n                setSDKs: (_, { sdks }) => sdks,\n            },\n        ],\n        selectedSDK: [\n            null as SDK | null,\n            {\n                setSelectedSDK: (_, { sdk }) => sdk,\n            },\n        ],\n        sourceOptions: [\n            [] as LemonSelectOptions<string>,\n            {\n                setSourceOptions: (_, { sourceOptions }) => sourceOptions,\n            },\n        ],\n        availableSDKInstructionsMap: [\n            {} as SDKInstructionsMap,\n            {\n                setAvailableSDKInstructionsMap: (_, { sdkInstructionMap }) => sdkInstructionMap,\n            },\n        ],\n        showSideBySide: [\n            null as boolean | null,\n            {\n                setShowSideBySide: (_, { showSideBySide }) => showSideBySide,\n            },\n        ],\n        panel: [\n            'options' as 'instructions' | 'options',\n            {\n                setPanel: (_, { panel }) => panel,\n            },\n        ],\n        hasSnippetEvents: {\n            setHasSnippetEvents: (_, { hasSnippetEvents }) => hasSnippetEvents,\n        },\n        snippetHosts: [\n            [] as string[],\n            {\n                setSnippetHosts: (_, { snippetHosts }) => snippetHosts,\n            },\n        ],\n    }),\n    selectors({\n        showSourceOptionsSelect: [\n            (selectors) => [selectors.sourceOptions, selectors.availableSDKInstructionsMap],\n            (sourceOptions: LemonSelectOptions<string>, availableSDKInstructionsMap: SDKInstructionsMap): boolean => {\n                // more than two source options since one will almost always be \"recommended\"\n                // more than 5 sdks since with fewer you don't really need to filter\n                return Object.keys(availableSDKInstructionsMap).length > 5 && sourceOptions.length > 2\n            },\n        ],\n        combinedSnippetAndLiveEventsHosts: [\n            (selectors) => [selectors.snippetHosts, selectors.eventHosts],\n            (snippetHosts: string[], eventHosts: string[]): string[] => {\n                const combinedSnippetAndLiveEventsHosts = snippetHosts\n                for (const host of eventHosts) {\n                    const hostProtocol = new URL(host).protocol\n                    const currentProtocol = window.location.protocol\n                    if (hostProtocol === currentProtocol && !combinedSnippetAndLiveEventsHosts.includes(host)) {\n                        combinedSnippetAndLiveEventsHosts.push(host)\n                    }\n                }\n                return combinedSnippetAndLiveEventsHosts\n            },\n        ],\n        isUserInNonTechnicalTest: [\n            (s) => [s.productKey, s.featureFlags, s.isUserNonTechnical],\n            (productKey, featureFlags, isUserNonTechnical): boolean => {\n                return (\n                    productKey === ProductKey.PRODUCT_ANALYTICS &&\n                    featureFlags[FEATURE_FLAGS.PRODUCT_ANALYTICS_MODIFIED_SDK_LIST] === 'test' &&\n                    isUserNonTechnical\n                )\n            },\n        ],\n    }),\n    loaders(({ actions }) => ({\n        hasSnippetEvents: [\n            null as boolean | null,\n            {\n                loadSnippetEvents: async () => {\n                    const query: HogQLQuery = {\n                        kind: NodeKind.HogQLQuery,\n                        query: hogql`SELECT\n                                        max(timestamp) AS latest_timestamp,\n                                        concat(\n                                            concat({protocol}, '//'),\n                                            properties.$host\n                                        ) AS full_host,\n                                    FROM events\n                                    WHERE timestamp >= now() - INTERVAL 3 DAY\n                                    AND timestamp <= now()\n                                    AND properties.$lib = 'web'\n                                    AND properties.$host is not null\n                                    AND startsWith(properties.$current_url, {protocol})\n                                    GROUP BY full_host\n                                    ORDER BY latest_timestamp DESC\n                                    LIMIT 7`,\n                        values: {\n                            protocol: window.location.protocol,\n                        },\n                    }\n                    const res = await api.query(query)\n                    const hasEvents = !!(res.results?.length ?? 0 > 0)\n                    const snippetHosts = res.results?.map((result) => result[1]).filter((val) => !!val) ?? []\n                    if (hasEvents) {\n                        actions.setSnippetHosts(snippetHosts)\n                    }\n                    return hasEvents\n                },\n            },\n        ],\n    })),\n    listeners(({ actions, values }) => ({\n        filterSDKs: () => {\n            let filteredSDks: SDK[] = allSDKs\n                .filter((sdk) => {\n                    if (!values.sourceFilter || !sdk) {\n                        return true\n                    }\n                    return sdk.tags.includes(values.sourceFilter)\n                })\n                .filter((sdk) => Object.keys(values.availableSDKInstructionsMap).includes(sdk.key))\n            if (values.isUserInNonTechnicalTest) {\n                filteredSDks = getProductAnalyticsOrderedSDKs(filteredSDks)\n            }\n            actions.setSDKs(filteredSDks)\n            actions.setSourceOptions(getSourceOptions(values.availableSDKInstructionsMap))\n        },\n        setAvailableSDKInstructionsMap: () => {\n            actions.filterSDKs()\n        },\n        setSDKs: () => {\n            if (!values.selectedSDK && values.showSideBySide == true) {\n                actions.setSelectedSDK(values.sdks?.[0] || null)\n            }\n        },\n        setSourceFilter: () => {\n            actions.setSelectedSDK(null)\n            actions.filterSDKs()\n        },\n        [onboardingLogic.actionTypes.setProductKey]: () => {\n            // TODO: This doesn't seem to run when the setProductKey action is called in onboardingLogic...\n            actions.resetSDKs()\n        },\n        resetSDKs: () => {\n            actions.filterSDKs()\n            actions.setSelectedSDK(null)\n            actions.setSourceFilter(null)\n            actions.setSourceOptions(getSourceOptions(values.availableSDKInstructionsMap))\n        },\n        setSelectedSDK: () => {\n            if (values.selectedSDK) {\n                actions.setPanel('instructions')\n            }\n        },\n        setShowSideBySide: () => {\n            if (values.showSideBySide && !values.selectedSDK) {\n                actions.setSelectedSDK(values.sdks?.[0] || null)\n            }\n        },\n        selectSDK: ({ sdk }) => {\n            actions.setSelectedSDK(sdk)\n            actions.reportSDKSelected(sdk)\n        },\n    })),\n    events(({ actions }) => ({\n        afterMount: () => {\n            actions.filterSDKs()\n        },\n    })),\n    afterMount(({ actions }) => {\n        actions.loadSnippetEvents()\n    }),\n    urlToAction(({ actions }) => ({\n        '/onboarding/:productKey': (_productKey, { sdk }) => {\n            const matchedSDK = allSDKs.find((s) => s.key === sdk)\n            if (matchedSDK) {\n                actions.setSelectedSDK(matchedSDK)\n            }\n        },\n    })),\n])\n", "import { Logomark } from '~/toolbar/assets/Logomark'\nimport { SDK, SDKKey, SDKTag } from '~/types'\n\nexport const allSDKs: SDK[] = [\n    // Web\n    {\n        name: 'JavaScript web',\n        key: SDKKey.JS_WEB,\n        recommended: true,\n        tags: [SDKTag.RECOMMENDED, SDKTag.WEB],\n        image: require('./logos/javascript_web.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/js',\n    },\n    {\n        name: 'HTML snippet',\n        key: SDKKey.HTML_SNIPPET,\n        recommended: true,\n        tags: [SDKTag.RECOMMENDED, SDKTag.WEB],\n        image: require('./logos/html.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/js',\n    },\n    {\n        name: 'Android',\n        key: SDKKey.ANDROID,\n        tags: [SDKTag.MOBILE],\n        image: require('./logos/android.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/android',\n    },\n    {\n        name: 'Angular',\n        key: SDKKey.ANGULAR,\n        tags: [SDKTag.WEB],\n        image: require('./logos/angular.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/angular',\n    },\n    {\n        name: 'API',\n        key: SDKKey.API,\n        tags: [SDKTag.SERVER],\n        image: (\n            <span className=\"flex w-4\">\n                <Logomark />\n            </span>\n        ),\n        docsLink: 'https://posthog.com/docs/api',\n    },\n    {\n        name: 'Astro',\n        key: SDKKey.ASTRO,\n        tags: [SDKTag.WEB],\n        image: require('./logos/astro.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/astro',\n    },\n    {\n        name: 'Bubble',\n        key: SDKKey.BUBBLE,\n        tags: [SDKTag.WEB],\n        image: require('./logos/bubble.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/bubble',\n    },\n    {\n        name: 'Django',\n        key: SDKKey.DJANGO,\n        tags: [SDKTag.SERVER],\n        image: require('./logos/django.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/django',\n    },\n    {\n        name: 'Elixir',\n        key: SDKKey.ELIXIR,\n        tags: [SDKTag.SERVER],\n        image: require('./logos/elixir.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/elixir',\n    },\n    {\n        name: 'Flutter',\n        key: SDKKey.FLUTTER,\n        tags: [SDKTag.MOBILE],\n        image: require('./logos/flutter.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/flutter',\n    },\n    {\n        name: 'Framer',\n        key: SDKKey.FRAMER,\n        tags: [SDKTag.WEB],\n        image: require('./logos/framer.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/framer',\n    },\n    {\n        name: 'Gatsby',\n        key: SDKKey.GATSBY,\n        tags: [SDKTag.WEB],\n        image: require('./logos/gatsby.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/gatsby',\n    },\n    {\n        name: 'Go',\n        key: SDKKey.GO,\n        tags: [SDKTag.SERVER],\n        image: require('./logos/go.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/go',\n    },\n    {\n        name: 'Helicone',\n        key: SDKKey.HELICONE,\n        tags: [SDKTag.LLM],\n        image: require('./logos/helicone.svg'),\n        docsLink: 'https://posthog.com/docs/ai-engineering/helicone-posthog',\n    },\n    {\n        name: 'iOS',\n        key: SDKKey.IOS,\n        tags: [SDKTag.MOBILE],\n        image: require('./logos/ios.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/ios',\n    },\n    {\n        name: 'Java',\n        key: SDKKey.JAVA,\n        tags: [SDKTag.SERVER],\n        image: require('./logos/java.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/java',\n    },\n    {\n        name: 'Langfuse',\n        key: SDKKey.LANGFUSE,\n        tags: [SDKTag.LLM],\n        image: require('./logos/langfuse.svg'),\n        docsLink: 'https://posthog.com/docs/ai-engineering/langfuse-posthog',\n    },\n    {\n        name: 'Laravel',\n        key: SDKKey.LARAVEL,\n        tags: [SDKTag.SERVER],\n        image: require('./logos/laravel.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/laravel',\n    },\n    {\n        name: 'Next.js',\n        key: SDKKey.NEXT_JS,\n        tags: [SDKTag.WEB],\n        image: require('./logos/nextjs.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/next-js',\n    },\n    {\n        name: 'Node.js',\n        key: SDKKey.NODE_JS,\n        tags: [SDKTag.SERVER, SDKTag.RECOMMENDED],\n        recommended: true,\n        image: require('./logos/nodejs.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/node',\n    },\n    {\n        name: 'Nuxt.js',\n        key: SDKKey.NUXT_JS,\n        tags: [SDKTag.WEB],\n        image: require('./logos/nuxt.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/nuxt-js',\n    },\n    {\n        name: 'PHP',\n        key: SDKKey.PHP,\n        tags: [SDKTag.SERVER],\n        image: require('./logos/php.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/php',\n    },\n    {\n        name: 'Python',\n        key: SDKKey.PYTHON,\n        tags: [SDKTag.SERVER, SDKTag.RECOMMENDED],\n        recommended: true,\n        image: require('./logos/python.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/python',\n    },\n    {\n        name: 'React',\n        key: SDKKey.REACT,\n        tags: [SDKTag.WEB, SDKTag.RECOMMENDED],\n        recommended: true,\n        image: require('./logos/react.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/react',\n    },\n    {\n        name: 'React Native',\n        key: SDKKey.REACT_NATIVE,\n        tags: [SDKTag.MOBILE],\n        image: require('./logos/react.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/react-native',\n    },\n    {\n        name: 'Remix',\n        key: SDKKey.REMIX,\n        tags: [SDKTag.WEB],\n        image: require('./logos/remix.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/remix',\n    },\n    {\n        name: 'Ruby',\n        key: SDKKey.RUBY,\n        tags: [SDKTag.SERVER],\n        image: require('./logos/ruby.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/ruby',\n    },\n    {\n        name: 'Rust',\n        key: SDKKey.RUST,\n        tags: [SDKTag.SERVER],\n        image: require('./logos/rust.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/rust',\n    },\n    {\n        name: 'Svelte',\n        key: SDKKey.SVELTE,\n        tags: [SDKTag.WEB],\n        image: require('./logos/svelte.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/svelte',\n    },\n    {\n        name: 'Traceloop',\n        key: SDKKey.TRACELOOP,\n        tags: [SDKTag.LLM],\n        image: require('./logos/traceloop.svg'),\n        docsLink: 'https://posthog.com/docs/ai-engineering/traceloop-posthog',\n    },\n    {\n        name: 'Vue.js',\n        key: SDKKey.VUE_JS,\n        tags: [SDKTag.WEB],\n        image: require('./logos/vue.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/vue-js',\n    },\n    {\n        name: 'Webflow',\n        key: SDKKey.WEBFLOW,\n        tags: [SDKTag.WEB],\n        image: require('./logos/webflow.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/webflow',\n    },\n    // integrations\n    {\n        name: 'Google Tag Manager',\n        key: SDKKey.GOOGLE_TAG_MANAGER,\n        tags: [SDKTag.WEB, SDKTag.INTEGRATION],\n        image: require('./logos/gtm.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/google-tag-manager',\n    },\n    {\n        name: 'Segment',\n        key: SDKKey.SEGMENT,\n        tags: [SDKTag.INTEGRATION],\n        image: require('./logos/segment.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/segment',\n    },\n    {\n        name: 'RudderStack',\n        key: SDKKey.RUDDERSTACK,\n        tags: [SDKTag.INTEGRATION],\n        image: require('./logos/rudderstack.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/rudderstack',\n    },\n    {\n        name: 'Docusaurus',\n        key: SDKKey.DOCUSAURUS,\n        tags: [SDKTag.INTEGRATION],\n        image: require('./logos/docusaurus.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/docusaurus',\n    },\n    {\n        name: 'Shopify',\n        key: SDKKey.SHOPIFY,\n        tags: [SDKTag.INTEGRATION],\n        image: require('./logos/shopify.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/shopify',\n    },\n    {\n        name: 'Wordpress',\n        key: SDKKey.WORDPRESS,\n        tags: [SDKTag.INTEGRATION],\n        image: require('./logos/wordpress.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/wordpress',\n    },\n    {\n        name: 'Sentry',\n        key: SDKKey.SENTRY,\n        tags: [SDKTag.INTEGRATION],\n        image: require('./logos/sentry.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/sentry',\n    },\n    {\n        name: 'Retool',\n        key: SDKKey.RETOOL,\n        tags: [SDKTag.INTEGRATION],\n        image: require('./logos/retool.svg'),\n        docsLink: 'https://posthog.com/docs/libraries/retool',\n    },\n]\n", "export function Logomark(): JSX.Element {\n    return (\n        <svg width=\"45\" height=\"25\" viewBox=\"0 0 45 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n                d=\"M39.879 19.8046L31.0519 10.9776C30.4611 10.3868 29.451 10.8052 29.451 11.6407V23.9879C29.451 24.5058 29.8709 24.9256 30.3888 24.9256H44.0622C44.5802 24.9256 45 24.5058 45 23.9879V22.8635C45 22.3455 44.5784 21.9319 44.0648 21.865C42.4886 21.6598 41.0143 20.94 39.879 19.8046ZM33.951 21.9257C33.123 21.9257 32.451 21.2537 32.451 20.4256C32.451 19.5976 33.123 18.9256 33.951 18.9256C34.779 18.9256 35.451 19.5976 35.451 20.4256C35.451 21.2537 34.779 21.9257 33.951 21.9257Z\"\n                fill=\"black\"\n            />\n            <path\n                d=\"M0 19.6897C0 18.8542 1.01012 18.4357 1.6009 19.0265L5.89911 23.3248C6.48988 23.9156 6.07147 24.9257 5.236 24.9257H0.937781C0.419859 24.9257 0 24.5058 0 23.9879V19.6897ZM0 15.1622C0 15.4109 0.0988018 15.6495 0.27467 15.8253L9.10034 24.651C9.2762 24.8268 9.51473 24.9257 9.76343 24.9257H14.611C15.4465 24.9257 15.8649 23.9156 15.2741 23.3248L1.6009 9.65155C1.01012 9.06075 0 9.47918 0 10.3147V15.1622V15.1622ZM0 5.78722C0 6.03593 0.0988018 6.27447 0.27467 6.45033L18.4753 24.651C18.6512 24.8268 18.8897 24.9257 19.1384 24.9257H23.986C24.8215 24.9257 25.2399 23.9156 24.6491 23.3248L1.6009 0.276556C1.01013 -0.314209 0 0.104191 0 0.939661V5.78722V5.78722ZM9.375 5.78722C9.375 6.03593 9.47384 6.27447 9.64968 6.45033L26.5241 23.3248C27.1149 23.9156 28.125 23.4971 28.125 22.6617V17.8141C28.125 17.5654 28.0262 17.3268 27.8503 17.151L10.9759 0.276546C10.3851 -0.314219 9.375 0.104191 9.375 0.939661V5.78722ZM20.3509 0.276556C19.7601 -0.314219 18.75 0.104191 18.75 0.939661V5.78722C18.75 6.03593 18.8488 6.27447 19.0247 6.45033L26.5241 13.9498C27.1149 14.5406 28.125 14.1221 28.125 13.2867V8.43909C28.125 8.19039 28.0262 7.95182 27.8503 7.77599L20.3509 0.276556V0.276556Z\"\n                fill=\"#F9BD2B\"\n            />\n            <path\n                d=\"M18.75 8.43909C18.75 8.19039 18.6513 7.95181 18.4753 7.77598L10.9759 0.276553C10.3852 -0.314222 9.37501 0.104188 9.37501 0.939658V5.78722C9.37501 6.03593 9.47384 6.27446 9.64968 6.45032L18.75 15.5507V8.43909V8.43909ZM9.37501 24.9257H14.611C15.4465 24.9257 15.8649 23.9156 15.2741 23.3248L9.37501 17.4257V24.9257ZM9.37501 8.05066V15.1622C9.37501 15.4109 9.47384 15.6495 9.64968 15.8253L18.75 24.9257V17.8141C18.75 17.5654 18.6513 17.3268 18.4753 17.151L9.37501 8.05066Z\"\n                fill=\"#F54E00\"\n            />\n            <path\n                d=\"M0 23.9879C0 24.5058 0.419859 24.9257 0.937782 24.9257H5.236C6.07147 24.9257 6.48988 23.9156 5.89912 23.3248L1.6009 19.0265C1.01012 18.4357 0 18.8542 0 19.6897V23.9879V23.9879ZM9.375 8.05066L1.6009 0.276553C1.01012 -0.314222 0 0.104188 0 0.939658V5.78722C0 6.03593 0.0988019 6.27446 0.27467 6.45032L9.375 15.5507V8.05066ZM1.6009 9.65154C1.01012 9.06074 0 9.47918 0 10.3146V15.1622C0 15.4109 0.0988019 15.6495 0.27467 15.8253L9.375 24.9257V17.4257L1.6009 9.65154V9.65154Z\"\n                fill=\"#1D4AFF\"\n            />\n        </svg>\n    )\n}\n", "import { LemonDivider, Link } from '@posthog/lemon-ui'\n\nimport { InviteMembersButton } from '~/layout/navigation/TopBar/AccountPopover'\n\nimport { OnboardingStepKey } from './onboardingLogic'\nimport { OnboardingStep } from './OnboardingStep'\n\nconst proxyDocs = [\n    {\n        title: 'AWS CloudFront',\n        link: 'https://posthog.com/docs/advanced/proxy/cloudfront',\n    },\n    {\n        title: 'Caddy',\n        link: 'https://posthog.com/docs/advanced/proxy/caddy',\n    },\n    {\n        title: 'Cloudflare',\n        link: 'https://posthog.com/docs/advanced/proxy/cloudflare',\n    },\n    {\n        title: 'Kubernetes Ingress Controller',\n        link: 'https://posthog.com/docs/advanced/proxy/kubernetes-ingress-controller',\n    },\n    {\n        title: 'Netlify',\n        link: 'https://posthog.com/docs/advanced/proxy/netlify',\n    },\n    {\n        title: 'Next.js rewrites',\n        link: 'https://posthog.com/docs/advanced/proxy/nextjs',\n    },\n    {\n        title: 'Next.js middleware',\n        link: 'https://posthog.com/docs/advanced/proxy/nextjs-middleware',\n    },\n    {\n        title: 'Vercel',\n        link: 'https://posthog.com/docs/advanced/proxy/vercel',\n    },\n    {\n        title: 'Nuxt',\n        link: 'https://posthog.com/docs/advanced/proxy/nuxt',\n    },\n]\n\nexport const OnboardingReverseProxy = ({ stepKey }: { stepKey: OnboardingStepKey }): JSX.Element => {\n    return (\n        <OnboardingStep title=\"Reverse proxy (optional)\" stepKey={stepKey} showSkip>\n            <div className=\"mb-6 mt-6\">\n                <p>A reverse proxy allows you to send events to PostHog Cloud using your own domain.</p>\n                <p>\n                    This means that events are sent from your own domain and are less likely to be intercepted by\n                    tracking blockers. You'll be able to capture more usage data without having to self-host PostHog.\n                </p>\n                <p>\n                    Setting up a reverse proxy means setting up a service to redirect requests from a subdomain you\n                    choose (like <span className=\"font-mono break-keep\">e.yourdomain.com</span>) to PostHog. It is best\n                    practice to use a subdomain that does not include posthog, analytics, tracking, or other similar\n                    words.\n                </p>\n                <h3>Documentation</h3>\n                <p>Here are some popular reverse proxy options:</p>\n                <ul className=\"list-disc list-inside ml-2\">\n                    {proxyDocs.map(({ title, link }) => (\n                        <li key={title}>\n                            <Link to={link} target=\"_blank\">\n                                {title}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n                <LemonDivider className=\"my-6\" />\n                <h3>Need help with this step?</h3>\n                <p>Invite a team member to help you get set up.</p>\n                <div className=\"mt-3 w-40\">\n                    <InviteMembersButton type=\"secondary\" />\n                </div>\n            </div>\n        </OnboardingStep>\n    )\n}\n", "import { LemonButton } from '@posthog/lemon-ui'\nimport { useActions } from 'kea'\nimport { FilmCameraHog } from 'lib/components/hedgehogs'\n\nimport { onboardingLogic, type OnboardingStepKey } from './onboardingLogic'\nimport { OnboardingStep } from './OnboardingStep'\n\nexport function OnboardingSessionReplayConfiguration({ stepKey }: { stepKey: OnboardingStepKey }): JSX.Element {\n    const { goToNextStep, updateCurrentTeam } = useActions(onboardingLogic)\n\n    const handleNext = (enabled: boolean): void => {\n        updateCurrentTeam({\n            session_recording_opt_in: enabled,\n        })\n        goToNextStep()\n    }\n\n    return (\n        <OnboardingStep title=\"Record user sessions\" stepKey={stepKey} continueOverride={<></>}>\n            <div className=\"mb-4\">\n                <p className=\"text-secondary\">\n                    Session Replay records user sessions to help you understand their actions and uncover opportunities\n                    for product improvement.\n                </p>\n            </div>\n\n            <div className=\"flex flex-col md:flex-row items-center gap-6\">\n                <div className=\"hidden md:block flex-shrink-0\">\n                    <FilmCameraHog className=\"w-36 h-auto\" />\n                </div>\n                <div className=\"flex-1 border border-gray-200 rounded-lg bg-bg-light dark:bg-bg-depth p-4\">\n                    <h4 className=\"text-lg font-semibold mb-2\">Why enable Session Replay?</h4>\n                    <ul className=\"space-y-2 text-secondary\">\n                        <li>\n                            <strong>Understand user behavior:</strong> Get a clear view of how people navigate and\n                            interact with your product.\n                        </li>\n                        <li>\n                            <strong>Identify UI/UX issues:</strong> Spot friction points and increase your product's\n                            usability.\n                        </li>\n                        <li>\n                            <strong>Improve customer support:</strong> Quickly diagnose problems for your customers.\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"mt-6 w-full flex justify-end gap-2\">\n                <LemonButton type=\"secondary\" data-attr=\"skip-session-replay\" onClick={() => handleNext(false)}>\n                    No, thanks\n                </LemonButton>\n                <LemonButton type=\"primary\" data-attr=\"enable-session-replay\" onClick={() => handleNext(true)}>\n                    Enable Session Replay\n                </LemonButton>\n            </div>\n        </OnboardingStep>\n    )\n}\n", "import { IconArrowRight, IconCheckCircle } from '@posthog/icons'\nimport {\n    LemonBanner,\n    LemonButton,\n    LemonCard,\n    LemonInput,\n    LemonInputSelect,\n    LemonSkeleton,\n    Link,\n    Spinner,\n} from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport {\n    authorizedUrlListLogic,\n    AuthorizedUrlListType,\n    defaultAuthorizedUrlProperties,\n} from 'lib/components/AuthorizedUrlList/authorizedUrlListLogic'\nimport { StarHog } from 'lib/components/hedgehogs'\nimport { IframedToolbarBrowser } from 'lib/components/IframedToolbarBrowser/IframedToolbarBrowser'\nimport { iframedToolbarBrowserLogic } from 'lib/components/IframedToolbarBrowser/iframedToolbarBrowserLogic'\nimport { useEffect, useRef, useState } from 'react'\nimport { dashboardTemplateVariablesLogic } from 'scenes/dashboard/dashboardTemplateVariablesLogic'\nimport { newDashboardLogic } from 'scenes/dashboard/newDashboardLogic'\nimport { preflightLogic } from 'scenes/PreflightCheck/preflightLogic'\n\nimport { onboardingLogic, OnboardingStepKey } from '../onboardingLogic'\nimport { OnboardingStep } from '../OnboardingStep'\nimport { sdksLogic } from '../sdks/sdksLogic'\nimport { DashboardTemplateVariables } from './DashboardTemplateVariables'\nimport { onboardingTemplateConfigLogic } from './onboardingTemplateConfigLogic'\n\nconst UrlInput = ({ iframeRef }: { iframeRef: React.RefObject<HTMLIFrameElement> }): JSX.Element => {\n    const { setBrowserUrl, setInitialPath } = useActions(\n        iframedToolbarBrowserLogic({ iframeRef, clearBrowserUrlOnUnmount: true })\n    )\n    const { browserUrl, currentPath } = useValues(\n        iframedToolbarBrowserLogic({ iframeRef, clearBrowserUrlOnUnmount: true })\n    )\n    const { combinedSnippetAndLiveEventsHosts } = useValues(sdksLogic)\n    const { addUrl } = useActions(\n        authorizedUrlListLogic({\n            ...defaultAuthorizedUrlProperties,\n            type: AuthorizedUrlListType.TOOLBAR_URLS,\n        })\n    )\n    const [inputValue, setInputValue] = useState(currentPath)\n\n    useEffect(() => {\n        setInputValue(currentPath)\n    }, [currentPath])\n\n    return (\n        <div className=\"w-full flex gap-x-2 border-b border-1 border-border-bold p-2\">\n            <LemonInput\n                size=\"medium\"\n                className=\"grow font-mono text-sm pl-0.5\"\n                defaultValue={currentPath}\n                value={inputValue}\n                onChange={(v) => setInputValue(v)}\n                onPressEnter={() => {\n                    setInitialPath(inputValue || '')\n                }}\n                prefix={\n                    <span className=\"-mr-2 flex items-center\">\n                        <div className=\"bg-primary rounded\">\n                            <LemonInputSelect\n                                mode=\"single\"\n                                value={[browserUrl || 'my-website.com']}\n                                options={combinedSnippetAndLiveEventsHosts.map((host) => ({ key: host, label: host }))}\n                                allowCustomValues={false}\n                                onChange={(v) => {\n                                    addUrl(v[0])\n                                    setBrowserUrl(v[0])\n                                    setInitialPath('')\n                                }}\n                                size=\"xsmall\"\n                                transparentBackground\n                                className=\"border-none\"\n                            />\n                        </div>\n                        /\n                    </span>\n                }\n            />\n            <LemonButton\n                size=\"small\"\n                type=\"primary\"\n                icon={<IconArrowRight />}\n                onClick={() => {\n                    setInitialPath(inputValue || '')\n                }}\n            />\n        </div>\n    )\n}\n\nexport const SiteChooser = (): JSX.Element => {\n    const iframeRef = useRef<HTMLIFrameElement>(null)\n    const { combinedSnippetAndLiveEventsHosts, hasSnippetEventsLoading } = useValues(sdksLogic)\n    const { setStepKey } = useActions(onboardingLogic)\n    const { isCloud } = useValues(preflightLogic)\n    const { setProposedBrowserUrl } = useActions(\n        iframedToolbarBrowserLogic({\n            iframeRef,\n            clearBrowserUrlOnUnmount: true,\n            automaticallyAuthorizeBrowserUrl: true,\n        })\n    )\n    const { iframeBanner, proposedBrowserUrl } = useValues(\n        iframedToolbarBrowserLogic({\n            iframeRef,\n            clearBrowserUrlOnUnmount: true,\n            automaticallyAuthorizeBrowserUrl: true,\n        })\n    )\n\n    return (\n        <>\n            <div className=\"absolute inset-0 bg-primary-alt-highlight z-10 rounded opacity-80 backdrop-filter backdrop-blur-md flex items-center justify-center\" />\n            <div className=\"absolute inset-0 z-20 rounded flex items-center justify-center\">\n                <LemonCard className=\"max-w-lg\" hoverEffect={false}>\n                    {iframeBanner?.level == 'error' && (\n                        <LemonBanner type=\"error\" className=\"mb-4\">\n                            <p className=\"font-bold\">\n                                Your site failed to load in the iFrame. It's possible your site doesn't allow iFrames.\n                            </p>\n                            <p>\n                                We're working on a way to do this without iFrames. Until then, you can use another site,\n                                or set custom event names for your dashboard.\n                            </p>\n                        </LemonBanner>\n                    )}\n                    <h2>Select where you want to track events from.</h2>\n                    {hasSnippetEventsLoading ? (\n                        <Spinner />\n                    ) : combinedSnippetAndLiveEventsHosts.length > 0 ? (\n                        <>\n                            <p>\n                                Not seeing the site you want? Try clicking around on your site to trigger a few events.\n                                If you haven't yet,{' '}\n                                <Link onClick={() => setStepKey(OnboardingStepKey.INSTALL)}>install posthog-js</Link> or\n                                the HTML snippet wherever you want to track events, then come back here.\n                            </p>\n                            {isCloud && (\n                                <p className=\"text-secondary italic\">\n                                    Note: Sites must be served over HTTPS to be selected.\n                                </p>\n                            )}\n                            <div className=\"space-y-2\">\n                                {combinedSnippetAndLiveEventsHosts.map((host) => (\n                                    <LemonButton\n                                        key={`snippet-host-button-${host}`}\n                                        type=\"tertiary\"\n                                        status=\"default\"\n                                        onClick={() => {\n                                            setProposedBrowserUrl(host)\n                                        }}\n                                        sideIcon={<IconArrowRight />}\n                                        disabledReason={proposedBrowserUrl && 'Loading...'}\n                                    >\n                                        {host}\n                                    </LemonButton>\n                                ))}\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <p className=\"text-secondary\">\n                                Hm, it looks like you haven't ingested any events from a website yet. To select actions\n                                from your site, head back to the{' '}\n                                <Link onClick={() => setStepKey(OnboardingStepKey.INSTALL)}>install step</Link> to\n                                install posthog-js in your frontend.\n                            </p>\n                            <p className=\"text-secondary\">\n                                You can still create a dashboard using custom event names, though it's not quite as fun.\n                            </p>\n                            <LemonButton onClick={() => setStepKey(OnboardingStepKey.INSTALL)} type=\"primary\">\n                                Install posthog-js\n                            </LemonButton>\n                        </>\n                    )}\n                </LemonCard>\n            </div>\n            <div className=\"space-y-6 relative m-6\">\n                <LemonSkeleton className=\"h-10 rounded-lg w-1/3\" />\n                <div className=\"space-y-2\">\n                    <LemonSkeleton repeat={5} />\n                </div>\n                <div className=\"space-y-2\">\n                    <LemonSkeleton repeat={3} />\n                </div>\n                <LemonSkeleton className=\"h-6 rounded-lg w-2/3\" />\n                <div className=\"space-y-2\">\n                    <LemonSkeleton repeat={3} />\n                </div>\n                <LemonSkeleton className=\"h-10 rounded-lg w-2/3\" />\n                <div className=\"space-y-2\">\n                    <LemonSkeleton repeat={5} />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport const OnboardingDashboardTemplateConfigureStep = ({\n    stepKey = OnboardingStepKey.DASHBOARD_TEMPLATE,\n}: {\n    stepKey?: OnboardingStepKey\n}): JSX.Element => {\n    const iframeRef = useRef<HTMLIFrameElement>(null)\n    const { activeDashboardTemplate } = useValues(onboardingTemplateConfigLogic)\n    const { createDashboardFromTemplate } = useActions(newDashboardLogic)\n    const { isLoading } = useValues(newDashboardLogic)\n    const { browserUrl, iframeBanner } = useValues(\n        iframedToolbarBrowserLogic({ iframeRef, clearBrowserUrlOnUnmount: true })\n    )\n    const theDashboardTemplateVariablesLogic = dashboardTemplateVariablesLogic({\n        variables: activeDashboardTemplate?.variables || [],\n    })\n    const { variables, allVariablesAreTouched, hasTouchedAnyVariable } = useValues(theDashboardTemplateVariablesLogic)\n    const { goToNextStep } = useActions(onboardingLogic)\n\n    const { dashboardCreatedDuringOnboarding } = useValues(onboardingTemplateConfigLogic)\n\n    return (\n        <OnboardingStep\n            title={activeDashboardTemplate?.template_name || 'Configure dashboard'}\n            stepKey={stepKey}\n            breadcrumbHighlightName={OnboardingStepKey.DASHBOARD_TEMPLATE}\n            fullWidth\n            continueOverride={<></>}\n        >\n            <>\n                {dashboardCreatedDuringOnboarding ? (\n                    <div className=\"mb-8 max-w-screen-md mx-auto\">\n                        <div className=\"bg-success-highlight rounded p-6 flex justify-between items-center\">\n                            <div className=\"flex gap-x-4\">\n                                <IconCheckCircle className=\"text-success text-3xl mb-6\" />\n                                <div>\n                                    <h3 className=\"text-lg font-bold mb-1 text-left\">Dashboard created!</h3>\n                                    <p className=\"mx-0 mb-0\">We'll take you there when you're done onboarding.</p>\n                                </div>\n                            </div>\n                            <div className=\"h-20\">\n                                <StarHog className=\"h-full w-full\" />\n                            </div>\n                        </div>\n                        <div className=\"w-full flex justify-end\">\n                            <LemonButton\n                                type=\"primary\"\n                                status=\"alt\"\n                                data-attr=\"show-plans\"\n                                className=\"mt-4\"\n                                onClick={() => goToNextStep()}\n                                icon={<IconArrowRight />}\n                            >\n                                Continue\n                            </LemonButton>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"grid grid-cols-6 space-x-6 min-h-[80vh]\">\n                        <div className=\"col-span-4 relative max-h-[100vh] overflow-y-hidden\">\n                            {browserUrl && iframeBanner?.level != 'error' ? (\n                                <div className=\"border border-1 border-border-bold rounded h-full w-full flex flex-col\">\n                                    <UrlInput iframeRef={iframeRef} />\n                                    <div className=\"m-2 grow rounded\">\n                                        <IframedToolbarBrowser iframeRef={iframeRef} userIntent=\"add-action\" />\n                                    </div>\n                                </div>\n                            ) : (\n                                <SiteChooser />\n                            )}\n                        </div>\n                        <div className=\"col-span-2\">\n                            <p>\n                                For each action below, select an element on your site that indicates when that action is\n                                taken, or enter a custom event name that you'll send using{' '}\n                                <Link to=\"https://posthog.com/docs/product-analytics/capture-events\">\n                                    <code>posthog.capture()</code>\n                                </Link>{' '}\n                                (no need to send it now) .\n                            </p>\n                            <p className=\"italic\">PS! These don't have to be perfect, you can fine-tune them later.</p>\n                            <DashboardTemplateVariables hasSelectedSite={!!browserUrl} iframeRef={iframeRef} />\n                            <div className=\"flex flex-wrap mt-6 w-full gap-x-2 gap-y-2 justify-center\">\n                                <div className=\"grow min-w-64\">\n                                    <LemonButton\n                                        type=\"primary\"\n                                        status=\"alt\"\n                                        onClick={() => {\n                                            if (activeDashboardTemplate) {\n                                                createDashboardFromTemplate(activeDashboardTemplate, variables, false)\n                                            }\n                                        }}\n                                        loading={isLoading}\n                                        fullWidth\n                                        center\n                                        className=\"grow\"\n                                        disabledReason={\n                                            !allVariablesAreTouched && 'Please select an event for each variable'\n                                        }\n                                    >\n                                        Create dashboard\n                                    </LemonButton>\n                                    {/* )} */}\n                                </div>\n                                <div className=\"max-w-56\">\n                                    <LemonButton\n                                        type=\"tertiary\"\n                                        onClick={() => goToNextStep()}\n                                        fullWidth\n                                        center\n                                        disabledReason={\n                                            isLoading\n                                                ? 'Dashboard creating...'\n                                                : dashboardCreatedDuringOnboarding\n                                                ? 'Dashboard already created'\n                                                : undefined\n                                        }\n                                    >\n                                        {hasTouchedAnyVariable ? 'Discard dashboard & skip' : 'Skip for now'}\n                                    </LemonButton>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        </OnboardingStep>\n    )\n}\n", "import { LemonBanner, Spinner } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { useEffect } from 'react'\nimport useResizeObserver from 'use-resize-observer'\n\nimport { ToolbarUserIntent } from '~/types'\n\nimport { appEditorUrl } from '../AuthorizedUrlList/authorizedUrlListLogic'\nimport { iframedToolbarBrowserLogic, UserIntentVerb } from './iframedToolbarBrowserLogic'\n\nfunction IframeErrorOverlay({ userIntent }: { userIntent?: string }): JSX.Element | null {\n    const logic = iframedToolbarBrowserLogic()\n    const { iframeBanner } = useValues(logic)\n    return iframeBanner ? (\n        <div className=\"absolute flex flex-col w-full h-full bg-blend-overlay items-start py-4 px-8 pointer-events-none\">\n            <LemonBanner className=\"w-full\" type={iframeBanner.level}>\n                {iframeBanner.message}. Your site might not allow being embedded in an iframe. You can click \"Open in\n                toolbar\" above to visit your site and {UserIntentVerb[userIntent as ToolbarUserIntent]} there.\n            </LemonBanner>\n        </div>\n    ) : null\n}\n\nfunction LoadingOverlay(): JSX.Element | null {\n    const logic = iframedToolbarBrowserLogic()\n    const { loading } = useValues(logic)\n    return loading ? (\n        <div className=\"absolute flex flex-col w-full h-full items-center justify-center pointer-events-none\">\n            <Spinner className=\"text-5xl\" textColored={true} />\n        </div>\n    ) : null\n}\n\nexport function IframedToolbarBrowser({\n    iframeRef,\n    userIntent,\n}: {\n    iframeRef: React.MutableRefObject<HTMLIFrameElement | null>\n    userIntent: ToolbarUserIntent\n}): JSX.Element | null {\n    const logic = iframedToolbarBrowserLogic({ iframeRef, userIntent: userIntent })\n\n    const { browserUrl, initialPath } = useValues(logic)\n    const { onIframeLoad, setIframeWidth } = useActions(logic)\n\n    const { width: iframeWidth } = useResizeObserver<HTMLIFrameElement>({ ref: iframeRef })\n    useEffect(() => {\n        setIframeWidth(iframeWidth ?? null)\n    }, [iframeWidth])\n\n    return browserUrl ? (\n        <div className=\"relative flex-1 w-full h-full\">\n            <IframeErrorOverlay userIntent={userIntent} />\n            <LoadingOverlay />\n            <iframe\n                ref={iframeRef}\n                className=\"w-full h-full bg-white\"\n                src={appEditorUrl(browserUrl + '/' + initialPath, {\n                    userIntent: userIntent,\n                })}\n                onLoad={onIframeLoad}\n                // these two sandbox values are necessary so that the site and toolbar can run\n                // this is a very loose sandbox,\n                // but we specify it so that at least other capabilities are denied\n                sandbox=\"allow-scripts allow-same-origin\"\n                // we don't allow things such as camera access though\n                allow=\"\"\n            />\n        </div>\n    ) : null\n}\n", "import { IconCheckCircle, IconInfo, IconTarget, IconTrash } from '@posthog/icons'\nimport { LemonBanner, LemonButton, LemonCollapse, LemonInput, LemonLabel, LemonMenu, Spinner } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { iframedToolbarBrowserLogic } from 'lib/components/IframedToolbarBrowser/iframedToolbarBrowserLogic'\nimport { useEffect } from 'react'\nimport { dashboardTemplateVariablesLogic } from 'scenes/dashboard/dashboardTemplateVariablesLogic'\nimport { newDashboardLogic } from 'scenes/dashboard/newDashboardLogic'\n\nimport { DashboardTemplateVariableType, EntityTypes } from '~/types'\n\nimport { onboardingTemplateConfigLogic } from './onboardingTemplateConfigLogic'\n\nfunction VariableSelector({\n    variableName,\n    hasSelectedSite,\n    iframeRef,\n}: {\n    variableName: string\n    hasSelectedSite: boolean\n    iframeRef: React.RefObject<HTMLIFrameElement>\n}): JSX.Element {\n    const { activeDashboardTemplate } = useValues(newDashboardLogic)\n    const theDashboardTemplateVariablesLogic = dashboardTemplateVariablesLogic({\n        variables: activeDashboardTemplate?.variables || [],\n    })\n    const {\n        setVariable,\n        setVariableForPageview,\n        setVariableForScreenview,\n        resetVariable,\n        goToNextUntouchedActiveVariableIndex,\n        incrementActiveVariableIndex,\n        setIsCurrentlySelectingElement,\n        setActiveVariableCustomEventName,\n    } = useActions(theDashboardTemplateVariablesLogic)\n    const {\n        allVariablesAreTouched,\n        variables,\n        activeVariableIndex,\n        isCurrentlySelectingElement,\n        activeVariableCustomEventName,\n    } = useValues(theDashboardTemplateVariablesLogic)\n    const { customEventFieldShown } = useValues(onboardingTemplateConfigLogic)\n    const { showCustomEventField, hideCustomEventField } = useActions(onboardingTemplateConfigLogic)\n    const { enableElementSelector, disableElementSelector, setNewActionName } = useActions(\n        iframedToolbarBrowserLogic({ iframeRef, clearBrowserUrlOnUnmount: true })\n    )\n    const { currentFullUrl, browserUrl, currentPath } = useValues(\n        iframedToolbarBrowserLogic({ iframeRef, clearBrowserUrlOnUnmount: true })\n    )\n\n    const variable: DashboardTemplateVariableType | undefined = variables.find((v) => v.name === variableName)\n    if (!variable) {\n        return <></>\n    }\n\n    return (\n        <div className=\"pl-7\">\n            <div className=\"mb-2\">\n                <p>\n                    <IconInfo /> {variable.description}\n                </p>\n            </div>\n            {!customEventFieldShown && activeVariableIndex == 0 && hasSelectedSite && !variable.touched && (\n                <LemonBanner type=\"info\" className=\"mb-4\">\n                    <p>\n                        <strong>Tip:</strong> Navigate to the page you want before you start selecting.\n                    </p>\n                </LemonBanner>\n            )}\n            {variable.touched && !activeVariableCustomEventName && (\n                <div className=\"flex justify-between items-center bg-primary-light p-2 pl-3 rounded mb-4\">\n                    <div>\n                        <p className=\"mb-2\">\n                            <IconCheckCircle className=\"text-success font-bold\" />{' '}\n                            <span className=\"text-success font-bold\">Selected</span>\n                        </p>\n                        <div className=\"ml-4\">\n                            {variable.default.type === EntityTypes.ACTIONS ? (\n                                <>\n                                    <p className=\"text-secondary mb-0 text-xs\">\n                                        <span className=\"font-bold\">CSS selector:</span>{' '}\n                                        {variable.default.selector || 'not set'}\n                                    </p>\n                                    <p className=\"text-secondary mb-0 text-xs\">\n                                        <span className=\"font-bold\">Element href:</span>{' '}\n                                        {variable.default.href || 'not set'}\n                                    </p>\n                                    <p className=\"text-secondary mb-1 text-xs\">\n                                        <span className=\"font-bold\">Page URL:</span> {variable.default.url || 'any url'}\n                                    </p>\n                                </>\n                            ) : variable.default.type === EntityTypes.EVENTS &&\n                              variable.default.name == '$screenview' ? (\n                                <p className=\"text-secondary mb-1 text-xs\">\n                                    <span className=\"font-bold\">Screenview:</span>{' '}\n                                    {variable.default.properties?.[0].value || 'any screenview'}\n                                </p>\n                            ) : variable.default.type === EntityTypes.EVENTS ? (\n                                <p className=\"text-secondary mb-1 text-xs\">\n                                    <span className=\"font-bold\">Pageview URL contains:</span>{' '}\n                                    {variable.default.properties?.[0].value || 'any url'}\n                                </p>\n                            ) : null}\n                        </div>\n                    </div>\n                    <div>\n                        <LemonButton\n                            icon={<IconTrash />}\n                            type=\"tertiary\"\n                            size=\"small\"\n                            onClick={() => resetVariable(variable.id)}\n                        />\n                    </div>\n                </div>\n            )}\n            {customEventFieldShown && (\n                <div className=\"mb-4\">\n                    <LemonLabel>Custom event name</LemonLabel>\n                    <p>\n                        Set the name that you'll use for a custom event (eg. a backend event) instead of selecting an\n                        event from your site. You can change this later if needed.\n                    </p>\n                    <div className=\"flex gap-x-2 w-full\">\n                        <LemonInput\n                            className=\"grow\"\n                            value={activeVariableCustomEventName || ''}\n                            onChange={(v) => {\n                                if (v) {\n                                    setActiveVariableCustomEventName(v)\n                                    setVariable(variable.name, {\n                                        events: [{ id: v, math: 'dau', type: 'events', custom_event: true }],\n                                    })\n                                } else {\n                                    setActiveVariableCustomEventName(null)\n                                    resetVariable(variable.id)\n                                }\n                            }}\n                            onBlur={() => {\n                                if (activeVariableCustomEventName) {\n                                    setVariable(variable.name, {\n                                        events: [\n                                            {\n                                                id: activeVariableCustomEventName,\n                                                math: 'dau',\n                                                type: 'events',\n                                                custom_event: true,\n                                            },\n                                        ],\n                                    })\n                                } else {\n                                    resetVariable(variable.id)\n                                    hideCustomEventField()\n                                }\n                            }}\n                        />\n                        <div>\n                            <LemonButton\n                                icon={<IconTrash />}\n                                type=\"tertiary\"\n                                size=\"small\"\n                                onClick={() => {\n                                    disableElementSelector()\n                                    setNewActionName(null)\n                                    resetVariable(variable.id)\n                                    setActiveVariableCustomEventName(null)\n                                    hideCustomEventField()\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"flex\">\n                {variable.touched ? (\n                    <>\n                        {!allVariablesAreTouched ||\n                        (allVariablesAreTouched && variables.length !== activeVariableIndex + 1) ? (\n                            <LemonButton\n                                type=\"primary\"\n                                status=\"alt\"\n                                onClick={() => {\n                                    customEventFieldShown && hideCustomEventField()\n                                    allVariablesAreTouched\n                                        ? goToNextUntouchedActiveVariableIndex()\n                                        : variables.length !== activeVariableIndex + 1\n                                        ? incrementActiveVariableIndex()\n                                        : null\n                                }}\n                            >\n                                Continue\n                            </LemonButton>\n                        ) : null}\n                    </>\n                ) : (\n                    <div className=\"w-full flex flex-wrap gap-x-2 gap-y-2\">\n                        {isCurrentlySelectingElement ? (\n                            <LemonButton\n                                type=\"secondary\"\n                                onClick={() => {\n                                    disableElementSelector()\n                                    setNewActionName(null)\n                                    setIsCurrentlySelectingElement(false)\n                                }}\n                                icon={<Spinner textColored className=\"text-secondary\" />}\n                                center\n                                className=\"min-w-44\"\n                            >\n                                Cancel selection\n                            </LemonButton>\n                        ) : (\n                            <LemonButton\n                                type=\"primary\"\n                                status=\"alt\"\n                                onClick={() => {\n                                    hideCustomEventField()\n                                    enableElementSelector()\n                                    setNewActionName(variable.name)\n                                    setIsCurrentlySelectingElement(true)\n                                }}\n                                icon={<IconTarget />}\n                                center\n                                className=\"min-w-44\"\n                                disabledReason={!hasSelectedSite && 'Please select a site to continue'}\n                            >\n                                Select from site\n                            </LemonButton>\n                        )}\n                        <LemonMenu\n                            items={[\n                                {\n                                    title: 'Use pageview',\n                                    items: [\n                                        {\n                                            label: (\n                                                <div className=\"flex\">\n                                                    This pageview{' '}\n                                                    {currentFullUrl ? (\n                                                        <div className=\"text-secondary max-w-44 overflow-clip overflow-ellipsis text-nowrap ml-2\">\n                                                            {!currentPath ? browserUrl : '/' + currentPath}\n                                                        </div>\n                                                    ) : null}\n                                                </div>\n                                            ),\n                                            onClick: () => setVariableForPageview(variable.name, currentFullUrl || ''),\n                                            disabledReason: !currentFullUrl\n                                                ? 'Please select a site to use a specific pageview'\n                                                : undefined,\n                                        },\n                                        {\n                                            label: 'Any pageview',\n                                            onClick: () => setVariableForPageview(variable.name, browserUrl || ''),\n                                        },\n                                        {\n                                            label: 'Any screenview (mobile apps)',\n                                            onClick: () => setVariableForScreenview(variable.name),\n                                        },\n                                    ],\n                                },\n                            ]}\n                        >\n                            <LemonButton type=\"secondary\">Use pageview</LemonButton>\n                        </LemonMenu>\n                        <LemonButton\n                            type=\"secondary\"\n                            onClick={() => {\n                                disableElementSelector()\n                                setNewActionName(null)\n                                showCustomEventField()\n                                setIsCurrentlySelectingElement(false)\n                            }}\n                            fullWidth\n                            center\n                            className=\"grow max-w-44\"\n                        >\n                            Use custom event\n                        </LemonButton>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport function DashboardTemplateVariables({\n    hasSelectedSite,\n    iframeRef,\n}: {\n    hasSelectedSite: boolean\n    iframeRef: React.RefObject<HTMLIFrameElement>\n}): JSX.Element {\n    const { activeDashboardTemplate } = useValues(newDashboardLogic)\n    const theDashboardTemplateVariablesLogic = dashboardTemplateVariablesLogic({\n        variables: activeDashboardTemplate?.variables || [],\n    })\n    const { variables, activeVariableIndex } = useValues(theDashboardTemplateVariablesLogic)\n    const { setVariables, setActiveVariableIndex, setIsCurrentlySelectingElement } = useActions(\n        theDashboardTemplateVariablesLogic\n    )\n    const { setNewActionName, disableElementSelector } = useActions(\n        iframedToolbarBrowserLogic({ iframeRef, clearBrowserUrlOnUnmount: true })\n    )\n\n    // TODO: onboarding-dashboard-templates: this is a hack, I'm not sure why it's not set properly initially.\n    useEffect(() => {\n        setVariables(activeDashboardTemplate?.variables || [])\n    }, [activeDashboardTemplate])\n\n    return (\n        <div className=\"mb-4 DashboardTemplateVariables max-w-192\">\n            <LemonCollapse\n                activeKey={variables[activeVariableIndex]?.id}\n                panels={variables.map((v, i) => ({\n                    key: v.id,\n                    header: (\n                        <div>\n                            {v.name}\n                            {v.touched && <IconCheckCircle className=\"text-success ml-2 text-base\" />}\n                        </div>\n                    ),\n                    content: (\n                        <VariableSelector\n                            variableName={v.name}\n                            {...v}\n                            hasSelectedSite={hasSelectedSite}\n                            iframeRef={iframeRef}\n                        />\n                    ),\n                    className: 'p-4 bg-white',\n                    onHeaderClick: () => {\n                        setActiveVariableIndex(i)\n                        disableElementSelector()\n                        setNewActionName(null)\n                        setIsCurrentlySelectingElement(false)\n                    },\n                }))}\n                embedded\n                size=\"small\"\n            />\n        </div>\n    )\n}\n", "import { LemonButton, LemonInput, LemonModal } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { Form } from 'kea-forms'\nimport { LemonField } from 'lib/lemon-ui/LemonField'\nimport { useEffect } from 'react'\nimport { DashboardTemplateChooser } from 'scenes/dashboard/DashboardTemplateChooser'\nimport { newDashboardLogic } from 'scenes/dashboard/newDashboardLogic'\n\nimport { TemplateAvailabilityContext } from '~/types'\n\nimport { onboardingLogic, OnboardingStepKey } from '../onboardingLogic'\nimport { OnboardingStep } from '../OnboardingStep'\nimport { onboardingTemplateConfigLogic } from './onboardingTemplateConfigLogic'\n\nexport const OnboardingDashboardTemplateSelectStep = ({\n    stepKey = OnboardingStepKey.DASHBOARD_TEMPLATE,\n}: {\n    stepKey?: OnboardingStepKey\n}): JSX.Element => {\n    const { goToNextStep } = useActions(onboardingLogic)\n    const { clearActiveDashboardTemplate } = useActions(newDashboardLogic)\n    const {\n        setDashboardCreatedDuringOnboarding,\n        reportTemplateSelected,\n        showTemplateRequestModal,\n        hideTemplateRequestModal,\n    } = useActions(onboardingTemplateConfigLogic)\n    const { isTemplateRequestModalOpen, isTemplateRequestFormSubmitting } = useValues(onboardingTemplateConfigLogic)\n\n    // TODO: this is hacky, find a better way to clear the active template when coming back to this screen\n    useEffect(() => {\n        clearActiveDashboardTemplate()\n    }, [])\n\n    return (\n        <OnboardingStep\n            title=\"Start with a dashboard template\"\n            stepKey={stepKey}\n            continueOverride={\n                <div className=\"flex justify-end gap-x-2\">\n                    <LemonButton\n                        type=\"secondary\"\n                        status=\"alt\"\n                        onClick={() => {\n                            showTemplateRequestModal()\n                        }}\n                        data-attr=\"onboarding-skip-button\"\n                    >\n                        I need a different template\n                    </LemonButton>\n                    <LemonButton\n                        type=\"secondary\"\n                        onClick={() => {\n                            goToNextStep(2)\n                        }}\n                        data-attr=\"onboarding-skip-button\"\n                    >\n                        Skip for now\n                    </LemonButton>\n                </div>\n            }\n        >\n            <p>\n                Get useful insights from your events super fast with our dashboard templates. Select one to get started\n                with based on your market and industry.\n            </p>\n            <DashboardTemplateChooser\n                onItemClick={(template) => {\n                    // clear the saved dashboard so we don't skip the next step\n                    setDashboardCreatedDuringOnboarding(null)\n                    reportTemplateSelected(template)\n                    if (template.variables?.length && template.variables.length > 0) {\n                        goToNextStep()\n                    }\n                }}\n                redirectAfterCreation={false}\n                availabilityContexts={[TemplateAvailabilityContext.ONBOARDING]}\n            />\n            <LemonModal\n                title=\"What kind of template do you need?\"\n                isOpen={isTemplateRequestModalOpen}\n                onClose={hideTemplateRequestModal}\n            >\n                <div className=\"max-w-md\">\n                    <p>\n                        PostHog can collect and visualize data from anywhere. We're still adding more templates to this\n                        onboarding flow for different use-cases and business types.\n                    </p>\n                    <p>Let us know what kind of template you'd like to see and we'll work on adding one.</p>\n                    <Form\n                        logic={onboardingTemplateConfigLogic}\n                        formKey=\"templateRequestForm\"\n                        className=\"my-4 gap-y-4\"\n                        enableFormOnSubmit\n                    >\n                        <LemonField name=\"templateRequest\" className=\"mb-4\">\n                            <LemonInput\n                                className=\"ph-ignore-input\"\n                                autoFocus\n                                data-attr=\"templateRequestForm\"\n                                type=\"text\"\n                                disabled={isTemplateRequestFormSubmitting}\n                            />\n                        </LemonField>\n                        <LemonButton\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            disabledReason={isTemplateRequestFormSubmitting ? 'Submitting...' : undefined}\n                        >\n                            Continue\n                        </LemonButton>\n                    </Form>\n                </div>\n            </LemonModal>\n        </OnboardingStep>\n    )\n}\n", "import { SDKInstructionsMap, SDKKey } from '~/types'\n\nimport { ExperimentsAndroidInstructions } from './android'\nimport { ExperimentsAngularInstructions } from './angular'\nimport { ExperimentsAstroInstructions } from './astro'\nimport { ExperimentsBubbleInstructions } from './bubble'\nimport { ExperimentsDjangoInstructions } from './django'\nimport { ExperimentsFlutterInstructions } from './flutter'\nimport { ExperimentsFramerInstructions } from './framer'\nimport { ExperimentsGoInstructions } from './go'\nimport { ExperimentsIOSInstructions } from './ios'\nimport { ExperimentsJSWebInstructions } from './js-web'\nimport { ExperimentsLaravelInstructions } from './laravel'\nimport { ExperimentsNextJSInstructions } from './next-js'\nimport { ExperimentsNodeJSInstructions } from './nodejs'\nimport { ExperimentsNuxtInstructions } from './nuxt'\nimport { ExperimentsPHPInstructions } from './php'\nimport { ExperimentsPythonInstructions } from './python'\nimport { ExperimentsReactInstructions } from './react'\nimport { ExperimentsReactNativeInstructions } from './react-native'\nimport { ExperimentsRemixInstructions } from './remix'\nimport { ExperimentsRubyInstructions } from './ruby'\nimport { ExperimentsSvelteInstructions } from './svelte'\nimport { ExperimentsVueInstructions } from './vue'\nimport { ExperimentsWebflowInstructions } from './webflow'\n\nexport const ExperimentsSDKInstructions: SDKInstructionsMap = {\n    [SDKKey.JS_WEB]: ExperimentsJSWebInstructions,\n    [SDKKey.ANDROID]: ExperimentsAndroidInstructions,\n    [SDKKey.ANGULAR]: ExperimentsAngularInstructions,\n    [SDKKey.ASTRO]: ExperimentsAstroInstructions,\n    [SDKKey.BUBBLE]: ExperimentsBubbleInstructions,\n    [SDKKey.DJANGO]: ExperimentsDjangoInstructions,\n    [SDKKey.FLUTTER]: ExperimentsFlutterInstructions,\n    [SDKKey.FRAMER]: ExperimentsFramerInstructions,\n    [SDKKey.GO]: ExperimentsGoInstructions,\n    [SDKKey.IOS]: ExperimentsIOSInstructions,\n    [SDKKey.LARAVEL]: ExperimentsLaravelInstructions,\n    [SDKKey.NEXT_JS]: ExperimentsNextJSInstructions,\n    [SDKKey.NODE_JS]: ExperimentsNodeJSInstructions,\n    [SDKKey.NUXT_JS]: ExperimentsNuxtInstructions,\n    [SDKKey.PHP]: ExperimentsPHPInstructions,\n    [SDKKey.PYTHON]: ExperimentsPythonInstructions,\n    [SDKKey.REACT]: ExperimentsReactInstructions,\n    [SDKKey.REACT_NATIVE]: ExperimentsReactNativeInstructions,\n    [SDKKey.REMIX]: ExperimentsRemixInstructions,\n    [SDKKey.RUBY]: ExperimentsRubyInstructions,\n    [SDKKey.SVELTE]: ExperimentsSvelteInstructions,\n    [SDKKey.WEBFLOW]: ExperimentsWebflowInstructions,\n    [SDKKey.VUE_JS]: ExperimentsVueInstructions,\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallAndroidInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsAndroidInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAndroidInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.ANDROID} />\n        </>\n    )\n}\n", "import { OPTIONS } from 'scenes/experiments/ExperimentImplementationDetails'\n\nimport { SDKKey } from '~/types'\n\nexport const ExperimentsImplementationSnippet = ({ sdkKey }: { sdkKey: SDKKey }): JSX.Element => {\n    const option = OPTIONS.find((option) => option.key === sdkKey)\n    const Snippet = option?.Snippet || (() => null)\n    return (\n        <>\n            <h3>Basic implementation</h3>\n            <p>\n                Experiments run on top of our feature flags. You can define which version of your code runs based on the\n                return value of the feature flag.\n            </p>\n            <Snippet flagKey=\"your-experiment-feature-flag\" variant=\"test\" />\n            <h3>Running experiments</h3>\n            <p>\n                Once you've implemented the feature flag in your code, you'll enable it for a target audience by\n                creating a new experiment in the PostHog dashboard.\n            </p>\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallAngularInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsAngularInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAngularInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallAstroInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsAstroInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAstroInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallBubbleInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsBubbleInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallBubbleInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallDjangoInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsDjangoInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallDjangoInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.PYTHON} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallFlutterInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsFlutterInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFlutterInstructions />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.FLUTTER} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallFramerInstructions } from '../sdk-install-instructions/framer'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsFramerInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFramerInstructions />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallGoInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsGoInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallGoInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.GO} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallIOSInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsIOSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallIOSInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.IOS} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallJSWebInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsJSWebInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallJSWebInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallLaravelInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsLaravelInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallLaravelInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.PHP} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { NodeInstallSnippet, NodeSetupSnippet } from '../sdk-install-instructions'\nimport { SDKInstallNextJSInstructions } from '../sdk-install-instructions/next-js'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsNextJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNextJSInstructions />\n            <h3>Client-side rendering</h3>\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.REACT} />\n            <h3>Server-side rendering</h3>\n            <h4>Install</h4>\n            <NodeInstallSnippet />\n            <h4>Configure</h4>\n            <NodeSetupSnippet />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.NODE_JS} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallNodeInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsNodeJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNodeInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.NODE_JS} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { NodeInstallSnippet, NodeSetupSnippet } from '../sdk-install-instructions'\nimport { SDKInstallNuxtJSInstructions } from '../sdk-install-instructions/nuxt'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsNuxtInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNuxtJSInstructions />\n            <h3>Client-side rendering</h3>\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.REACT} />\n            <h3>Server-side rendering</h3>\n            <h4>Install</h4>\n            <NodeInstallSnippet />\n            <h4>Configure</h4>\n            <NodeSetupSnippet />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.REACT} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallPHPInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsPHPInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallPHPInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.PHP} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallPythonInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsPythonInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallPythonInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.PYTHON} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallReactInstructions } from '../sdk-install-instructions/react'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsReactInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallReactInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.REACT} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallRNInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsReactNativeInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRNInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.REACT_NATIVE} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { NodeInstallSnippet, NodeSetupSnippet } from '../sdk-install-instructions'\nimport { SDKInstallRemixJSInstructions } from '../sdk-install-instructions/remix'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsRemixInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRemixJSInstructions />\n            <h3>Client-side rendering</h3>\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n            <h3>Server-side rendering</h3>\n            <h4>Install</h4>\n            <NodeInstallSnippet />\n            <h4>Configure</h4>\n            <NodeSetupSnippet />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.NODE_JS} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallRubyInstructions } from '../sdk-install-instructions'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsRubyInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRubyInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.RUBY} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { NodeInstallSnippet, NodeSetupSnippet } from '../sdk-install-instructions'\nimport { SDKInstallSvelteJSInstructions } from '../sdk-install-instructions/svelte'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsSvelteInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallSvelteJSInstructions />\n            <h3>Client-side rendering</h3>\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n            <h3>Server-side rendering</h3>\n            <h4>Install</h4>\n            <NodeInstallSnippet />\n            <h4>Configure</h4>\n            <NodeSetupSnippet />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.NODE_JS} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallVueInstructions } from '../sdk-install-instructions/vue'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsVueInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallVueInstructions />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallWebflowInstructions } from '../sdk-install-instructions/webflow'\nimport { ExperimentsImplementationSnippet } from './ExperimentsImplementationSnippet'\n\nexport function ExperimentsWebflowInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallWebflowInstructions />\n            <ExperimentsImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { SDKInstructionsMap, SDKKey } from '~/types'\n\nimport {\n    FeatureFlagsAndroidInstructions,\n    FeatureFlagsAngularInstructions,\n    FeatureFlagsAPIInstructions,\n    FeatureFlagsAstroInstructions,\n    FeatureFlagsBubbleInstructions,\n    FeatureFlagsDjangoInstructions,\n    FeatureFlagsFlutterInstructions,\n    FeatureFlagsFramerInstructions,\n    FeatureFlagsGoInstructions,\n    FeatureFlagsIOSInstructions,\n    FeatureFlagsJSWebInstructions,\n    FeatureFlagsLaravelInstructions,\n    FeatureFlagsNextJSInstructions,\n    FeatureFlagsNodeInstructions,\n    FeatureFlagsNuxtJSInstructions,\n    FeatureFlagsPHPInstructions,\n    FeatureFlagsPythonInstructions,\n    FeatureFlagsReactInstructions,\n    FeatureFlagsRemixJSInstructions,\n    FeatureFlagsRNInstructions,\n    FeatureFlagsRubyInstructions,\n    FeatureFlagsSvelteInstructions,\n    FeatureFlagsVueInstructions,\n    FeatureFlagsWebflowInstructions,\n} from '.'\n\nexport const FeatureFlagsSDKInstructions: SDKInstructionsMap = {\n    [SDKKey.JS_WEB]: FeatureFlagsJSWebInstructions,\n    [SDKKey.ANGULAR]: FeatureFlagsAngularInstructions,\n    [SDKKey.ANDROID]: FeatureFlagsAndroidInstructions,\n    [SDKKey.API]: FeatureFlagsAPIInstructions,\n    [SDKKey.ASTRO]: FeatureFlagsAstroInstructions,\n    [SDKKey.BUBBLE]: FeatureFlagsBubbleInstructions,\n    [SDKKey.DJANGO]: FeatureFlagsDjangoInstructions,\n    [SDKKey.FLUTTER]: FeatureFlagsFlutterInstructions,\n    [SDKKey.FRAMER]: FeatureFlagsFramerInstructions,\n    [SDKKey.GO]: FeatureFlagsGoInstructions,\n    [SDKKey.IOS]: FeatureFlagsIOSInstructions,\n    [SDKKey.LARAVEL]: FeatureFlagsLaravelInstructions,\n    [SDKKey.NEXT_JS]: FeatureFlagsNextJSInstructions,\n    [SDKKey.NODE_JS]: FeatureFlagsNodeInstructions,\n    [SDKKey.NUXT_JS]: FeatureFlagsNuxtJSInstructions,\n    [SDKKey.PHP]: FeatureFlagsPHPInstructions,\n    [SDKKey.PYTHON]: FeatureFlagsPythonInstructions,\n    [SDKKey.REACT]: FeatureFlagsReactInstructions,\n    [SDKKey.REACT_NATIVE]: FeatureFlagsRNInstructions,\n    [SDKKey.REMIX]: FeatureFlagsRemixJSInstructions,\n    [SDKKey.RUBY]: FeatureFlagsRubyInstructions,\n    [SDKKey.SVELTE]: FeatureFlagsSvelteInstructions,\n    [SDKKey.VUE_JS]: FeatureFlagsVueInstructions,\n    [SDKKey.WEBFLOW]: FeatureFlagsWebflowInstructions,\n}\n", "export * from './android'\nexport * from './angular'\nexport * from './api'\nexport * from './astro'\nexport * from './bubble'\nexport * from './django'\nexport * from './flutter'\nexport * from './framer'\nexport * from './go'\nexport * from './ios'\nexport * from './js-web'\nexport * from './laravel'\nexport * from './next-js'\nexport * from './nodejs'\nexport * from './nuxt'\nexport * from './php'\nexport * from './python'\nexport * from './react'\nexport * from './react-native'\nexport * from './remix'\nexport * from './ruby'\nexport * from './svelte'\nexport * from './vue'\nexport * from './webflow'\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallAndroidInstructions } from '../sdk-install-instructions'\nimport { AdvertiseMobileReplay } from '../session-replay/SessionReplaySDKInstructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsAndroidInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAndroidInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.ANDROID} />\n            <AdvertiseMobileReplay context=\"flags-onboarding\" sdkKey={SDKKey.ANDROID} />\n        </>\n    )\n}\n", "import { LemonBanner } from 'lib/lemon-ui/LemonBanner'\nimport { LemonDivider } from 'lib/lemon-ui/LemonDivider'\nimport { LemonTag } from 'lib/lemon-ui/LemonTag'\nimport { Link } from 'lib/lemon-ui/Link'\nimport { OnboardingStepKey } from 'scenes/onboarding/onboardingLogic'\nimport { urls } from 'scenes/urls'\n\nimport { SDKInstructionsMap, SDKKey } from '~/types'\n\nimport {\n    AndroidInstructions,\n    AngularInstructions,\n    AstroInstructions,\n    BubbleInstructions,\n    FlutterInstructions,\n    FramerInstructions,\n    HTMLSnippetInstructions,\n    iOSInstructions,\n    JSWebInstructions,\n    NextJSInstructions,\n    NuxtJSInstructions,\n    ReactInstructions,\n    RemixInstructions,\n    RNInstructions,\n    SvelteInstructions,\n    VueInstructions,\n    WebflowInstructions,\n} from '.'\n\nexport const SessionReplaySDKInstructions: SDKInstructionsMap = {\n    [SDKKey.JS_WEB]: JSWebInstructions,\n    [SDKKey.HTML_SNIPPET]: HTMLSnippetInstructions,\n    [SDKKey.ANGULAR]: AngularInstructions,\n    [SDKKey.ASTRO]: AstroInstructions,\n    [SDKKey.BUBBLE]: BubbleInstructions,\n    [SDKKey.FRAMER]: FramerInstructions,\n    [SDKKey.NEXT_JS]: NextJSInstructions,\n    [SDKKey.NUXT_JS]: NuxtJSInstructions,\n    [SDKKey.REACT]: ReactInstructions,\n    [SDKKey.REMIX]: RemixInstructions,\n    [SDKKey.SVELTE]: SvelteInstructions,\n    [SDKKey.VUE_JS]: VueInstructions,\n    [SDKKey.WEBFLOW]: WebflowInstructions,\n    [SDKKey.IOS]: iOSInstructions,\n    [SDKKey.ANDROID]: AndroidInstructions,\n    [SDKKey.REACT_NATIVE]: RNInstructions,\n    [SDKKey.FLUTTER]: FlutterInstructions,\n}\n\nexport function AdvertiseMobileReplay({\n    context,\n    sdkKey,\n}: {\n    context: 'product-analytics-onboarding' | 'flags-onboarding'\n    sdkKey: SDKKey\n}): JSX.Element {\n    let platform = 'Mobile'\n    switch (sdkKey) {\n        case SDKKey.ANDROID:\n            platform = 'Android'\n            break\n        case SDKKey.IOS:\n            platform = 'iOS'\n            break\n        case SDKKey.REACT_NATIVE:\n            platform = 'React-Native'\n            break\n        case SDKKey.FLUTTER:\n            platform = 'Flutter'\n            break\n    }\n\n    return (\n        <div>\n            <LemonDivider className=\"my-8\" />\n            <LemonBanner type=\"info\">\n                <h3>\n                    Session Replay for {platform} <LemonTag type=\"highlight\">NEW</LemonTag>\n                </h3>\n                <div>\n                    Session replay is now in beta for {platform}.{' '}\n                    <Link\n                        to={urls.onboarding('session_replay', OnboardingStepKey.INSTALL, sdkKey)}\n                        data-attr={`${context}-${platform.toLowerCase()}-replay-cta`}\n                    >\n                        Learn how to set it up\n                    </Link>\n                </div>\n            </LemonBanner>\n        </div>\n    )\n}\n", "export * from './android'\nexport * from './angular'\nexport * from './astro'\nexport * from './bubble'\nexport * from './flutter'\nexport * from './framer'\nexport * from './html-snippet'\nexport * from './ios'\nexport * from './js-web'\nexport * from './next-js'\nexport * from './nuxt'\nexport * from './react'\nexport * from './react-native'\nexport * from './remix'\nexport * from './svelte'\nexport * from './vue'\nexport * from './webflow'\n", "import { SDKInstallAndroidInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function AndroidInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAndroidInstructions includeReplay={true} />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { Link } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { CodeSnippet } from 'lib/components/CodeSnippet'\nimport { FEATURE_FLAGS } from 'lib/constants'\nimport { featureFlagLogic } from 'lib/logic/featureFlagLogic'\n\nexport function SessionReplayFinalSteps(): JSX.Element {\n    return (\n        <>\n            <h3>Create a recording</h3>\n            <p>Visit your site or app and click around to generate an initial recording.</p>\n        </>\n    )\n}\n\nexport function PersonModeEventPropertyInstructions(): JSX.Element {\n    const { featureFlags } = useValues(featureFlagLogic)\n    const isPersonProfilesDisabled = featureFlags[FEATURE_FLAGS.PERSONLESS_EVENTS_NOT_SUPPORTED]\n\n    return !isPersonProfilesDisabled ? (\n        <>\n            <h4>Optional: Specify person profile processing</h4>\n            <p>\n                By default, for backwards compatibility reasons, events are sent with{' '}\n                <Link to=\"https://posthog.com/docs/data/persons\" target=\"_blank\" targetBlankIcon>\n                    person profile processing\n                </Link>{' '}\n                enabled. This means a person profile will be created for each user who triggers an event.\n            </p>\n            <p>\n                If you want to disable person profile processing for certain events, send the event with the following\n                property:\n            </p>\n            <CodeSnippet>\"$process_person_profile\": false</CodeSnippet>.\n        </>\n    ) : (\n        <></>\n    )\n}\n", "import { SDKInstallAngularInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function AngularInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAngularInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallAstroInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function AstroInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAstroInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallBubbleInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function BubbleInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallBubbleInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallFlutterInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function FlutterInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFlutterInstructions includeReplay={true} />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallFramerInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function FramerInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFramerInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKHtmlSnippetInstructions } from '../sdk-install-instructions/html-snippet'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function HTMLSnippetInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKHtmlSnippetInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallIOSInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function iOSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallIOSInstructions includeReplay={true} />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallJSWebInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function JSWebInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallJSWebInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallNextJSInstructions } from '../sdk-install-instructions/next-js'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function NextJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNextJSInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallNuxtJSInstructions } from '../sdk-install-instructions/nuxt'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function NuxtJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNuxtJSInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallReactInstructions } from '../sdk-install-instructions/react'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function ReactInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallReactInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallRNInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function RNInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRNInstructions includeReplay={true} />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallRemixJSInstructions } from '../sdk-install-instructions/remix'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function RemixInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRemixJSInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallSvelteJSInstructions } from '../sdk-install-instructions/svelte'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function SvelteInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallSvelteJSInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallVueInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function VueInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallVueInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallWebflowInstructions } from '../sdk-install-instructions'\nimport { SessionReplayFinalSteps } from '../shared-snippets'\n\nexport function WebflowInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallWebflowInstructions />\n            <SessionReplayFinalSteps />\n        </>\n    )\n}\n", "import { OPTIONS } from 'scenes/feature-flags/FeatureFlagCodeOptions'\nimport { CodeInstructions } from 'scenes/feature-flags/FeatureFlagInstructions'\n\nimport { SDKKey } from '~/types'\n\nexport const FlagImplementationSnippet = ({ sdkKey }: { sdkKey: SDKKey }): JSX.Element => {\n    return (\n        <>\n            <h3>Basic flag implementation</h3>\n            <CodeInstructions\n                options={OPTIONS}\n                selectedLanguage={sdkKey}\n                showAdvancedOptions={false}\n                showFooter={false}\n            />\n            <h3>Running experiments</h3>\n            <p>\n                Experiments run on top of our feature flags. Once you've implemented the flag in your code, you run an\n                experiment by creating a new experiment in the PostHog dashboard.\n            </p>\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallAngularInstructions } from '../sdk-install-instructions/angular'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsAngularInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAngularInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsAPIInstructions(): JSX.Element {\n    return (\n        <>\n            <FlagImplementationSnippet sdkKey={SDKKey.API} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallAstroInstructions } from '../sdk-install-instructions/astro'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsAstroInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAstroInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallBubbleInstructions } from '../sdk-install-instructions/bubble'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsBubbleInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallBubbleInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallDjangoInstructions } from '../sdk-install-instructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsDjangoInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallDjangoInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.PYTHON} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallFlutterInstructions } from '../sdk-install-instructions'\nimport { AdvertiseMobileReplay } from '../session-replay/SessionReplaySDKInstructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsFlutterInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFlutterInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.FLUTTER} />\n            <AdvertiseMobileReplay context=\"flags-onboarding\" sdkKey={SDKKey.FLUTTER} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallFramerInstructions } from '../sdk-install-instructions/framer'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsFramerInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFramerInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallGoInstructions } from '../sdk-install-instructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsGoInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallGoInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.GO} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallIOSInstructions } from '../sdk-install-instructions'\nimport { AdvertiseMobileReplay } from '../session-replay/SessionReplaySDKInstructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsIOSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallIOSInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.IOS} />\n            <AdvertiseMobileReplay context=\"flags-onboarding\" sdkKey={SDKKey.IOS} />\n        </>\n    )\n}\n", "import { LemonDivider } from 'lib/lemon-ui/LemonDivider'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallJSWebInstructions } from '../sdk-install-instructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsJSWebInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallJSWebInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <FlagImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallLaravelInstructions } from '../sdk-install-instructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsLaravelInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallLaravelInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.PHP} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { NodeInstallSnippet, NodeSetupSnippet } from '../sdk-install-instructions'\nimport { SDKInstallNextJSInstructions } from '../sdk-install-instructions/next-js'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsNextJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNextJSInstructions />\n            <h3>Client-side rendering</h3>\n            <FlagImplementationSnippet sdkKey={SDKKey.REACT} />\n            <h3>Server-side rendering</h3>\n            <h4>Install</h4>\n            <NodeInstallSnippet />\n            <h4>Configure</h4>\n            <NodeSetupSnippet />\n            <FlagImplementationSnippet sdkKey={SDKKey.NODE_JS} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallNodeInstructions } from '../sdk-install-instructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsNodeInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNodeInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.NODE_JS} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { NodeInstallSnippet, NodeSetupSnippet } from '../sdk-install-instructions'\nimport { SDKInstallNuxtJSInstructions } from '../sdk-install-instructions/nuxt'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsNuxtJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNuxtJSInstructions />\n            <h3>Client-side rendering</h3>\n            <FlagImplementationSnippet sdkKey={SDKKey.REACT} />\n            <h3>Server-side rendering</h3>\n            <h4>Install</h4>\n            <NodeInstallSnippet />\n            <h4>Configure</h4>\n            <NodeSetupSnippet />\n            <FlagImplementationSnippet sdkKey={SDKKey.NODE_JS} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallPHPInstructions } from '../sdk-install-instructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsPHPInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallPHPInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.PHP} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallPythonInstructions } from '../sdk-install-instructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsPythonInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallPythonInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.PYTHON} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallReactInstructions } from '../sdk-install-instructions/react'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsReactInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallReactInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.REACT} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallRNInstructions } from '../sdk-install-instructions'\nimport { AdvertiseMobileReplay } from '../session-replay/SessionReplaySDKInstructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsRNInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRNInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.REACT_NATIVE} />\n            <AdvertiseMobileReplay context=\"flags-onboarding\" sdkKey={SDKKey.REACT_NATIVE} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { NodeInstallSnippet, NodeSetupSnippet } from '../sdk-install-instructions'\nimport { SDKInstallRemixJSInstructions } from '../sdk-install-instructions/remix'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsRemixJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRemixJSInstructions />\n            <h3>Client-side rendering</h3>\n            <FlagImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n            <h3>Server-side rendering</h3>\n            <h4>Install</h4>\n            <NodeInstallSnippet />\n            <h4>Configure</h4>\n            <NodeSetupSnippet />\n            <FlagImplementationSnippet sdkKey={SDKKey.NODE_JS} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallRubyInstructions } from '../sdk-install-instructions'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsRubyInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRubyInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.RUBY} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { NodeInstallSnippet, NodeSetupSnippet } from '../sdk-install-instructions'\nimport { SDKInstallSvelteJSInstructions } from '../sdk-install-instructions/svelte'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsSvelteInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallSvelteJSInstructions />\n            <h3>Client-side rendering</h3>\n            <FlagImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n            <h3>Server-side rendering</h3>\n            <h4>Install</h4>\n            <NodeInstallSnippet />\n            <h4>Configure</h4>\n            <NodeSetupSnippet />\n            <FlagImplementationSnippet sdkKey={SDKKey.NODE_JS} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallVueInstructions } from '../sdk-install-instructions/vue'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsVueInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallVueInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { SDKKey } from '~/types'\n\nimport { SDKInstallWebflowInstructions } from '../sdk-install-instructions/webflow'\nimport { FlagImplementationSnippet } from './flagImplementationSnippet'\n\nexport function FeatureFlagsWebflowInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallWebflowInstructions />\n            <FlagImplementationSnippet sdkKey={SDKKey.JS_WEB} />\n        </>\n    )\n}\n", "import { SDKInstructionsMap, SDKKey } from '~/types'\n\nimport {\n    HTMLSnippetInstructions,\n    JSWebInstructions,\n    ProductAnalyticsAndroidInstructions,\n    ProductAnalyticsAngularInstructions,\n    ProductAnalyticsAPIInstructions,\n    ProductAnalyticsAstroInstructions,\n    ProductAnalyticsBubbleInstructions,\n    ProductAnalyticsDjangoInstructions,\n    ProductAnalyticsElixirInstructions,\n    ProductAnalyticsFlutterInstructions,\n    ProductAnalyticsFramerInstructions,\n    ProductAnalyticsGoInstructions,\n    ProductAnalyticsHeliconeInstructions,\n    ProductAnalyticsIOSInstructions,\n    ProductAnalyticsLangfuseInstructions,\n    ProductAnalyticsLaravelInstructions,\n    ProductAnalyticsNextJSInstructions,\n    ProductAnalyticsNodeInstructions,\n    ProductAnalyticsNuxtJSInstructions,\n    ProductAnalyticsPHPInstructions,\n    ProductAnalyticsPythonInstructions,\n    ProductAnalyticsRemixJSInstructions,\n    ProductAnalyticsRNInstructions,\n    ProductAnalyticsRubyInstructions,\n    ProductAnalyticsSvelteJSInstructions,\n    ProductAnalyticsTraceloopInstructions,\n    ProductAnalyticsVueInstructions,\n    ProductAnalyticsWebflowInstructions,\n} from '.'\n\nexport const ProductAnalyticsSDKInstructions: SDKInstructionsMap = {\n    [SDKKey.JS_WEB]: JSWebInstructions,\n    [SDKKey.ANDROID]: ProductAnalyticsAndroidInstructions,\n    [SDKKey.ANGULAR]: ProductAnalyticsAngularInstructions,\n    [SDKKey.API]: ProductAnalyticsAPIInstructions,\n    [SDKKey.ASTRO]: ProductAnalyticsAstroInstructions,\n    [SDKKey.BUBBLE]: ProductAnalyticsBubbleInstructions,\n    [SDKKey.DJANGO]: ProductAnalyticsDjangoInstructions,\n    [SDKKey.ELIXIR]: ProductAnalyticsElixirInstructions,\n    [SDKKey.FLUTTER]: ProductAnalyticsFlutterInstructions,\n    [SDKKey.FRAMER]: ProductAnalyticsFramerInstructions,\n    [SDKKey.GO]: ProductAnalyticsGoInstructions,\n    [SDKKey.HELICONE]: ProductAnalyticsHeliconeInstructions,\n    [SDKKey.HTML_SNIPPET]: HTMLSnippetInstructions,\n    [SDKKey.IOS]: ProductAnalyticsIOSInstructions,\n    [SDKKey.LANGFUSE]: ProductAnalyticsLangfuseInstructions,\n    [SDKKey.LARAVEL]: ProductAnalyticsLaravelInstructions,\n    [SDKKey.NEXT_JS]: ProductAnalyticsNextJSInstructions,\n    [SDKKey.NODE_JS]: ProductAnalyticsNodeInstructions,\n    [SDKKey.NUXT_JS]: ProductAnalyticsNuxtJSInstructions,\n    [SDKKey.PHP]: ProductAnalyticsPHPInstructions,\n    [SDKKey.PYTHON]: ProductAnalyticsPythonInstructions,\n    [SDKKey.REACT_NATIVE]: ProductAnalyticsRNInstructions,\n    [SDKKey.REMIX]: ProductAnalyticsRemixJSInstructions,\n    [SDKKey.RUBY]: ProductAnalyticsRubyInstructions,\n    [SDKKey.SVELTE]: ProductAnalyticsSvelteJSInstructions,\n    [SDKKey.TRACELOOP]: ProductAnalyticsTraceloopInstructions,\n    [SDKKey.VUE_JS]: ProductAnalyticsVueInstructions,\n    [SDKKey.WEBFLOW]: ProductAnalyticsWebflowInstructions,\n}\n", "export * from './android'\nexport * from './angular'\nexport * from './api'\nexport * from './astro'\nexport * from './bubble'\nexport * from './django'\nexport * from './elixir'\nexport * from './flutter'\nexport * from './framer'\nexport * from './go'\nexport * from './helicone'\nexport * from './html-snippet'\nexport * from './ios'\nexport * from './js-web'\nexport * from './langfuse'\nexport * from './laravel'\nexport * from './next-js'\nexport * from './nodejs'\nexport * from './nuxt'\nexport * from './php'\nexport * from './python'\nexport * from './react-native'\nexport * from './remix'\nexport * from './ruby'\nexport * from './svelte'\nexport * from './traceloop'\nexport * from './vue'\nexport * from './webflow'\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallAndroidInstructions } from '../sdk-install-instructions'\nimport { AdvertiseMobileReplay } from '../session-replay/SessionReplaySDKInstructions'\nimport { PersonModeEventPropertyInstructions } from '../shared-snippets'\n\nfunction AndroidCaptureSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.Kotlin}>{`PostHog.capture(event = \"test-event\")`}</CodeSnippet>\n}\n\nexport function ProductAnalyticsAndroidInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAndroidInstructions />\n            <h3>Send an Event</h3>\n            <AndroidCaptureSnippet />\n            <PersonModeEventPropertyInstructions />\n            <AdvertiseMobileReplay context=\"product-analytics-onboarding\" sdkKey={SDKKey.ANDROID} />\n        </>\n    )\n}\n", "import { LemonDivider } from '@posthog/lemon-ui'\n\nimport { SDKInstallAngularInstructions } from '../sdk-install-instructions/angular'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function ProductAnalyticsAngularInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAngularInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nfunction JSEventSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JavaScript}>{`posthog.capture('my event', { property: 'value' })`}</CodeSnippet>\n    )\n}\n\nexport const ProductAnalyticsAllJSFinalSteps = (): JSX.Element => {\n    return (\n        <>\n            <h4>Send events</h4>\n            <p>\n                Click around and view a couple pages to generate some events. Our package automatically captures them\n                for you.\n            </p>\n            <h4>Optional: Send a manual event</h4>\n            <p>If you'd like, you can manually define events, too.</p>\n            <JSEventSnippet />\n        </>\n    )\n}\n", "import { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { PersonModeEventPropertyInstructions } from '../shared-snippets'\n\nfunction APISnippet(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n    const url = apiHostOrigin()\n\n    return (\n        <CodeSnippet language={Language.HTTP}>\n            {'POST ' +\n                url +\n                '/capture/\\nContent-Type: application/json\\n\\n{\\n\\t\"api_key\": \"' +\n                currentTeam?.api_token +\n                '\",\\n\\t\"event\": \"[event name]\",\\n\\t\"properties\": {\\n\\t\\t\"distinct_id\": \"[your users\\' distinct id]\",\\n\\t\\t\"key1\": \"value1\",\\n\\t\\t\"key2\": \"value2\"\\n\\t},\\n\\t\"timestamp\": \"[optional timestamp in ISO 8601 format]\"\\n}'}\n        </CodeSnippet>\n    )\n}\n\nexport function ProductAnalyticsAPIInstructions(): JSX.Element {\n    return (\n        <>\n            <h3>Usage</h3>\n            <APISnippet />\n            <PersonModeEventPropertyInstructions />\n        </>\n    )\n}\n", "import { SDKInstallAstroInstructions } from '../sdk-install-instructions/astro'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function ProductAnalyticsAstroInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAstroInstructions />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallBubbleInstructions } from '../sdk-install-instructions/bubble'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function ProductAnalyticsBubbleInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallBubbleInstructions />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKInstallDjangoInstructions } from '../sdk-install-instructions'\nimport { PersonModeEventPropertyInstructions } from '../shared-snippets'\n\nfunction DjangoCaptureSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Python}>{`import posthog\n    \nposthog.capture('test-id', 'test-event')`}</CodeSnippet>\n    )\n}\n\nexport function ProductAnalyticsDjangoInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallDjangoInstructions />\n            <h3>Send an Event</h3>\n            <DjangoCaptureSnippet />\n            <PersonModeEventPropertyInstructions />\n        </>\n    )\n}\n", "import { SDKInstallElixirInstructions } from '../sdk-install-instructions'\n\nexport function ProductAnalyticsElixirInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallElixirInstructions />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallFlutterInstructions } from '../sdk-install-instructions'\nimport { AdvertiseMobileReplay } from '../session-replay/SessionReplaySDKInstructions'\nimport { PersonModeEventPropertyInstructions } from '../shared-snippets'\n\nfunction FlutterCaptureSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Dart}>\n            {\n                \"import 'package:posthog_flutter/posthog_flutter.dart';\\n\\nawait Posthog().screen(\\n\\tscreenName: 'Example Screen',\\n);\"\n            }\n        </CodeSnippet>\n    )\n}\n\nexport function ProductAnalyticsFlutterInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFlutterInstructions />\n            <h3>Send an Event</h3>\n            <FlutterCaptureSnippet />\n            <PersonModeEventPropertyInstructions />\n            <AdvertiseMobileReplay context=\"product-analytics-onboarding\" sdkKey={SDKKey.FLUTTER} />\n        </>\n    )\n}\n", "import { SDKInstallFramerInstructions } from '../sdk-install-instructions/framer'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function ProductAnalyticsFramerInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFramerInstructions />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKInstallGoInstructions } from '../sdk-install-instructions'\nimport { PersonModeEventPropertyInstructions } from '../shared-snippets'\n\nfunction GoCaptureSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Go}>\n            {'client.Enqueue(posthog.Capture{\\n    DistinctId: \"test-user\",\\n    Event: \"test-snippet\"\\n})'}\n        </CodeSnippet>\n    )\n}\n\nexport function ProductAnalyticsGoInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallGoInstructions />\n            <h3>Send an Event</h3>\n            <GoCaptureSnippet />\n            <PersonModeEventPropertyInstructions />\n        </>\n    )\n}\n", "import { Link } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nexport function ProductAnalyticsHeliconeInstructions(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <>\n            <h3>Install</h3>\n            <p>\n                <Link to=\"https://helicone.ai/\" target=\"_blank\">\n                    Helicone\n                </Link>{' '}\n                supports most popular LLM models and you can bring your Helicone data into PostHog for analysis. To get\n                started:\n            </p>\n            <ol className=\"space-y-4\">\n                <li>\n                    Sign up to{' '}\n                    <Link to=\"https://www.helicone.ai/\" target=\"_blank\">\n                        Helicone\n                    </Link>{' '}\n                    and add it to your LLM app.\n                </li>\n                <li>\n                    Similar to how you add a{' '}\n                    <Link\n                        to=\"https://docs.helicone.ai/helicone-headers/header-directory#supported-headers\"\n                        target=\"_blank\"\n                    >\n                        Helicone-Auth header\n                    </Link>{' '}\n                    when installing Helicone, add two new headers\n                    <strong> Helicone-Posthog-Key</strong> and <strong>Helicone-Posthog-Host</strong> with your PostHog\n                    details:\n                    <CodeSnippet language={Language.Python}>\n                        {`# Example for adding it to OpenAI in Python\n                        \nclient = OpenAI(\napi_key=\"your-api-key-here\",  # Replace with your OpenAI API key\nbase_url=\"https://oai.hconeai.com/v1\",  # Set the API endpoint\ndefault_headers= { \n    \"Helicone-Auth\": f\"Bearer {HELICONE_API_KEY}\",\n    \"Helicone-Posthog-Key\": \"${currentTeam?.api_token}}\",\n    \"Helicone-Posthog-Host\": \"${apiHostOrigin()}\",\n    }\n)\n                        `}\n                    </CodeSnippet>\n                </li>\n            </ol>\n            <p>Helicone events will now be exported into PostHog as soon as they're available.</p>\n        </>\n    )\n}\n", "import { LemonDivider } from '@posthog/lemon-ui'\n\nimport { SDKHtmlSnippetInstructions } from '../sdk-install-instructions/html-snippet'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function HTMLSnippetInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKHtmlSnippetInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallIOSInstructions } from '../sdk-install-instructions'\nimport { AdvertiseMobileReplay } from '../session-replay/SessionReplaySDKInstructions'\nimport { PersonModeEventPropertyInstructions } from '../shared-snippets'\n\nfunction IOSCaptureSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.Swift}>{`PostHogSDK.shared.capture(\"Test Event\")`}</CodeSnippet>\n}\n\nexport function ProductAnalyticsIOSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallIOSInstructions />\n            <h3>Send an event</h3>\n            <IOSCaptureSnippet />\n            <PersonModeEventPropertyInstructions />\n            <AdvertiseMobileReplay context=\"product-analytics-onboarding\" sdkKey={SDKKey.IOS} />\n        </>\n    )\n}\n", "import { LemonDivider } from '@posthog/lemon-ui'\n\nimport { SDKInstallJSWebInstructions } from '../sdk-install-instructions'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function JSWebInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallJSWebInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { Link } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nexport function ProductAnalyticsLangfuseInstructions(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <>\n            <h3>Install</h3>\n            <p>\n                <Link to=\"https://langfuse.com/\" target=\"_blank\">\n                    Langfuse\n                </Link>{' '}\n                supports most popular LLM models and you can bring your Langfuse data into PostHog for analysis. To get\n                started:\n            </p>\n            <ol className=\"space-y-4\">\n                <li>\n                    First add{' '}\n                    <Link to=\"https://langfuse.com/docs/tracing\" target=\"_blank\">\n                        Langfuse Tracing\n                    </Link>{' '}\n                    to your LLM app.\n                </li>\n                <li>\n                    In your{' '}\n                    <Link to=\"https://cloud.langfuse.com/\" target=\"_blank\">\n                        Langfuse dashboard\n                    </Link>\n                    , click on <strong>Settings</strong> and scroll down to the <strong>Integrations</strong> section to\n                    find the PostHog integration.\n                </li>\n                <li>\n                    Click <strong>Configure</strong> and paste in your PostHog project API key:\n                    <CodeSnippet language={Language.JavaScript}>{currentTeam?.api_token}</CodeSnippet>\n                </li>\n                <li>\n                    Paste in your PostHog host:\n                    <CodeSnippet language={Language.JavaScript}>{apiHostOrigin()}</CodeSnippet>\n                </li>\n                <li>\n                    Click <strong>Enable</strong> and then <strong>Save</strong>.\n                </li>\n            </ol>\n            <p>\n                Langfuse will now begin exporting your data into PostHog. Note that Langfuse batch exports your data\n                into PostHog once a day, so it can take up to 24 hours for your Langfuse data to appear in PostHog.\n            </p>\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKInstallLaravelInstructions } from '../sdk-install-instructions'\nimport { PersonModeEventPropertyInstructions } from '../shared-snippets'\n\nfunction LaravelCaptureSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.PHP}>\n            {\"PostHog::capture(array(\\n    'distinctId' => 'test-user',\\n    'event' => 'test-event'\\n));\"}\n        </CodeSnippet>\n    )\n}\n\nexport function ProductAnalyticsLaravelInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallLaravelInstructions />\n            <h3>Send an Event</h3>\n            <LaravelCaptureSnippet />\n            <PersonModeEventPropertyInstructions />\n        </>\n    )\n}\n", "import { LemonDivider } from '@posthog/lemon-ui'\n\nimport { SDKInstallNextJSInstructions } from '../sdk-install-instructions/next-js'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function ProductAnalyticsNextJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNextJSInstructions />\n            <LemonDivider thick dashed className=\"my-4\" />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKInstallNodeInstructions } from '../sdk-install-instructions'\n\nfunction NodeCaptureSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JavaScript}>\n            {`client.capture({\n    distinctId: 'test-id',\n    event: 'test-event'\n})\n\n// Send queued events immediately. Use for example in a serverless environment\n// where the program may terminate before everything is sent.\n// Use \\`client.flush()\\` instead if you still need to send more events or fetch feature flags.\nclient.shutdown()`}\n        </CodeSnippet>\n    )\n}\n\nexport function ProductAnalyticsNodeInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNodeInstructions />\n            <h3>Send an Event</h3>\n            <NodeCaptureSnippet />\n        </>\n    )\n}\n", "import { SDKInstallNuxtJSInstructions } from '../sdk-install-instructions/nuxt'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function ProductAnalyticsNuxtJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNuxtJSInstructions />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKInstallPHPInstructions } from '../sdk-install-instructions'\nimport { PersonModeEventPropertyInstructions } from '../shared-snippets'\n\nfunction PHPCaptureSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.PHP}>\n            {\"PostHog::capture(array(\\n    'distinctId' => 'test-user',\\n    'event' => 'test-event'\\n));\"}\n        </CodeSnippet>\n    )\n}\n\nexport function ProductAnalyticsPHPInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallPHPInstructions />\n            <h3>Send an Event</h3>\n            <PHPCaptureSnippet />\n            <PersonModeEventPropertyInstructions />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKInstallPythonInstructions } from '../sdk-install-instructions'\nimport { PersonModeEventPropertyInstructions } from '../shared-snippets'\n\nfunction PythonCaptureSnippet(): JSX.Element {\n    return <CodeSnippet language={Language.Python}>posthog.capture('test-id', 'test-event')</CodeSnippet>\n}\n\nexport function ProductAnalyticsPythonInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallPythonInstructions />\n            <h3>Send an Event</h3>\n            <PythonCaptureSnippet />\n            <PersonModeEventPropertyInstructions />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKKey } from '~/types'\n\nimport { SDKInstallRNInstructions } from '../sdk-install-instructions'\nimport { AdvertiseMobileReplay } from '../session-replay/SessionReplaySDKInstructions'\n\nfunction RNCaptureSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.JSX}>{`// With hooks\nimport { usePostHog } from 'posthog-react-native'\n\nconst MyComponent = () => {\n    const posthog = usePostHog()\n\n    useEffect(() => {\n        posthog.capture(\"MyComponent loaded\", { foo: \"bar\" })\n    }, [])\n}\n`}</CodeSnippet>\n    )\n}\n\nexport function ProductAnalyticsRNInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRNInstructions />\n            <h3 className=\"mt-4\">Optional: Send a manual event</h3>\n            <p>Our package will autocapture events for you, but you can manually define events, too!</p>\n            <RNCaptureSnippet />\n            <AdvertiseMobileReplay context=\"product-analytics-onboarding\" sdkKey={SDKKey.REACT_NATIVE} />\n        </>\n    )\n}\n", "import { SDKInstallRemixJSInstructions } from '../sdk-install-instructions/remix'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function ProductAnalyticsRemixJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRemixJSInstructions />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { CodeSnippet, Language } from 'lib/components/CodeSnippet'\n\nimport { SDKInstallRubyInstructions } from '../sdk-install-instructions'\nimport { PersonModeEventPropertyInstructions } from '../shared-snippets'\n\nfunction RubyCaptureSnippet(): JSX.Element {\n    return (\n        <CodeSnippet language={Language.Ruby}>\n            {\"posthog.capture({\\n    distinct_id: 'test-id',\\n    event: 'test-event'})\"}\n        </CodeSnippet>\n    )\n}\n\nexport function ProductAnalyticsRubyInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRubyInstructions />\n            <h3>Send an Event</h3>\n            <RubyCaptureSnippet />\n            <PersonModeEventPropertyInstructions />\n        </>\n    )\n}\n", "import { SDKInstallSvelteJSInstructions } from '../sdk-install-instructions/svelte'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function ProductAnalyticsSvelteJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallSvelteJSInstructions />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { Link } from '@posthog/lemon-ui'\nimport { useValues } from 'kea'\nimport { CodeSnippet, Language } from 'lib/components/CodeSnippet'\nimport { apiHostOrigin } from 'lib/utils/apiHost'\nimport { teamLogic } from 'scenes/teamLogic'\n\nexport function ProductAnalyticsTraceloopInstructions(): JSX.Element {\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <>\n            <h3>Install</h3>\n            <p>\n                <Link to=\"https://www.traceloop.com/\" target=\"_blank\">\n                    Traceloop\n                </Link>{' '}\n                supports most popular LLM models and you can bring your Traceloop data into PostHog for analysis. To get\n                started:\n            </p>\n            <ol className=\"space-y-4\">\n                <li>\n                    Go to the{' '}\n                    <Link to=\"https://app.traceloop.com/settings/integrations\" target=\"_blank\">\n                        integrations page\n                    </Link>{' '}\n                    in your Traceloop dashboard and click on the PostHog card.\n                </li>\n                <li>\n                    Paste in your PostHog project API key:\n                    <CodeSnippet language={Language.JavaScript}>{currentTeam?.api_token}</CodeSnippet>\n                </li>\n                <li>\n                    Paste in your PostHog host:\n                    <CodeSnippet language={Language.JavaScript}>{apiHostOrigin()}</CodeSnippet>\n                </li>\n                <li>\n                    Select the environment you want to connect to PostHog and click <strong>Enable</strong>\n                </li>\n            </ol>\n            <p>Traceloop events will now be exported into PostHog as soon as they're available.</p>\n        </>\n    )\n}\n", "import { SDKInstallVueInstructions } from '../sdk-install-instructions/vue'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function ProductAnalyticsVueInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallVueInstructions />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { SDKInstallWebflowInstructions } from '../sdk-install-instructions/webflow'\nimport { ProductAnalyticsAllJSFinalSteps } from './AllJSFinalSteps'\n\nexport function ProductAnalyticsWebflowInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallWebflowInstructions />\n            <ProductAnalyticsAllJSFinalSteps />\n        </>\n    )\n}\n", "import { IconArrowLeft, IconArrowRight, IconCheck } from '@posthog/icons'\nimport { LemonButton, LemonCard, LemonDivider, LemonSelect, Spinner } from '@posthog/lemon-ui'\nimport { useActions, useValues } from 'kea'\nimport { useInterval } from 'lib/hooks/useInterval'\nimport { useWindowSize } from 'lib/hooks/useWindowSize'\nimport { useEffect } from 'react'\nimport React from 'react'\nimport { teamLogic } from 'scenes/teamLogic'\n\nimport { InviteMembersButton } from '~/layout/navigation/TopBar/AccountPopover'\nimport { SDKInstructionsMap } from '~/types'\n\nimport { onboardingLogic, OnboardingStepKey } from '../onboardingLogic'\nimport { OnboardingStep } from '../OnboardingStep'\nimport { sdksLogic } from './sdksLogic'\nimport { SDKSnippet } from './SDKSnippet'\n\nexport function InviteHelpCard(): JSX.Element {\n    return (\n        <LemonCard hoverEffect={false}>\n            <h3 className=\"font-bold\">Need help?</h3>\n            <p>Invite a team member to help you get set up.</p>\n            <InviteMembersButton type=\"secondary\" />\n        </LemonCard>\n    )\n}\n\nexport function SDKs({\n    sdkInstructionMap,\n    stepKey = OnboardingStepKey.INSTALL,\n    listeningForName = 'event',\n    teamPropertyToVerify = 'ingested_event',\n}: {\n    usersAction?: string\n    sdkInstructionMap: SDKInstructionsMap\n    subtitle?: string\n    stepKey?: OnboardingStepKey\n    listeningForName?: string\n    teamPropertyToVerify?: string\n}): JSX.Element {\n    const { loadCurrentTeam } = useActions(teamLogic)\n    const { currentTeam } = useValues(teamLogic)\n    const { setSourceFilter, selectSDK, setAvailableSDKInstructionsMap, setShowSideBySide, setPanel } =\n        useActions(sdksLogic)\n    const { sourceFilter, sdks, selectedSDK, sourceOptions, showSourceOptionsSelect, showSideBySide, panel } =\n        useValues(sdksLogic)\n    const { productKey, hasNextStep } = useValues(onboardingLogic)\n    const { goToNextStep, completeOnboarding } = useActions(onboardingLogic)\n    const [showListeningFor, setShowListeningFor] = React.useState(false)\n    const [hasCheckedInstallation, setHasCheckedInstallation] = React.useState(false)\n    const { isUserInNonTechnicalTest } = useValues(sdksLogic)\n\n    const {\n        windowSize: { width },\n    } = useWindowSize()\n\n    useEffect(() => {\n        if (showListeningFor && !currentTeam?.[teamPropertyToVerify]) {\n            setHasCheckedInstallation(true)\n            setTimeout(() => {\n                setShowListeningFor(false)\n            }, 5000)\n        }\n    }, [showListeningFor])\n\n    const minimumSideBySideSize = 768\n\n    useEffect(() => {\n        setAvailableSDKInstructionsMap(sdkInstructionMap)\n    }, [])\n\n    useEffect(() => {\n        width && setShowSideBySide(width > minimumSideBySideSize)\n    }, [width])\n\n    useInterval(() => {\n        if (!currentTeam?.[teamPropertyToVerify]) {\n            loadCurrentTeam()\n        }\n    }, 2000)\n\n    return (\n        <OnboardingStep title=\"Install\" stepKey={stepKey} continueOverride={<></>}>\n            <div className=\"flex gap-x-8 mt-6\">\n                <div\n                    className={`flex-col gap-y-2 flex-wrap gap-x-4 ${showSideBySide && 'min-w-[12.5rem] w-50'} ${\n                        !showSideBySide && panel !== 'options' ? 'hidden' : 'flex'\n                    }`}\n                >\n                    {isUserInNonTechnicalTest && <InviteHelpCard />}\n                    {showSourceOptionsSelect && (\n                        <LemonSelect\n                            allowClear\n                            onChange={(v) => setSourceFilter(v)}\n                            options={sourceOptions}\n                            placeholder=\"Select a source type\"\n                            value={sourceFilter}\n                            fullWidth\n                        />\n                    )}\n                    {sdks?.map((sdk) => (\n                        <React.Fragment key={`sdk-${sdk.key}`}>\n                            {/* // TODO: Make light/dark version of the logos */}\n                            <LemonButton\n                                data-attr={`onboarding-sdk-${sdk.key}`}\n                                active={selectedSDK?.key === sdk.key}\n                                onClick={selectedSDK?.key !== sdk.key ? () => selectSDK(sdk) : undefined}\n                                fullWidth\n                                icon={\n                                    typeof sdk.image === 'string' ? (\n                                        <img src={sdk.image} className=\"w-4\" />\n                                    ) : // storybook handles require() differently and returns an object, from which we can use the url in .default\n                                    typeof sdk.image === 'object' && 'default' in sdk.image ? (\n                                        <img src={sdk.image.default} className=\"w-4\" />\n                                    ) : (\n                                        sdk.image\n                                    )\n                                }\n                            >\n                                {sdk.name}\n                            </LemonButton>\n                        </React.Fragment>\n                    ))}\n                    {!isUserInNonTechnicalTest && <InviteHelpCard />}\n                </div>\n                {selectedSDK && productKey && !!sdkInstructionMap[selectedSDK.key] && (\n                    <div\n                        className={`shrink min-w-[2rem] ${!showSideBySide && panel !== 'instructions' ? 'hidden' : ''}`}\n                    >\n                        {!showSideBySide && (\n                            <LemonButton\n                                icon={<IconArrowLeft />}\n                                onClick={() => setPanel('options')}\n                                className=\"mb-8\"\n                                type=\"secondary\"\n                            >\n                                View all SDKs\n                            </LemonButton>\n                        )}\n                        <SDKSnippet sdk={selectedSDK} sdkInstructions={sdkInstructionMap[selectedSDK.key]} />\n                        <LemonDivider className=\"my-8\" />\n                        <div className=\"flex justify-between\">\n                            <div>\n                                <h2 className=\"font-bold mb-4\">Verify installation</h2>\n                                {!showListeningFor && !currentTeam?.[teamPropertyToVerify] ? (\n                                    <>\n                                        <div className=\"flex gap-x-4\">\n                                            <LemonButton type=\"primary\" onClick={() => setShowListeningFor(true)}>\n                                                Check installation\n                                            </LemonButton>\n                                        </div>\n                                        {hasCheckedInstallation && !showListeningFor && (\n                                            <p className=\"italic text-secondary mt-2 text-xs\">\n                                                No {listeningForName}s received. Please check your implementation and\n                                                try again.\n                                            </p>\n                                        )}\n                                    </>\n                                ) : (\n                                    <p className=\"flex items-center italic text-secondary\">\n                                        {!currentTeam?.[teamPropertyToVerify] ? (\n                                            <>\n                                                <Spinner className=\"text-3xl mr-2\" /> Verifying installation...\n                                            </>\n                                        ) : (\n                                            <>\n                                                <IconCheck className=\"text-xl text-success mr-2\" /> Installation\n                                                complete\n                                            </>\n                                        )}\n                                    </p>\n                                )}\n                            </div>\n                            <div>\n                                {!showSideBySide && panel === 'options' ? (\n                                    <></>\n                                ) : !currentTeam?.[teamPropertyToVerify] ? (\n                                    <LemonButton\n                                        type=\"secondary\"\n                                        onClick={() => (!hasNextStep ? completeOnboarding() : goToNextStep())}\n                                    >\n                                        Skip installation\n                                    </LemonButton>\n                                ) : (\n                                    <LemonButton\n                                        data-attr=\"sdk-continue\"\n                                        sideIcon={hasNextStep ? <IconArrowRight /> : null}\n                                        type=\"primary\"\n                                        status=\"alt\"\n                                        onClick={() => (!hasNextStep ? completeOnboarding() : goToNextStep())}\n                                    >\n                                        Continue\n                                    </LemonButton>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </OnboardingStep>\n    )\n}\n", "import { useEffect, useRef } from 'react'\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef()\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback\n    }, [callback])\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current()\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay)\n            return () => clearInterval(id)\n        }\n    }, [delay])\n}\n", "import { Link } from 'lib/lemon-ui/Link'\n\nimport { SDK } from '~/types'\n\nexport const SDKSnippet = ({ sdk, sdkInstructions }: { sdk: SDK; sdkInstructions: () => JSX.Element }): JSX.Element => {\n    return (\n        <div>\n            <div className=\"mb-8\">\n                <h3 className=\"text-xl font-bold mb-2\">Integrate PostHog with {sdk.name}</h3>\n                <Link className=\"\" to={sdk.docsLink} target=\"_blank\" targetBlankIcon>\n                    Read the docs\n                </Link>\n            </div>\n            <div className=\"space-y-4\">{sdkInstructions()}</div>\n        </div>\n    )\n}\n", "import { SDKInstructionsMap, SDKKey } from '~/types'\n\nimport {\n    AngularInstructions,\n    AstroInstructions,\n    BubbleInstructions,\n    FramerInstructions,\n    HTMLSnippetInstructions,\n    JSWebInstructions,\n    NextJSInstructions,\n    NuxtJSInstructions,\n    ReactInstructions,\n    RemixInstructions,\n    SvelteInstructions,\n    VueInstructions,\n    WebflowInstructions,\n} from '.'\n\nexport const SurveysSDKInstructions: SDKInstructionsMap = {\n    [SDKKey.JS_WEB]: JSWebInstructions,\n    [SDKKey.HTML_SNIPPET]: HTMLSnippetInstructions,\n    [SDKKey.ANGULAR]: AngularInstructions,\n    [SDKKey.ASTRO]: AstroInstructions,\n    [SDKKey.BUBBLE]: BubbleInstructions,\n    [SDKKey.FRAMER]: FramerInstructions,\n    [SDKKey.NEXT_JS]: NextJSInstructions,\n    [SDKKey.NUXT_JS]: NuxtJSInstructions,\n    [SDKKey.REACT]: ReactInstructions,\n    [SDKKey.REMIX]: RemixInstructions,\n    [SDKKey.SVELTE]: SvelteInstructions,\n    [SDKKey.VUE_JS]: VueInstructions,\n    [SDKKey.WEBFLOW]: WebflowInstructions,\n}\n", "export * from './angular'\nexport * from './astro'\nexport * from './bubble'\nexport * from './framer'\nexport * from './html-snippet'\nexport * from './js-web'\nexport * from './next-js'\nexport * from './nuxt'\nexport * from './react'\nexport * from './remix'\nexport * from './svelte'\nexport * from './vue'\nexport * from './webflow'\n", "import { SDKInstallAngularInstructions } from '../sdk-install-instructions/angular'\n\nexport function AngularInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAngularInstructions />\n        </>\n    )\n}\n", "import { SDKInstallAstroInstructions } from '../sdk-install-instructions/astro'\n\nexport function AstroInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallAstroInstructions />\n        </>\n    )\n}\n", "import { SDKInstallBubbleInstructions } from '../sdk-install-instructions/bubble'\n\nexport function BubbleInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallBubbleInstructions />\n        </>\n    )\n}\n", "import { SDKInstallFramerInstructions } from '../sdk-install-instructions/framer'\n\nexport function FramerInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallFramerInstructions />\n        </>\n    )\n}\n", "import { SDKHtmlSnippetInstructions } from '../sdk-install-instructions/html-snippet'\n\nexport function HTMLSnippetInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKHtmlSnippetInstructions />\n        </>\n    )\n}\n", "import { SDKInstallJSWebInstructions } from '../sdk-install-instructions'\n\nexport function JSWebInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallJSWebInstructions />\n        </>\n    )\n}\n", "import { SDKInstallNextJSInstructions } from '../sdk-install-instructions/next-js'\n\nexport function NextJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNextJSInstructions />\n        </>\n    )\n}\n", "import { SDKInstallNuxtJSInstructions } from '../sdk-install-instructions/nuxt'\n\nexport function NuxtJSInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallNuxtJSInstructions />\n        </>\n    )\n}\n", "import { SDKInstallReactInstructions } from '../sdk-install-instructions/react'\n\nexport function ReactInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallReactInstructions />\n        </>\n    )\n}\n", "import { SDKInstallRemixJSInstructions } from '../sdk-install-instructions/remix'\n\nexport function RemixInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallRemixJSInstructions />\n        </>\n    )\n}\n", "import { SDKInstallSvelteJSInstructions } from '../sdk-install-instructions/svelte'\n\nexport function SvelteInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallSvelteJSInstructions />\n        </>\n    )\n}\n", "import { SDKInstallVueInstructions } from '../sdk-install-instructions/vue'\n\nexport function VueInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallVueInstructions />\n        </>\n    )\n}\n", "import { SDKInstallWebflowInstructions } from '../sdk-install-instructions/webflow'\n\nexport function WebflowInstructions(): JSX.Element {\n    return (\n        <>\n            <SDKInstallWebflowInstructions />\n        </>\n    )\n}\n"],
  "mappings": "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AW,EACjB,MAAO,KACP,SAAU,2CACd,EACA,CACI,KAAM,KACN,SACA,KAAM,SAAc,EACpB,MAAO,KACP,SAAU,uCACd,EACA,CACI,KAAM,WACN,eACA,KAAM,MAAW,EACjB,MAAO,KACP,SAAU,0DACd,EACA,CACI,KAAM,MACN,UACA,KAAM,SAAc,EACpB,MAAO,KACP,SAAU,wCACd,EACA,CACI,KAAM,OACN,WACA,KAAM,SAAc,EACpB,MAAO,KACP,SAAU,yCACd,EACA,CACI,KAAM,WACN,eACA,KAAM,MAAW,EACjB,MAAO,KACP,SAAU,0DACd,EACA,CACI,KAAM,UACN,cACA,KAAM,SAAc,EACpB,MAAO,KACP,SAAU,4CACd,EACA,CACI,KAAM,UACN,aACA,KAAM,MAAW,EACjB,MAAO,KACP,SAAU,4CACd,EACA,CACI,KAAM,UACN,aACA,KAAM,uBAAkC,EACxC,YAAa,GACb,MAAO,KACP,SAAU,yCACd,EACA,CACI,KAAM,UACN,aACA,KAAM,MAAW,EACjB,MAAO,KACP,SAAU,4CACd,EACA,CACI,KAAM,MACN,UACA,KAAM,SAAc,EACpB,MAAO,KACP,SAAU,wCACd,EACA,CACI,KAAM,SACN,aACA,KAAM,uBAAkC,EACxC,YAAa,GACb,MAAO,KACP,SAAU,2CACd,EACA,CACI,KAAM,QACN,YACA,KAAM,oBAA+B,EACrC,YAAa,GACb,MAAO,KACP,SAAU,0CACd,EACA,CACI,KAAM,eACN,mBACA,KAAM,SAAc,EACpB,MAAO,KACP,SAAU,iDACd,EACA,CACI,KAAM,QACN,YACA,KAAM,MAAW,EACjB,MAAO,KACP,SAAU,0CACd,EACA,CACI,KAAM,OACN,WACA,KAAM,SAAc,EACpB,MAAO,KACP,SAAU,yCACd,EACA,CACI,KAAM,OACN,WACA,KAAM,SAAc,EACpB,MAAO,KACP,SAAU,yCACd,EACA,CACI,KAAM,SACN,aACA,KAAM,MAAW,EACjB,MAAO,KACP,SAAU,2CACd,EACA,CACI,KAAM,YACN,gBACA,KAAM,MAAW,EACjB,MAAO,KACP,SAAU,2DACd,EACA,CACI,KAAM,S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",
  "names": ["init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "JSEventSnippet", "CodeSnippet", "WebAnalyticsAllJSFinalSteps", "WebAnalyticsMobileFinalSteps", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "AndroidInstallSnippet", "CodeSnippet", "AndroidSetupSnippet", "includeReplay", "currentTeam", "teamLogic", "apiHostOrigin", "SDKInstallAndroidInstructions", "props", "SDKInstallAndroidTrackScreenInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "JSInstallSnippet", "CodeSnippet", "JSSetupSnippet", "currentTeam", "teamLogic", "featureFlags", "featureFlagLogic", "isPersonProfilesDisabled", "FEATURE_FLAGS", "apiHostOrigin", "SDKInstallJSWebInstructions", "import_jsx_runtime", "EnvVarsSnippet", "currentTeam", "teamLogic", "CodeSnippet", "apiHostOrigin", "AngularInitializeCodeSnippet", "featureFlags", "featureFlagLogic", "isPersonProfilesDisabled", "FEATURE_FLAGS", "SDKInstallAngularInstructions", "JSInstallSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "CreatePostHogAstroFileSnippet", "CodeSnippet", "AstroSetupSnippet", "jsSnippetScriptTag", "useJsSnippet", "SDKInstallAstroInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "SDKInstallBubbleInstructions", "JSSnippet", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "DjangoInstallSnippet", "CodeSnippet", "DjangoAppConfigSnippet", "currentTeam", "teamLogic", "apiHostOrigin", "DjangoSettingsSnippet", "SDKInstallDjangoInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "ElixirInstallSnippet", "CodeSnippet", "ElixirSetupSnippet", "currentTeam", "teamLogic", "url", "apiHostOrigin", "SDKInstallElixirInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "FlutterInstallSnippet", "CodeSnippet", "InstallFlutterSessionReplay", "props", "apiHostOrigin", "InstallFlutterWidgetsSessionReplay", "FlutterAndroidSetupSnippet", "includeReplay", "currentTeam", "teamLogic", "url", "FlutterIOSSetupSnippet", "FlutterWebSetupSnippet", "jsSnippet", "useJsSnippet", "SDKInstallFlutterInstructions", "LemonBanner", "Link", "SDKInstallFlutterTrackScreenInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "SDKInstallFramerInstructions", "JSSnippet", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "GoInstallSnippet", "CodeSnippet", "GoSetupSnippet", "currentTeam", "teamLogic", "apiHostOrigin", "SDKInstallGoInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "IOSInstallCocoaPodsSnippet", "CodeSnippet", "IOSInstallSPMSnippet", "IOSSetupSnippet", "includeReplay", "currentTeam", "teamLogic", "apiHostOrigin", "SDKInstallIOSInstructions", "props", "SDKInstallIOSTrackScreenInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "LaravelConfigSnippet", "CodeSnippet", "LaravelInstallSnippet", "currentTeam", "teamLogic", "apiHostOrigin", "SDKInstallLaravelInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "NodeInstallSnippet", "CodeSnippet", "NodeSetupSnippet", "currentTeam", "teamLogic", "apiHostOrigin", "SDKInstallNodeInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "NuxtEnvVarsSnippet", "currentTeam", "teamLogic", "CodeSnippet", "apiHostOrigin", "NuxtAppClientCodeSnippet", "featureFlags", "featureFlagLogic", "isPersonProfilesDisabled", "FEATURE_FLAGS", "SDKInstallNuxtJSInstructions", "Link", "JSInstallSnippet", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "PHPConfigSnippet", "CodeSnippet", "PHPInstallSnippet", "PHPSetupSnippet", "currentTeam", "teamLogic", "apiHostOrigin", "SDKInstallPHPInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "PythonInstallSnippet", "CodeSnippet", "PythonSetupSnippet", "currentTeam", "teamLogic", "apiHostOrigin", "SDKInstallPythonInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "RNInstallSnippet", "includeReplay", "CodeSnippet", "RNSetupSnippet", "currentTeam", "teamLogic", "url", "apiHostOrigin", "Link", "SDKInstallRNInstructions", "props", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "RemixAppClientCodeSnippet", "currentTeam", "teamLogic", "featureFlags", "featureFlagLogic", "isPersonProfilesDisabled", "FEATURE_FLAGS", "CodeSnippet", "apiHostOrigin", "SDKInstallRemixJSInstructions", "JSInstallSnippet", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "RubyInstallSnippet", "CodeSnippet", "RubySetupSnippet", "currentTeam", "teamLogic", "apiHostOrigin", "SDKInstallRubyInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "SvelteAppClientCodeSnippet", "currentTeam", "teamLogic", "featureFlags", "featureFlagLogic", "isPersonProfilesDisabled", "FEATURE_FLAGS", "CodeSnippet", "apiHostOrigin", "SDKInstallSvelteJSInstructions", "JSInstallSnippet", "Link", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "VueCreatePluginsFileSnippet", "CodeSnippet", "VuePluginsCodeSnippet", "currentTeam", "teamLogic", "apiHostOrigin", "VueActivatePluginSnippet", "SDKInstallVueInstructions", "Link", "JSInstallSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "SDKInstallWebflowInstructions", "JSSnippet", "import_jsx_runtime", "AndroidInstructions", "SDKInstallAndroidInstructions", "WebAnalyticsMobileFinalSteps", "SDKInstallAndroidTrackScreenInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "AngularInstructions", "SDKInstallAngularInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "AstroInstructions", "SDKInstallAstroInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "BubbleInstructions", "SDKInstallBubbleInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FlutterInstructions", "SDKInstallFlutterInstructions", "WebAnalyticsMobileFinalSteps", "SDKInstallFlutterTrackScreenInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FramerInstructions", "SDKInstallFramerInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "SDKHtmlSnippetInstructions", "JSSnippet", "import_jsx_runtime", "HTMLSnippetInstructions", "SDKHtmlSnippetInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "iOSInstructions", "SDKInstallIOSInstructions", "WebAnalyticsMobileFinalSteps", "SDKInstallIOSTrackScreenInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "JSWebInstructions", "SDKInstallJSWebInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "NextEnvVarsSnippet", "currentTeam", "teamLogic", "CodeSnippet", "apiHostOrigin", "NextPagesRouterCodeSnippet", "featureFlags", "featureFlagLogic", "isPersonProfilesDisabled", "FEATURE_FLAGS", "NextPagesRouterPageViewSnippet", "NextAppRouterCodeSnippet", "NextAppRouterLayoutSnippet", "NextAppRouterPageViewSnippet", "NextAppRouterPageViewProviderSnippet", "SDKInstallNextJSInstructions", "JSInstallSnippet", "Link", "import_jsx_runtime", "NextJSInstructions", "SDKInstallNextJSInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "NuxtJSInstructions", "SDKInstallNuxtJSInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "ReactEnvVarsSnippet", "currentTeam", "teamLogic", "CodeSnippet", "apiHostOrigin", "ReactSetupSnippet", "SDKInstallReactInstructions", "JSInstallSnippet", "import_jsx_runtime", "ReactInstructions", "SDKInstallReactInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "WebAnalyticsRNInstructions", "SDKInstallRNInstructions", "CodeSnippet", "WebAnalyticsMobileFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "RemixInstructions", "SDKInstallRemixJSInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "SvelteInstructions", "SDKInstallSvelteJSInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "VueInstructions", "SDKInstallVueInstructions", "WebAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "WebflowInstructions", "SDKInstallWebflowInstructions", "WebAnalyticsAllJSFinalSteps", "WebAnalyticsSDKInstructions", "JSWebInstructions", "HTMLSnippetInstructions", "AngularInstructions", "AstroInstructions", "iOSInstructions", "BubbleInstructions", "FramerInstructions", "NextJSInstructions", "NuxtJSInstructions", "ReactInstructions", "RemixInstructions", "SvelteInstructions", "VueInstructions", "WebflowInstructions", "AndroidInstructions", "WebAnalyticsRNInstructions", "FlutterInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_forms", "import_kea_router", "onboardingTemplateConfigLogic", "newDashboardLogic", "dashboardTemplateVariablesLogic", "onboardingLogic", "sidePanelStateLogic", "dashboard", "template", "_", "result", "actions", "values", "templateRequest", "Co", "variables", "urls", "v", "step", "import_jsx_runtime", "OnboardingStep", "stepKey", "title", "subtitle", "children", "showSkip", "showHelpButton", "onSkip", "continueAction", "continueText", "continueOverride", "hideHeader", "breadcrumbHighlightName", "fullWidth", "hasNextStep", "onboardingStepKeys", "currentOnboardingStep", "onboardingLogic", "completeOnboarding", "goToNextStep", "setStepKey", "openSupportForm", "supportLogic", "dashboardCreatedDuringOnboarding", "onboardingTemplateConfigLogic", "breadcrumbStepKeys", "breadcrumbExcludeSteps", "stepName", "idx", "highlightStep", "React", "Link", "stepKeyToTitle", "IconChevronRight", "LemonButton", "urls", "IconArrowRight", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "formatFreeTierLimit", "value", "FreeTierItem", "limit", "Icon", "posthog_icons_es_exports", "FreeTierLimits", "billing", "billingLogic", "freeTierLimits", "p", "availableOnboardingProducts", "freePlan", "plan", "import_jsx_runtime", "PlanCard", "planData", "product", "highlight", "hogPosition", "redirectPath", "billingLoading", "billing", "billingLogic", "reportBillingUpgradeClicked", "eventUsageLogic", "isHovering", "setIsHovering", "goToNextStep", "onboardingLogic", "productPlan", "plan", "platformPlan", "p", "dataRetentionFeature", "feature", "projectLimitFeature", "features", "hogPositionClass", "HeartHog", "clsx", "IconCheck", "IconX", "BillingUpgradeCTA", "getUpgradeProductLink", "LemonButton", "PLANS_DATA", "PlanCards", "index", "FreeTierLimits", "PlanCards_default", "import_jsx_runtime", "OnboardingUpgradeStep", "product", "stepKey", "billing", "billingLoading", "billingLogic", "action", "Spinner", "OnboardingStep", "PlanCards_default", "ProductSubscribed", "IconCheckCircle", "StarHog", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "OnboardingDataWarehouseSourcesStep", "stepKey", "goToNextStep", "onboardingLogic", "currentStep", "sourceWizardLogic", "OnboardingStep", "NewSourcesWizard", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_clsx", "import_kea", "import_react", "import_jsx_runtime", "PlanIcon", "feature", "className", "timeDenominator", "IconWarning", "clsx", "convertLargeNumberToWords", "IconCheckCircle", "IconX", "PricingTiers", "plan", "product", "width", "tiersRef", "useResizeObserver", "tiers", "sigFigs", "tier", "price", "a", "b", "i", "getPlanDescription", "AllProductsPlanComparison", "includeAddons", "billing", "redirectPath", "timeRemainingInSeconds", "timeTotalInSeconds", "billingLogic", "planComparisonRef", "reportBillingUpgradeClicked", "reportBillingDowngradeClicked", "eventUsageLogic", "surveyID", "comparisonModalHighlightedFeatureKey", "billingProductLoading", "billingProductLogic", "reportSurveyShown", "setSurveyResponse", "setBillingProductLoading", "featureFlags", "featureFlagLogic", "plans", "currentPlanIndex", "nonInclusionProducts", "p", "inclusionProducts", "sortedProducts", "platformAndSupportPlans", "upgradeButtons", "BillingUpgradeCTA", "getUpgradeProductLink", "UNSUBSCRIBE_SURVEY_ID", "UnsubscribeSurveyModal", "prorationAmount", "isProrated", "getProration", "getProrationMessage", "includedProduct", "includedPlans", "React", "getProductIcon", "Tooltip", "thisPlanFeature", "LemonCollapse", "currentProduct", "addon", "FEATURE_FLAGS", "LemonTag", "AddonPlanTiers", "AddonPlanTiers", "plan", "addon", "showTiers", "setShowTiers", "PricingTiers", "Link", "convertLargeNumberToWords", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "BillingHero", "width", "billingHeroRef", "useResizeObserver", "BlushingHog", "import_jsx_runtime", "OnboardingBillingStep", "product", "stepKey", "billing", "redirectPath", "billingLoading", "billingLogic", "productKey", "onboardingLogic", "reportBillingUpgradeClicked", "eventUsageLogic", "showPlanComp", "setShowPlanComp", "action", "OnboardingStep", "BillingUpgradeCTA", "getUpgradeProductLink", "IconCheckCircle", "StarHog", "LemonButton", "BillingHero", "PlanComparison", "AllProductsPlanComparison", "Spinner", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "OnboardingInviteTeammates", "stepKey", "preflight", "preflightLogic", "productKey", "onboardingLogic", "inviteTeamMembers", "inviteLogic", "invitesToSend", "canSubmitInvites", "titlePrefix", "likeTo", "OnboardingStep", "InviteTeamMatesComponent", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "pluginContentMapping", "pipelineDefaultEnabledLogic", "pipelineTransformationsLogic", "s", "plugins", "pluginConfigs", "defaultEnabledPluginIds", "plugin", "pluginConfig", "pluginContent", "init_dirname", "init_buffer", "init_process", "import_kea", "onboardingProductConfigurationLogic", "teamLogic", "configOptions", "_", "values", "actions", "updateConfig", "configOption", "import_jsx_runtime", "OnboardingProductConfiguration", "stepKey", "options", "product", "configOptions", "onboardingProductConfigurationLogic", "pipelineDefaultEnabled", "pipelineDefaultEnabledLogic", "setConfigOptions", "saveConfiguration", "toggleEnabled", "configOptionsRef", "option", "combinedList", "newValue", "updatedConfigOptions", "o", "plugin", "item", "enabled", "OnboardingStep", "idx", "React", "LemonDivider", "LemonSwitch", "LemonSelect", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_loaders", "import_kea_router", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "Logomark", "import_jsx_runtime", "allSDKs", "Logomark", "getSourceOptions", "availableSDKInstructionsMap", "filteredSDKsTags", "allSDKs", "sdk", "item", "index", "tag", "multiInstallProducts", "getProductAnalyticsOrderedSDKs", "sdks", "sdksLogic", "onboardingLogic", "liveEventsTableLogic", "featureFlagLogic", "userLogic", "eventUsageLogic", "sourceFilter", "sourceOptions", "sdkInstructionMap", "showSideBySide", "panel", "hasSnippetEvents", "snippetHosts", "_", "selectors", "eventHosts", "combinedSnippetAndLiveEventsHosts", "host", "hostProtocol", "currentProtocol", "s", "productKey", "featureFlags", "isUserNonTechnical", "FEATURE_FLAGS", "actions", "query", "hogql", "res", "api_default", "hasEvents", "result", "val", "values", "filteredSDks", "_productKey", "matchedSDK", "import_jsx_runtime", "Feature", "name", "description", "images", "Subfeature", "icon_key", "getProductIcon", "GetStartedButton", "product", "addProductIntent", "teamLogic", "completeOnboarding", "setTeamPropertiesForProduct", "goToNextStep", "onboardingLogic", "isFirstProductOnboarding", "hasSnippetEvents", "sdksLogic", "cta", "LemonButton", "multiInstallProducts", "PricingSection", "currentAndUpgradePlans", "isPricingModalOpen", "billingProductLogic", "toggleIsPricingModalOpen", "planForStats", "pricingListItems", "convertLargeNumberToWords", "Link", "item", "i", "IconCheck", "ProductPricingModal", "OnboardingProductIntroduction", "stepKey", "billingProduct", "isCloudOrDev", "preflightLogic", "websiteSlug", "OnboardingStep", "feature", "React", "subfeature", "IconStack", "IconMap", "IconMessage", "WavingHog", "Spinner", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "proxyDocs", "OnboardingReverseProxy", "stepKey", "OnboardingStep", "title", "link", "Link", "LemonDivider", "InviteMembersButton", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "OnboardingSessionReplayConfiguration", "stepKey", "goToNextStep", "updateCurrentTeam", "onboardingLogic", "handleNext", "enabled", "OnboardingStep", "FilmCameraHog", "LemonButton", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "import_jsx_runtime", "IframeErrorOverlay", "userIntent", "logic", "iframedToolbarBrowserLogic", "iframeBanner", "LemonBanner", "UserIntentVerb", "LoadingOverlay", "loading", "Spinner", "IframedToolbarBrowser", "iframeRef", "browserUrl", "initialPath", "onIframeLoad", "setIframeWidth", "iframeWidth", "useResizeObserver", "appEditorUrl", "import_react", "init_dirname", "init_buffer", "init_process", "import_kea", "import_react", "import_jsx_runtime", "VariableSelector", "variableName", "hasSelectedSite", "iframeRef", "activeDashboardTemplate", "newDashboardLogic", "theDashboardTemplateVariablesLogic", "dashboardTemplateVariablesLogic", "setVariable", "setVariableForPageview", "setVariableForScreenview", "resetVariable", "goToNextUntouchedActiveVariableIndex", "incrementActiveVariableIndex", "setIsCurrentlySelectingElement", "setActiveVariableCustomEventName", "allVariablesAreTouched", "variables", "activeVariableIndex", "isCurrentlySelectingElement", "activeVariableCustomEventName", "customEventFieldShown", "onboardingTemplateConfigLogic", "showCustomEventField", "hideCustomEventField", "enableElementSelector", "disableElementSelector", "setNewActionName", "iframedToolbarBrowserLogic", "currentFullUrl", "browserUrl", "currentPath", "variable", "v", "IconInfo", "LemonBanner", "IconCheckCircle", "LemonButton", "IconTrash", "LemonLabel", "LemonInput", "Spinner", "IconTarget", "LemonMenu", "DashboardTemplateVariables", "setVariables", "setActiveVariableIndex", "LemonCollapse", "i", "import_jsx_runtime", "UrlInput", "iframeRef", "setBrowserUrl", "setInitialPath", "iframedToolbarBrowserLogic", "browserUrl", "currentPath", "combinedSnippetAndLiveEventsHosts", "sdksLogic", "addUrl", "authorizedUrlListLogic", "defaultAuthorizedUrlProperties", "inputValue", "setInputValue", "LemonInput", "v", "LemonInputSelect", "host", "LemonButton", "IconArrowRight", "SiteChooser", "hasSnippetEventsLoading", "setStepKey", "onboardingLogic", "isCloud", "preflightLogic", "setProposedBrowserUrl", "iframeBanner", "proposedBrowserUrl", "LemonCard", "LemonBanner", "Spinner", "Link", "LemonSkeleton", "OnboardingDashboardTemplateConfigureStep", "stepKey", "activeDashboardTemplate", "onboardingTemplateConfigLogic", "createDashboardFromTemplate", "newDashboardLogic", "isLoading", "theDashboardTemplateVariablesLogic", "dashboardTemplateVariablesLogic", "variables", "allVariablesAreTouched", "hasTouchedAnyVariable", "goToNextStep", "dashboardCreatedDuringOnboarding", "OnboardingStep", "IconCheckCircle", "StarHog", "IframedToolbarBrowser", "DashboardTemplateVariables", "init_dirname", "init_buffer", "init_process", "import_kea", "import_kea_forms", "import_react", "import_jsx_runtime", "OnboardingDashboardTemplateSelectStep", "stepKey", "goToNextStep", "onboardingLogic", "clearActiveDashboardTemplate", "newDashboardLogic", "setDashboardCreatedDuringOnboarding", "reportTemplateSelected", "showTemplateRequestModal", "hideTemplateRequestModal", "onboardingTemplateConfigLogic", "isTemplateRequestModalOpen", "isTemplateRequestFormSubmitting", "OnboardingStep", "LemonButton", "DashboardTemplateChooser", "template", "LemonModal", "LemonField", "LemonInput", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsImplementationSnippet", "sdkKey", "Snippet", "OPTIONS", "option", "import_jsx_runtime", "ExperimentsAndroidInstructions", "SDKInstallAndroidInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsAngularInstructions", "SDKInstallAngularInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsAstroInstructions", "SDKInstallAstroInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsBubbleInstructions", "SDKInstallBubbleInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsDjangoInstructions", "SDKInstallDjangoInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsFlutterInstructions", "SDKInstallFlutterInstructions", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsFramerInstructions", "SDKInstallFramerInstructions", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsGoInstructions", "SDKInstallGoInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsIOSInstructions", "SDKInstallIOSInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsJSWebInstructions", "SDKInstallJSWebInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsLaravelInstructions", "SDKInstallLaravelInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsNextJSInstructions", "SDKInstallNextJSInstructions", "ExperimentsImplementationSnippet", "NodeInstallSnippet", "NodeSetupSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsNodeJSInstructions", "SDKInstallNodeInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsNuxtInstructions", "SDKInstallNuxtJSInstructions", "ExperimentsImplementationSnippet", "NodeInstallSnippet", "NodeSetupSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsPHPInstructions", "SDKInstallPHPInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsPythonInstructions", "SDKInstallPythonInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsReactInstructions", "SDKInstallReactInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsReactNativeInstructions", "SDKInstallRNInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsRemixInstructions", "SDKInstallRemixJSInstructions", "ExperimentsImplementationSnippet", "NodeInstallSnippet", "NodeSetupSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsRubyInstructions", "SDKInstallRubyInstructions", "LemonDivider", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsSvelteInstructions", "SDKInstallSvelteJSInstructions", "ExperimentsImplementationSnippet", "NodeInstallSnippet", "NodeSetupSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsVueInstructions", "SDKInstallVueInstructions", "ExperimentsImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ExperimentsWebflowInstructions", "SDKInstallWebflowInstructions", "ExperimentsImplementationSnippet", "ExperimentsSDKInstructions", "ExperimentsJSWebInstructions", "ExperimentsAndroidInstructions", "ExperimentsAngularInstructions", "ExperimentsAstroInstructions", "ExperimentsBubbleInstructions", "ExperimentsDjangoInstructions", "ExperimentsFlutterInstructions", "ExperimentsFramerInstructions", "ExperimentsGoInstructions", "ExperimentsIOSInstructions", "ExperimentsLaravelInstructions", "ExperimentsNextJSInstructions", "ExperimentsNodeJSInstructions", "ExperimentsNuxtInstructions", "ExperimentsPHPInstructions", "ExperimentsPythonInstructions", "ExperimentsReactInstructions", "ExperimentsReactNativeInstructions", "ExperimentsRemixInstructions", "ExperimentsRubyInstructions", "ExperimentsSvelteInstructions", "ExperimentsWebflowInstructions", "ExperimentsVueInstructions", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "SessionReplayFinalSteps", "PersonModeEventPropertyInstructions", "featureFlags", "featureFlagLogic", "FEATURE_FLAGS", "Link", "CodeSnippet", "import_jsx_runtime", "AndroidInstructions", "SDKInstallAndroidInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "AngularInstructions", "SDKInstallAngularInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "AstroInstructions", "SDKInstallAstroInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "BubbleInstructions", "SDKInstallBubbleInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FlutterInstructions", "SDKInstallFlutterInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FramerInstructions", "SDKInstallFramerInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "HTMLSnippetInstructions", "SDKHtmlSnippetInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "iOSInstructions", "SDKInstallIOSInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "JSWebInstructions", "SDKInstallJSWebInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "NextJSInstructions", "SDKInstallNextJSInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "NuxtJSInstructions", "SDKInstallNuxtJSInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ReactInstructions", "SDKInstallReactInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "RNInstructions", "SDKInstallRNInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "RemixInstructions", "SDKInstallRemixJSInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "SvelteInstructions", "SDKInstallSvelteJSInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "VueInstructions", "SDKInstallVueInstructions", "SessionReplayFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "WebflowInstructions", "SDKInstallWebflowInstructions", "SessionReplayFinalSteps", "import_jsx_runtime", "SessionReplaySDKInstructions", "JSWebInstructions", "HTMLSnippetInstructions", "AngularInstructions", "AstroInstructions", "BubbleInstructions", "FramerInstructions", "NextJSInstructions", "NuxtJSInstructions", "ReactInstructions", "RemixInstructions", "SvelteInstructions", "VueInstructions", "WebflowInstructions", "iOSInstructions", "AndroidInstructions", "RNInstructions", "FlutterInstructions", "AdvertiseMobileReplay", "context", "sdkKey", "platform", "LemonDivider", "LemonBanner", "LemonTag", "Link", "urls", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FlagImplementationSnippet", "sdkKey", "CodeInstructions", "OPTIONS", "import_jsx_runtime", "FeatureFlagsAndroidInstructions", "SDKInstallAndroidInstructions", "FlagImplementationSnippet", "AdvertiseMobileReplay", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsAngularInstructions", "SDKInstallAngularInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsAPIInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsAstroInstructions", "SDKInstallAstroInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsBubbleInstructions", "SDKInstallBubbleInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsDjangoInstructions", "SDKInstallDjangoInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsFlutterInstructions", "SDKInstallFlutterInstructions", "FlagImplementationSnippet", "AdvertiseMobileReplay", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsFramerInstructions", "SDKInstallFramerInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsGoInstructions", "SDKInstallGoInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsIOSInstructions", "SDKInstallIOSInstructions", "FlagImplementationSnippet", "AdvertiseMobileReplay", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsJSWebInstructions", "SDKInstallJSWebInstructions", "LemonDivider", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsLaravelInstructions", "SDKInstallLaravelInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsNextJSInstructions", "SDKInstallNextJSInstructions", "FlagImplementationSnippet", "NodeInstallSnippet", "NodeSetupSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsNodeInstructions", "SDKInstallNodeInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsNuxtJSInstructions", "SDKInstallNuxtJSInstructions", "FlagImplementationSnippet", "NodeInstallSnippet", "NodeSetupSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsPHPInstructions", "SDKInstallPHPInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsPythonInstructions", "SDKInstallPythonInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsReactInstructions", "SDKInstallReactInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsRNInstructions", "SDKInstallRNInstructions", "FlagImplementationSnippet", "AdvertiseMobileReplay", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsRemixJSInstructions", "SDKInstallRemixJSInstructions", "FlagImplementationSnippet", "NodeInstallSnippet", "NodeSetupSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsRubyInstructions", "SDKInstallRubyInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsSvelteInstructions", "SDKInstallSvelteJSInstructions", "FlagImplementationSnippet", "NodeInstallSnippet", "NodeSetupSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsVueInstructions", "SDKInstallVueInstructions", "FlagImplementationSnippet", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FeatureFlagsWebflowInstructions", "SDKInstallWebflowInstructions", "FlagImplementationSnippet", "FeatureFlagsSDKInstructions", "FeatureFlagsJSWebInstructions", "FeatureFlagsAngularInstructions", "FeatureFlagsAndroidInstructions", "FeatureFlagsAPIInstructions", "FeatureFlagsAstroInstructions", "FeatureFlagsBubbleInstructions", "FeatureFlagsDjangoInstructions", "FeatureFlagsFlutterInstructions", "FeatureFlagsFramerInstructions", "FeatureFlagsGoInstructions", "FeatureFlagsIOSInstructions", "FeatureFlagsLaravelInstructions", "FeatureFlagsNextJSInstructions", "FeatureFlagsNodeInstructions", "FeatureFlagsNuxtJSInstructions", "FeatureFlagsPHPInstructions", "FeatureFlagsPythonInstructions", "FeatureFlagsReactInstructions", "FeatureFlagsRNInstructions", "FeatureFlagsRemixJSInstructions", "FeatureFlagsRubyInstructions", "FeatureFlagsSvelteInstructions", "FeatureFlagsVueInstructions", "FeatureFlagsWebflowInstructions", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "AndroidCaptureSnippet", "CodeSnippet", "ProductAnalyticsAndroidInstructions", "SDKInstallAndroidInstructions", "PersonModeEventPropertyInstructions", "AdvertiseMobileReplay", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "JSEventSnippet", "CodeSnippet", "ProductAnalyticsAllJSFinalSteps", "import_jsx_runtime", "ProductAnalyticsAngularInstructions", "SDKInstallAngularInstructions", "LemonDivider", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "APISnippet", "currentTeam", "teamLogic", "url", "apiHostOrigin", "CodeSnippet", "ProductAnalyticsAPIInstructions", "PersonModeEventPropertyInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ProductAnalyticsAstroInstructions", "SDKInstallAstroInstructions", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ProductAnalyticsBubbleInstructions", "SDKInstallBubbleInstructions", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "DjangoCaptureSnippet", "CodeSnippet", "ProductAnalyticsDjangoInstructions", "SDKInstallDjangoInstructions", "PersonModeEventPropertyInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ProductAnalyticsElixirInstructions", "SDKInstallElixirInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FlutterCaptureSnippet", "CodeSnippet", "ProductAnalyticsFlutterInstructions", "SDKInstallFlutterInstructions", "PersonModeEventPropertyInstructions", "AdvertiseMobileReplay", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ProductAnalyticsFramerInstructions", "SDKInstallFramerInstructions", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "GoCaptureSnippet", "CodeSnippet", "ProductAnalyticsGoInstructions", "SDKInstallGoInstructions", "PersonModeEventPropertyInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "ProductAnalyticsHeliconeInstructions", "currentTeam", "teamLogic", "Link", "CodeSnippet", "apiHostOrigin", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "HTMLSnippetInstructions", "SDKHtmlSnippetInstructions", "LemonDivider", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "IOSCaptureSnippet", "CodeSnippet", "ProductAnalyticsIOSInstructions", "SDKInstallIOSInstructions", "PersonModeEventPropertyInstructions", "AdvertiseMobileReplay", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "JSWebInstructions", "SDKInstallJSWebInstructions", "LemonDivider", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "ProductAnalyticsLangfuseInstructions", "currentTeam", "teamLogic", "Link", "CodeSnippet", "apiHostOrigin", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "LaravelCaptureSnippet", "CodeSnippet", "ProductAnalyticsLaravelInstructions", "SDKInstallLaravelInstructions", "PersonModeEventPropertyInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ProductAnalyticsNextJSInstructions", "SDKInstallNextJSInstructions", "LemonDivider", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "NodeCaptureSnippet", "CodeSnippet", "ProductAnalyticsNodeInstructions", "SDKInstallNodeInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ProductAnalyticsNuxtJSInstructions", "SDKInstallNuxtJSInstructions", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "PHPCaptureSnippet", "CodeSnippet", "ProductAnalyticsPHPInstructions", "SDKInstallPHPInstructions", "PersonModeEventPropertyInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "PythonCaptureSnippet", "CodeSnippet", "ProductAnalyticsPythonInstructions", "SDKInstallPythonInstructions", "PersonModeEventPropertyInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "RNCaptureSnippet", "CodeSnippet", "ProductAnalyticsRNInstructions", "SDKInstallRNInstructions", "AdvertiseMobileReplay", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ProductAnalyticsRemixJSInstructions", "SDKInstallRemixJSInstructions", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "RubyCaptureSnippet", "CodeSnippet", "ProductAnalyticsRubyInstructions", "SDKInstallRubyInstructions", "PersonModeEventPropertyInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ProductAnalyticsSvelteJSInstructions", "SDKInstallSvelteJSInstructions", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_kea", "import_jsx_runtime", "ProductAnalyticsTraceloopInstructions", "currentTeam", "teamLogic", "Link", "CodeSnippet", "apiHostOrigin", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ProductAnalyticsVueInstructions", "SDKInstallVueInstructions", "ProductAnalyticsAllJSFinalSteps", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ProductAnalyticsWebflowInstructions", "SDKInstallWebflowInstructions", "ProductAnalyticsAllJSFinalSteps", "ProductAnalyticsSDKInstructions", "JSWebInstructions", "ProductAnalyticsAndroidInstructions", "ProductAnalyticsAngularInstructions", "ProductAnalyticsAPIInstructions", "ProductAnalyticsAstroInstructions", "ProductAnalyticsBubbleInstructions", "ProductAnalyticsDjangoInstructions", "ProductAnalyticsElixirInstructions", "ProductAnalyticsFlutterInstructions", "ProductAnalyticsFramerInstructions", "ProductAnalyticsGoInstructions", "ProductAnalyticsHeliconeInstructions", "HTMLSnippetInstructions", "ProductAnalyticsIOSInstructions", "ProductAnalyticsLangfuseInstructions", "ProductAnalyticsLaravelInstructions", "ProductAnalyticsNextJSInstructions", "ProductAnalyticsNodeInstructions", "ProductAnalyticsNuxtJSInstructions", "ProductAnalyticsPHPInstructions", "ProductAnalyticsPythonInstructions", "ProductAnalyticsRNInstructions", "ProductAnalyticsRemixJSInstructions", "ProductAnalyticsRubyInstructions", "ProductAnalyticsSvelteJSInstructions", "ProductAnalyticsTraceloopInstructions", "ProductAnalyticsVueInstructions", "ProductAnalyticsWebflowInstructions", "init_dirname", "init_buffer", "init_process", "import_kea", "init_dirname", "init_buffer", "init_process", "import_react", "useInterval", "callback", "delay", "savedCallback", "tick", "id", "import_react", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "SDKSnippet", "sdk", "sdkInstructions", "Link", "import_jsx_runtime", "InviteHelpCard", "LemonCard", "InviteMembersButton", "SDKs", "sdkInstructionMap", "stepKey", "listeningForName", "teamPropertyToVerify", "loadCurrentTeam", "teamLogic", "currentTeam", "setSourceFilter", "selectSDK", "setAvailableSDKInstructionsMap", "setShowSideBySide", "setPanel", "sdksLogic", "sourceFilter", "sdks", "selectedSDK", "sourceOptions", "showSourceOptionsSelect", "showSideBySide", "panel", "productKey", "hasNextStep", "onboardingLogic", "goToNextStep", "completeOnboarding", "showListeningFor", "setShowListeningFor", "React", "hasCheckedInstallation", "setHasCheckedInstallation", "isUserInNonTechnicalTest", "width", "useWindowSize", "minimumSideBySideSize", "useInterval", "OnboardingStep", "LemonSelect", "v", "sdk", "LemonButton", "IconArrowLeft", "SDKSnippet", "LemonDivider", "IconCheck", "Spinner", "IconArrowRight", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "AngularInstructions", "SDKInstallAngularInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "AstroInstructions", "SDKInstallAstroInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "BubbleInstructions", "SDKInstallBubbleInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "FramerInstructions", "SDKInstallFramerInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "HTMLSnippetInstructions", "SDKHtmlSnippetInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "JSWebInstructions", "SDKInstallJSWebInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "NextJSInstructions", "SDKInstallNextJSInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "NuxtJSInstructions", "SDKInstallNuxtJSInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "ReactInstructions", "SDKInstallReactInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "RemixInstructions", "SDKInstallRemixJSInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "SvelteInstructions", "SDKInstallSvelteJSInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "VueInstructions", "SDKInstallVueInstructions", "init_dirname", "init_buffer", "init_process", "import_jsx_runtime", "WebflowInstructions", "SDKInstallWebflowInstructions", "SurveysSDKInstructions", "JSWebInstructions", "HTMLSnippetInstructions", "AngularInstructions", "AstroInstructions", "BubbleInstructions", "FramerInstructions", "NextJSInstructions", "NuxtJSInstructions", "ReactInstructions", "RemixInstructions", "SvelteInstructions", "VueInstructions", "WebflowInstructions", "import_jsx_runtime", "scene", "Onboarding", "onboardingLogic", "OnboardingWrapper", "children", "productKey", "currentOnboardingStep", "shouldShowBillingStep", "shouldShowReverseProxyStep", "shouldShowDataWarehouseStep", "product", "includeIntro", "waitForBilling", "billing", "billingLoading", "billingLogic", "setAllOnboardingSteps", "allSteps", "setAllSteps", "showNewPlansStep", "useFeatureFlag", "createAllSteps", "steps", "billingProduct", "p", "OnboardingProductIntroduction", "DataWarehouseStep", "OnboardingDataWarehouseSourcesStep", "ReverseProxyStep", "OnboardingReverseProxy", "BillingStep", "OnboardingUpgradeStep", "OnboardingBillingStep", "inviteTeammatesStep", "OnboardingInviteTeammates", "Spinner", "ProductAnalyticsOnboarding", "currentTeam", "teamLogic", "featureFlags", "featureFlagLogic", "combinedSnippetAndLiveEventsHosts", "sdksLogic", "selectedProducts", "productsLogic", "newDashboardLogic", "showTemplateSteps", "FEATURE_FLAGS", "showSessionReplayStep", "options", "filteredOptions", "option", "SDKs", "ProductAnalyticsSDKInstructions", "OnboardingProductConfiguration", "OnboardingSessionReplayConfiguration", "OnboardingDashboardTemplateSelectStep", "OnboardingDashboardTemplateConfigureStep", "WebAnalyticsOnboarding", "WebAnalyticsSDKInstructions", "SessionReplayOnboarding", "hasAvailableFeature", "userLogic", "configOptions", "SESSION_REPLAY_MINIMUM_DURATION_OPTIONS", "SessionReplaySDKInstructions", "FeatureFlagsOnboarding", "FeatureFlagsSDKInstructions", "ExperimentsOnboarding", "ExperimentsSDKInstructions", "SurveysOnboarding", "SurveysSDKInstructions", "DataWarehouseOnboarding", "onboardingViews", "OnboardingView"]
}
